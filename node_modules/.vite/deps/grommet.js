"use client";
import {
  require_react_dom
} from "./chunk-QJV3R4PZ.js";
import {
  require_react
} from "./chunk-JFTBQ7A7.js";
import {
  __commonJS,
  __esm,
  __export,
  __toCommonJS,
  __toESM
} from "./chunk-AC2VUBZ6.js";

// node_modules/prop-types/node_modules/react-is/cjs/react-is.development.js
var require_react_is_development = __commonJS({
  "node_modules/prop-types/node_modules/react-is/cjs/react-is.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        var hasSymbol = typeof Symbol === "function" && Symbol.for;
        var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for("react.element") : 60103;
        var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for("react.portal") : 60106;
        var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for("react.fragment") : 60107;
        var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for("react.strict_mode") : 60108;
        var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for("react.profiler") : 60114;
        var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for("react.provider") : 60109;
        var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for("react.context") : 60110;
        var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for("react.async_mode") : 60111;
        var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for("react.concurrent_mode") : 60111;
        var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for("react.forward_ref") : 60112;
        var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for("react.suspense") : 60113;
        var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for("react.suspense_list") : 60120;
        var REACT_MEMO_TYPE = hasSymbol ? Symbol.for("react.memo") : 60115;
        var REACT_LAZY_TYPE = hasSymbol ? Symbol.for("react.lazy") : 60116;
        var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for("react.block") : 60121;
        var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for("react.fundamental") : 60117;
        var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for("react.responder") : 60118;
        var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for("react.scope") : 60119;
        function isValidElementType(type) {
          return typeof type === "string" || typeof type === "function" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
          type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === "object" && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
        }
        function typeOf(object) {
          if (typeof object === "object" && object !== null) {
            var $$typeof = object.$$typeof;
            switch ($$typeof) {
              case REACT_ELEMENT_TYPE:
                var type = object.type;
                switch (type) {
                  case REACT_ASYNC_MODE_TYPE:
                  case REACT_CONCURRENT_MODE_TYPE:
                  case REACT_FRAGMENT_TYPE:
                  case REACT_PROFILER_TYPE:
                  case REACT_STRICT_MODE_TYPE:
                  case REACT_SUSPENSE_TYPE:
                    return type;
                  default:
                    var $$typeofType = type && type.$$typeof;
                    switch ($$typeofType) {
                      case REACT_CONTEXT_TYPE:
                      case REACT_FORWARD_REF_TYPE:
                      case REACT_LAZY_TYPE:
                      case REACT_MEMO_TYPE:
                      case REACT_PROVIDER_TYPE:
                        return $$typeofType;
                      default:
                        return $$typeof;
                    }
                }
              case REACT_PORTAL_TYPE:
                return $$typeof;
            }
          }
          return void 0;
        }
        var AsyncMode = REACT_ASYNC_MODE_TYPE;
        var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
        var ContextConsumer = REACT_CONTEXT_TYPE;
        var ContextProvider = REACT_PROVIDER_TYPE;
        var Element3 = REACT_ELEMENT_TYPE;
        var ForwardRef = REACT_FORWARD_REF_TYPE;
        var Fragment8 = REACT_FRAGMENT_TYPE;
        var Lazy = REACT_LAZY_TYPE;
        var Memo = REACT_MEMO_TYPE;
        var Portal = REACT_PORTAL_TYPE;
        var Profiler = REACT_PROFILER_TYPE;
        var StrictMode = REACT_STRICT_MODE_TYPE;
        var Suspense = REACT_SUSPENSE_TYPE;
        var hasWarnedAboutDeprecatedIsAsyncMode = false;
        function isAsyncMode(object) {
          {
            if (!hasWarnedAboutDeprecatedIsAsyncMode) {
              hasWarnedAboutDeprecatedIsAsyncMode = true;
              console["warn"]("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.");
            }
          }
          return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
        }
        function isConcurrentMode(object) {
          return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
        }
        function isContextConsumer(object) {
          return typeOf(object) === REACT_CONTEXT_TYPE;
        }
        function isContextProvider(object) {
          return typeOf(object) === REACT_PROVIDER_TYPE;
        }
        function isElement(object) {
          return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
        }
        function isForwardRef(object) {
          return typeOf(object) === REACT_FORWARD_REF_TYPE;
        }
        function isFragment(object) {
          return typeOf(object) === REACT_FRAGMENT_TYPE;
        }
        function isLazy(object) {
          return typeOf(object) === REACT_LAZY_TYPE;
        }
        function isMemo(object) {
          return typeOf(object) === REACT_MEMO_TYPE;
        }
        function isPortal(object) {
          return typeOf(object) === REACT_PORTAL_TYPE;
        }
        function isProfiler(object) {
          return typeOf(object) === REACT_PROFILER_TYPE;
        }
        function isStrictMode(object) {
          return typeOf(object) === REACT_STRICT_MODE_TYPE;
        }
        function isSuspense(object) {
          return typeOf(object) === REACT_SUSPENSE_TYPE;
        }
        exports.AsyncMode = AsyncMode;
        exports.ConcurrentMode = ConcurrentMode;
        exports.ContextConsumer = ContextConsumer;
        exports.ContextProvider = ContextProvider;
        exports.Element = Element3;
        exports.ForwardRef = ForwardRef;
        exports.Fragment = Fragment8;
        exports.Lazy = Lazy;
        exports.Memo = Memo;
        exports.Portal = Portal;
        exports.Profiler = Profiler;
        exports.StrictMode = StrictMode;
        exports.Suspense = Suspense;
        exports.isAsyncMode = isAsyncMode;
        exports.isConcurrentMode = isConcurrentMode;
        exports.isContextConsumer = isContextConsumer;
        exports.isContextProvider = isContextProvider;
        exports.isElement = isElement;
        exports.isForwardRef = isForwardRef;
        exports.isFragment = isFragment;
        exports.isLazy = isLazy;
        exports.isMemo = isMemo;
        exports.isPortal = isPortal;
        exports.isProfiler = isProfiler;
        exports.isStrictMode = isStrictMode;
        exports.isSuspense = isSuspense;
        exports.isValidElementType = isValidElementType;
        exports.typeOf = typeOf;
      })();
    }
  }
});

// node_modules/prop-types/node_modules/react-is/index.js
var require_react_is = __commonJS({
  "node_modules/prop-types/node_modules/react-is/index.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_react_is_development();
    }
  }
});

// node_modules/object-assign/index.js
var require_object_assign = __commonJS({
  "node_modules/object-assign/index.js"(exports, module) {
    "use strict";
    var getOwnPropertySymbols = Object.getOwnPropertySymbols;
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    var propIsEnumerable = Object.prototype.propertyIsEnumerable;
    function toObject(val) {
      if (val === null || val === void 0) {
        throw new TypeError("Object.assign cannot be called with null or undefined");
      }
      return Object(val);
    }
    function shouldUseNative() {
      try {
        if (!Object.assign) {
          return false;
        }
        var test1 = new String("abc");
        test1[5] = "de";
        if (Object.getOwnPropertyNames(test1)[0] === "5") {
          return false;
        }
        var test2 = {};
        for (var i3 = 0; i3 < 10; i3++) {
          test2["_" + String.fromCharCode(i3)] = i3;
        }
        var order2 = Object.getOwnPropertyNames(test2).map(function(n3) {
          return test2[n3];
        });
        if (order2.join("") !== "0123456789") {
          return false;
        }
        var test3 = {};
        "abcdefghijklmnopqrst".split("").forEach(function(letter) {
          test3[letter] = letter;
        });
        if (Object.keys(Object.assign({}, test3)).join("") !== "abcdefghijklmnopqrst") {
          return false;
        }
        return true;
      } catch (err) {
        return false;
      }
    }
    module.exports = shouldUseNative() ? Object.assign : function(target, source) {
      var from;
      var to = toObject(target);
      var symbols;
      for (var s3 = 1; s3 < arguments.length; s3++) {
        from = Object(arguments[s3]);
        for (var key in from) {
          if (hasOwnProperty.call(from, key)) {
            to[key] = from[key];
          }
        }
        if (getOwnPropertySymbols) {
          symbols = getOwnPropertySymbols(from);
          for (var i3 = 0; i3 < symbols.length; i3++) {
            if (propIsEnumerable.call(from, symbols[i3])) {
              to[symbols[i3]] = from[symbols[i3]];
            }
          }
        }
      }
      return to;
    };
  }
});

// node_modules/prop-types/lib/ReactPropTypesSecret.js
var require_ReactPropTypesSecret = __commonJS({
  "node_modules/prop-types/lib/ReactPropTypesSecret.js"(exports, module) {
    "use strict";
    var ReactPropTypesSecret = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
    module.exports = ReactPropTypesSecret;
  }
});

// node_modules/prop-types/lib/has.js
var require_has = __commonJS({
  "node_modules/prop-types/lib/has.js"(exports, module) {
    module.exports = Function.call.bind(Object.prototype.hasOwnProperty);
  }
});

// node_modules/prop-types/checkPropTypes.js
var require_checkPropTypes = __commonJS({
  "node_modules/prop-types/checkPropTypes.js"(exports, module) {
    "use strict";
    var printWarning = function() {
    };
    if (true) {
      ReactPropTypesSecret = require_ReactPropTypesSecret();
      loggedTypeFailures = {};
      has = require_has();
      printWarning = function(text) {
        var message = "Warning: " + text;
        if (typeof console !== "undefined") {
          console.error(message);
        }
        try {
          throw new Error(message);
        } catch (x3) {
        }
      };
    }
    var ReactPropTypesSecret;
    var loggedTypeFailures;
    var has;
    function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
      if (true) {
        for (var typeSpecName in typeSpecs) {
          if (has(typeSpecs, typeSpecName)) {
            var error;
            try {
              if (typeof typeSpecs[typeSpecName] !== "function") {
                var err = Error(
                  (componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`."
                );
                err.name = "Invariant Violation";
                throw err;
              }
              error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
            } catch (ex) {
              error = ex;
            }
            if (error && !(error instanceof Error)) {
              printWarning(
                (componentName || "React class") + ": type specification of " + location + " `" + typeSpecName + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof error + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)."
              );
            }
            if (error instanceof Error && !(error.message in loggedTypeFailures)) {
              loggedTypeFailures[error.message] = true;
              var stack = getStack ? getStack() : "";
              printWarning(
                "Failed " + location + " type: " + error.message + (stack != null ? stack : "")
              );
            }
          }
        }
      }
    }
    checkPropTypes.resetWarningCache = function() {
      if (true) {
        loggedTypeFailures = {};
      }
    };
    module.exports = checkPropTypes;
  }
});

// node_modules/prop-types/factoryWithTypeCheckers.js
var require_factoryWithTypeCheckers = __commonJS({
  "node_modules/prop-types/factoryWithTypeCheckers.js"(exports, module) {
    "use strict";
    var ReactIs = require_react_is();
    var assign = require_object_assign();
    var ReactPropTypesSecret = require_ReactPropTypesSecret();
    var has = require_has();
    var checkPropTypes = require_checkPropTypes();
    var printWarning = function() {
    };
    if (true) {
      printWarning = function(text) {
        var message = "Warning: " + text;
        if (typeof console !== "undefined") {
          console.error(message);
        }
        try {
          throw new Error(message);
        } catch (x3) {
        }
      };
    }
    function emptyFunctionThatReturnsNull() {
      return null;
    }
    module.exports = function(isValidElement5, throwOnDirectAccess) {
      var ITERATOR_SYMBOL = typeof Symbol === "function" && Symbol.iterator;
      var FAUX_ITERATOR_SYMBOL = "@@iterator";
      function getIteratorFn(maybeIterable) {
        var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
        if (typeof iteratorFn === "function") {
          return iteratorFn;
        }
      }
      var ANONYMOUS = "<<anonymous>>";
      var ReactPropTypes = {
        array: createPrimitiveTypeChecker("array"),
        bigint: createPrimitiveTypeChecker("bigint"),
        bool: createPrimitiveTypeChecker("boolean"),
        func: createPrimitiveTypeChecker("function"),
        number: createPrimitiveTypeChecker("number"),
        object: createPrimitiveTypeChecker("object"),
        string: createPrimitiveTypeChecker("string"),
        symbol: createPrimitiveTypeChecker("symbol"),
        any: createAnyTypeChecker(),
        arrayOf: createArrayOfTypeChecker,
        element: createElementTypeChecker(),
        elementType: createElementTypeTypeChecker(),
        instanceOf: createInstanceTypeChecker,
        node: createNodeChecker(),
        objectOf: createObjectOfTypeChecker,
        oneOf: createEnumTypeChecker,
        oneOfType: createUnionTypeChecker,
        shape: createShapeTypeChecker,
        exact: createStrictShapeTypeChecker
      };
      function is(x3, y3) {
        if (x3 === y3) {
          return x3 !== 0 || 1 / x3 === 1 / y3;
        } else {
          return x3 !== x3 && y3 !== y3;
        }
      }
      function PropTypeError(message, data) {
        this.message = message;
        this.data = data && typeof data === "object" ? data : {};
        this.stack = "";
      }
      PropTypeError.prototype = Error.prototype;
      function createChainableTypeChecker(validate3) {
        if (true) {
          var manualPropTypeCallCache = {};
          var manualPropTypeWarningCount = 0;
        }
        function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
          componentName = componentName || ANONYMOUS;
          propFullName = propFullName || propName;
          if (secret !== ReactPropTypesSecret) {
            if (throwOnDirectAccess) {
              var err = new Error(
                "Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types"
              );
              err.name = "Invariant Violation";
              throw err;
            } else if (typeof console !== "undefined") {
              var cacheKey = componentName + ":" + propName;
              if (!manualPropTypeCallCache[cacheKey] && // Avoid spamming the console because they are often not actionable except for lib authors
              manualPropTypeWarningCount < 3) {
                printWarning(
                  "You are manually calling a React.PropTypes validation function for the `" + propFullName + "` prop on `" + componentName + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details."
                );
                manualPropTypeCallCache[cacheKey] = true;
                manualPropTypeWarningCount++;
              }
            }
          }
          if (props[propName] == null) {
            if (isRequired) {
              if (props[propName] === null) {
                return new PropTypeError("The " + location + " `" + propFullName + "` is marked as required " + ("in `" + componentName + "`, but its value is `null`."));
              }
              return new PropTypeError("The " + location + " `" + propFullName + "` is marked as required in " + ("`" + componentName + "`, but its value is `undefined`."));
            }
            return null;
          } else {
            return validate3(props, propName, componentName, location, propFullName);
          }
        }
        var chainedCheckType = checkType.bind(null, false);
        chainedCheckType.isRequired = checkType.bind(null, true);
        return chainedCheckType;
      }
      function createPrimitiveTypeChecker(expectedType) {
        function validate3(props, propName, componentName, location, propFullName, secret) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== expectedType) {
            var preciseType = getPreciseType(propValue);
            return new PropTypeError(
              "Invalid " + location + " `" + propFullName + "` of type " + ("`" + preciseType + "` supplied to `" + componentName + "`, expected ") + ("`" + expectedType + "`."),
              { expectedType }
            );
          }
          return null;
        }
        return createChainableTypeChecker(validate3);
      }
      function createAnyTypeChecker() {
        return createChainableTypeChecker(emptyFunctionThatReturnsNull);
      }
      function createArrayOfTypeChecker(typeChecker) {
        function validate3(props, propName, componentName, location, propFullName) {
          if (typeof typeChecker !== "function") {
            return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside arrayOf.");
          }
          var propValue = props[propName];
          if (!Array.isArray(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an array."));
          }
          for (var i3 = 0; i3 < propValue.length; i3++) {
            var error = typeChecker(propValue, i3, componentName, location, propFullName + "[" + i3 + "]", ReactPropTypesSecret);
            if (error instanceof Error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate3);
      }
      function createElementTypeChecker() {
        function validate3(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          if (!isValidElement5(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement."));
          }
          return null;
        }
        return createChainableTypeChecker(validate3);
      }
      function createElementTypeTypeChecker() {
        function validate3(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          if (!ReactIs.isValidElementType(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement type."));
          }
          return null;
        }
        return createChainableTypeChecker(validate3);
      }
      function createInstanceTypeChecker(expectedClass) {
        function validate3(props, propName, componentName, location, propFullName) {
          if (!(props[propName] instanceof expectedClass)) {
            var expectedClassName = expectedClass.name || ANONYMOUS;
            var actualClassName = getClassName(props[propName]);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + actualClassName + "` supplied to `" + componentName + "`, expected ") + ("instance of `" + expectedClassName + "`."));
          }
          return null;
        }
        return createChainableTypeChecker(validate3);
      }
      function createEnumTypeChecker(expectedValues) {
        if (!Array.isArray(expectedValues)) {
          if (true) {
            if (arguments.length > 1) {
              printWarning(
                "Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z])."
              );
            } else {
              printWarning("Invalid argument supplied to oneOf, expected an array.");
            }
          }
          return emptyFunctionThatReturnsNull;
        }
        function validate3(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          for (var i3 = 0; i3 < expectedValues.length; i3++) {
            if (is(propValue, expectedValues[i3])) {
              return null;
            }
          }
          var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
            var type = getPreciseType(value);
            if (type === "symbol") {
              return String(value);
            }
            return value;
          });
          return new PropTypeError("Invalid " + location + " `" + propFullName + "` of value `" + String(propValue) + "` " + ("supplied to `" + componentName + "`, expected one of " + valuesString + "."));
        }
        return createChainableTypeChecker(validate3);
      }
      function createObjectOfTypeChecker(typeChecker) {
        function validate3(props, propName, componentName, location, propFullName) {
          if (typeof typeChecker !== "function") {
            return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside objectOf.");
          }
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an object."));
          }
          for (var key in propValue) {
            if (has(propValue, key)) {
              var error = typeChecker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
              if (error instanceof Error) {
                return error;
              }
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate3);
      }
      function createUnionTypeChecker(arrayOfTypeCheckers) {
        if (!Array.isArray(arrayOfTypeCheckers)) {
          true ? printWarning("Invalid argument supplied to oneOfType, expected an instance of array.") : void 0;
          return emptyFunctionThatReturnsNull;
        }
        for (var i3 = 0; i3 < arrayOfTypeCheckers.length; i3++) {
          var checker = arrayOfTypeCheckers[i3];
          if (typeof checker !== "function") {
            printWarning(
              "Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + getPostfixForTypeWarning(checker) + " at index " + i3 + "."
            );
            return emptyFunctionThatReturnsNull;
          }
        }
        function validate3(props, propName, componentName, location, propFullName) {
          var expectedTypes = [];
          for (var i4 = 0; i4 < arrayOfTypeCheckers.length; i4++) {
            var checker2 = arrayOfTypeCheckers[i4];
            var checkerResult = checker2(props, propName, componentName, location, propFullName, ReactPropTypesSecret);
            if (checkerResult == null) {
              return null;
            }
            if (checkerResult.data && has(checkerResult.data, "expectedType")) {
              expectedTypes.push(checkerResult.data.expectedType);
            }
          }
          var expectedTypesMessage = expectedTypes.length > 0 ? ", expected one of type [" + expectedTypes.join(", ") + "]" : "";
          return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`" + expectedTypesMessage + "."));
        }
        return createChainableTypeChecker(validate3);
      }
      function createNodeChecker() {
        function validate3(props, propName, componentName, location, propFullName) {
          if (!isNode(props[propName])) {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`, expected a ReactNode."));
          }
          return null;
        }
        return createChainableTypeChecker(validate3);
      }
      function invalidValidatorError(componentName, location, propFullName, key, type) {
        return new PropTypeError(
          (componentName || "React class") + ": " + location + " type `" + propFullName + "." + key + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + type + "`."
        );
      }
      function createShapeTypeChecker(shapeTypes) {
        function validate3(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
          }
          for (var key in shapeTypes) {
            var checker = shapeTypes[key];
            if (typeof checker !== "function") {
              return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
            }
            var error = checker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
            if (error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate3);
      }
      function createStrictShapeTypeChecker(shapeTypes) {
        function validate3(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
          }
          var allKeys = assign({}, props[propName], shapeTypes);
          for (var key in allKeys) {
            var checker = shapeTypes[key];
            if (has(shapeTypes, key) && typeof checker !== "function") {
              return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
            }
            if (!checker) {
              return new PropTypeError(
                "Invalid " + location + " `" + propFullName + "` key `" + key + "` supplied to `" + componentName + "`.\nBad object: " + JSON.stringify(props[propName], null, "  ") + "\nValid keys: " + JSON.stringify(Object.keys(shapeTypes), null, "  ")
              );
            }
            var error = checker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
            if (error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate3);
      }
      function isNode(propValue) {
        switch (typeof propValue) {
          case "number":
          case "string":
          case "undefined":
            return true;
          case "boolean":
            return !propValue;
          case "object":
            if (Array.isArray(propValue)) {
              return propValue.every(isNode);
            }
            if (propValue === null || isValidElement5(propValue)) {
              return true;
            }
            var iteratorFn = getIteratorFn(propValue);
            if (iteratorFn) {
              var iterator = iteratorFn.call(propValue);
              var step;
              if (iteratorFn !== propValue.entries) {
                while (!(step = iterator.next()).done) {
                  if (!isNode(step.value)) {
                    return false;
                  }
                }
              } else {
                while (!(step = iterator.next()).done) {
                  var entry = step.value;
                  if (entry) {
                    if (!isNode(entry[1])) {
                      return false;
                    }
                  }
                }
              }
            } else {
              return false;
            }
            return true;
          default:
            return false;
        }
      }
      function isSymbol(propType, propValue) {
        if (propType === "symbol") {
          return true;
        }
        if (!propValue) {
          return false;
        }
        if (propValue["@@toStringTag"] === "Symbol") {
          return true;
        }
        if (typeof Symbol === "function" && propValue instanceof Symbol) {
          return true;
        }
        return false;
      }
      function getPropType(propValue) {
        var propType = typeof propValue;
        if (Array.isArray(propValue)) {
          return "array";
        }
        if (propValue instanceof RegExp) {
          return "object";
        }
        if (isSymbol(propType, propValue)) {
          return "symbol";
        }
        return propType;
      }
      function getPreciseType(propValue) {
        if (typeof propValue === "undefined" || propValue === null) {
          return "" + propValue;
        }
        var propType = getPropType(propValue);
        if (propType === "object") {
          if (propValue instanceof Date) {
            return "date";
          } else if (propValue instanceof RegExp) {
            return "regexp";
          }
        }
        return propType;
      }
      function getPostfixForTypeWarning(value) {
        var type = getPreciseType(value);
        switch (type) {
          case "array":
          case "object":
            return "an " + type;
          case "boolean":
          case "date":
          case "regexp":
            return "a " + type;
          default:
            return type;
        }
      }
      function getClassName(propValue) {
        if (!propValue.constructor || !propValue.constructor.name) {
          return ANONYMOUS;
        }
        return propValue.constructor.name;
      }
      ReactPropTypes.checkPropTypes = checkPropTypes;
      ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
      ReactPropTypes.PropTypes = ReactPropTypes;
      return ReactPropTypes;
    };
  }
});

// node_modules/prop-types/index.js
var require_prop_types = __commonJS({
  "node_modules/prop-types/index.js"(exports, module) {
    if (true) {
      ReactIs = require_react_is();
      throwOnDirectAccess = true;
      module.exports = require_factoryWithTypeCheckers()(ReactIs.isElement, throwOnDirectAccess);
    } else {
      module.exports = null();
    }
    var ReactIs;
    var throwOnDirectAccess;
  }
});

// node_modules/react-is/cjs/react-is.development.js
var require_react_is_development2 = __commonJS({
  "node_modules/react-is/cjs/react-is.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        var REACT_ELEMENT_TYPE = Symbol.for("react.element");
        var REACT_PORTAL_TYPE = Symbol.for("react.portal");
        var REACT_FRAGMENT_TYPE = Symbol.for("react.fragment");
        var REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode");
        var REACT_PROFILER_TYPE = Symbol.for("react.profiler");
        var REACT_PROVIDER_TYPE = Symbol.for("react.provider");
        var REACT_CONTEXT_TYPE = Symbol.for("react.context");
        var REACT_SERVER_CONTEXT_TYPE = Symbol.for("react.server_context");
        var REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref");
        var REACT_SUSPENSE_TYPE = Symbol.for("react.suspense");
        var REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list");
        var REACT_MEMO_TYPE = Symbol.for("react.memo");
        var REACT_LAZY_TYPE = Symbol.for("react.lazy");
        var REACT_OFFSCREEN_TYPE = Symbol.for("react.offscreen");
        var enableScopeAPI = false;
        var enableCacheElement = false;
        var enableTransitionTracing = false;
        var enableLegacyHidden = false;
        var enableDebugTracing = false;
        var REACT_MODULE_REFERENCE;
        {
          REACT_MODULE_REFERENCE = Symbol.for("react.module.reference");
        }
        function isValidElementType(type) {
          if (typeof type === "string" || typeof type === "function") {
            return true;
          }
          if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing) {
            return true;
          }
          if (typeof type === "object" && type !== null) {
            if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object
            // types supported by any Flight configuration anywhere since
            // we don't know which Flight build this will end up being used
            // with.
            type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== void 0) {
              return true;
            }
          }
          return false;
        }
        function typeOf(object) {
          if (typeof object === "object" && object !== null) {
            var $$typeof = object.$$typeof;
            switch ($$typeof) {
              case REACT_ELEMENT_TYPE:
                var type = object.type;
                switch (type) {
                  case REACT_FRAGMENT_TYPE:
                  case REACT_PROFILER_TYPE:
                  case REACT_STRICT_MODE_TYPE:
                  case REACT_SUSPENSE_TYPE:
                  case REACT_SUSPENSE_LIST_TYPE:
                    return type;
                  default:
                    var $$typeofType = type && type.$$typeof;
                    switch ($$typeofType) {
                      case REACT_SERVER_CONTEXT_TYPE:
                      case REACT_CONTEXT_TYPE:
                      case REACT_FORWARD_REF_TYPE:
                      case REACT_LAZY_TYPE:
                      case REACT_MEMO_TYPE:
                      case REACT_PROVIDER_TYPE:
                        return $$typeofType;
                      default:
                        return $$typeof;
                    }
                }
              case REACT_PORTAL_TYPE:
                return $$typeof;
            }
          }
          return void 0;
        }
        var ContextConsumer = REACT_CONTEXT_TYPE;
        var ContextProvider = REACT_PROVIDER_TYPE;
        var Element3 = REACT_ELEMENT_TYPE;
        var ForwardRef = REACT_FORWARD_REF_TYPE;
        var Fragment8 = REACT_FRAGMENT_TYPE;
        var Lazy = REACT_LAZY_TYPE;
        var Memo = REACT_MEMO_TYPE;
        var Portal = REACT_PORTAL_TYPE;
        var Profiler = REACT_PROFILER_TYPE;
        var StrictMode = REACT_STRICT_MODE_TYPE;
        var Suspense = REACT_SUSPENSE_TYPE;
        var SuspenseList = REACT_SUSPENSE_LIST_TYPE;
        var hasWarnedAboutDeprecatedIsAsyncMode = false;
        var hasWarnedAboutDeprecatedIsConcurrentMode = false;
        function isAsyncMode(object) {
          {
            if (!hasWarnedAboutDeprecatedIsAsyncMode) {
              hasWarnedAboutDeprecatedIsAsyncMode = true;
              console["warn"]("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 18+.");
            }
          }
          return false;
        }
        function isConcurrentMode(object) {
          {
            if (!hasWarnedAboutDeprecatedIsConcurrentMode) {
              hasWarnedAboutDeprecatedIsConcurrentMode = true;
              console["warn"]("The ReactIs.isConcurrentMode() alias has been deprecated, and will be removed in React 18+.");
            }
          }
          return false;
        }
        function isContextConsumer(object) {
          return typeOf(object) === REACT_CONTEXT_TYPE;
        }
        function isContextProvider(object) {
          return typeOf(object) === REACT_PROVIDER_TYPE;
        }
        function isElement(object) {
          return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
        }
        function isForwardRef(object) {
          return typeOf(object) === REACT_FORWARD_REF_TYPE;
        }
        function isFragment(object) {
          return typeOf(object) === REACT_FRAGMENT_TYPE;
        }
        function isLazy(object) {
          return typeOf(object) === REACT_LAZY_TYPE;
        }
        function isMemo(object) {
          return typeOf(object) === REACT_MEMO_TYPE;
        }
        function isPortal(object) {
          return typeOf(object) === REACT_PORTAL_TYPE;
        }
        function isProfiler(object) {
          return typeOf(object) === REACT_PROFILER_TYPE;
        }
        function isStrictMode(object) {
          return typeOf(object) === REACT_STRICT_MODE_TYPE;
        }
        function isSuspense(object) {
          return typeOf(object) === REACT_SUSPENSE_TYPE;
        }
        function isSuspenseList(object) {
          return typeOf(object) === REACT_SUSPENSE_LIST_TYPE;
        }
        exports.ContextConsumer = ContextConsumer;
        exports.ContextProvider = ContextProvider;
        exports.Element = Element3;
        exports.ForwardRef = ForwardRef;
        exports.Fragment = Fragment8;
        exports.Lazy = Lazy;
        exports.Memo = Memo;
        exports.Portal = Portal;
        exports.Profiler = Profiler;
        exports.StrictMode = StrictMode;
        exports.Suspense = Suspense;
        exports.SuspenseList = SuspenseList;
        exports.isAsyncMode = isAsyncMode;
        exports.isConcurrentMode = isConcurrentMode;
        exports.isContextConsumer = isContextConsumer;
        exports.isContextProvider = isContextProvider;
        exports.isElement = isElement;
        exports.isForwardRef = isForwardRef;
        exports.isFragment = isFragment;
        exports.isLazy = isLazy;
        exports.isMemo = isMemo;
        exports.isPortal = isPortal;
        exports.isProfiler = isProfiler;
        exports.isStrictMode = isStrictMode;
        exports.isSuspense = isSuspense;
        exports.isSuspenseList = isSuspenseList;
        exports.isValidElementType = isValidElementType;
        exports.typeOf = typeOf;
      })();
    }
  }
});

// node_modules/react-is/index.js
var require_react_is2 = __commonJS({
  "node_modules/react-is/index.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_react_is_development2();
    }
  }
});

// node_modules/shallowequal/index.js
var require_shallowequal = __commonJS({
  "node_modules/shallowequal/index.js"(exports, module) {
    module.exports = function shallowEqual(objA, objB, compare, compareContext) {
      var ret = compare ? compare.call(compareContext, objA, objB) : void 0;
      if (ret !== void 0) {
        return !!ret;
      }
      if (objA === objB) {
        return true;
      }
      if (typeof objA !== "object" || !objA || typeof objB !== "object" || !objB) {
        return false;
      }
      var keysA = Object.keys(objA);
      var keysB = Object.keys(objB);
      if (keysA.length !== keysB.length) {
        return false;
      }
      var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);
      for (var idx = 0; idx < keysA.length; idx++) {
        var key = keysA[idx];
        if (!bHasOwnProperty(key)) {
          return false;
        }
        var valueA = objA[key];
        var valueB = objB[key];
        ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;
        if (ret === false || ret === void 0 && valueA !== valueB) {
          return false;
        }
      }
      return true;
    };
  }
});

// node_modules/@emotion/stylis/dist/stylis.browser.esm.js
function stylis_min(W3) {
  function M3(d3, c3, e3, h2, a3) {
    for (var m3 = 0, b3 = 0, v3 = 0, n3 = 0, q3, g3, x3 = 0, K3 = 0, k3, u3 = k3 = q3 = 0, l3 = 0, r3 = 0, I3 = 0, t3 = 0, B4 = e3.length, J3 = B4 - 1, y3, f2 = "", p2 = "", F4 = "", G4 = "", C3; l3 < B4; ) {
      g3 = e3.charCodeAt(l3);
      l3 === J3 && 0 !== b3 + n3 + v3 + m3 && (0 !== b3 && (g3 = 47 === b3 ? 10 : 47), n3 = v3 = m3 = 0, B4++, J3++);
      if (0 === b3 + n3 + v3 + m3) {
        if (l3 === J3 && (0 < r3 && (f2 = f2.replace(N3, "")), 0 < f2.trim().length)) {
          switch (g3) {
            case 32:
            case 9:
            case 59:
            case 13:
            case 10:
              break;
            default:
              f2 += e3.charAt(l3);
          }
          g3 = 59;
        }
        switch (g3) {
          case 123:
            f2 = f2.trim();
            q3 = f2.charCodeAt(0);
            k3 = 1;
            for (t3 = ++l3; l3 < B4; ) {
              switch (g3 = e3.charCodeAt(l3)) {
                case 123:
                  k3++;
                  break;
                case 125:
                  k3--;
                  break;
                case 47:
                  switch (g3 = e3.charCodeAt(l3 + 1)) {
                    case 42:
                    case 47:
                      a: {
                        for (u3 = l3 + 1; u3 < J3; ++u3) {
                          switch (e3.charCodeAt(u3)) {
                            case 47:
                              if (42 === g3 && 42 === e3.charCodeAt(u3 - 1) && l3 + 2 !== u3) {
                                l3 = u3 + 1;
                                break a;
                              }
                              break;
                            case 10:
                              if (47 === g3) {
                                l3 = u3 + 1;
                                break a;
                              }
                          }
                        }
                        l3 = u3;
                      }
                  }
                  break;
                case 91:
                  g3++;
                case 40:
                  g3++;
                case 34:
                case 39:
                  for (; l3++ < J3 && e3.charCodeAt(l3) !== g3; ) {
                  }
              }
              if (0 === k3)
                break;
              l3++;
            }
            k3 = e3.substring(t3, l3);
            0 === q3 && (q3 = (f2 = f2.replace(ca, "").trim()).charCodeAt(0));
            switch (q3) {
              case 64:
                0 < r3 && (f2 = f2.replace(N3, ""));
                g3 = f2.charCodeAt(1);
                switch (g3) {
                  case 100:
                  case 109:
                  case 115:
                  case 45:
                    r3 = c3;
                    break;
                  default:
                    r3 = O3;
                }
                k3 = M3(c3, r3, k3, g3, a3 + 1);
                t3 = k3.length;
                0 < A3 && (r3 = X3(O3, f2, I3), C3 = H3(3, k3, r3, c3, D3, z3, t3, g3, a3, h2), f2 = r3.join(""), void 0 !== C3 && 0 === (t3 = (k3 = C3.trim()).length) && (g3 = 0, k3 = ""));
                if (0 < t3)
                  switch (g3) {
                    case 115:
                      f2 = f2.replace(da, ea);
                    case 100:
                    case 109:
                    case 45:
                      k3 = f2 + "{" + k3 + "}";
                      break;
                    case 107:
                      f2 = f2.replace(fa, "$1 $2");
                      k3 = f2 + "{" + k3 + "}";
                      k3 = 1 === w3 || 2 === w3 && L3("@" + k3, 3) ? "@-webkit-" + k3 + "@" + k3 : "@" + k3;
                      break;
                    default:
                      k3 = f2 + k3, 112 === h2 && (k3 = (p2 += k3, ""));
                  }
                else
                  k3 = "";
                break;
              default:
                k3 = M3(c3, X3(c3, f2, I3), k3, h2, a3 + 1);
            }
            F4 += k3;
            k3 = I3 = r3 = u3 = q3 = 0;
            f2 = "";
            g3 = e3.charCodeAt(++l3);
            break;
          case 125:
          case 59:
            f2 = (0 < r3 ? f2.replace(N3, "") : f2).trim();
            if (1 < (t3 = f2.length))
              switch (0 === u3 && (q3 = f2.charCodeAt(0), 45 === q3 || 96 < q3 && 123 > q3) && (t3 = (f2 = f2.replace(" ", ":")).length), 0 < A3 && void 0 !== (C3 = H3(1, f2, c3, d3, D3, z3, p2.length, h2, a3, h2)) && 0 === (t3 = (f2 = C3.trim()).length) && (f2 = "\0\0"), q3 = f2.charCodeAt(0), g3 = f2.charCodeAt(1), q3) {
                case 0:
                  break;
                case 64:
                  if (105 === g3 || 99 === g3) {
                    G4 += f2 + e3.charAt(l3);
                    break;
                  }
                default:
                  58 !== f2.charCodeAt(t3 - 1) && (p2 += P3(f2, q3, g3, f2.charCodeAt(2)));
              }
            I3 = r3 = u3 = q3 = 0;
            f2 = "";
            g3 = e3.charCodeAt(++l3);
        }
      }
      switch (g3) {
        case 13:
        case 10:
          47 === b3 ? b3 = 0 : 0 === 1 + q3 && 107 !== h2 && 0 < f2.length && (r3 = 1, f2 += "\0");
          0 < A3 * Y3 && H3(0, f2, c3, d3, D3, z3, p2.length, h2, a3, h2);
          z3 = 1;
          D3++;
          break;
        case 59:
        case 125:
          if (0 === b3 + n3 + v3 + m3) {
            z3++;
            break;
          }
        default:
          z3++;
          y3 = e3.charAt(l3);
          switch (g3) {
            case 9:
            case 32:
              if (0 === n3 + m3 + b3)
                switch (x3) {
                  case 44:
                  case 58:
                  case 9:
                  case 32:
                    y3 = "";
                    break;
                  default:
                    32 !== g3 && (y3 = " ");
                }
              break;
            case 0:
              y3 = "\\0";
              break;
            case 12:
              y3 = "\\f";
              break;
            case 11:
              y3 = "\\v";
              break;
            case 38:
              0 === n3 + b3 + m3 && (r3 = I3 = 1, y3 = "\f" + y3);
              break;
            case 108:
              if (0 === n3 + b3 + m3 + E3 && 0 < u3)
                switch (l3 - u3) {
                  case 2:
                    112 === x3 && 58 === e3.charCodeAt(l3 - 3) && (E3 = x3);
                  case 8:
                    111 === K3 && (E3 = K3);
                }
              break;
            case 58:
              0 === n3 + b3 + m3 && (u3 = l3);
              break;
            case 44:
              0 === b3 + v3 + n3 + m3 && (r3 = 1, y3 += "\r");
              break;
            case 34:
            case 39:
              0 === b3 && (n3 = n3 === g3 ? 0 : 0 === n3 ? g3 : n3);
              break;
            case 91:
              0 === n3 + b3 + v3 && m3++;
              break;
            case 93:
              0 === n3 + b3 + v3 && m3--;
              break;
            case 41:
              0 === n3 + b3 + m3 && v3--;
              break;
            case 40:
              if (0 === n3 + b3 + m3) {
                if (0 === q3)
                  switch (2 * x3 + 3 * K3) {
                    case 533:
                      break;
                    default:
                      q3 = 1;
                  }
                v3++;
              }
              break;
            case 64:
              0 === b3 + v3 + n3 + m3 + u3 + k3 && (k3 = 1);
              break;
            case 42:
            case 47:
              if (!(0 < n3 + m3 + v3))
                switch (b3) {
                  case 0:
                    switch (2 * g3 + 3 * e3.charCodeAt(l3 + 1)) {
                      case 235:
                        b3 = 47;
                        break;
                      case 220:
                        t3 = l3, b3 = 42;
                    }
                    break;
                  case 42:
                    47 === g3 && 42 === x3 && t3 + 2 !== l3 && (33 === e3.charCodeAt(t3 + 2) && (p2 += e3.substring(t3, l3 + 1)), y3 = "", b3 = 0);
                }
          }
          0 === b3 && (f2 += y3);
      }
      K3 = x3;
      x3 = g3;
      l3++;
    }
    t3 = p2.length;
    if (0 < t3) {
      r3 = c3;
      if (0 < A3 && (C3 = H3(2, p2, r3, d3, D3, z3, t3, h2, a3, h2), void 0 !== C3 && 0 === (p2 = C3).length))
        return G4 + p2 + F4;
      p2 = r3.join(",") + "{" + p2 + "}";
      if (0 !== w3 * E3) {
        2 !== w3 || L3(p2, 2) || (E3 = 0);
        switch (E3) {
          case 111:
            p2 = p2.replace(ha, ":-moz-$1") + p2;
            break;
          case 112:
            p2 = p2.replace(Q3, "::-webkit-input-$1") + p2.replace(Q3, "::-moz-$1") + p2.replace(Q3, ":-ms-input-$1") + p2;
        }
        E3 = 0;
      }
    }
    return G4 + p2 + F4;
  }
  function X3(d3, c3, e3) {
    var h2 = c3.trim().split(ia);
    c3 = h2;
    var a3 = h2.length, m3 = d3.length;
    switch (m3) {
      case 0:
      case 1:
        var b3 = 0;
        for (d3 = 0 === m3 ? "" : d3[0] + " "; b3 < a3; ++b3) {
          c3[b3] = Z3(d3, c3[b3], e3).trim();
        }
        break;
      default:
        var v3 = b3 = 0;
        for (c3 = []; b3 < a3; ++b3) {
          for (var n3 = 0; n3 < m3; ++n3) {
            c3[v3++] = Z3(d3[n3] + " ", h2[b3], e3).trim();
          }
        }
    }
    return c3;
  }
  function Z3(d3, c3, e3) {
    var h2 = c3.charCodeAt(0);
    33 > h2 && (h2 = (c3 = c3.trim()).charCodeAt(0));
    switch (h2) {
      case 38:
        return c3.replace(F3, "$1" + d3.trim());
      case 58:
        return d3.trim() + c3.replace(F3, "$1" + d3.trim());
      default:
        if (0 < 1 * e3 && 0 < c3.indexOf("\f"))
          return c3.replace(F3, (58 === d3.charCodeAt(0) ? "" : "$1") + d3.trim());
    }
    return d3 + c3;
  }
  function P3(d3, c3, e3, h2) {
    var a3 = d3 + ";", m3 = 2 * c3 + 3 * e3 + 4 * h2;
    if (944 === m3) {
      d3 = a3.indexOf(":", 9) + 1;
      var b3 = a3.substring(d3, a3.length - 1).trim();
      b3 = a3.substring(0, d3).trim() + b3 + ";";
      return 1 === w3 || 2 === w3 && L3(b3, 1) ? "-webkit-" + b3 + b3 : b3;
    }
    if (0 === w3 || 2 === w3 && !L3(a3, 1))
      return a3;
    switch (m3) {
      case 1015:
        return 97 === a3.charCodeAt(10) ? "-webkit-" + a3 + a3 : a3;
      case 951:
        return 116 === a3.charCodeAt(3) ? "-webkit-" + a3 + a3 : a3;
      case 963:
        return 110 === a3.charCodeAt(5) ? "-webkit-" + a3 + a3 : a3;
      case 1009:
        if (100 !== a3.charCodeAt(4))
          break;
      case 969:
      case 942:
        return "-webkit-" + a3 + a3;
      case 978:
        return "-webkit-" + a3 + "-moz-" + a3 + a3;
      case 1019:
      case 983:
        return "-webkit-" + a3 + "-moz-" + a3 + "-ms-" + a3 + a3;
      case 883:
        if (45 === a3.charCodeAt(8))
          return "-webkit-" + a3 + a3;
        if (0 < a3.indexOf("image-set(", 11))
          return a3.replace(ja, "$1-webkit-$2") + a3;
        break;
      case 932:
        if (45 === a3.charCodeAt(4))
          switch (a3.charCodeAt(5)) {
            case 103:
              return "-webkit-box-" + a3.replace("-grow", "") + "-webkit-" + a3 + "-ms-" + a3.replace("grow", "positive") + a3;
            case 115:
              return "-webkit-" + a3 + "-ms-" + a3.replace("shrink", "negative") + a3;
            case 98:
              return "-webkit-" + a3 + "-ms-" + a3.replace("basis", "preferred-size") + a3;
          }
        return "-webkit-" + a3 + "-ms-" + a3 + a3;
      case 964:
        return "-webkit-" + a3 + "-ms-flex-" + a3 + a3;
      case 1023:
        if (99 !== a3.charCodeAt(8))
          break;
        b3 = a3.substring(a3.indexOf(":", 15)).replace("flex-", "").replace("space-between", "justify");
        return "-webkit-box-pack" + b3 + "-webkit-" + a3 + "-ms-flex-pack" + b3 + a3;
      case 1005:
        return ka.test(a3) ? a3.replace(aa, ":-webkit-") + a3.replace(aa, ":-moz-") + a3 : a3;
      case 1e3:
        b3 = a3.substring(13).trim();
        c3 = b3.indexOf("-") + 1;
        switch (b3.charCodeAt(0) + b3.charCodeAt(c3)) {
          case 226:
            b3 = a3.replace(G3, "tb");
            break;
          case 232:
            b3 = a3.replace(G3, "tb-rl");
            break;
          case 220:
            b3 = a3.replace(G3, "lr");
            break;
          default:
            return a3;
        }
        return "-webkit-" + a3 + "-ms-" + b3 + a3;
      case 1017:
        if (-1 === a3.indexOf("sticky", 9))
          break;
      case 975:
        c3 = (a3 = d3).length - 10;
        b3 = (33 === a3.charCodeAt(c3) ? a3.substring(0, c3) : a3).substring(d3.indexOf(":", 7) + 1).trim();
        switch (m3 = b3.charCodeAt(0) + (b3.charCodeAt(7) | 0)) {
          case 203:
            if (111 > b3.charCodeAt(8))
              break;
          case 115:
            a3 = a3.replace(b3, "-webkit-" + b3) + ";" + a3;
            break;
          case 207:
          case 102:
            a3 = a3.replace(b3, "-webkit-" + (102 < m3 ? "inline-" : "") + "box") + ";" + a3.replace(b3, "-webkit-" + b3) + ";" + a3.replace(b3, "-ms-" + b3 + "box") + ";" + a3;
        }
        return a3 + ";";
      case 938:
        if (45 === a3.charCodeAt(5))
          switch (a3.charCodeAt(6)) {
            case 105:
              return b3 = a3.replace("-items", ""), "-webkit-" + a3 + "-webkit-box-" + b3 + "-ms-flex-" + b3 + a3;
            case 115:
              return "-webkit-" + a3 + "-ms-flex-item-" + a3.replace(ba, "") + a3;
            default:
              return "-webkit-" + a3 + "-ms-flex-line-pack" + a3.replace("align-content", "").replace(ba, "") + a3;
          }
        break;
      case 973:
      case 989:
        if (45 !== a3.charCodeAt(3) || 122 === a3.charCodeAt(4))
          break;
      case 931:
      case 953:
        if (true === la.test(d3))
          return 115 === (b3 = d3.substring(d3.indexOf(":") + 1)).charCodeAt(0) ? P3(d3.replace("stretch", "fill-available"), c3, e3, h2).replace(":fill-available", ":stretch") : a3.replace(b3, "-webkit-" + b3) + a3.replace(b3, "-moz-" + b3.replace("fill-", "")) + a3;
        break;
      case 962:
        if (a3 = "-webkit-" + a3 + (102 === a3.charCodeAt(5) ? "-ms-" + a3 : "") + a3, 211 === e3 + h2 && 105 === a3.charCodeAt(13) && 0 < a3.indexOf("transform", 10))
          return a3.substring(0, a3.indexOf(";", 27) + 1).replace(ma, "$1-webkit-$2") + a3;
    }
    return a3;
  }
  function L3(d3, c3) {
    var e3 = d3.indexOf(1 === c3 ? ":" : "{"), h2 = d3.substring(0, 3 !== c3 ? e3 : 10);
    e3 = d3.substring(e3 + 1, d3.length - 1);
    return R3(2 !== c3 ? h2 : h2.replace(na, "$1"), e3, c3);
  }
  function ea(d3, c3) {
    var e3 = P3(c3, c3.charCodeAt(0), c3.charCodeAt(1), c3.charCodeAt(2));
    return e3 !== c3 + ";" ? e3.replace(oa, " or ($1)").substring(4) : "(" + c3 + ")";
  }
  function H3(d3, c3, e3, h2, a3, m3, b3, v3, n3, q3) {
    for (var g3 = 0, x3 = c3, w4; g3 < A3; ++g3) {
      switch (w4 = S3[g3].call(B3, d3, x3, e3, h2, a3, m3, b3, v3, n3, q3)) {
        case void 0:
        case false:
        case true:
        case null:
          break;
        default:
          x3 = w4;
      }
    }
    if (x3 !== c3)
      return x3;
  }
  function T3(d3) {
    switch (d3) {
      case void 0:
      case null:
        A3 = S3.length = 0;
        break;
      default:
        if ("function" === typeof d3)
          S3[A3++] = d3;
        else if ("object" === typeof d3)
          for (var c3 = 0, e3 = d3.length; c3 < e3; ++c3) {
            T3(d3[c3]);
          }
        else
          Y3 = !!d3 | 0;
    }
    return T3;
  }
  function U3(d3) {
    d3 = d3.prefix;
    void 0 !== d3 && (R3 = null, d3 ? "function" !== typeof d3 ? w3 = 1 : (w3 = 2, R3 = d3) : w3 = 0);
    return U3;
  }
  function B3(d3, c3) {
    var e3 = d3;
    33 > e3.charCodeAt(0) && (e3 = e3.trim());
    V3 = e3;
    e3 = [V3];
    if (0 < A3) {
      var h2 = H3(-1, c3, e3, e3, D3, z3, 0, 0, 0, 0);
      void 0 !== h2 && "string" === typeof h2 && (c3 = h2);
    }
    var a3 = M3(O3, e3, c3, 0, 0);
    0 < A3 && (h2 = H3(-2, a3, e3, e3, D3, z3, a3.length, 0, 0, 0), void 0 !== h2 && (a3 = h2));
    V3 = "";
    E3 = 0;
    z3 = D3 = 1;
    return a3;
  }
  var ca = /^\0+/g, N3 = /[\0\r\f]/g, aa = /: */g, ka = /zoo|gra/, ma = /([,: ])(transform)/g, ia = /,\r+?/g, F3 = /([\t\r\n ])*\f?&/g, fa = /@(k\w+)\s*(\S*)\s*/, Q3 = /::(place)/g, ha = /:(read-only)/g, G3 = /[svh]\w+-[tblr]{2}/, da = /\(\s*(.*)\s*\)/g, oa = /([\s\S]*?);/g, ba = /-self|flex-/g, na = /[^]*?(:[rp][el]a[\w-]+)[^]*/, la = /stretch|:\s*\w+\-(?:conte|avail)/, ja = /([^-])(image-set\()/, z3 = 1, D3 = 1, E3 = 0, w3 = 1, O3 = [], S3 = [], A3 = 0, R3 = null, Y3 = 0, V3 = "";
  B3.use = T3;
  B3.set = U3;
  void 0 !== W3 && U3(W3);
  return B3;
}
var stylis_browser_esm_default;
var init_stylis_browser_esm = __esm({
  "node_modules/@emotion/stylis/dist/stylis.browser.esm.js"() {
    stylis_browser_esm_default = stylis_min;
  }
});

// node_modules/@emotion/unitless/dist/unitless.browser.esm.js
var unitlessKeys, unitless_browser_esm_default;
var init_unitless_browser_esm = __esm({
  "node_modules/@emotion/unitless/dist/unitless.browser.esm.js"() {
    unitlessKeys = {
      animationIterationCount: 1,
      borderImageOutset: 1,
      borderImageSlice: 1,
      borderImageWidth: 1,
      boxFlex: 1,
      boxFlexGroup: 1,
      boxOrdinalGroup: 1,
      columnCount: 1,
      columns: 1,
      flex: 1,
      flexGrow: 1,
      flexPositive: 1,
      flexShrink: 1,
      flexNegative: 1,
      flexOrder: 1,
      gridRow: 1,
      gridRowEnd: 1,
      gridRowSpan: 1,
      gridRowStart: 1,
      gridColumn: 1,
      gridColumnEnd: 1,
      gridColumnSpan: 1,
      gridColumnStart: 1,
      msGridRow: 1,
      msGridRowSpan: 1,
      msGridColumn: 1,
      msGridColumnSpan: 1,
      fontWeight: 1,
      lineHeight: 1,
      opacity: 1,
      order: 1,
      orphans: 1,
      tabSize: 1,
      widows: 1,
      zIndex: 1,
      zoom: 1,
      WebkitLineClamp: 1,
      // SVG-related properties
      fillOpacity: 1,
      floodOpacity: 1,
      stopOpacity: 1,
      strokeDasharray: 1,
      strokeDashoffset: 1,
      strokeMiterlimit: 1,
      strokeOpacity: 1,
      strokeWidth: 1
    };
    unitless_browser_esm_default = unitlessKeys;
  }
});

// node_modules/@emotion/memoize/dist/emotion-memoize.esm.js
function memoize(fn) {
  var cache = /* @__PURE__ */ Object.create(null);
  return function(arg) {
    if (cache[arg] === void 0)
      cache[arg] = fn(arg);
    return cache[arg];
  };
}
var init_emotion_memoize_esm = __esm({
  "node_modules/@emotion/memoize/dist/emotion-memoize.esm.js"() {
  }
});

// node_modules/@emotion/is-prop-valid/dist/emotion-is-prop-valid.esm.js
var reactPropsRegex, isPropValid;
var init_emotion_is_prop_valid_esm = __esm({
  "node_modules/@emotion/is-prop-valid/dist/emotion-is-prop-valid.esm.js"() {
    init_emotion_memoize_esm();
    reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|enterKeyHint|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/;
    isPropValid = memoize(
      function(prop) {
        return reactPropsRegex.test(prop) || prop.charCodeAt(0) === 111 && prop.charCodeAt(1) === 110 && prop.charCodeAt(2) < 91;
      }
      /* Z+1 */
    );
  }
});

// node_modules/hoist-non-react-statics/node_modules/react-is/cjs/react-is.development.js
var require_react_is_development3 = __commonJS({
  "node_modules/hoist-non-react-statics/node_modules/react-is/cjs/react-is.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        var hasSymbol = typeof Symbol === "function" && Symbol.for;
        var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for("react.element") : 60103;
        var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for("react.portal") : 60106;
        var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for("react.fragment") : 60107;
        var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for("react.strict_mode") : 60108;
        var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for("react.profiler") : 60114;
        var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for("react.provider") : 60109;
        var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for("react.context") : 60110;
        var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for("react.async_mode") : 60111;
        var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for("react.concurrent_mode") : 60111;
        var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for("react.forward_ref") : 60112;
        var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for("react.suspense") : 60113;
        var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for("react.suspense_list") : 60120;
        var REACT_MEMO_TYPE = hasSymbol ? Symbol.for("react.memo") : 60115;
        var REACT_LAZY_TYPE = hasSymbol ? Symbol.for("react.lazy") : 60116;
        var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for("react.block") : 60121;
        var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for("react.fundamental") : 60117;
        var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for("react.responder") : 60118;
        var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for("react.scope") : 60119;
        function isValidElementType(type) {
          return typeof type === "string" || typeof type === "function" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
          type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === "object" && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
        }
        function typeOf(object) {
          if (typeof object === "object" && object !== null) {
            var $$typeof = object.$$typeof;
            switch ($$typeof) {
              case REACT_ELEMENT_TYPE:
                var type = object.type;
                switch (type) {
                  case REACT_ASYNC_MODE_TYPE:
                  case REACT_CONCURRENT_MODE_TYPE:
                  case REACT_FRAGMENT_TYPE:
                  case REACT_PROFILER_TYPE:
                  case REACT_STRICT_MODE_TYPE:
                  case REACT_SUSPENSE_TYPE:
                    return type;
                  default:
                    var $$typeofType = type && type.$$typeof;
                    switch ($$typeofType) {
                      case REACT_CONTEXT_TYPE:
                      case REACT_FORWARD_REF_TYPE:
                      case REACT_LAZY_TYPE:
                      case REACT_MEMO_TYPE:
                      case REACT_PROVIDER_TYPE:
                        return $$typeofType;
                      default:
                        return $$typeof;
                    }
                }
              case REACT_PORTAL_TYPE:
                return $$typeof;
            }
          }
          return void 0;
        }
        var AsyncMode = REACT_ASYNC_MODE_TYPE;
        var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
        var ContextConsumer = REACT_CONTEXT_TYPE;
        var ContextProvider = REACT_PROVIDER_TYPE;
        var Element3 = REACT_ELEMENT_TYPE;
        var ForwardRef = REACT_FORWARD_REF_TYPE;
        var Fragment8 = REACT_FRAGMENT_TYPE;
        var Lazy = REACT_LAZY_TYPE;
        var Memo = REACT_MEMO_TYPE;
        var Portal = REACT_PORTAL_TYPE;
        var Profiler = REACT_PROFILER_TYPE;
        var StrictMode = REACT_STRICT_MODE_TYPE;
        var Suspense = REACT_SUSPENSE_TYPE;
        var hasWarnedAboutDeprecatedIsAsyncMode = false;
        function isAsyncMode(object) {
          {
            if (!hasWarnedAboutDeprecatedIsAsyncMode) {
              hasWarnedAboutDeprecatedIsAsyncMode = true;
              console["warn"]("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.");
            }
          }
          return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
        }
        function isConcurrentMode(object) {
          return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
        }
        function isContextConsumer(object) {
          return typeOf(object) === REACT_CONTEXT_TYPE;
        }
        function isContextProvider(object) {
          return typeOf(object) === REACT_PROVIDER_TYPE;
        }
        function isElement(object) {
          return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
        }
        function isForwardRef(object) {
          return typeOf(object) === REACT_FORWARD_REF_TYPE;
        }
        function isFragment(object) {
          return typeOf(object) === REACT_FRAGMENT_TYPE;
        }
        function isLazy(object) {
          return typeOf(object) === REACT_LAZY_TYPE;
        }
        function isMemo(object) {
          return typeOf(object) === REACT_MEMO_TYPE;
        }
        function isPortal(object) {
          return typeOf(object) === REACT_PORTAL_TYPE;
        }
        function isProfiler(object) {
          return typeOf(object) === REACT_PROFILER_TYPE;
        }
        function isStrictMode(object) {
          return typeOf(object) === REACT_STRICT_MODE_TYPE;
        }
        function isSuspense(object) {
          return typeOf(object) === REACT_SUSPENSE_TYPE;
        }
        exports.AsyncMode = AsyncMode;
        exports.ConcurrentMode = ConcurrentMode;
        exports.ContextConsumer = ContextConsumer;
        exports.ContextProvider = ContextProvider;
        exports.Element = Element3;
        exports.ForwardRef = ForwardRef;
        exports.Fragment = Fragment8;
        exports.Lazy = Lazy;
        exports.Memo = Memo;
        exports.Portal = Portal;
        exports.Profiler = Profiler;
        exports.StrictMode = StrictMode;
        exports.Suspense = Suspense;
        exports.isAsyncMode = isAsyncMode;
        exports.isConcurrentMode = isConcurrentMode;
        exports.isContextConsumer = isContextConsumer;
        exports.isContextProvider = isContextProvider;
        exports.isElement = isElement;
        exports.isForwardRef = isForwardRef;
        exports.isFragment = isFragment;
        exports.isLazy = isLazy;
        exports.isMemo = isMemo;
        exports.isPortal = isPortal;
        exports.isProfiler = isProfiler;
        exports.isStrictMode = isStrictMode;
        exports.isSuspense = isSuspense;
        exports.isValidElementType = isValidElementType;
        exports.typeOf = typeOf;
      })();
    }
  }
});

// node_modules/hoist-non-react-statics/node_modules/react-is/index.js
var require_react_is3 = __commonJS({
  "node_modules/hoist-non-react-statics/node_modules/react-is/index.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_react_is_development3();
    }
  }
});

// node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js
var require_hoist_non_react_statics_cjs = __commonJS({
  "node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js"(exports, module) {
    "use strict";
    var reactIs = require_react_is3();
    var REACT_STATICS = {
      childContextTypes: true,
      contextType: true,
      contextTypes: true,
      defaultProps: true,
      displayName: true,
      getDefaultProps: true,
      getDerivedStateFromError: true,
      getDerivedStateFromProps: true,
      mixins: true,
      propTypes: true,
      type: true
    };
    var KNOWN_STATICS = {
      name: true,
      length: true,
      prototype: true,
      caller: true,
      callee: true,
      arguments: true,
      arity: true
    };
    var FORWARD_REF_STATICS = {
      "$$typeof": true,
      render: true,
      defaultProps: true,
      displayName: true,
      propTypes: true
    };
    var MEMO_STATICS = {
      "$$typeof": true,
      compare: true,
      defaultProps: true,
      displayName: true,
      propTypes: true,
      type: true
    };
    var TYPE_STATICS = {};
    TYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;
    TYPE_STATICS[reactIs.Memo] = MEMO_STATICS;
    function getStatics(component) {
      if (reactIs.isMemo(component)) {
        return MEMO_STATICS;
      }
      return TYPE_STATICS[component["$$typeof"]] || REACT_STATICS;
    }
    var defineProperty = Object.defineProperty;
    var getOwnPropertyNames = Object.getOwnPropertyNames;
    var getOwnPropertySymbols = Object.getOwnPropertySymbols;
    var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
    var getPrototypeOf = Object.getPrototypeOf;
    var objectPrototype = Object.prototype;
    function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
      if (typeof sourceComponent !== "string") {
        if (objectPrototype) {
          var inheritedComponent = getPrototypeOf(sourceComponent);
          if (inheritedComponent && inheritedComponent !== objectPrototype) {
            hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
          }
        }
        var keys = getOwnPropertyNames(sourceComponent);
        if (getOwnPropertySymbols) {
          keys = keys.concat(getOwnPropertySymbols(sourceComponent));
        }
        var targetStatics = getStatics(targetComponent);
        var sourceStatics = getStatics(sourceComponent);
        for (var i3 = 0; i3 < keys.length; ++i3) {
          var key = keys[i3];
          if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {
            var descriptor = getOwnPropertyDescriptor(sourceComponent, key);
            try {
              defineProperty(targetComponent, key, descriptor);
            } catch (e3) {
            }
          }
        }
      }
      return targetComponent;
    }
    module.exports = hoistNonReactStatics;
  }
});

// node_modules/styled-components/dist/styled-components.browser.esm.js
var styled_components_browser_esm_exports = {};
__export(styled_components_browser_esm_exports, {
  ServerStyleSheet: () => Ue,
  StyleSheetConsumer: () => ue,
  StyleSheetContext: () => ce,
  StyleSheetManager: () => me,
  ThemeConsumer: () => Ge,
  ThemeContext: () => Me,
  ThemeProvider: () => Le,
  __PRIVATE__: () => Ze,
  createGlobalStyle: () => $e,
  css: () => Ae,
  default: () => styled_components_browser_esm_default,
  isStyledComponent: () => _,
  keyframes: () => We,
  useTheme: () => Xe,
  version: () => A,
  withTheme: () => Je
});
function y() {
  return (y = Object.assign || function(e3) {
    for (var t3 = 1; t3 < arguments.length; t3++) {
      var n3 = arguments[t3];
      for (var r3 in n3)
        Object.prototype.hasOwnProperty.call(n3, r3) && (e3[r3] = n3[r3]);
    }
    return e3;
  }).apply(this, arguments);
}
function E(e3) {
  return "function" == typeof e3;
}
function b(e3) {
  return "string" == typeof e3 && e3 || e3.displayName || e3.name || "Component";
}
function _(e3) {
  return e3 && "string" == typeof e3.styledComponentId;
}
function R() {
  for (var e3 = arguments.length <= 0 ? void 0 : arguments[0], t3 = [], n3 = 1, r3 = arguments.length; n3 < r3; n3 += 1)
    t3.push(n3 < 0 || arguments.length <= n3 ? void 0 : arguments[n3]);
  return t3.forEach(function(t4) {
    e3 = e3.replace(/%[a-z]/, t4);
  }), e3;
}
function D(e3) {
  for (var t3 = arguments.length, n3 = new Array(t3 > 1 ? t3 - 1 : 0), r3 = 1; r3 < t3; r3++)
    n3[r3 - 1] = arguments[r3];
  throw false ? new Error("An error occurred. See https://git.io/JUIaE#" + e3 + " for more information." + (n3.length > 0 ? " Args: " + n3.join(", ") : "")) : new Error(R.apply(void 0, [O[e3]].concat(n3)).trim());
}
function Q(e3) {
  var t3, n3 = "";
  for (t3 = Math.abs(e3); t3 > 52; t3 = t3 / 52 | 0)
    n3 = K(t3 % 52) + n3;
  return (K(t3 % 52) + n3).replace(Z, "$1-$2");
}
function ne(e3) {
  for (var t3 = 0; t3 < e3.length; t3 += 1) {
    var n3 = e3[t3];
    if (E(n3) && !_(n3))
      return false;
  }
  return true;
}
function ae(e3) {
  var t3, n3, r3, o3, s3 = void 0 === e3 ? w : e3, i3 = s3.options, a3 = void 0 === i3 ? w : i3, c3 = s3.plugins, u3 = void 0 === c3 ? S : c3, l3 = new stylis_browser_esm_default(a3), d3 = [], p2 = function(e4) {
    function t4(t5) {
      if (t5)
        try {
          e4(t5 + "}");
        } catch (e5) {
        }
    }
    return function(n4, r4, o4, s4, i4, a4, c4, u4, l4, d4) {
      switch (n4) {
        case 1:
          if (0 === l4 && 64 === r4.charCodeAt(0))
            return e4(r4 + ";"), "";
          break;
        case 2:
          if (0 === u4)
            return r4 + "/*|*/";
          break;
        case 3:
          switch (u4) {
            case 102:
            case 112:
              return e4(o4[0] + r4), "";
            default:
              return r4 + (0 === d4 ? "/*|*/" : "");
          }
        case -2:
          r4.split("/*|*/}").forEach(t4);
      }
    };
  }(function(e4) {
    d3.push(e4);
  }), f2 = function(e4, r4, s4) {
    return 0 === r4 && -1 !== ie.indexOf(s4[n3.length]) || s4.match(o3) ? e4 : "." + t3;
  };
  function m3(e4, s4, i4, a4) {
    void 0 === a4 && (a4 = "&");
    var c4 = e4.replace(se, ""), u4 = s4 && i4 ? i4 + " " + s4 + " { " + c4 + " }" : c4;
    return t3 = a4, n3 = s4, r3 = new RegExp("\\" + n3 + "\\b", "g"), o3 = new RegExp("(\\" + n3 + "\\b){2,}"), l3(i4 || !s4 ? "" : s4, u4);
  }
  return l3.use([].concat(u3, [function(e4, t4, o4) {
    2 === e4 && o4.length && o4[0].lastIndexOf(n3) > 0 && (o4[0] = o4[0].replace(r3, f2));
  }, p2, function(e4) {
    if (-2 === e4) {
      var t4 = d3;
      return d3 = [], t4;
    }
  }])), m3.hash = u3.length ? u3.reduce(function(e4, t4) {
    return t4.name || D(15), ee(e4, t4.name);
  }, 5381).toString() : "", m3;
}
function pe() {
  return (0, import_react.useContext)(ce) || de;
}
function fe() {
  return (0, import_react.useContext)(le) || he;
}
function me(e3) {
  var t3 = (0, import_react.useState)(e3.stylisPlugins), n3 = t3[0], s3 = t3[1], c3 = pe(), u3 = (0, import_react.useMemo)(function() {
    var t4 = c3;
    return e3.sheet ? t4 = e3.sheet : e3.target && (t4 = t4.reconstructWithOptions({ target: e3.target }, false)), e3.disableCSSOMInjection && (t4 = t4.reconstructWithOptions({ useCSSOMInjection: false })), t4;
  }, [e3.disableCSSOMInjection, e3.sheet, e3.target]), l3 = (0, import_react.useMemo)(function() {
    return ae({ options: { prefix: !e3.disableVendorPrefixes }, plugins: n3 });
  }, [e3.disableVendorPrefixes, n3]);
  return (0, import_react.useEffect)(function() {
    (0, import_shallowequal.default)(n3, e3.stylisPlugins) || s3(e3.stylisPlugins);
  }, [e3.stylisPlugins]), import_react.default.createElement(ce.Provider, { value: u3 }, import_react.default.createElement(le.Provider, { value: l3 }, true ? import_react.default.Children.only(e3.children) : e3.children));
}
function Ee(e3) {
  return ve.test(e3) ? e3.replace(ge, we).replace(Se, "-ms-") : e3;
}
function _e(e3, n3, r3, o3) {
  if (Array.isArray(e3)) {
    for (var s3, i3 = [], a3 = 0, c3 = e3.length; a3 < c3; a3 += 1)
      "" !== (s3 = _e(e3[a3], n3, r3, o3)) && (Array.isArray(s3) ? i3.push.apply(i3, s3) : i3.push(s3));
    return i3;
  }
  if (be(e3))
    return "";
  if (_(e3))
    return "." + e3.styledComponentId;
  if (E(e3)) {
    if ("function" != typeof (l3 = e3) || l3.prototype && l3.prototype.isReactComponent || !n3)
      return e3;
    var u3 = e3(n3);
    return (0, import_react_is.isElement)(u3) && console.warn(b(e3) + " is not a styled component and cannot be referred to via component selector. See https://www.styled-components.com/docs/advanced#referring-to-other-components for more details."), _e(u3, n3, r3, o3);
  }
  var l3;
  return e3 instanceof ye ? r3 ? (e3.inject(r3, o3), e3.getName(o3)) : e3 : g(e3) ? function e4(t3, n4) {
    var r4, o4, s4 = [];
    for (var i4 in t3)
      t3.hasOwnProperty(i4) && !be(t3[i4]) && (Array.isArray(t3[i4]) && t3[i4].isCss || E(t3[i4]) ? s4.push(Ee(i4) + ":", t3[i4], ";") : g(t3[i4]) ? s4.push.apply(s4, e4(t3[i4], i4)) : s4.push(Ee(i4) + ": " + (r4 = i4, null == (o4 = t3[i4]) || "boolean" == typeof o4 || "" === o4 ? "" : "number" != typeof o4 || 0 === o4 || r4 in unitless_browser_esm_default || r4.startsWith("--") ? String(o4).trim() : o4 + "px") + ";"));
    return n4 ? [n4 + " {"].concat(s4, ["}"]) : s4;
  }(e3) : e3.toString();
}
function Ae(e3) {
  for (var t3 = arguments.length, n3 = new Array(t3 > 1 ? t3 - 1 : 0), r3 = 1; r3 < t3; r3++)
    n3[r3 - 1] = arguments[r3];
  return E(e3) || g(e3) ? Ne(_e(v(S, [e3].concat(n3)))) : 0 === n3.length && 1 === e3.length && "string" == typeof e3[0] ? e3 : Ne(_e(v(e3, n3)));
}
function je(e3) {
  return e3.replace(Re, "-").replace(De, "");
}
function xe(e3) {
  return "string" == typeof e3 && e3.charAt(0) === e3.charAt(0).toLowerCase();
}
function Be(e3, t3, n3) {
  var r3 = e3[n3];
  ke(t3) && ke(r3) ? ze(r3, t3) : e3[n3] = t3;
}
function ze(e3) {
  for (var t3 = arguments.length, n3 = new Array(t3 > 1 ? t3 - 1 : 0), r3 = 1; r3 < t3; r3++)
    n3[r3 - 1] = arguments[r3];
  for (var o3 = 0, s3 = n3; o3 < s3.length; o3++) {
    var i3 = s3[o3];
    if (ke(i3))
      for (var a3 in i3)
        Ve(a3) && Be(e3, i3[a3], a3);
  }
  return e3;
}
function Le(e3) {
  var t3 = (0, import_react.useContext)(Me), n3 = (0, import_react.useMemo)(function() {
    return function(e4, t4) {
      if (!e4)
        return D(14);
      if (E(e4)) {
        var n4 = e4(t4);
        return null !== n4 && !Array.isArray(n4) && "object" == typeof n4 ? n4 : D(7);
      }
      return Array.isArray(e4) || "object" != typeof e4 ? D(8) : t4 ? y({}, t4, {}, e4) : e4;
    }(e3.theme, t3);
  }, [e3.theme, t3]);
  return e3.children ? import_react.default.createElement(Me.Provider, { value: n3 }, e3.children) : null;
}
function Ye(e3, t3, n3) {
  var o3 = _(e3), i3 = !xe(e3), a3 = t3.attrs, c3 = void 0 === a3 ? S : a3, l3 = t3.componentId, d3 = void 0 === l3 ? function(e4, t4) {
    var n4 = "string" != typeof e4 ? "sc" : je(e4);
    Fe[n4] = (Fe[n4] || 0) + 1;
    var r3 = n4 + "-" + Te("5.3.11" + n4 + Fe[n4]);
    return t4 ? t4 + "-" + r3 : r3;
  }(t3.displayName, t3.parentComponentId) : l3, h2 = t3.displayName, p2 = void 0 === h2 ? function(e4) {
    return xe(e4) ? "styled." + e4 : "Styled(" + b(e4) + ")";
  }(e3) : h2, v3 = t3.displayName && t3.componentId ? je(t3.displayName) + "-" + t3.componentId : t3.componentId || d3, g3 = o3 && e3.attrs ? Array.prototype.concat(e3.attrs, c3).filter(Boolean) : c3, N3 = t3.shouldForwardProp;
  o3 && e3.shouldForwardProp && (N3 = t3.shouldForwardProp ? function(n4, r3, o4) {
    return e3.shouldForwardProp(n4, r3, o4) && t3.shouldForwardProp(n4, r3, o4);
  } : e3.shouldForwardProp);
  var A3, C3 = new oe(n3, v3, o3 ? e3.componentStyle : void 0), I3 = C3.isStatic && 0 === c3.length, P3 = function(e4, t4) {
    return function(e5, t5, n4, r3) {
      var o4 = e5.attrs, i4 = e5.componentStyle, a4 = e5.defaultProps, c4 = e5.foldedComponentIds, l4 = e5.shouldForwardProp, d4 = e5.styledComponentId, h3 = e5.target, p3 = function(e6, t6, n5) {
        void 0 === e6 && (e6 = w);
        var r4 = y({}, t6, { theme: e6 }), o5 = {};
        return n5.forEach(function(e7) {
          var t7, n6, s3, i5 = e7;
          for (t7 in E(i5) && (i5 = i5(r4)), i5)
            r4[t7] = o5[t7] = "className" === t7 ? (n6 = o5[t7], s3 = i5[t7], n6 && s3 ? n6 + " " + s3 : n6 || s3) : i5[t7];
        }), [r4, o5];
      }(Oe(t5, (0, import_react.useContext)(Me), a4) || w, t5, o4), m3 = p3[0], v4 = p3[1], g4 = function(e6, t6, n5, r4) {
        var o5 = pe(), s3 = fe(), i5 = t6 ? e6.generateAndInjectStyles(w, o5, s3) : e6.generateAndInjectStyles(n5, o5, s3);
        return !t6 && r4 && r4(i5), i5;
      }(i4, r3, m3, true ? e5.warnTooManyClasses : void 0), S3 = n4, b3 = v4.$as || t5.$as || v4.as || t5.as || h3, _3 = xe(b3), N4 = v4 !== t5 ? y({}, t5, {}, v4) : t5, A4 = {};
      for (var C4 in N4)
        "$" !== C4[0] && "as" !== C4 && ("forwardedAs" === C4 ? A4.as = N4[C4] : (l4 ? l4(C4, isPropValid, b3) : !_3 || isPropValid(C4)) && (A4[C4] = N4[C4]));
      return t5.style && v4.style !== t5.style && (A4.style = y({}, t5.style, {}, v4.style)), A4.className = Array.prototype.concat(c4, d4, g4 !== d4 ? g4 : null, t5.className, v4.className).filter(Boolean).join(" "), A4.ref = S3, (0, import_react.createElement)(b3, A4);
    }(A3, e4, t4, I3);
  };
  return P3.displayName = p2, (A3 = import_react.default.forwardRef(P3)).attrs = g3, A3.componentStyle = C3, A3.displayName = p2, A3.shouldForwardProp = N3, A3.foldedComponentIds = o3 ? Array.prototype.concat(e3.foldedComponentIds, e3.styledComponentId) : S, A3.styledComponentId = v3, A3.target = o3 ? e3.target : e3, A3.withComponent = function(e4) {
    var r3 = t3.componentId, o4 = function(e5, t4) {
      if (null == e5)
        return {};
      var n4, r4, o5 = {}, s4 = Object.keys(e5);
      for (r4 = 0; r4 < s4.length; r4++)
        n4 = s4[r4], t4.indexOf(n4) >= 0 || (o5[n4] = e5[n4]);
      return o5;
    }(t3, ["componentId"]), s3 = r3 && r3 + "-" + (xe(e4) ? e4 : je(b(e4)));
    return Ye(e4, y({}, o4, { attrs: g3, componentId: s3 }), n3);
  }, Object.defineProperty(A3, "defaultProps", { get: function() {
    return this._foldedDefaultProps;
  }, set: function(t4) {
    this._foldedDefaultProps = o3 ? ze({}, e3.defaultProps, t4) : t4;
  } }), Pe(p2, v3), A3.warnTooManyClasses = function(e4, t4) {
    var n4 = {}, r3 = false;
    return function(o4) {
      if (!r3 && (n4[o4] = true, Object.keys(n4).length >= 200)) {
        var s3 = t4 ? ' with the id of "' + t4 + '"' : "";
        console.warn("Over 200 classes were generated for component " + e4 + s3 + ".\nConsider using the attrs method, together with a style object for frequently changed styles.\nExample:\n  const Component = styled.div.attrs(props => ({\n    style: {\n      background: props.background,\n    },\n  }))`width: 100%;`\n\n  <Component />"), r3 = true, n4 = {};
      }
    };
  }(p2, v3), Object.defineProperty(A3, "toString", { value: function() {
    return "." + A3.styledComponentId;
  } }), i3 && (0, import_hoist_non_react_statics.default)(A3, e3, { attrs: true, componentStyle: true, displayName: true, foldedComponentIds: true, shouldForwardProp: true, styledComponentId: true, target: true, withComponent: true }), A3;
}
function $e(e3) {
  for (var t3 = arguments.length, n3 = new Array(t3 > 1 ? t3 - 1 : 0), o3 = 1; o3 < t3; o3++)
    n3[o3 - 1] = arguments[o3];
  var i3 = Ae.apply(void 0, [e3].concat(n3)), a3 = "sc-global-" + Te(JSON.stringify(i3)), u3 = new He(i3, a3);
  function d3(e4) {
    var t4 = pe(), n4 = fe(), o4 = (0, import_react.useContext)(Me), d4 = (0, import_react.useRef)(t4.allocateGSInstance(a3)).current;
    return import_react.default.Children.count(e4.children) && console.warn("The global style component " + a3 + " was given child JSX. createGlobalStyle does not render children."), i3.some(function(e5) {
      return "string" == typeof e5 && -1 !== e5.indexOf("@import");
    }) && console.warn("Please do not use @import CSS syntax in createGlobalStyle at this time, as the CSSOM APIs we use in production do not handle it well. Instead, we recommend using a library such as react-helmet to inject a typical <link> meta tag to the stylesheet, or simply embedding it manually in your index.html <head> section for a simpler app."), t4.server && h2(d4, e4, t4, o4, n4), (0, import_react.useLayoutEffect)(function() {
      if (!t4.server)
        return h2(d4, e4, t4, o4, n4), function() {
          return u3.removeStyles(d4, t4);
        };
    }, [d4, e4, t4, o4, n4]), null;
  }
  function h2(e4, t4, n4, r3, o4) {
    if (u3.isStatic)
      u3.renderStyles(e4, P, n4, o4);
    else {
      var s3 = y({}, t4, { theme: Oe(t4, r3, d3.defaultProps) });
      u3.renderStyles(e4, s3, n4, o4);
    }
  }
  return Pe(a3), import_react.default.memo(d3);
}
function We(e3) {
  "undefined" != typeof navigator && "ReactNative" === navigator.product && console.warn("`keyframes` cannot be used on ReactNative, only on the web. To do animation in ReactNative please use Animated.");
  for (var t3 = arguments.length, n3 = new Array(t3 > 1 ? t3 - 1 : 0), r3 = 1; r3 < t3; r3++)
    n3[r3 - 1] = arguments[r3];
  var o3 = Ae.apply(void 0, [e3].concat(n3)).join(""), s3 = Te(o3);
  return new ye(s3, o3);
}
var import_react_is, import_react, import_shallowequal, import_hoist_non_react_statics, v, g, S, w, N, A, C, I, P, O, j, T, x, k, V, B, z, M, G, L, F, Y, q, H, $, W, U, J, X, Z, K, ee, te, re, oe, se, ie, ce, ue, le, de, he, ye, ve, ge, Se, we, be, Ne, Ce, Ie, Pe, Oe, Re, De, Te, ke, Ve, Me, Ge, Fe, qe, He, Ue, Je, Xe, Ze, styled_components_browser_esm_default;
var init_styled_components_browser_esm = __esm({
  "node_modules/styled-components/dist/styled-components.browser.esm.js"() {
    import_react_is = __toESM(require_react_is2());
    import_react = __toESM(require_react());
    import_shallowequal = __toESM(require_shallowequal());
    init_stylis_browser_esm();
    init_unitless_browser_esm();
    init_emotion_is_prop_valid_esm();
    import_hoist_non_react_statics = __toESM(require_hoist_non_react_statics_cjs());
    v = function(e3, t3) {
      for (var n3 = [e3[0]], r3 = 0, o3 = t3.length; r3 < o3; r3 += 1)
        n3.push(t3[r3], e3[r3 + 1]);
      return n3;
    };
    g = function(t3) {
      return null !== t3 && "object" == typeof t3 && "[object Object]" === (t3.toString ? t3.toString() : Object.prototype.toString.call(t3)) && !(0, import_react_is.typeOf)(t3);
    };
    S = Object.freeze([]);
    w = Object.freeze({});
    N = "undefined" != typeof process && void 0 !== process.env && (process.env.REACT_APP_SC_ATTR || process.env.SC_ATTR) || "data-styled";
    A = "5.3.11";
    C = "undefined" != typeof window && "HTMLElement" in window;
    I = Boolean("boolean" == typeof SC_DISABLE_SPEEDY ? SC_DISABLE_SPEEDY : "undefined" != typeof process && void 0 !== process.env && (void 0 !== process.env.REACT_APP_SC_DISABLE_SPEEDY && "" !== process.env.REACT_APP_SC_DISABLE_SPEEDY ? "false" !== process.env.REACT_APP_SC_DISABLE_SPEEDY && process.env.REACT_APP_SC_DISABLE_SPEEDY : void 0 !== process.env.SC_DISABLE_SPEEDY && "" !== process.env.SC_DISABLE_SPEEDY ? "false" !== process.env.SC_DISABLE_SPEEDY && process.env.SC_DISABLE_SPEEDY : true));
    P = {};
    O = true ? { 1: "Cannot create styled-component for component: %s.\n\n", 2: "Can't collect styles once you've consumed a `ServerStyleSheet`'s styles! `ServerStyleSheet` is a one off instance for each server-side render cycle.\n\n- Are you trying to reuse it across renders?\n- Are you accidentally calling collectStyles twice?\n\n", 3: "Streaming SSR is only supported in a Node.js environment; Please do not try to call this method in the browser.\n\n", 4: "The `StyleSheetManager` expects a valid target or sheet prop!\n\n- Does this error occur on the client and is your target falsy?\n- Does this error occur on the server and is the sheet falsy?\n\n", 5: "The clone method cannot be used on the client!\n\n- Are you running in a client-like environment on the server?\n- Are you trying to run SSR on the client?\n\n", 6: "Trying to insert a new style tag, but the given Node is unmounted!\n\n- Are you using a custom target that isn't mounted?\n- Does your document not have a valid head element?\n- Have you accidentally removed a style tag manually?\n\n", 7: 'ThemeProvider: Please return an object from your "theme" prop function, e.g.\n\n```js\ntheme={() => ({})}\n```\n\n', 8: 'ThemeProvider: Please make your "theme" prop an object.\n\n', 9: "Missing document `<head>`\n\n", 10: "Cannot find a StyleSheet instance. Usually this happens if there are multiple copies of styled-components loaded at once. Check out this issue for how to troubleshoot and fix the common cases where this situation can happen: https://github.com/styled-components/styled-components/issues/1941#issuecomment-417862021\n\n", 11: "_This error was replaced with a dev-time warning, it will be deleted for v4 final._ [createGlobalStyle] received children which will not be rendered. Please use the component without passing children elements.\n\n", 12: "It seems you are interpolating a keyframe declaration (%s) into an untagged string. This was supported in styled-components v3, but is not longer supported in v4 as keyframes are now injected on-demand. Please wrap your string in the css\\`\\` helper which ensures the styles are injected correctly. See https://www.styled-components.com/docs/api#css\n\n", 13: "%s is not a styled component and cannot be referred to via component selector. See https://www.styled-components.com/docs/advanced#referring-to-other-components for more details.\n\n", 14: 'ThemeProvider: "theme" prop is required.\n\n', 15: "A stylis plugin has been supplied that is not named. We need a name for each plugin to be able to prevent styling collisions between different stylis configurations within the same app. Before you pass your plugin to `<StyleSheetManager stylisPlugins={[]}>`, please make sure each plugin is uniquely-named, e.g.\n\n```js\nObject.defineProperty(importedPlugin, 'name', { value: 'some-unique-name' });\n```\n\n", 16: "Reached the limit of how many styled components may be created at group %s.\nYou may only create up to 1,073,741,824 components. If you're creating components dynamically,\nas for instance in your render method then you may be running into this limitation.\n\n", 17: "CSSStyleSheet could not be found on HTMLStyleElement.\nHas styled-components' style tag been unmounted or altered by another script?\n" } : {};
    j = function() {
      function e3(e4) {
        this.groupSizes = new Uint32Array(512), this.length = 512, this.tag = e4;
      }
      var t3 = e3.prototype;
      return t3.indexOfGroup = function(e4) {
        for (var t4 = 0, n3 = 0; n3 < e4; n3++)
          t4 += this.groupSizes[n3];
        return t4;
      }, t3.insertRules = function(e4, t4) {
        if (e4 >= this.groupSizes.length) {
          for (var n3 = this.groupSizes, r3 = n3.length, o3 = r3; e4 >= o3; )
            (o3 <<= 1) < 0 && D(16, "" + e4);
          this.groupSizes = new Uint32Array(o3), this.groupSizes.set(n3), this.length = o3;
          for (var s3 = r3; s3 < o3; s3++)
            this.groupSizes[s3] = 0;
        }
        for (var i3 = this.indexOfGroup(e4 + 1), a3 = 0, c3 = t4.length; a3 < c3; a3++)
          this.tag.insertRule(i3, t4[a3]) && (this.groupSizes[e4]++, i3++);
      }, t3.clearGroup = function(e4) {
        if (e4 < this.length) {
          var t4 = this.groupSizes[e4], n3 = this.indexOfGroup(e4), r3 = n3 + t4;
          this.groupSizes[e4] = 0;
          for (var o3 = n3; o3 < r3; o3++)
            this.tag.deleteRule(n3);
        }
      }, t3.getGroup = function(e4) {
        var t4 = "";
        if (e4 >= this.length || 0 === this.groupSizes[e4])
          return t4;
        for (var n3 = this.groupSizes[e4], r3 = this.indexOfGroup(e4), o3 = r3 + n3, s3 = r3; s3 < o3; s3++)
          t4 += this.tag.getRule(s3) + "/*!sc*/\n";
        return t4;
      }, e3;
    }();
    T = /* @__PURE__ */ new Map();
    x = /* @__PURE__ */ new Map();
    k = 1;
    V = function(e3) {
      if (T.has(e3))
        return T.get(e3);
      for (; x.has(k); )
        k++;
      var t3 = k++;
      return ((0 | t3) < 0 || t3 > 1 << 30) && D(16, "" + t3), T.set(e3, t3), x.set(t3, e3), t3;
    };
    B = function(e3) {
      return x.get(e3);
    };
    z = function(e3, t3) {
      t3 >= k && (k = t3 + 1), T.set(e3, t3), x.set(t3, e3);
    };
    M = "style[" + N + '][data-styled-version="5.3.11"]';
    G = new RegExp("^" + N + '\\.g(\\d+)\\[id="([\\w\\d-]+)"\\].*?"([^"]*)');
    L = function(e3, t3, n3) {
      for (var r3, o3 = n3.split(","), s3 = 0, i3 = o3.length; s3 < i3; s3++)
        (r3 = o3[s3]) && e3.registerName(t3, r3);
    };
    F = function(e3, t3) {
      for (var n3 = (t3.textContent || "").split("/*!sc*/\n"), r3 = [], o3 = 0, s3 = n3.length; o3 < s3; o3++) {
        var i3 = n3[o3].trim();
        if (i3) {
          var a3 = i3.match(G);
          if (a3) {
            var c3 = 0 | parseInt(a3[1], 10), u3 = a3[2];
            0 !== c3 && (z(u3, c3), L(e3, u3, a3[3]), e3.getTag().insertRules(c3, r3)), r3.length = 0;
          } else
            r3.push(i3);
        }
      }
    };
    Y = function() {
      return "undefined" != typeof __webpack_nonce__ ? __webpack_nonce__ : null;
    };
    q = function(e3) {
      var t3 = document.head, n3 = e3 || t3, r3 = document.createElement("style"), o3 = function(e4) {
        for (var t4 = e4.childNodes, n4 = t4.length; n4 >= 0; n4--) {
          var r4 = t4[n4];
          if (r4 && 1 === r4.nodeType && r4.hasAttribute(N))
            return r4;
        }
      }(n3), s3 = void 0 !== o3 ? o3.nextSibling : null;
      r3.setAttribute(N, "active"), r3.setAttribute("data-styled-version", "5.3.11");
      var i3 = Y();
      return i3 && r3.setAttribute("nonce", i3), n3.insertBefore(r3, s3), r3;
    };
    H = function() {
      function e3(e4) {
        var t4 = this.element = q(e4);
        t4.appendChild(document.createTextNode("")), this.sheet = function(e5) {
          if (e5.sheet)
            return e5.sheet;
          for (var t5 = document.styleSheets, n3 = 0, r3 = t5.length; n3 < r3; n3++) {
            var o3 = t5[n3];
            if (o3.ownerNode === e5)
              return o3;
          }
          D(17);
        }(t4), this.length = 0;
      }
      var t3 = e3.prototype;
      return t3.insertRule = function(e4, t4) {
        try {
          return this.sheet.insertRule(t4, e4), this.length++, true;
        } catch (e5) {
          return false;
        }
      }, t3.deleteRule = function(e4) {
        this.sheet.deleteRule(e4), this.length--;
      }, t3.getRule = function(e4) {
        var t4 = this.sheet.cssRules[e4];
        return void 0 !== t4 && "string" == typeof t4.cssText ? t4.cssText : "";
      }, e3;
    }();
    $ = function() {
      function e3(e4) {
        var t4 = this.element = q(e4);
        this.nodes = t4.childNodes, this.length = 0;
      }
      var t3 = e3.prototype;
      return t3.insertRule = function(e4, t4) {
        if (e4 <= this.length && e4 >= 0) {
          var n3 = document.createTextNode(t4), r3 = this.nodes[e4];
          return this.element.insertBefore(n3, r3 || null), this.length++, true;
        }
        return false;
      }, t3.deleteRule = function(e4) {
        this.element.removeChild(this.nodes[e4]), this.length--;
      }, t3.getRule = function(e4) {
        return e4 < this.length ? this.nodes[e4].textContent : "";
      }, e3;
    }();
    W = function() {
      function e3(e4) {
        this.rules = [], this.length = 0;
      }
      var t3 = e3.prototype;
      return t3.insertRule = function(e4, t4) {
        return e4 <= this.length && (this.rules.splice(e4, 0, t4), this.length++, true);
      }, t3.deleteRule = function(e4) {
        this.rules.splice(e4, 1), this.length--;
      }, t3.getRule = function(e4) {
        return e4 < this.length ? this.rules[e4] : "";
      }, e3;
    }();
    U = C;
    J = { isServer: !C, useCSSOMInjection: !I };
    X = function() {
      function e3(e4, t4, n3) {
        void 0 === e4 && (e4 = w), void 0 === t4 && (t4 = {}), this.options = y({}, J, {}, e4), this.gs = t4, this.names = new Map(n3), this.server = !!e4.isServer, !this.server && C && U && (U = false, function(e5) {
          for (var t5 = document.querySelectorAll(M), n4 = 0, r3 = t5.length; n4 < r3; n4++) {
            var o3 = t5[n4];
            o3 && "active" !== o3.getAttribute(N) && (F(e5, o3), o3.parentNode && o3.parentNode.removeChild(o3));
          }
        }(this));
      }
      e3.registerId = function(e4) {
        return V(e4);
      };
      var t3 = e3.prototype;
      return t3.reconstructWithOptions = function(t4, n3) {
        return void 0 === n3 && (n3 = true), new e3(y({}, this.options, {}, t4), this.gs, n3 && this.names || void 0);
      }, t3.allocateGSInstance = function(e4) {
        return this.gs[e4] = (this.gs[e4] || 0) + 1;
      }, t3.getTag = function() {
        return this.tag || (this.tag = (n3 = (t4 = this.options).isServer, r3 = t4.useCSSOMInjection, o3 = t4.target, e4 = n3 ? new W(o3) : r3 ? new H(o3) : new $(o3), new j(e4)));
        var e4, t4, n3, r3, o3;
      }, t3.hasNameForId = function(e4, t4) {
        return this.names.has(e4) && this.names.get(e4).has(t4);
      }, t3.registerName = function(e4, t4) {
        if (V(e4), this.names.has(e4))
          this.names.get(e4).add(t4);
        else {
          var n3 = /* @__PURE__ */ new Set();
          n3.add(t4), this.names.set(e4, n3);
        }
      }, t3.insertRules = function(e4, t4, n3) {
        this.registerName(e4, t4), this.getTag().insertRules(V(e4), n3);
      }, t3.clearNames = function(e4) {
        this.names.has(e4) && this.names.get(e4).clear();
      }, t3.clearRules = function(e4) {
        this.getTag().clearGroup(V(e4)), this.clearNames(e4);
      }, t3.clearTag = function() {
        this.tag = void 0;
      }, t3.toString = function() {
        return function(e4) {
          for (var t4 = e4.getTag(), n3 = t4.length, r3 = "", o3 = 0; o3 < n3; o3++) {
            var s3 = B(o3);
            if (void 0 !== s3) {
              var i3 = e4.names.get(s3), a3 = t4.getGroup(o3);
              if (i3 && a3 && i3.size) {
                var c3 = N + ".g" + o3 + '[id="' + s3 + '"]', u3 = "";
                void 0 !== i3 && i3.forEach(function(e5) {
                  e5.length > 0 && (u3 += e5 + ",");
                }), r3 += "" + a3 + c3 + '{content:"' + u3 + '"}/*!sc*/\n';
              }
            }
          }
          return r3;
        }(this);
      }, e3;
    }();
    Z = /(a)(d)/gi;
    K = function(e3) {
      return String.fromCharCode(e3 + (e3 > 25 ? 39 : 97));
    };
    ee = function(e3, t3) {
      for (var n3 = t3.length; n3; )
        e3 = 33 * e3 ^ t3.charCodeAt(--n3);
      return e3;
    };
    te = function(e3) {
      return ee(5381, e3);
    };
    re = te("5.3.11");
    oe = function() {
      function e3(e4, t3, n3) {
        this.rules = e4, this.staticRulesId = "", this.isStatic = false, this.componentId = t3, this.baseHash = ee(re, t3), this.baseStyle = n3, X.registerId(t3);
      }
      return e3.prototype.generateAndInjectStyles = function(e4, t3, n3) {
        var r3 = this.componentId, o3 = [];
        if (this.baseStyle && o3.push(this.baseStyle.generateAndInjectStyles(e4, t3, n3)), this.isStatic && !n3.hash)
          if (this.staticRulesId && t3.hasNameForId(r3, this.staticRulesId))
            o3.push(this.staticRulesId);
          else {
            var s3 = _e(this.rules, e4, t3, n3).join(""), i3 = Q(ee(this.baseHash, s3) >>> 0);
            if (!t3.hasNameForId(r3, i3)) {
              var a3 = n3(s3, "." + i3, void 0, r3);
              t3.insertRules(r3, i3, a3);
            }
            o3.push(i3), this.staticRulesId = i3;
          }
        else {
          for (var c3 = this.rules.length, u3 = ee(this.baseHash, n3.hash), l3 = "", d3 = 0; d3 < c3; d3++) {
            var h2 = this.rules[d3];
            if ("string" == typeof h2)
              l3 += h2, u3 = ee(u3, h2 + d3);
            else if (h2) {
              var p2 = _e(h2, e4, t3, n3), f2 = Array.isArray(p2) ? p2.join("") : p2;
              u3 = ee(u3, f2 + d3), l3 += f2;
            }
          }
          if (l3) {
            var m3 = Q(u3 >>> 0);
            if (!t3.hasNameForId(r3, m3)) {
              var y3 = n3(l3, "." + m3, void 0, r3);
              t3.insertRules(r3, m3, y3);
            }
            o3.push(m3);
          }
        }
        return o3.join(" ");
      }, e3;
    }();
    se = /^\s*\/\/.*$/gm;
    ie = [":", "[", ".", "#"];
    ce = import_react.default.createContext();
    ue = ce.Consumer;
    le = import_react.default.createContext();
    de = (le.Consumer, new X());
    he = ae();
    ye = function() {
      function e3(e4, t3) {
        var n3 = this;
        this.inject = function(e5, t4) {
          void 0 === t4 && (t4 = he);
          var r3 = n3.name + t4.hash;
          e5.hasNameForId(n3.id, r3) || e5.insertRules(n3.id, r3, t4(n3.rules, r3, "@keyframes"));
        }, this.toString = function() {
          return D(12, String(n3.name));
        }, this.name = e4, this.id = "sc-keyframes-" + e4, this.rules = t3;
      }
      return e3.prototype.getName = function(e4) {
        return void 0 === e4 && (e4 = he), this.name + e4.hash;
      }, e3;
    }();
    ve = /([A-Z])/;
    ge = /([A-Z])/g;
    Se = /^ms-/;
    we = function(e3) {
      return "-" + e3.toLowerCase();
    };
    be = function(e3) {
      return null == e3 || false === e3 || "" === e3;
    };
    Ne = function(e3) {
      return Array.isArray(e3) && (e3.isCss = true), e3;
    };
    Ce = /invalid hook call/i;
    Ie = /* @__PURE__ */ new Set();
    Pe = function(e3, t3) {
      if (true) {
        var n3 = "The component " + e3 + (t3 ? ' with the id of "' + t3 + '"' : "") + " has been created dynamically.\nYou may see this warning because you've called styled inside another component.\nTo resolve this only create new StyledComponents outside of any render method and function component.", r3 = console.error;
        try {
          var o3 = true;
          console.error = function(e4) {
            if (Ce.test(e4))
              o3 = false, Ie.delete(n3);
            else {
              for (var t4 = arguments.length, s3 = new Array(t4 > 1 ? t4 - 1 : 0), i3 = 1; i3 < t4; i3++)
                s3[i3 - 1] = arguments[i3];
              r3.apply(void 0, [e4].concat(s3));
            }
          }, (0, import_react.useRef)(), o3 && !Ie.has(n3) && (console.warn(n3), Ie.add(n3));
        } catch (e4) {
          Ce.test(e4.message) && Ie.delete(n3);
        } finally {
          console.error = r3;
        }
      }
    };
    Oe = function(e3, t3, n3) {
      return void 0 === n3 && (n3 = w), e3.theme !== n3.theme && e3.theme || t3 || n3.theme;
    };
    Re = /[!"#$%&'()*+,./:;<=>?@[\\\]^`{|}~-]+/g;
    De = /(^-|-$)/g;
    Te = function(e3) {
      return Q(te(e3) >>> 0);
    };
    ke = function(e3) {
      return "function" == typeof e3 || "object" == typeof e3 && null !== e3 && !Array.isArray(e3);
    };
    Ve = function(e3) {
      return "__proto__" !== e3 && "constructor" !== e3 && "prototype" !== e3;
    };
    Me = import_react.default.createContext();
    Ge = Me.Consumer;
    Fe = {};
    qe = function(e3) {
      return function e4(t3, r3, o3) {
        if (void 0 === o3 && (o3 = w), !(0, import_react_is.isValidElementType)(r3))
          return D(1, String(r3));
        var s3 = function() {
          return t3(r3, o3, Ae.apply(void 0, arguments));
        };
        return s3.withConfig = function(n3) {
          return e4(t3, r3, y({}, o3, {}, n3));
        }, s3.attrs = function(n3) {
          return e4(t3, r3, y({}, o3, { attrs: Array.prototype.concat(o3.attrs, n3).filter(Boolean) }));
        }, s3;
      }(Ye, e3);
    };
    ["a", "abbr", "address", "area", "article", "aside", "audio", "b", "base", "bdi", "bdo", "big", "blockquote", "body", "br", "button", "canvas", "caption", "cite", "code", "col", "colgroup", "data", "datalist", "dd", "del", "details", "dfn", "dialog", "div", "dl", "dt", "em", "embed", "fieldset", "figcaption", "figure", "footer", "form", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "i", "iframe", "img", "input", "ins", "kbd", "keygen", "label", "legend", "li", "link", "main", "map", "mark", "marquee", "menu", "menuitem", "meta", "meter", "nav", "noscript", "object", "ol", "optgroup", "option", "output", "p", "param", "picture", "pre", "progress", "q", "rp", "rt", "ruby", "s", "samp", "script", "section", "select", "small", "source", "span", "strong", "style", "sub", "summary", "sup", "table", "tbody", "td", "textarea", "tfoot", "th", "thead", "time", "title", "tr", "track", "u", "ul", "var", "video", "wbr", "circle", "clipPath", "defs", "ellipse", "foreignObject", "g", "image", "line", "linearGradient", "marker", "mask", "path", "pattern", "polygon", "polyline", "radialGradient", "rect", "stop", "svg", "text", "textPath", "tspan"].forEach(function(e3) {
      qe[e3] = qe(e3);
    });
    He = function() {
      function e3(e4, t4) {
        this.rules = e4, this.componentId = t4, this.isStatic = ne(e4), X.registerId(this.componentId + 1);
      }
      var t3 = e3.prototype;
      return t3.createStyles = function(e4, t4, n3, r3) {
        var o3 = r3(_e(this.rules, t4, n3, r3).join(""), ""), s3 = this.componentId + e4;
        n3.insertRules(s3, s3, o3);
      }, t3.removeStyles = function(e4, t4) {
        t4.clearRules(this.componentId + e4);
      }, t3.renderStyles = function(e4, t4, n3, r3) {
        e4 > 2 && X.registerId(this.componentId + e4), this.removeStyles(e4, n3), this.createStyles(e4, t4, n3, r3);
      }, e3;
    }();
    Ue = function() {
      function e3() {
        var e4 = this;
        this._emitSheetCSS = function() {
          var t4 = e4.instance.toString();
          if (!t4)
            return "";
          var n3 = Y();
          return "<style " + [n3 && 'nonce="' + n3 + '"', N + '="true"', 'data-styled-version="5.3.11"'].filter(Boolean).join(" ") + ">" + t4 + "</style>";
        }, this.getStyleTags = function() {
          return e4.sealed ? D(2) : e4._emitSheetCSS();
        }, this.getStyleElement = function() {
          var t4;
          if (e4.sealed)
            return D(2);
          var n3 = ((t4 = {})[N] = "", t4["data-styled-version"] = "5.3.11", t4.dangerouslySetInnerHTML = { __html: e4.instance.toString() }, t4), o3 = Y();
          return o3 && (n3.nonce = o3), [import_react.default.createElement("style", y({}, n3, { key: "sc-0-0" }))];
        }, this.seal = function() {
          e4.sealed = true;
        }, this.instance = new X({ isServer: true }), this.sealed = false;
      }
      var t3 = e3.prototype;
      return t3.collectStyles = function(e4) {
        return this.sealed ? D(2) : import_react.default.createElement(me, { sheet: this.instance }, e4);
      }, t3.interleaveWithNodeStream = function(e4) {
        return D(3);
      }, e3;
    }();
    Je = function(e3) {
      var t3 = import_react.default.forwardRef(function(t4, n3) {
        var o3 = (0, import_react.useContext)(Me), i3 = e3.defaultProps, a3 = Oe(t4, o3, i3);
        return void 0 === a3 && console.warn('[withTheme] You are not using a ThemeProvider nor passing a theme prop or a theme in defaultProps in component class "' + b(e3) + '"'), import_react.default.createElement(e3, y({}, t4, { theme: a3, ref: n3 }));
      });
      return (0, import_hoist_non_react_statics.default)(t3, e3), t3.displayName = "WithTheme(" + b(e3) + ")", t3;
    };
    Xe = function() {
      return (0, import_react.useContext)(Me);
    };
    Ze = { StyleSheet: X, masterSheet: de };
    "undefined" != typeof navigator && "ReactNative" === navigator.product && console.warn("It looks like you've imported 'styled-components' on React Native.\nPerhaps you're looking to import 'styled-components/native'?\nRead more about this at https://www.styled-components.com/docs/basics#react-native"), "undefined" != typeof window && (window["__styled-components-init__"] = window["__styled-components-init__"] || 0, 1 === window["__styled-components-init__"] && console.warn("It looks like there are several instances of 'styled-components' initialized in this application. This may cause dynamic styles to not render properly, errors during the rehydration process, a missing theme prop, and makes your application bigger without good reason.\n\nSee https://s-c.sh/2BAXzed for more info."), window["__styled-components-init__"] += 1);
    styled_components_browser_esm_default = qe;
  }
});

// node_modules/grommet-icons/utils.js
var require_utils = __commonJS({
  "node_modules/grommet-icons/utils.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.deepMerge = deepMerge3;
    exports["default"] = void 0;
    exports.iconPad = iconPad;
    exports.isObject = isObject3;
    exports.parseMetricToNum = void 0;
    exports.useScaleProps = useScaleProps;
    var _react = require_react();
    var _styledComponents = (init_styled_components_browser_esm(), __toCommonJS(styled_components_browser_esm_exports));
    function _extends154() {
      _extends154 = Object.assign ? Object.assign.bind() : function(target) {
        for (var i3 = 1; i3 < arguments.length; i3++) {
          var source = arguments[i3];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends154.apply(this, arguments);
    }
    function isObject3(item) {
      return item && typeof item === "object" && !Array.isArray(item);
    }
    function deepMerge3(target) {
      for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        sources[_key - 1] = arguments[_key];
      }
      if (!sources.length) {
        return target;
      }
      var output = _extends154({}, target);
      sources.forEach(function(source) {
        if (isObject3(source)) {
          Object.keys(source).forEach(function(key) {
            if (isObject3(source[key])) {
              if (!output[key]) {
                output[key] = _extends154({}, source[key]);
              } else {
                output[key] = deepMerge3(output[key], source[key]);
              }
            } else {
              output[key] = source[key];
            }
          });
        }
      });
      return output;
    }
    var parseMetricToNum3 = function parseMetricToNum4(string) {
      if (string === void 0) {
        string = "";
      }
      return parseFloat(string.match(/\d+(\.\d+)?/), 10);
    };
    exports.parseMetricToNum = parseMetricToNum3;
    function useScaleProps(props) {
      var _theme$icon;
      var theme = (0, _react.useContext)(_styledComponents.ThemeContext);
      var size = props.size;
      var result = {};
      if (theme != null && (_theme$icon = theme.icon) != null && _theme$icon.disableScaleDown) {
        var dimension = parseMetricToNum3(theme.icon.size[size] || size);
        if (dimension < 24)
          result.vectorEffect = "non-scaling-stroke";
      }
      return result;
    }
    var calculatePad = function calculatePad2(value, iconDimension) {
      return (value - iconDimension) / 2 + "px";
    };
    function iconPad(props) {
      var _theme$icon2, _theme$icon2$size, _theme$text, _theme$text$height, _theme$text2, _theme$text2$width;
      var height = props.height, _props$size = props.size, size = _props$size === void 0 ? "medium" : _props$size, width = props.width;
      var theme = (0, _react.useContext)(_styledComponents.ThemeContext);
      var iconDimension = parseMetricToNum3((theme == null ? void 0 : (_theme$icon2 = theme.icon) == null ? void 0 : (_theme$icon2$size = _theme$icon2.size) == null ? void 0 : _theme$icon2$size[size]) || size);
      var style = "";
      if (height && theme != null && (_theme$text = theme.text) != null && (_theme$text$height = _theme$text[height]) != null && _theme$text$height.height) {
        var lineHeight = parseMetricToNum3(theme.text[height].height);
        if (lineHeight > iconDimension) {
          var pad = calculatePad(lineHeight, iconDimension);
          style += "padding-top: " + pad + "; padding-bottom: " + pad + ";";
        }
      }
      if (width && theme != null && (_theme$text2 = theme.text) != null && (_theme$text2$width = _theme$text2[width]) != null && _theme$text2$width.height) {
        var desiredWidth = parseMetricToNum3(theme.text[width].height);
        if (desiredWidth > iconDimension) {
          var _pad = calculatePad(desiredWidth, iconDimension);
          style += "padding-left: " + _pad + "; padding-right: " + _pad + ";";
        }
      }
      return style;
    }
    var _default = {
      deepMerge: deepMerge3,
      isObject: isObject3,
      parseMetricToNum: parseMetricToNum3,
      iconPad,
      useScaleProps
    };
    exports["default"] = _default;
  }
});

// node_modules/grommet-icons/themes/base.js
var require_base = __commonJS({
  "node_modules/grommet-icons/themes/base.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.base = void 0;
    var base2 = {
      global: {
        colors: {
          icon: "#666666"
        }
      },
      icon: {
        size: {
          small: "12px",
          medium: "24px",
          large: "48px",
          xlarge: "96px"
        }
      }
    };
    exports.base = base2;
  }
});

// node_modules/grommet-icons/themes/index.js
var require_themes = __commonJS({
  "node_modules/grommet-icons/themes/index.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.base = void 0;
    var _base = require_base();
    exports.base = _base.base;
  }
});

// node_modules/grommet-icons/default-props.js
var require_default_props = __commonJS({
  "node_modules/grommet-icons/default-props.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.extendDefaultTheme = exports.defaultProps = void 0;
    var _utils = require_utils();
    var _themes = require_themes();
    var defaultProps3 = {
      theme: _themes.base
    };
    exports.defaultProps = defaultProps3;
    var extendDefaultTheme3 = function extendDefaultTheme4(theme) {
      defaultProps3.theme = (0, _utils.deepMerge)(_themes.base, theme);
    };
    exports.extendDefaultTheme = extendDefaultTheme3;
  }
});

// node_modules/grommet-icons/StyledIcon.js
var require_StyledIcon = __commonJS({
  "node_modules/grommet-icons/StyledIcon.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.StyledIcon = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _styledComponents = _interopRequireWildcard((init_styled_components_browser_esm(), __toCommonJS(styled_components_browser_esm_exports)));
    var _defaultProps = require_default_props();
    var _utils = require_utils();
    var _excluded100 = ["a11yTitle", "color", "size", "theme"];
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _extends154() {
      _extends154 = Object.assign ? Object.assign.bind() : function(target) {
        for (var i3 = 1; i3 < arguments.length; i3++) {
          var source = arguments[i3];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends154.apply(this, arguments);
    }
    function _objectWithoutPropertiesLoose97(source, excluded) {
      if (source == null)
        return {};
      var target = {};
      var sourceKeys = Object.keys(source);
      var key, i3;
      for (i3 = 0; i3 < sourceKeys.length; i3++) {
        key = sourceKeys[i3];
        if (excluded.indexOf(key) >= 0)
          continue;
        target[key] = source[key];
      }
      return target;
    }
    var normalizeColor3 = function normalizeColor4(color, theme, dark2) {
      var colorSpec = theme.global && theme.global.colors[color] !== void 0 ? theme.global.colors[color] : color;
      var result = colorSpec;
      if (colorSpec) {
        if ((dark2 === true || dark2 === void 0 && theme.dark) && colorSpec.dark !== void 0) {
          result = colorSpec.dark;
        } else if ((dark2 === false || !theme.dark) && colorSpec.light !== void 0) {
          result = colorSpec.light;
        }
      }
      if (result && theme.global && theme.global.colors[result] !== void 0) {
        result = normalizeColor4(result, theme, dark2);
      }
      return result;
    };
    var colorStyle4 = function colorStyle5(name, value, theme, required) {
      return (0, _styledComponents.css)(["", ":", ";"], name, normalizeColor3(value, theme, required));
    };
    var colorCss = (0, _styledComponents.css)(["", " ", " g{fill:inherit;stroke:inherit;}*:not([stroke]){&[fill='none']{stroke-width:0;}}*[stroke*='#'],*[STROKE*='#']{stroke:inherit;fill:none;}*[fill-rule],*[FILL-RULE],*[fill*='#'],*[FILL*='#']{fill:inherit;stroke:none;}"], function(props) {
      return colorStyle4("fill", props.color || props.theme.global.colors.icon, props.theme);
    }, function(props) {
      return colorStyle4("stroke", props.color || props.theme.global.colors.icon, props.theme);
    });
    var IconInner = (0, _react.forwardRef)(function(_ref, ref) {
      var a11yTitle = _ref.a11yTitle, color = _ref.color, size = _ref.size, theme = _ref.theme, rest = _objectWithoutPropertiesLoose97(_ref, _excluded100);
      return _react["default"].createElement("svg", _extends154({
        ref,
        "aria-label": a11yTitle
      }, rest));
    });
    IconInner.displayName = "Icon";
    var StyledIcon3 = (0, _styledComponents["default"])(IconInner).withConfig({
      // don't let height attribute leak to DOM
      // https://styled-components.com/docs/api#shouldforwardprop
      shouldForwardProp: function shouldForwardProp5(prop) {
        return !["height", "width"].includes(prop);
      }
    }).withConfig({
      displayName: "StyledIcon",
      componentId: "sc-ofa7kd-0"
    })(["display:inline-block;flex:0 0 auto;", " ", " ", " ", ""], function(_ref2) {
      var _ref2$size = _ref2.size, size = _ref2$size === void 0 ? "medium" : _ref2$size, theme = _ref2.theme, viewBox = _ref2.viewBox;
      var _split = (viewBox || "0 0 24 24").split(" "), w3 = _split[2], h2 = _split[3];
      var scale = w3 / h2;
      var dimension = (0, _utils.parseMetricToNum)(theme.icon.size[size] || size);
      if (w3 < h2) {
        return "\n      width: " + dimension + "px;\n      height: " + dimension / scale + "px;\n    ";
      }
      if (h2 < w3) {
        return "\n      width: " + dimension * scale + "px;\n      height: " + dimension + "px;\n    ";
      }
      return "\n      width: " + dimension + "px;\n      height: " + dimension + "px;\n    ";
    }, function(_ref3) {
      var color = _ref3.color;
      return color !== "plain" && colorCss;
    }, function(props) {
      return (props.height || props.width) && (0, _utils.iconPad)(props);
    }, function(_ref4) {
      var theme = _ref4.theme;
      return theme && theme.icon.extend;
    });
    exports.StyledIcon = StyledIcon3;
    StyledIcon3.defaultProps = {};
    Object.setPrototypeOf(StyledIcon3.defaultProps, _defaultProps.defaultProps);
  }
});

// node_modules/grommet-icons/icons/Actions.js
var require_Actions = __commonJS({
  "node_modules/grommet-icons/icons/Actions.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.Actions = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _StyledIcon = require_StyledIcon();
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _extends154() {
      _extends154 = Object.assign ? Object.assign.bind() : function(target) {
        for (var i3 = 1; i3 < arguments.length; i3++) {
          var source = arguments[i3];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends154.apply(this, arguments);
    }
    var Actions2 = (0, _react.forwardRef)(function(props, ref) {
      return _react["default"].createElement(_StyledIcon.StyledIcon, _extends154({
        ref,
        viewBox: "0 0 24 24",
        a11yTitle: "Actions"
      }, props), _react["default"].createElement("path", {
        fill: "none",
        stroke: "#000",
        strokeWidth: "2",
        d: "M12 17.5a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11zm0-11V1m0 22v-5.5M1 12h5.5m11 0H23M4.437 4.437l4.125 4.125m6.876 6.876 4.124 4.124m0-15.125-4.125 4.125m-6.874 6.876-4.126 4.124"
      }));
    });
    exports.Actions = Actions2;
    Actions2.displayName = "Actions";
  }
});

// node_modules/grommet-icons/icons/AssistListening.js
var require_AssistListening = __commonJS({
  "node_modules/grommet-icons/icons/AssistListening.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.AssistListening = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _StyledIcon = require_StyledIcon();
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _extends154() {
      _extends154 = Object.assign ? Object.assign.bind() : function(target) {
        for (var i3 = 1; i3 < arguments.length; i3++) {
          var source = arguments[i3];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends154.apply(this, arguments);
    }
    var AssistListening2 = (0, _react.forwardRef)(function(props, ref) {
      return _react["default"].createElement(_StyledIcon.StyledIcon, _extends154({
        ref,
        viewBox: "0 0 24 24",
        a11yTitle: "AssistListening"
      }, props), _react["default"].createElement("path", {
        fill: "none",
        stroke: "#000",
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "2",
        d: "M11 21c.757.667 1.424 1 2 1 2 0 3-1 3-3 0-1.333.667-2.667 2-4 1.267-1.267 2-3.067 2-5a7 7 0 0 0-14 0m11 0a4 4 0 1 0-8 0M3 20l5-6 1 4 5-6"
      }));
    });
    exports.AssistListening = AssistListening2;
    AssistListening2.displayName = "AssistListening";
  }
});

// node_modules/grommet-icons/icons/CircleInformation.js
var require_CircleInformation = __commonJS({
  "node_modules/grommet-icons/icons/CircleInformation.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.CircleInformation = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _StyledIcon = require_StyledIcon();
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _extends154() {
      _extends154 = Object.assign ? Object.assign.bind() : function(target) {
        for (var i3 = 1; i3 < arguments.length; i3++) {
          var source = arguments[i3];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends154.apply(this, arguments);
    }
    var CircleInformation2 = (0, _react.forwardRef)(function(props, ref) {
      return _react["default"].createElement(_StyledIcon.StyledIcon, _extends154({
        ref,
        viewBox: "0 0 24 24",
        a11yTitle: "CircleInformation"
      }, props), _react["default"].createElement("path", {
        fill: "none",
        stroke: "#000",
        strokeWidth: "2",
        d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10zm0-12v8m0-12v2"
      }));
    });
    exports.CircleInformation = CircleInformation2;
    CircleInformation2.displayName = "CircleInformation";
  }
});

// node_modules/grommet-icons/icons/ClosedCaption.js
var require_ClosedCaption = __commonJS({
  "node_modules/grommet-icons/icons/ClosedCaption.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.ClosedCaption = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _StyledIcon = require_StyledIcon();
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _extends154() {
      _extends154 = Object.assign ? Object.assign.bind() : function(target) {
        for (var i3 = 1; i3 < arguments.length; i3++) {
          var source = arguments[i3];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends154.apply(this, arguments);
    }
    var ClosedCaption2 = (0, _react.forwardRef)(function(props, ref) {
      return _react["default"].createElement(_StyledIcon.StyledIcon, _extends154({
        ref,
        viewBox: "0 0 24 24",
        a11yTitle: "ClosedCaption"
      }, props), _react["default"].createElement("path", {
        fill: "none",
        stroke: "#000",
        strokeWidth: "2",
        d: "M1 12c0-7 1.5-8 11-8s11 1 11 8-1.5 8-11 8-11-1-11-8zm4.25 2c0 1.5.75 2 2.5 2s2.5-.5 2.5-2h-.271c0 1.25-1 2-2.229 2-1.23 0-2.229-.75-2.229-2v-4C5.5 8.75 6.5 8 7.75 8s2.25.75 2.229 2h.271c0-1.25-1.021-2-2.5-2s-2.5.75-2.5 2v4zm8 0c0 1.5.75 2 2.5 2s2.5-.5 2.5-2h-.271c0 1.25-1 2-2.229 2-1.23 0-2.229-.75-2.229-2v-4c-.021-1.25.979-2 2.229-2s2.25.75 2.229 2h.271c0-1.25-1.021-2-2.5-2s-2.5.75-2.5 2v4z"
      }));
    });
    exports.ClosedCaption = ClosedCaption2;
    ClosedCaption2.displayName = "ClosedCaption";
  }
});

// node_modules/grommet-icons/icons/Expand.js
var require_Expand = __commonJS({
  "node_modules/grommet-icons/icons/Expand.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.Expand = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _StyledIcon = require_StyledIcon();
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _extends154() {
      _extends154 = Object.assign ? Object.assign.bind() : function(target) {
        for (var i3 = 1; i3 < arguments.length; i3++) {
          var source = arguments[i3];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends154.apply(this, arguments);
    }
    var Expand2 = (0, _react.forwardRef)(function(props, ref) {
      return _react["default"].createElement(_StyledIcon.StyledIcon, _extends154({
        ref,
        viewBox: "0 0 24 24",
        a11yTitle: "Expand"
      }, props), _react["default"].createElement("path", {
        fill: "none",
        stroke: "#000",
        strokeWidth: "2",
        d: "m10 14-8 8m-1-7v8h8M22 2l-8 8m1-9h8v8"
      }));
    });
    exports.Expand = Expand2;
    Expand2.displayName = "Expand";
  }
});

// node_modules/grommet-icons/icons/FormClose.js
var require_FormClose = __commonJS({
  "node_modules/grommet-icons/icons/FormClose.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.FormClose = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _StyledIcon = require_StyledIcon();
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _extends154() {
      _extends154 = Object.assign ? Object.assign.bind() : function(target) {
        for (var i3 = 1; i3 < arguments.length; i3++) {
          var source = arguments[i3];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends154.apply(this, arguments);
    }
    var FormClose4 = (0, _react.forwardRef)(function(props, ref) {
      return _react["default"].createElement(_StyledIcon.StyledIcon, _extends154({
        ref,
        viewBox: "0 0 24 24",
        a11yTitle: "FormClose"
      }, props), _react["default"].createElement("path", {
        fill: "none",
        stroke: "#000",
        strokeWidth: "2",
        d: "m7 7 10 10M7 17 17 7"
      }));
    });
    exports.FormClose = FormClose4;
    FormClose4.displayName = "FormClose";
  }
});

// node_modules/grommet-icons/icons/FormDown.js
var require_FormDown = __commonJS({
  "node_modules/grommet-icons/icons/FormDown.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.FormDown = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _StyledIcon = require_StyledIcon();
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _extends154() {
      _extends154 = Object.assign ? Object.assign.bind() : function(target) {
        for (var i3 = 1; i3 < arguments.length; i3++) {
          var source = arguments[i3];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends154.apply(this, arguments);
    }
    var FormDown2 = (0, _react.forwardRef)(function(props, ref) {
      return _react["default"].createElement(_StyledIcon.StyledIcon, _extends154({
        ref,
        viewBox: "0 0 24 24",
        a11yTitle: "FormDown"
      }, props), _react["default"].createElement("path", {
        fill: "none",
        stroke: "#000",
        strokeWidth: "2",
        d: "m18 9-6 6-6-6"
      }));
    });
    exports.FormDown = FormDown2;
    FormDown2.displayName = "FormDown";
  }
});

// node_modules/grommet-icons/icons/FormNext.js
var require_FormNext = __commonJS({
  "node_modules/grommet-icons/icons/FormNext.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.FormNext = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _StyledIcon = require_StyledIcon();
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _extends154() {
      _extends154 = Object.assign ? Object.assign.bind() : function(target) {
        for (var i3 = 1; i3 < arguments.length; i3++) {
          var source = arguments[i3];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends154.apply(this, arguments);
    }
    var FormNext2 = (0, _react.forwardRef)(function(props, ref) {
      return _react["default"].createElement(_StyledIcon.StyledIcon, _extends154({
        ref,
        viewBox: "0 0 24 24",
        a11yTitle: "FormNext"
      }, props), _react["default"].createElement("path", {
        fill: "none",
        stroke: "#000",
        strokeWidth: "2",
        d: "m9 6 6 6-6 6"
      }));
    });
    exports.FormNext = FormNext2;
    FormNext2.displayName = "FormNext";
  }
});

// node_modules/grommet-icons/icons/FormPrevious.js
var require_FormPrevious = __commonJS({
  "node_modules/grommet-icons/icons/FormPrevious.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.FormPrevious = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _StyledIcon = require_StyledIcon();
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _extends154() {
      _extends154 = Object.assign ? Object.assign.bind() : function(target) {
        for (var i3 = 1; i3 < arguments.length; i3++) {
          var source = arguments[i3];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends154.apply(this, arguments);
    }
    var FormPrevious2 = (0, _react.forwardRef)(function(props, ref) {
      return _react["default"].createElement(_StyledIcon.StyledIcon, _extends154({
        ref,
        viewBox: "0 0 24 24",
        a11yTitle: "FormPrevious"
      }, props), _react["default"].createElement("path", {
        fill: "none",
        stroke: "#000",
        strokeWidth: "2",
        d: "m15 6-6 6 6 6"
      }));
    });
    exports.FormPrevious = FormPrevious2;
    FormPrevious2.displayName = "FormPrevious";
  }
});

// node_modules/grommet-icons/icons/FormUp.js
var require_FormUp = __commonJS({
  "node_modules/grommet-icons/icons/FormUp.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.FormUp = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _StyledIcon = require_StyledIcon();
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _extends154() {
      _extends154 = Object.assign ? Object.assign.bind() : function(target) {
        for (var i3 = 1; i3 < arguments.length; i3++) {
          var source = arguments[i3];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends154.apply(this, arguments);
    }
    var FormUp2 = (0, _react.forwardRef)(function(props, ref) {
      return _react["default"].createElement(_StyledIcon.StyledIcon, _extends154({
        ref,
        viewBox: "0 0 24 24",
        a11yTitle: "FormUp"
      }, props), _react["default"].createElement("path", {
        fill: "none",
        stroke: "#000",
        strokeWidth: "2",
        d: "m18 15-6-6-6 6"
      }));
    });
    exports.FormUp = FormUp2;
    FormUp2.displayName = "FormUp";
  }
});

// node_modules/grommet-icons/icons/Next.js
var require_Next = __commonJS({
  "node_modules/grommet-icons/icons/Next.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.Next = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _StyledIcon = require_StyledIcon();
    var _utils = require_utils();
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _extends154() {
      _extends154 = Object.assign ? Object.assign.bind() : function(target) {
        for (var i3 = 1; i3 < arguments.length; i3++) {
          var source = arguments[i3];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends154.apply(this, arguments);
    }
    var Next3 = (0, _react.forwardRef)(function(props, ref) {
      var scaleProps = (0, _utils.useScaleProps)(props);
      return _react["default"].createElement(_StyledIcon.StyledIcon, _extends154({
        ref,
        viewBox: "0 0 24 24",
        a11yTitle: "Next"
      }, props), _react["default"].createElement("path", _extends154({
        fill: "none",
        stroke: "#000",
        strokeWidth: "2",
        d: "m7 2 10 10L7 22"
      }, scaleProps)));
    });
    exports.Next = Next3;
    Next3.displayName = "Next";
  }
});

// node_modules/grommet-icons/icons/Pause.js
var require_Pause = __commonJS({
  "node_modules/grommet-icons/icons/Pause.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.Pause = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _StyledIcon = require_StyledIcon();
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _extends154() {
      _extends154 = Object.assign ? Object.assign.bind() : function(target) {
        for (var i3 = 1; i3 < arguments.length; i3++) {
          var source = arguments[i3];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends154.apply(this, arguments);
    }
    var Pause2 = (0, _react.forwardRef)(function(props, ref) {
      return _react["default"].createElement(_StyledIcon.StyledIcon, _extends154({
        ref,
        viewBox: "0 0 24 24",
        a11yTitle: "Pause"
      }, props), _react["default"].createElement("path", {
        fill: "none",
        stroke: "#000",
        strokeWidth: "2",
        d: "M3 21h6V3H3v18zm12 0h6V3h-6v18z"
      }));
    });
    exports.Pause = Pause2;
    Pause2.displayName = "Pause";
  }
});

// node_modules/grommet-icons/icons/Play.js
var require_Play = __commonJS({
  "node_modules/grommet-icons/icons/Play.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.Play = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _StyledIcon = require_StyledIcon();
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _extends154() {
      _extends154 = Object.assign ? Object.assign.bind() : function(target) {
        for (var i3 = 1; i3 < arguments.length; i3++) {
          var source = arguments[i3];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends154.apply(this, arguments);
    }
    var Play2 = (0, _react.forwardRef)(function(props, ref) {
      return _react["default"].createElement(_StyledIcon.StyledIcon, _extends154({
        ref,
        viewBox: "0 0 24 24",
        a11yTitle: "Play"
      }, props), _react["default"].createElement("path", {
        fill: "none",
        stroke: "#000",
        strokeWidth: "2",
        d: "m3 22 18-10L3 2z"
      }));
    });
    exports.Play = Play2;
    Play2.displayName = "Play";
  }
});

// node_modules/grommet-icons/icons/FormPin.js
var require_FormPin = __commonJS({
  "node_modules/grommet-icons/icons/FormPin.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.FormPin = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _StyledIcon = require_StyledIcon();
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _extends154() {
      _extends154 = Object.assign ? Object.assign.bind() : function(target) {
        for (var i3 = 1; i3 < arguments.length; i3++) {
          var source = arguments[i3];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends154.apply(this, arguments);
    }
    var FormPin2 = (0, _react.forwardRef)(function(props, ref) {
      return _react["default"].createElement(_StyledIcon.StyledIcon, _extends154({
        ref,
        viewBox: "0 0 24 24",
        a11yTitle: "FormPin"
      }, props), _react["default"].createElement("path", {
        fill: "none",
        stroke: "#000",
        strokeWidth: "2",
        d: "m4 19 4.455-4.454M12.273 5 18 10.727m-4.454-4.454L9.727 10.09s-2.545-.636-4.454 1.273l6.363 6.363c1.91-1.909 1.273-4.454 1.273-4.454l3.818-3.818-3.181-3.182Z"
      }));
    });
    exports.FormPin = FormPin2;
    FormPin2.displayName = "FormPin";
  }
});

// node_modules/grommet-icons/icons/Previous.js
var require_Previous = __commonJS({
  "node_modules/grommet-icons/icons/Previous.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.Previous = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _StyledIcon = require_StyledIcon();
    var _utils = require_utils();
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _extends154() {
      _extends154 = Object.assign ? Object.assign.bind() : function(target) {
        for (var i3 = 1; i3 < arguments.length; i3++) {
          var source = arguments[i3];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends154.apply(this, arguments);
    }
    var Previous3 = (0, _react.forwardRef)(function(props, ref) {
      var scaleProps = (0, _utils.useScaleProps)(props);
      return _react["default"].createElement(_StyledIcon.StyledIcon, _extends154({
        ref,
        viewBox: "0 0 24 24",
        a11yTitle: "Previous"
      }, props), _react["default"].createElement("path", _extends154({
        fill: "none",
        stroke: "#000",
        strokeWidth: "2",
        d: "M17 2 7 12l10 10"
      }, scaleProps)));
    });
    exports.Previous = Previous3;
    Previous3.displayName = "Previous";
  }
});

// node_modules/grommet-icons/icons/StatusCriticalSmall.js
var require_StatusCriticalSmall = __commonJS({
  "node_modules/grommet-icons/icons/StatusCriticalSmall.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.StatusCriticalSmall = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _StyledIcon = require_StyledIcon();
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _extends154() {
      _extends154 = Object.assign ? Object.assign.bind() : function(target) {
        for (var i3 = 1; i3 < arguments.length; i3++) {
          var source = arguments[i3];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends154.apply(this, arguments);
    }
    var StatusCriticalSmall2 = (0, _react.forwardRef)(function(props, ref) {
      return _react["default"].createElement(_StyledIcon.StyledIcon, _extends154({
        ref,
        viewBox: "0 0 12 12",
        a11yTitle: "Status is critical"
      }, props), _react["default"].createElement("path", {
        fillRule: "evenodd",
        stroke: "#000",
        d: "M6.712 1.263a1.005 1.005 0 0 0-1.424 0L1.263 5.288a1.005 1.005 0 0 0 0 1.424l4.025 4.025a1.005 1.005 0 0 0 1.424 0l4.025-4.025a1.005 1.005 0 0 0 0-1.424L6.712 1.263z"
      }));
    });
    exports.StatusCriticalSmall = StatusCriticalSmall2;
    StatusCriticalSmall2.displayName = "StatusCriticalSmall";
  }
});

// node_modules/grommet-icons/icons/StatusGoodSmall.js
var require_StatusGoodSmall = __commonJS({
  "node_modules/grommet-icons/icons/StatusGoodSmall.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.StatusGoodSmall = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _StyledIcon = require_StyledIcon();
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _extends154() {
      _extends154 = Object.assign ? Object.assign.bind() : function(target) {
        for (var i3 = 1; i3 < arguments.length; i3++) {
          var source = arguments[i3];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends154.apply(this, arguments);
    }
    var StatusGoodSmall2 = (0, _react.forwardRef)(function(props, ref) {
      return _react["default"].createElement(_StyledIcon.StyledIcon, _extends154({
        ref,
        viewBox: "0 0 12 12",
        a11yTitle: "Status is okay"
      }, props), _react["default"].createElement("circle", {
        cx: "6",
        cy: "6",
        r: "5",
        fillRule: "evenodd",
        stroke: "#000"
      }));
    });
    exports.StatusGoodSmall = StatusGoodSmall2;
    StatusGoodSmall2.displayName = "StatusGoodSmall";
  }
});

// node_modules/grommet-icons/icons/StatusWarningSmall.js
var require_StatusWarningSmall = __commonJS({
  "node_modules/grommet-icons/icons/StatusWarningSmall.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.StatusWarningSmall = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _StyledIcon = require_StyledIcon();
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _extends154() {
      _extends154 = Object.assign ? Object.assign.bind() : function(target) {
        for (var i3 = 1; i3 < arguments.length; i3++) {
          var source = arguments[i3];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends154.apply(this, arguments);
    }
    var StatusWarningSmall2 = (0, _react.forwardRef)(function(props, ref) {
      return _react["default"].createElement(_StyledIcon.StyledIcon, _extends154({
        ref,
        viewBox: "0 0 12 12",
        a11yTitle: "Status is warning"
      }, props), _react["default"].createElement("path", {
        fillRule: "evenodd",
        stroke: "#000",
        strokeLinejoin: "round",
        d: "m6 1 5 9H1z"
      }));
    });
    exports.StatusWarningSmall = StatusWarningSmall2;
    StatusWarningSmall2.displayName = "StatusWarningSmall";
  }
});

// node_modules/grommet-icons/icons/StatusUnknownSmall.js
var require_StatusUnknownSmall = __commonJS({
  "node_modules/grommet-icons/icons/StatusUnknownSmall.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.StatusUnknownSmall = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _StyledIcon = require_StyledIcon();
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _extends154() {
      _extends154 = Object.assign ? Object.assign.bind() : function(target) {
        for (var i3 = 1; i3 < arguments.length; i3++) {
          var source = arguments[i3];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends154.apply(this, arguments);
    }
    var StatusUnknownSmall2 = (0, _react.forwardRef)(function(props, ref) {
      return _react["default"].createElement(_StyledIcon.StyledIcon, _extends154({
        ref,
        viewBox: "0 0 12 12",
        a11yTitle: "Status is unknown"
      }, props), _react["default"].createElement("rect", {
        width: "10",
        height: "10",
        x: "1",
        y: "1",
        fillRule: "evenodd",
        stroke: "#000",
        rx: "1"
      }));
    });
    exports.StatusUnknownSmall = StatusUnknownSmall2;
    StatusUnknownSmall2.displayName = "StatusUnknownSmall";
  }
});

// node_modules/grommet-icons/icons/Subtract.js
var require_Subtract = __commonJS({
  "node_modules/grommet-icons/icons/Subtract.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.Subtract = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _StyledIcon = require_StyledIcon();
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _extends154() {
      _extends154 = Object.assign ? Object.assign.bind() : function(target) {
        for (var i3 = 1; i3 < arguments.length; i3++) {
          var source = arguments[i3];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends154.apply(this, arguments);
    }
    var Subtract2 = (0, _react.forwardRef)(function(props, ref) {
      return _react["default"].createElement(_StyledIcon.StyledIcon, _extends154({
        ref,
        viewBox: "0 0 24 24",
        a11yTitle: "Subtract"
      }, props), _react["default"].createElement("path", {
        fill: "none",
        stroke: "#000",
        strokeWidth: "2",
        d: "M2 12h20"
      }));
    });
    exports.Subtract = Subtract2;
    Subtract2.displayName = "Subtract";
  }
});

// node_modules/grommet-icons/icons/Volume.js
var require_Volume = __commonJS({
  "node_modules/grommet-icons/icons/Volume.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.Volume = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _StyledIcon = require_StyledIcon();
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _extends154() {
      _extends154 = Object.assign ? Object.assign.bind() : function(target) {
        for (var i3 = 1; i3 < arguments.length; i3++) {
          var source = arguments[i3];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends154.apply(this, arguments);
    }
    var Volume2 = (0, _react.forwardRef)(function(props, ref) {
      return _react["default"].createElement(_StyledIcon.StyledIcon, _extends154({
        ref,
        viewBox: "0 0 24 24",
        a11yTitle: "Volume"
      }, props), _react["default"].createElement("path", {
        fill: "none",
        stroke: "#000",
        strokeWidth: "2",
        d: "M15 16a4 4 0 0 0 0-8m0 12c5 0 8-3.589 8-8s-3.589-8-8-8M1 12V8h5l6-5v18l-6-5H1v-4"
      }));
    });
    exports.Volume = Volume2;
    Volume2.displayName = "Volume";
  }
});

// node_modules/grommet-icons/icons/VolumeLow.js
var require_VolumeLow = __commonJS({
  "node_modules/grommet-icons/icons/VolumeLow.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.VolumeLow = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _StyledIcon = require_StyledIcon();
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _extends154() {
      _extends154 = Object.assign ? Object.assign.bind() : function(target) {
        for (var i3 = 1; i3 < arguments.length; i3++) {
          var source = arguments[i3];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends154.apply(this, arguments);
    }
    var VolumeLow2 = (0, _react.forwardRef)(function(props, ref) {
      return _react["default"].createElement(_StyledIcon.StyledIcon, _extends154({
        ref,
        viewBox: "0 0 24 24",
        a11yTitle: "VolumeLow"
      }, props), _react["default"].createElement("path", {
        fill: "none",
        stroke: "#000",
        strokeWidth: "2",
        d: "M1 8v8h5.099L12 21V3L6 8H1zm14 8a4 4 0 1 0 0-8"
      }));
    });
    exports.VolumeLow = VolumeLow2;
    VolumeLow2.displayName = "VolumeLow";
  }
});

// node_modules/grommet-icons/icons/Checkmark.js
var require_Checkmark = __commonJS({
  "node_modules/grommet-icons/icons/Checkmark.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.Checkmark = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _StyledIcon = require_StyledIcon();
    var _utils = require_utils();
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _extends154() {
      _extends154 = Object.assign ? Object.assign.bind() : function(target) {
        for (var i3 = 1; i3 < arguments.length; i3++) {
          var source = arguments[i3];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends154.apply(this, arguments);
    }
    var Checkmark2 = (0, _react.forwardRef)(function(props, ref) {
      var scaleProps = (0, _utils.useScaleProps)(props);
      return _react["default"].createElement(_StyledIcon.StyledIcon, _extends154({
        ref,
        viewBox: "0 0 24 24",
        a11yTitle: "Checkmark"
      }, props), _react["default"].createElement("path", _extends154({
        fill: "none",
        stroke: "#000",
        strokeWidth: "2",
        d: "m2 14 7 6L22 4"
      }, scaleProps)));
    });
    exports.Checkmark = Checkmark2;
    Checkmark2.displayName = "Checkmark";
  }
});

// node_modules/grommet-icons/icons/Filter.js
var require_Filter = __commonJS({
  "node_modules/grommet-icons/icons/Filter.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.Filter = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _StyledIcon = require_StyledIcon();
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _extends154() {
      _extends154 = Object.assign ? Object.assign.bind() : function(target) {
        for (var i3 = 1; i3 < arguments.length; i3++) {
          var source = arguments[i3];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends154.apply(this, arguments);
    }
    var Filter2 = (0, _react.forwardRef)(function(props, ref) {
      return _react["default"].createElement(_StyledIcon.StyledIcon, _extends154({
        ref,
        viewBox: "0 0 24 24",
        a11yTitle: "Filter"
      }, props), _react["default"].createElement("path", {
        fill: "none",
        stroke: "#000",
        strokeWidth: "2",
        d: "m3 6 7 7v8h4v-8l7-7V3H3z"
      }));
    });
    exports.Filter = Filter2;
    Filter2.displayName = "Filter";
  }
});

// node_modules/grommet-icons/icons/Descend.js
var require_Descend = __commonJS({
  "node_modules/grommet-icons/icons/Descend.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.Descend = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _StyledIcon = require_StyledIcon();
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _extends154() {
      _extends154 = Object.assign ? Object.assign.bind() : function(target) {
        for (var i3 = 1; i3 < arguments.length; i3++) {
          var source = arguments[i3];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends154.apply(this, arguments);
    }
    var Descend2 = (0, _react.forwardRef)(function(props, ref) {
      return _react["default"].createElement(_StyledIcon.StyledIcon, _extends154({
        ref,
        viewBox: "0 0 24 24",
        a11yTitle: "Descend"
      }, props), _react["default"].createElement("path", {
        fill: "none",
        stroke: "#000",
        strokeWidth: "2",
        d: "m2 16 6 6 6-6M11 3h11M11 7h8m-8 4h5M8 22V2"
      }));
    });
    exports.Descend = Descend2;
    Descend2.displayName = "Descend";
  }
});

// node_modules/grommet-icons/icons/Search.js
var require_Search = __commonJS({
  "node_modules/grommet-icons/icons/Search.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.Search = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _StyledIcon = require_StyledIcon();
    var _utils = require_utils();
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _extends154() {
      _extends154 = Object.assign ? Object.assign.bind() : function(target) {
        for (var i3 = 1; i3 < arguments.length; i3++) {
          var source = arguments[i3];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends154.apply(this, arguments);
    }
    var Search3 = (0, _react.forwardRef)(function(props, ref) {
      var scaleProps = (0, _utils.useScaleProps)(props);
      return _react["default"].createElement(_StyledIcon.StyledIcon, _extends154({
        ref,
        viewBox: "0 0 24 24",
        a11yTitle: "Search"
      }, props), _react["default"].createElement("path", _extends154({
        fill: "none",
        stroke: "#000",
        strokeWidth: "2",
        d: "m15 15 7 7-7-7zm-5.5 2a7.5 7.5 0 1 0 0-15 7.5 7.5 0 0 0 0 15z"
      }, scaleProps)));
    });
    exports.Search = Search3;
    Search3.displayName = "Search";
  }
});

// node_modules/grommet-icons/icons/FormSearch.js
var require_FormSearch = __commonJS({
  "node_modules/grommet-icons/icons/FormSearch.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.FormSearch = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _StyledIcon = require_StyledIcon();
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _extends154() {
      _extends154 = Object.assign ? Object.assign.bind() : function(target) {
        for (var i3 = 1; i3 < arguments.length; i3++) {
          var source = arguments[i3];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends154.apply(this, arguments);
    }
    var FormSearch2 = (0, _react.forwardRef)(function(props, ref) {
      return _react["default"].createElement(_StyledIcon.StyledIcon, _extends154({
        ref,
        viewBox: "0 0 24 24",
        a11yTitle: "FormSearch"
      }, props), _react["default"].createElement("path", {
        fill: "none",
        stroke: "#000",
        strokeWidth: "2",
        d: "M13.8 13.8 18 18l-4.2-4.2zM10.5 15a4.5 4.5 0 1 0 0-9 4.5 4.5 0 0 0 0 9z"
      }));
    });
    exports.FormSearch = FormSearch2;
    FormSearch2.displayName = "FormSearch";
  }
});

// node_modules/grommet-icons/icons/Blank.js
var require_Blank = __commonJS({
  "node_modules/grommet-icons/icons/Blank.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.Blank = void 0;
    var _react = _interopRequireDefault(require_react());
    var _StyledIcon = require_StyledIcon();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _extends154() {
      _extends154 = Object.assign ? Object.assign.bind() : function(target) {
        for (var i3 = 1; i3 < arguments.length; i3++) {
          var source = arguments[i3];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends154.apply(this, arguments);
    }
    var Blank2 = function Blank3(props) {
      return _react["default"].createElement(_StyledIcon.StyledIcon, _extends154({
        viewBox: "0 0 24 24",
        "aria-hidden": true
      }, props));
    };
    exports.Blank = Blank2;
  }
});

// node_modules/grommet-icons/icons/Splits.js
var require_Splits = __commonJS({
  "node_modules/grommet-icons/icons/Splits.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.Splits = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _StyledIcon = require_StyledIcon();
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _extends154() {
      _extends154 = Object.assign ? Object.assign.bind() : function(target) {
        for (var i3 = 1; i3 < arguments.length; i3++) {
          var source = arguments[i3];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends154.apply(this, arguments);
    }
    var Splits2 = (0, _react.forwardRef)(function(props, ref) {
      return _react["default"].createElement(_StyledIcon.StyledIcon, _extends154({
        ref,
        viewBox: "0 0 24 24",
        a11yTitle: "Splits"
      }, props), _react["default"].createElement("path", {
        fill: "none",
        stroke: "#000",
        strokeWidth: "2",
        d: "M1 22h22V2H1v20zM8 2v20V2zm8 0v20V2z"
      }));
    });
    exports.Splits = Splits2;
    Splits2.displayName = "Splits";
  }
});

// node_modules/grommet-icons/icons/Calendar.js
var require_Calendar = __commonJS({
  "node_modules/grommet-icons/icons/Calendar.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.Calendar = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _StyledIcon = require_StyledIcon();
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _extends154() {
      _extends154 = Object.assign ? Object.assign.bind() : function(target) {
        for (var i3 = 1; i3 < arguments.length; i3++) {
          var source = arguments[i3];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends154.apply(this, arguments);
    }
    var Calendar2 = (0, _react.forwardRef)(function(props, ref) {
      return _react["default"].createElement(_StyledIcon.StyledIcon, _extends154({
        ref,
        viewBox: "0 0 24 24",
        a11yTitle: "Calendar"
      }, props), _react["default"].createElement("path", {
        fill: "none",
        stroke: "#000",
        strokeWidth: "2",
        d: "M2 5h20v17H2V5zm16 0V1M6 5V1m-4 9h20"
      }));
    });
    exports.Calendar = Calendar2;
    Calendar2.displayName = "Calendar";
  }
});

// node_modules/grommet-icons/icons/CircleAlert.js
var require_CircleAlert = __commonJS({
  "node_modules/grommet-icons/icons/CircleAlert.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.CircleAlert = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _StyledIcon = require_StyledIcon();
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _extends154() {
      _extends154 = Object.assign ? Object.assign.bind() : function(target) {
        for (var i3 = 1; i3 < arguments.length; i3++) {
          var source = arguments[i3];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends154.apply(this, arguments);
    }
    var CircleAlert2 = (0, _react.forwardRef)(function(props, ref) {
      return _react["default"].createElement(_StyledIcon.StyledIcon, _extends154({
        ref,
        viewBox: "0 0 24 24",
        a11yTitle: "CircleAlert"
      }, props), _react["default"].createElement("path", {
        stroke: "#000",
        strokeWidth: "2",
        fill: "none",
        d: "M12 14V6m0 12v-2m0-14C6.477 2 2 6.477 2 12s4.477 10 10 10 10-4.477 10-10S17.523 2 12 2z"
      }));
    });
    exports.CircleAlert = CircleAlert2;
    CircleAlert2.displayName = "CircleAlert";
  }
});

// node_modules/grommet-icons/icons/Star.js
var require_Star = __commonJS({
  "node_modules/grommet-icons/icons/Star.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.Star = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _StyledIcon = require_StyledIcon();
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _extends154() {
      _extends154 = Object.assign ? Object.assign.bind() : function(target) {
        for (var i3 = 1; i3 < arguments.length; i3++) {
          var source = arguments[i3];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends154.apply(this, arguments);
    }
    var Star2 = (0, _react.forwardRef)(function(props, ref) {
      return _react["default"].createElement(_StyledIcon.StyledIcon, _extends154({
        ref,
        viewBox: "0 0 24 24",
        a11yTitle: "Star"
      }, props), _react["default"].createElement("path", {
        fill: "#FFC95E",
        fillRule: "evenodd",
        d: "M12 16.667 5 22l3-8-6-4.5h7.5L12 2l2.5 7.5H22L16 14l3 8z"
      }));
    });
    exports.Star = Star2;
    Star2.displayName = "Star";
  }
});

// node_modules/grommet-icons/icons/StarOutline.js
var require_StarOutline = __commonJS({
  "node_modules/grommet-icons/icons/StarOutline.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.StarOutline = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _StyledIcon = require_StyledIcon();
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _extends154() {
      _extends154 = Object.assign ? Object.assign.bind() : function(target) {
        for (var i3 = 1; i3 < arguments.length; i3++) {
          var source = arguments[i3];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends154.apply(this, arguments);
    }
    var StarOutline2 = (0, _react.forwardRef)(function(props, ref) {
      return _react["default"].createElement(_StyledIcon.StyledIcon, _extends154({
        ref,
        viewBox: "0 0 24 24",
        a11yTitle: "Star"
      }, props), _react["default"].createElement("path", {
        stroke: "#000",
        fill: "none",
        strokeWidth: "2",
        d: "M12.606 16.805 12 16.343l-.606.462L5.755 21.1l2.381-6.35.263-.701-.599-.45L3 10h6.72l.229-.684L12 3.162l2.051 6.154.228.684H21l-4.8 3.6-.6.45.264.701 2.38 6.35-5.638-4.296Z"
      }));
    });
    exports.StarOutline = StarOutline2;
    StarOutline2.displayName = "StarOutline";
  }
});

// node_modules/grommet-icons/icons/Like.js
var require_Like = __commonJS({
  "node_modules/grommet-icons/icons/Like.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.Like = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _StyledIcon = require_StyledIcon();
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _extends154() {
      _extends154 = Object.assign ? Object.assign.bind() : function(target) {
        for (var i3 = 1; i3 < arguments.length; i3++) {
          var source = arguments[i3];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends154.apply(this, arguments);
    }
    var Like2 = (0, _react.forwardRef)(function(props, ref) {
      return _react["default"].createElement(_StyledIcon.StyledIcon, _extends154({
        ref,
        viewBox: "0 0 24 24",
        a11yTitle: "Like"
      }, props), _react["default"].createElement("path", {
        fill: "none",
        stroke: "#000",
        strokeWidth: "2",
        d: "M1 23h19c2 0 3-1 3-3V10h-7V4c0-2-1-3-3-3h-2s-.016 6-.016 7.326C10.984 9.652 10 11 8 11H1v12zm5 0V11"
      }));
    });
    exports.Like = Like2;
    Like2.displayName = "Like";
  }
});

// node_modules/grommet-icons/icons/LikeFill.js
var require_LikeFill = __commonJS({
  "node_modules/grommet-icons/icons/LikeFill.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.LikeFill = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _StyledIcon = require_StyledIcon();
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _extends154() {
      _extends154 = Object.assign ? Object.assign.bind() : function(target) {
        for (var i3 = 1; i3 < arguments.length; i3++) {
          var source = arguments[i3];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends154.apply(this, arguments);
    }
    var LikeFill2 = (0, _react.forwardRef)(function(props, ref) {
      return _react["default"].createElement(_StyledIcon.StyledIcon, _extends154({
        ref,
        viewBox: "0 0 24 24",
        a11yTitle: "Like"
      }, props), _react["default"].createElement("path", {
        stroke: "#000",
        fillRule: "evenodd",
        d: "M11 0h-.997L10 .997 11 1l-1-.003v.261l-.002.698-.006 2.207a2728.4 2728.4 0 0 0-.008 4.163c0 .42-.155.83-.454 1.132C9.243 9.749 8.763 10 8 10H1.001L1 11v-1H0v14h1v-1 1h19c1.154 0 2.203-.29 2.957-1.043C23.711 22.203 24 21.154 24 20v-9.999L23 10h1V9h-7V4c0-1.154-.29-2.203-1.043-2.957C15.203.289 14.154 0 13 0h-2ZM5 12v10H2V12h3Z",
        clipRule: "evenodd"
      }));
    });
    exports.LikeFill = LikeFill2;
    LikeFill2.displayName = "LikeFill";
  }
});

// node_modules/grommet-icons/icons/Dislike.js
var require_Dislike = __commonJS({
  "node_modules/grommet-icons/icons/Dislike.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.Dislike = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _StyledIcon = require_StyledIcon();
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _extends154() {
      _extends154 = Object.assign ? Object.assign.bind() : function(target) {
        for (var i3 = 1; i3 < arguments.length; i3++) {
          var source = arguments[i3];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends154.apply(this, arguments);
    }
    var Dislike2 = (0, _react.forwardRef)(function(props, ref) {
      return _react["default"].createElement(_StyledIcon.StyledIcon, _extends154({
        ref,
        viewBox: "0 0 24 24",
        a11yTitle: "Dislike"
      }, props), _react["default"].createElement("path", {
        fill: "none",
        stroke: "#000",
        strokeWidth: "2",
        d: "M23 1H4C2 1 1 2 1 4v10h7v6c0 2 1 3 3 3h2s.016-6 .016-7.326C13.016 14.348 14 13 16 13h7V1zm-5 0v12"
      }));
    });
    exports.Dislike = Dislike2;
    Dislike2.displayName = "Dislike";
  }
});

// node_modules/grommet-icons/icons/DislikeFill.js
var require_DislikeFill = __commonJS({
  "node_modules/grommet-icons/icons/DislikeFill.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.DislikeFill = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _StyledIcon = require_StyledIcon();
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _extends154() {
      _extends154 = Object.assign ? Object.assign.bind() : function(target) {
        for (var i3 = 1; i3 < arguments.length; i3++) {
          var source = arguments[i3];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends154.apply(this, arguments);
    }
    var DislikeFill2 = (0, _react.forwardRef)(function(props, ref) {
      return _react["default"].createElement(_StyledIcon.StyledIcon, _extends154({
        ref,
        viewBox: "0 0 24 24",
        a11yTitle: "Dislike"
      }, props), _react["default"].createElement("path", {
        stroke: "#000",
        fillRule: "evenodd",
        d: "M13 24h.997l.003-.997L13 23l1 .003v-.261l.002-.698.006-2.207c.004-1.665.008-3.498.008-4.163 0-.42.155-.83.454-1.132.287-.291.767-.542 1.53-.542h6.999L23 13v1h1V0h-1v1-1H4C2.846 0 1.797.29 1.043 1.043.289 1.797 0 2.846 0 4v9.999L1 14H0v1h7v5c0 1.154.29 2.203 1.043 2.957C8.797 23.711 9.846 24 11 24h2Zm6-12V2h3v10h-3Z",
        clipRule: "evenodd"
      }));
    });
    exports.DislikeFill = DislikeFill2;
    DislikeFill2.displayName = "DislikeFill";
  }
});

// node_modules/grommet/es6/components/Accordion/Accordion.js
var import_react14 = __toESM(require_react());

// node_modules/grommet/es6/components/Accordion/propTypes.js
var import_prop_types2 = __toESM(require_prop_types());

// node_modules/grommet/es6/utils/general-prop-types.js
var import_prop_types = __toESM(require_prop_types());
var a11yTitlePropType = import_prop_types.default.string;
var alignPropType = import_prop_types.default.oneOfType([import_prop_types.default.oneOf(["baseline", "center", "end", "start", "stretch"]), import_prop_types.default.string]);
var ANIMATION_TYPE = import_prop_types.default.oneOf(["fadeIn", "fadeOut", "jiggle", "pulse", "rotateLeft", "rotateRight", "slideUp", "slideDown", "slideLeft", "slideRight", "zoomIn", "zoomOut"]);
var ANIMATION_SHAPE = import_prop_types.default.shape({
  type: ANIMATION_TYPE,
  delay: import_prop_types.default.number,
  duration: import_prop_types.default.number,
  size: import_prop_types.default.oneOf(["xsmall", "small", "medium", "large", "xlarge"])
});
var animationPropType = import_prop_types.default.oneOfType([ANIMATION_TYPE, ANIMATION_SHAPE, import_prop_types.default.arrayOf(import_prop_types.default.oneOfType([ANIMATION_TYPE, ANIMATION_SHAPE]))]);
var colorPropType = import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.shape({
  dark: import_prop_types.default.string,
  light: import_prop_types.default.string
})]);
var backgroundPropType = import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.shape({
  clip: import_prop_types.default.oneOfType([import_prop_types.default.oneOf(["text"]), import_prop_types.default.string]),
  color: colorPropType,
  dark: import_prop_types.default.oneOfType([import_prop_types.default.bool, import_prop_types.default.string]),
  image: import_prop_types.default.string,
  position: import_prop_types.default.string,
  opacity: import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.bool, import_prop_types.default.number, import_prop_types.default.oneOf(["weak", "medium", "strong"])]),
  repeat: import_prop_types.default.oneOfType([import_prop_types.default.oneOf(["no-repeat", "repeat"]), import_prop_types.default.string]),
  rotate: import_prop_types.default.oneOfType([import_prop_types.default.number, import_prop_types.default.string]),
  size: import_prop_types.default.oneOfType([import_prop_types.default.oneOf(["cover", "contain"]), import_prop_types.default.string]),
  light: import_prop_types.default.string
})]);
var backgroundDoc = backgroundPropType;
var MARGIN_SIZES = ["xxsmall", "xsmall", "small", "medium", "large", "xlarge"];
var marginProp = import_prop_types.default.oneOfType([import_prop_types.default.oneOf(["none"].concat(MARGIN_SIZES)), import_prop_types.default.shape({
  bottom: import_prop_types.default.oneOfType([import_prop_types.default.oneOf(MARGIN_SIZES), import_prop_types.default.string]),
  end: import_prop_types.default.oneOfType([import_prop_types.default.oneOf(MARGIN_SIZES), import_prop_types.default.string]),
  horizontal: import_prop_types.default.oneOfType([import_prop_types.default.oneOf(MARGIN_SIZES), import_prop_types.default.string]),
  left: import_prop_types.default.oneOfType([import_prop_types.default.oneOf(MARGIN_SIZES), import_prop_types.default.string]),
  right: import_prop_types.default.oneOfType([import_prop_types.default.oneOf(MARGIN_SIZES), import_prop_types.default.string]),
  start: import_prop_types.default.oneOfType([import_prop_types.default.oneOf(MARGIN_SIZES), import_prop_types.default.string]),
  top: import_prop_types.default.oneOfType([import_prop_types.default.oneOf(MARGIN_SIZES), import_prop_types.default.string]),
  vertical: import_prop_types.default.oneOfType([import_prop_types.default.oneOf(MARGIN_SIZES), import_prop_types.default.string])
}), import_prop_types.default.string]);
var PAD_SIZES = ["xxsmall", "xsmall", "small", "medium", "large", "xlarge"];
var padPropType = import_prop_types.default.oneOfType([import_prop_types.default.oneOf(["none"].concat(PAD_SIZES)), import_prop_types.default.shape({
  bottom: import_prop_types.default.oneOfType([import_prop_types.default.oneOf(PAD_SIZES), import_prop_types.default.string]),
  end: import_prop_types.default.oneOfType([import_prop_types.default.oneOf(PAD_SIZES), import_prop_types.default.string]),
  horizontal: import_prop_types.default.oneOfType([import_prop_types.default.oneOf(PAD_SIZES), import_prop_types.default.string]),
  left: import_prop_types.default.oneOfType([import_prop_types.default.oneOf(PAD_SIZES), import_prop_types.default.string]),
  right: import_prop_types.default.oneOfType([import_prop_types.default.oneOf(PAD_SIZES), import_prop_types.default.string]),
  start: import_prop_types.default.oneOfType([import_prop_types.default.oneOf(PAD_SIZES), import_prop_types.default.string]),
  top: import_prop_types.default.oneOfType([import_prop_types.default.oneOf(PAD_SIZES), import_prop_types.default.string]),
  vertical: import_prop_types.default.oneOfType([import_prop_types.default.oneOf(PAD_SIZES), import_prop_types.default.string])
}), import_prop_types.default.string]);
var genericProps = {
  a11yTitle: a11yTitlePropType,
  alignSelf: import_prop_types.default.oneOf(["start", "center", "end", "stretch", "baseline"]),
  gridArea: import_prop_types.default.string,
  margin: marginProp
};
var elevationPropType = import_prop_types.default.oneOfType([import_prop_types.default.oneOf(["none", "xsmall", "small", "medium", "large", "xlarge"]), import_prop_types.default.string]);
var hoverIndicatorPropType = import_prop_types.default.oneOfType([import_prop_types.default.bool, import_prop_types.default.string, import_prop_types.default.oneOf(["background"]), backgroundPropType, import_prop_types.default.shape({
  background: backgroundPropType,
  elevation: elevationPropType
})]);
var pointPropType = import_prop_types.default.oneOf(["circle", "diamond", "square", "star", "triangle", "triangleDown"]);
var patternPropType = import_prop_types.default.oneOf(["squares", "circles", "stripesHorizontal", "stripesVertical", "stripesDiagonalDown", "stripesDiagonalUp"]);
var roundPropType = import_prop_types.default.oneOfType([import_prop_types.default.bool, import_prop_types.default.oneOf(["xsmall", "small", "medium", "large", "xlarge", "full"]), import_prop_types.default.string, import_prop_types.default.shape({
  corner: import_prop_types.default.oneOf(["top", "left", "bottom", "right", "top-left", "top-right", "bottom-left", "bottom-right"]),
  size: import_prop_types.default.oneOfType([import_prop_types.default.oneOf(["xsmall", "small", "medium", "large", "xlarge"]), import_prop_types.default.string])
})]);
var skeletonColorsPropType = import_prop_types.default.shape({
  dark: import_prop_types.default.arrayOf(import_prop_types.default.string),
  light: import_prop_types.default.arrayOf(import_prop_types.default.string)
});
var skeletonPropType = import_prop_types.default.oneOfType([import_prop_types.default.bool, import_prop_types.default.shape({
  animation: animationPropType,
  colors: skeletonColorsPropType,
  depth: import_prop_types.default.number,
  message: import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.shape({
    start: import_prop_types.default.string,
    end: import_prop_types.default.string
  })])
})]);
var dimSizeType = import_prop_types.default.oneOf(["xxsmall", "xsmall", "small", "medium", "large", "xlarge", "xxlarge"]);
var heightPropType = import_prop_types.default.oneOfType([dimSizeType, import_prop_types.default.string, import_prop_types.default.shape({
  height: import_prop_types.default.oneOfType([dimSizeType, import_prop_types.default.string]),
  min: import_prop_types.default.oneOfType([dimSizeType, import_prop_types.default.string]),
  max: import_prop_types.default.oneOfType([dimSizeType, import_prop_types.default.string])
})]);
var widthPropType = import_prop_types.default.oneOfType([dimSizeType, import_prop_types.default.string, import_prop_types.default.shape({
  width: import_prop_types.default.oneOfType([dimSizeType, import_prop_types.default.string]),
  min: import_prop_types.default.oneOfType([dimSizeType, import_prop_types.default.string]),
  max: import_prop_types.default.oneOfType([dimSizeType, import_prop_types.default.string])
})]);
var OVERFLOW_VALUES = ["auto", "hidden", "scroll", "visible"];

// node_modules/grommet/es6/components/Accordion/propTypes.js
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
var PropType = {};
if (true) {
  PropType = _extends({}, genericProps, {
    activeIndex: import_prop_types2.default.oneOfType([import_prop_types2.default.number, import_prop_types2.default.arrayOf(import_prop_types2.default.number)]),
    animate: import_prop_types2.default.bool,
    children: import_prop_types2.default.node,
    level: import_prop_types2.default.number,
    onActive: import_prop_types2.default.func,
    multiple: import_prop_types2.default.bool,
    messages: import_prop_types2.default.shape({
      tabContents: import_prop_types2.default.string
    })
  });
}
var AccordionPropTypes = PropType;

// node_modules/grommet/es6/components/Box/Box.js
var import_react12 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/utils/animation.js
init_styled_components_browser_esm();
var PULSE_SIZES = {
  xsmall: 1.001,
  small: 1.01,
  medium: 1.1,
  large: 1.5,
  xlarge: 2
};
var SLIDE_SIZES = {
  xsmall: 1,
  small: 5,
  medium: 10,
  large: 50,
  xlarge: 200
};
var JIGGLE_SIZES = {
  xsmall: 0.1,
  small: 1,
  medium: 5,
  large: 400,
  xlarge: 1e3
};
var ZOOM_SIZES = {
  xsmall: 1e-3,
  small: 0.01,
  medium: 0.05,
  large: 0.1,
  xlarge: 0.5
};
var animationBounds = function animationBounds2(type, size) {
  if (size === void 0) {
    size = "medium";
  }
  if (type === "draw") {
    return ["", "stroke-dashoffset: 0"];
  }
  if (type === "fadeIn") {
    return ["opacity: 0;", "opacity: 1;"];
  }
  if (type === "fadeOut") {
    return ["opacity: 1;", "opacity: 0;"];
  }
  if (type === "jiggle") {
    var deg = JIGGLE_SIZES[size];
    return ["transform: rotate(-" + deg + "deg);", "transform: rotate(" + deg + "deg);"];
  }
  if (type === "pulse") {
    return ["transform: scale(1);", "transform: scale(" + PULSE_SIZES[size] + ")"];
  }
  if (type === "rotateRight") {
    return ["transform: rotate(0deg);", "transform: rotate(359deg);"];
  }
  if (type === "rotateLeft") {
    return ["transform: rotate(0deg);", "transform: rotate(-359deg);"];
  }
  if (type === "flipIn") {
    return ["transform: rotateY(90deg);", "transform: rotateY(0);"];
  }
  if (type === "flipOut") {
    return ["transform: rotateY(0);", "transform: rotateY(90deg);"];
  }
  if (type === "slideDown") {
    return ["transform: translateY(-" + SLIDE_SIZES[size] + "%);", "transform: none;"];
  }
  if (type === "slideLeft") {
    return ["transform: translateX(" + SLIDE_SIZES[size] + "%);", "transform: none;"];
  }
  if (type === "slideRight") {
    return ["transform: translateX(-" + SLIDE_SIZES[size] + "%);", "transform: none;"];
  }
  if (type === "slideUp") {
    return ["transform: translateY(" + SLIDE_SIZES[size] + "%);", "transform: none;"];
  }
  if (type === "zoomIn") {
    return ["transform: scale(" + (1 - ZOOM_SIZES[size]) + ");", "transform: none;"];
  }
  if (type === "zoomOut") {
    return ["transform: scale(" + (1 + ZOOM_SIZES[size]) + ");", "transform: none;"];
  }
  return [];
};
var normalizeTiming = function normalizeTiming2(time, defaultTiming) {
  return typeof time === "number" ? time / 1e3 + "s" : time || defaultTiming;
};
var animationEnding = function animationEnding2(type) {
  if (type === "draw") {
    return "linear forwards";
  }
  if (type === "jiggle") {
    return "alternate infinite";
  }
  if (type === "pulse") {
    return "alternate infinite";
  }
  if (type === "rotateRight" || type === "rotateLeft") {
    return "infinite linear";
  }
  return "forwards";
};
var animationObjectStyle = function animationObjectStyle2(animation, theme, themeObj) {
  var bounds2 = animationBounds(animation.type, animation.size);
  var animationTheme = themeObj && themeObj.animation || theme.global.animation;
  if (bounds2) {
    var animationTransition = Ae(["from{", ";}to{", ";}"], bounds2[0], bounds2[1]);
    var defaultDuration = function defaultDuration2() {
      return normalizeTiming(animationTheme[animation.type] ? animationTheme[animation.type].duration : animation.duration, animationTheme.duration);
    };
    return Ae(["", " ", " ", " ", ""], We(["", ""], animationTransition), normalizeTiming(animation.duration, defaultDuration()), normalizeTiming(animation.delay, "0s"), animationEnding(animation.type));
  }
  return "";
};

// node_modules/grommet/es6/utils/mixins.js
init_styled_components_browser_esm();
var parseMetricToNum = function parseMetricToNum2(metric) {
  if (typeof metric === "number")
    return metric;
  if (metric.match(/\s/) && true) {
    console.warn('Invalid single measurement value: "' + metric + '"');
  }
  return parseFloat(metric.match(/\d+(\.\d+)?/), 10);
};
var edgeToNum = function edgeToNum2(size, theme) {
  return size ? parseMetricToNum(theme.global.edgeSize[size] || size) : 0;
};
var breakpointStyle = function breakpointStyle2(breakpoint, content) {
  return Ae(["@media only screen ", "{", ";}"], breakpoint.value && "and (max-width: " + breakpoint.value + "px)", content);
};

// node_modules/grommet/es6/utils/background.js
init_styled_components_browser_esm();

// node_modules/grommet/es6/utils/colors.js
var normalizeColor = function normalizeColor2(color, theme, dark2) {
  var colorSpec = theme.global && theme.global.colors[color] !== void 0 ? theme.global.colors[color] : color;
  var result = colorSpec;
  if (colorSpec) {
    if ((dark2 === true || dark2 === void 0 && theme.dark) && colorSpec.dark !== void 0) {
      result = colorSpec.dark;
    } else if ((dark2 === false || !theme.dark) && colorSpec.light !== void 0) {
      result = colorSpec.light;
    }
  }
  if (result && theme.global && theme.global.colors[result] !== void 0) {
    result = normalizeColor2(result, theme, dark2);
  }
  return result;
};
var parseHexToRGB = function parseHexToRGB2(color) {
  return color.length < 7 ? color.match(/[A-Za-z0-9]{1}/g).map(function(v3) {
    return parseInt("" + v3 + v3, 16);
  }) : (
    // https://stackoverflow.com/a/42429333
    color.match(/[A-Za-z0-9]{2}/g).map(function(v3) {
      return parseInt(v3, 16);
    })
  );
};
var hslToRGB = function hslToRGB2(h2, s3, l3) {
  var r3;
  var g3;
  var b3;
  if (s3 === 0 || s3 === "0") {
    r3 = l3;
    g3 = l3;
    b3 = l3;
  } else {
    var hue2rgb = function hue2rgb2(p3, q4, inT) {
      var t3 = inT;
      if (t3 < 0)
        t3 += 1;
      if (t3 > 1)
        t3 -= 1;
      if (t3 < 0.16666667)
        return p3 + (q4 - p3) * 6 * t3;
      if (t3 < 1 / 2)
        return q4;
      if (t3 < 0.66666667)
        return p3 + (q4 - p3) * (0.66666667 - t3) * 6;
      return p3;
    };
    var q3 = l3 < 0.5 ? l3 * (1 + s3) : l3 + s3 - l3 * s3;
    var p2 = 2 * l3 - q3;
    r3 = hue2rgb(p2, q3, h2 + 0.33333333);
    g3 = hue2rgb(p2, q3, h2);
    b3 = hue2rgb(p2, q3, h2 - 0.33333333);
  }
  return [Math.round(r3 * 255), Math.round(g3 * 255), Math.round(b3 * 255)];
};
var hexExp = /^#[A-Za-z0-9]{3,4}$|^#[A-Za-z0-9]{6,8}$/;
var rgbExp = /^rgba?\(\s?([0-9]*)\s?,\s?([0-9]*)\s?,\s?([0-9]*)\s?\)/;
var rgbaExp = /^rgba?\(\s?([0-9]*)\s?,\s?([0-9]*)\s?,\s?([0-9]*)\s?,\s?([.0-9]*)\s?\)/;
var hslExp = /^hsla?\(\s?([0-9]*)\s?,\s?([0-9]*)%?\s?,\s?([0-9]*)%?\s?.*?\)/;
var canExtractRGBArray = function canExtractRGBArray2(color) {
  return hexExp.test(color) || rgbExp.test(color) || rgbaExp.test(color) || hslExp.test(color);
};
var getRGBArray = function getRGBArray2(color) {
  if (hexExp.test(color)) {
    var _parseHexToRGB = parseHexToRGB(color), red = _parseHexToRGB[0], green = _parseHexToRGB[1], blue = _parseHexToRGB[2], alpha = _parseHexToRGB[3];
    return [red, green, blue, alpha !== void 0 ? alpha / 255 : void 0];
  }
  var match = color.match(rgbExp);
  if (match) {
    return match.splice(1).map(function(v3) {
      return parseInt(v3, 10);
    });
  }
  match = color.match(rgbaExp);
  if (match) {
    return match.splice(1).map(function(v3) {
      return parseFloat(v3, 10);
    });
  }
  match = color.match(hslExp);
  if (match) {
    var _match$splice$map = match.splice(1).map(function(v3) {
      return parseInt(v3, 10);
    }), h2 = _match$splice$map[0], s3 = _match$splice$map[1], l3 = _match$splice$map[2];
    return hslToRGB(h2 / 360, s3 / 100, l3 / 100);
  }
  return color;
};
var colorIsDark = function colorIsDark2(color) {
  if (color && canExtractRGBArray(color)) {
    var _getRGBArray = getRGBArray(color), red = _getRGBArray[0], green = _getRGBArray[1], blue = _getRGBArray[2], alpha = _getRGBArray[3];
    if (alpha < 0.5)
      return void 0;
    var brightness = (299 * red + 587 * green + 114 * blue) / 1e3;
    return brightness < 125;
  }
  return void 0;
};
var getRGBA = function getRGBA2(color, opacity) {
  if (color && canExtractRGBArray(color)) {
    var _getRGBArray2 = getRGBArray(color), red = _getRGBArray2[0], green = _getRGBArray2[1], blue = _getRGBArray2[2], alpha = _getRGBArray2[3];
    var normalizedAlpha;
    if (opacity !== void 0) {
      normalizedAlpha = opacity;
    } else if (alpha !== void 0) {
      normalizedAlpha = alpha;
    } else {
      normalizedAlpha = 1;
    }
    return "rgba(" + red + ", " + green + ", " + blue + ", " + normalizedAlpha + ")";
  }
  return void 0;
};

// node_modules/grommet/es6/utils/background.js
var evalStyle = function evalStyle2(arg, theme) {
  if (arg && Array.isArray(arg) && typeof arg[0] === "function") {
    return arg[0]({
      theme
    });
  }
  return arg;
};
var normalizeBackground = function normalizeBackground2(backgroundArg, theme) {
  var _theme$global$backgro;
  var background = ((_theme$global$backgro = theme.global.backgrounds) == null ? void 0 : _theme$global$backgro[backgroundArg]) || backgroundArg;
  var result = background;
  if (background) {
    if (theme.dark && background.dark && typeof background.dark !== "boolean") {
      result = background.dark;
    } else if (!theme.dark && background.light && typeof background.light !== "boolean") {
      result = background.light;
    }
    result = evalStyle(result, theme);
  }
  return result;
};
var normalizeBackgroundColor = function normalizeBackgroundColor2(backgroundArg, theme) {
  var _theme$global$backgro2;
  var background = backgroundArg.color || backgroundArg;
  var result = normalizeColor(
    // Background color may be defined by theme.global.backgrounds or
    // theme.global.colors.
    ((_theme$global$backgro2 = theme.global.backgrounds) == null ? void 0 : _theme$global$backgro2[background]) || background,
    theme,
    backgroundArg.dark
  );
  return result;
};
var normalizeBackgroundImage = function normalizeBackgroundImage2(background, theme) {
  var result;
  if (background.image) {
    var _theme$global$backgro3, _theme$global$backgro4, _theme$global$backgro5;
    result = normalizeBackground(background.dark ? (_theme$global$backgro3 = theme.global.backgrounds) == null ? void 0 : (_theme$global$backgro4 = _theme$global$backgro3[background.image]) == null ? void 0 : _theme$global$backgro4.dark : (_theme$global$backgro5 = theme.global.backgrounds) == null ? void 0 : _theme$global$backgro5[background.image], theme) || background.image;
  } else {
    var _theme$global$backgro6;
    var normalized = normalizeBackground((_theme$global$backgro6 = theme.global.backgrounds) == null ? void 0 : _theme$global$backgro6[background], theme);
    result = typeof normalized === "object" ? normalizeBackgroundImage2(normalized, theme) : normalized;
  }
  return result;
};
var rotateBackground = function rotateBackground2(background, theme) {
  var backgroundImage = normalizeBackgroundImage(background, theme);
  var result = backgroundImage;
  if (backgroundImage.lastIndexOf("linear-gradient", 0) === 0) {
    var regex = /\d{1,}deg\b,/gm;
    result = backgroundImage.lastIndexOf("deg,") >= 0 ? backgroundImage.replace(regex, background.rotate + "deg,") : backgroundImage.replace("linear-gradient(", "linear-gradient(" + background.rotate + "deg, ");
  } else {
    console.warn(
      // eslint-disable-next-line max-len
      "'background.rotate' property only supports 'background.image' containing a linear-gradient string."
    );
  }
  return result;
};
var backgroundIsDark = function backgroundIsDark2(backgroundArg, theme) {
  var background = normalizeBackground(backgroundArg, theme);
  var result;
  if (background) {
    if (typeof background === "object") {
      var color = background.color, dark2 = background.dark, opacity = background.opacity;
      if (typeof dark2 === "boolean") {
        result = dark2;
      } else if (color && // weak opacity means we keep the existing darkness
      (!opacity || opacity !== "weak")) {
        var backgroundColor2 = normalizeColor(background.color, theme);
        if (backgroundColor2) {
          result = colorIsDark(backgroundColor2);
        }
      }
    } else {
      var _color = normalizeColor(background, theme);
      if (_color) {
        result = colorIsDark(_color);
      }
    }
  }
  return result;
};
var darkContext = function darkContext2(backgroundColor2) {
  var isDark = colorIsDark(backgroundColor2);
  if (isDark === void 0)
    return void 0;
  return isDark ? "dark" : "light";
};
var backgroundAndTextColors = function backgroundAndTextColors2(backgroundArg, textArg, theme) {
  if (!backgroundArg)
    return [void 0, textArg];
  var global = theme.global;
  var background = normalizeBackground(backgroundArg, theme);
  var text = textArg || global.colors.text;
  var backgroundColor2;
  var textColor;
  if (typeof background === "object") {
    if (background.dark === false) {
      textColor = text.light || text;
    } else if (background.dark) {
      textColor = text.dark || text;
    }
    if (background.color) {
      var color = normalizeBackgroundColor(background, theme);
      var opacity = background.opacity === true ? global.opacity.medium : global.opacity[background.opacity] || background.opacity;
      backgroundColor2 = getRGBA(color, opacity) || color;
      if (!textColor && (opacity === void 0 || opacity > 0.3)) {
        var shade = darkContext(backgroundColor2, theme);
        textColor = normalizeColor(shade && text[shade] || text, theme);
      }
    }
  } else {
    backgroundColor2 = normalizeBackgroundColor(background, theme);
    var _shade = darkContext(backgroundColor2, theme);
    var transparent;
    if (backgroundColor2 && canExtractRGBArray(backgroundColor2)) {
      var colorArray5 = getRGBArray(backgroundColor2);
      if (colorArray5[3] < 0.5)
        transparent = true;
    }
    if (_shade) {
      textColor = normalizeColor(text[_shade] || text, theme, _shade === "dark");
    } else if (transparent && text) {
      textColor = normalizeColor(text, theme);
    } else {
      if (backgroundColor2 !== "transparent")
        backgroundColor2 = void 0;
      if (text)
        textColor = normalizeColor(text, theme);
    }
  }
  if (textArg === false)
    textColor = void 0;
  return [backgroundColor2, textColor];
};
var backgroundStyle = function backgroundStyle2(backgroundArg, theme, textColorArg) {
  if (backgroundArg === void 0)
    return void 0;
  var background = normalizeBackground(backgroundArg, theme);
  var _backgroundAndTextCol = backgroundAndTextColors(background, textColorArg, theme), backgroundColor2 = _backgroundAndTextCol[0], textColor = _backgroundAndTextCol[1];
  var backgroundImage = background.rotate ? rotateBackground(background, theme) : normalizeBackgroundImage(background, theme);
  var backgroundClipStyle = "";
  if (background.clip) {
    backgroundClipStyle = background.clip === "text" ? "-webkit-text-fill-color: transparent; \n           -webkit-background-clip: text; \n           background-clip: text;" : "background-clip: " + background.clip + ";";
  }
  if (typeof background === "string" && background.lastIndexOf("url", 0) === 0) {
    return Ae(["background:", " no-repeat center center;background-size:cover;"], background);
  }
  if (backgroundImage) {
    var backgroundStyles = "\n      " + (backgroundColor2 ? "background-color: " + backgroundColor2 + ";" : "") + "\n      background-image: " + backgroundImage + ";\n      background-repeat: " + (typeof background === "object" && background.repeat || "no-repeat") + ";\n      background-position: " + (background.position || "center center") + ";\n      background-size: " + (background.size || "cover") + ";\n      " + backgroundClipStyle + "\n    ";
    return Ae(["", " ", ""], textColor ? "color: " + textColor + ";" : "", !background.opacity ? backgroundStyles : "position: relative;\n        z-index: 0;\n        &:before {\n          content: '';\n          position: absolute;\n          top: 0;\n          right: 0;\n          left: 0;\n          bottom: 0;\n          z-index: -1;\n          border-radius: inherit;\n          " + backgroundStyles + "\n          opacity: " + (background.opacity === true ? theme.global.opacity.medium : theme.global.opacity[background.opacity] || background.opacity) + ";\n        }");
  }
  if (backgroundColor2) {
    return Ae(["background-color:", ";", ""], backgroundColor2, textColor ? "color: " + textColor + ";" : "");
  }
  if (typeof background === "string")
    return Ae(["background:", ";"], normalizeColor(background, theme));
  return void 0;
};
var activeStyle = Ae(["", ""], function(props) {
  return backgroundStyle(normalizeColor(props.theme.global.active.background, props.theme), props.theme, props.theme.global.active.color);
});
var selectedStyle = Ae(["", ""], function(props) {
  return backgroundStyle(normalizeColor(props.theme.global.selected.background, props.theme), props.theme, props.theme.global.selected.color);
});
var getHoverIndicatorStyle = function getHoverIndicatorStyle2(hoverIndicator, theme) {
  var background;
  var elevation;
  if (hoverIndicator === true || hoverIndicator === "background") {
    background = theme.global.hover.background;
  } else if (typeof hoverIndicator === "object") {
    if (hoverIndicator.elevation || hoverIndicator.background) {
      elevation = hoverIndicator.elevation;
      background = hoverIndicator.background;
    } else
      background = hoverIndicator;
  } else {
    background = hoverIndicator;
  }
  return Ae(["", " ", ""], backgroundStyle(background, theme, theme.global.hover.color), elevation && "box-shadow: " + theme.global.elevation[theme.dark ? "dark" : "light"][elevation] + ";");
};

// node_modules/grommet/es6/utils/border.js
init_styled_components_browser_esm();
var responsiveBorderStyle = function responsiveBorderStyle2(data, theme) {
  var color = normalizeColor(data.color || "border", theme);
  var borderSize = data.size || "xsmall";
  var style = data.style || "solid";
  var side = typeof data === "string" ? data : data.side || "all";
  var breakpoint = theme.box.responsiveBreakpoint && theme.global.breakpoints[theme.box.responsiveBreakpoint];
  if (!breakpoint.borderSize)
    breakpoint.borderSize = theme.global.borderSize;
  var value = breakpoint && (breakpoint.borderSize[borderSize] || borderSize) && style + " " + (breakpoint.borderSize[borderSize] || borderSize) + " " + color;
  if (!value)
    return void 0;
  if (side === "top" || side === "bottom" || side === "left" || side === "right")
    return "border-" + side + ": " + value + ";";
  if (side === "end" || side === "start")
    return "border-inline-" + side + ": " + value + ";";
  if (side === "vertical")
    return "\n      border-left: " + value + ";\n      border-right: " + value + ";\n    ";
  if (side === "horizontal")
    return "\n      border-top: " + value + ";\n      border-bottom: " + value + ";\n    ";
  if (side === "between")
    return void 0;
  return "border: " + value + ";";
};
var borderStyle = function borderStyle2(borderData, responsive, theme) {
  var borderStyles = [];
  (Array.isArray(borderData) ? borderData : [borderData]).forEach(function(data) {
    var styles = [];
    var color = normalizeColor(data.color || "border", theme);
    var borderSize = data.size || "xsmall";
    var style = data.style || "solid";
    var side = typeof data === "string" ? data : data.side || "all";
    var value = style + " " + (theme.global.borderSize[borderSize] || borderSize) + " " + color;
    var responsiveStyle = responsive && responsiveBorderStyle(data, theme);
    var breakpoint = responsiveStyle && theme.box.responsiveBreakpoint && theme.global.breakpoints[theme.box.responsiveBreakpoint];
    if (side === "top" || side === "bottom" || side === "left" || side === "right") {
      styles.push("border-" + side + ": " + value + ";");
      if (responsiveStyle) {
        styles.push(breakpointStyle(breakpoint, responsiveStyle));
      }
    } else if (side === "end" || side === "start") {
      styles.push(Ae(["border-inline-", ":", ";"], side, value));
      if (responsiveStyle) {
        styles.push(breakpointStyle(breakpoint, responsiveStyle));
      }
    } else if (side === "vertical") {
      styles.push(Ae(["border-left:", ";border-right:", ";"], value, value));
      if (responsiveStyle) {
        styles.push(breakpointStyle(breakpoint, responsiveStyle));
      }
    } else if (side === "horizontal") {
      styles.push(Ae(["border-top:", ";border-bottom:", ";"], value, value));
      if (responsiveStyle) {
        styles.push(breakpointStyle(breakpoint, responsiveStyle));
      }
    } else if (side === "between") {
    } else {
      styles.push(Ae(["border:", ";"], value));
      if (responsiveStyle) {
        styles.push(breakpointStyle(breakpoint, responsiveStyle));
      }
    }
    borderStyles.push(styles);
  });
  return borderStyles;
};

// node_modules/grommet/es6/utils/dates.js
var setHoursWithOffset = function setHoursWithOffset2(date) {
  var newDate = new Date(date);
  if ((date == null ? void 0 : date.indexOf("T")) === -1) {
    var offset = newDate.getTimezoneOffset();
    var hour = newDate.getHours();
    newDate.setHours(hour, offset < 0 ? -offset : offset);
  }
  return newDate;
};

// node_modules/grommet/es6/utils/DOM.js
var findScrollParent = function findScrollParent2(element, horizontal12) {
  var result;
  if (element) {
    var parent = element.parentNode;
    while (!result && parent && parent.getBoundingClientRect) {
      var rect = parent.getBoundingClientRect();
      if (horizontal12) {
        if (rect.width && parent.scrollWidth > rect.width + 10) {
          result = parent;
        }
      } else if (rect.height && parent.scrollHeight > rect.height + 10) {
        result = parent;
      }
      parent = parent.parentNode;
    }
    if (!result) {
      result = document;
    } else if (result.tagName.toLowerCase() === "body") {
      result = document;
    }
  }
  return result;
};
var documentTags = ["html", "body"];
var findScrollParents = function findScrollParents2(element, horizontal12) {
  var result = [];
  if (element) {
    var parent = element.parentNode;
    while (parent && parent.getBoundingClientRect) {
      var rect = parent.getBoundingClientRect();
      if (horizontal12) {
        if (rect.width && parent.scrollWidth > rect.width + 10) {
          result.push(parent);
        }
      } else if (rect.height && parent.scrollHeight > rect.height + 10) {
        result.push(parent);
      }
      parent = parent.parentNode;
    }
    if (result.length && documentTags.includes(result[0].tagName.toLowerCase())) {
      result.length = 0;
    }
    result.push(document);
  }
  return result;
};
var containsFocus = function containsFocus2(node) {
  var root = node.getRootNode();
  var element = root.activeElement;
  while (element) {
    if (element === node)
      break;
    element = element.parentElement;
  }
  return !!element;
};
var withinDropPortal = function withinDropPortal2(node, portalContext) {
  var root = node == null ? void 0 : node.getRootNode();
  var element = node;
  var portalId;
  while (element && element !== root) {
    if (element.hasAttribute("data-g-portal-id")) {
      portalId = element.getAttribute("data-g-portal-id");
      element = root;
    } else {
      element = element.parentElement;
    }
  }
  if (portalId === void 0 || portalContext.indexOf(parseInt(portalId, 10)) !== -1)
    return false;
  return true;
};
var isFocusable = function isFocusable2(element) {
  var tagName = element.tagName.toLowerCase();
  return tagName === "input" || tagName === "select" || tagName === "textarea";
};
var getFirstFocusableDescendant = function getFirstFocusableDescendant2(element) {
  var children2 = element.getElementsByTagName("*");
  for (var i3 = 0; i3 < children2.length; i3 += 1) {
    var child = children2[i3];
    if (isFocusable(child)) {
      return child;
    }
  }
  return void 0;
};
var shouldKeepFocus = function shouldKeepFocus2(root) {
  var element = root.activeElement;
  if (isFocusable(element))
    return true;
  return !!getFirstFocusableDescendant(element);
};
var getNewContainer = function getNewContainer2(target, targetChildPosition) {
  if (target === void 0) {
    target = document.body;
  }
  var container = document.createElement("div");
  if (targetChildPosition === "first") {
    target.prepend(container);
  } else {
    target.appendChild(container);
  }
  return container;
};
var setFocusWithoutScroll = function setFocusWithoutScroll2(element) {
  var x3 = window.scrollX;
  var y3 = window.scrollY;
  element.focus();
  window.scrollTo(x3, y3);
};
var TABINDEX = "tabindex";
var TABINDEX_STATE = "data-g-tabindex";
var makeNodeFocusable = function makeNodeFocusable2(node) {
  if (!node.hasAttribute("aria-live")) {
    node.removeAttribute("aria-hidden");
    var elements = node.getElementsByTagName("*");
    Array.prototype.filter.call(elements || [], function(element) {
      return element.hasAttribute(TABINDEX_STATE);
    }).forEach(function(element) {
      var prior = element.getAttribute(TABINDEX_STATE);
      if (prior >= 0) {
        element.setAttribute(TABINDEX, element.getAttribute(TABINDEX_STATE));
      } else if (prior === "none") {
        element.removeAttribute(TABINDEX);
      }
      element.removeAttribute(TABINDEX_STATE);
    });
  }
};
var autoFocusingTags = /(a|area|input|select|textarea|button|iframe)$/;
var makeNodeUnfocusable = function makeNodeUnfocusable2(node) {
  if (!node.hasAttribute("aria-live")) {
    node.setAttribute("aria-hidden", true);
    var elements = node.getElementsByTagName("*");
    Array.prototype.filter.call(elements || [], function(element) {
      return element.getAttribute(TABINDEX) !== null;
    }).forEach(function(element) {
      element.setAttribute(TABINDEX_STATE, element.getAttribute(TABINDEX));
      element.setAttribute(TABINDEX, -1);
    });
    Array.prototype.filter.call(elements || [], function(element) {
      var currentTag = element.tagName.toLowerCase();
      return currentTag.match(autoFocusingTags) && element.focus && element.getAttribute(TABINDEX_STATE) === null;
    }).forEach(function(element) {
      element.setAttribute(TABINDEX_STATE, "none");
      element.setAttribute(TABINDEX, -1);
    });
  }
};
var findVisibleParent = function findVisibleParent2(element) {
  if (element) {
    return element.offsetParent ? element : findVisibleParent2(element.parentElement) || element;
  }
  return void 0;
};
var isNodeAfterScroll = function isNodeAfterScroll2(node, target) {
  var _node$getBoundingClie = node.getBoundingClientRect(), bottom = _node$getBoundingClie.bottom;
  var _ref = target.getBoundingClientRect ? target.getBoundingClientRect() : {
    height: 0,
    top: 0
  }, height = _ref.height, top = _ref.top;
  return bottom >= top + height;
};
var isNodeBeforeScroll = function isNodeBeforeScroll2(node, target) {
  var _node$getBoundingClie2 = node.getBoundingClientRect(), top = _node$getBoundingClie2.top;
  var _ref2 = target.getBoundingClientRect ? target.getBoundingClientRect() : {
    top: 0
  }, targetTop = _ref2.top;
  return top <= targetTop;
};
var findButtonParent = function findButtonParent2(element) {
  if (element && element.nodeName !== "BUTTON" && element.nodeName !== "A")
    return findButtonParent2(element.parentElement);
  return element;
};

// node_modules/grommet/es6/utils/graphics.js
var POST_DECIMAL_DIGITS = 10;
var polarToCartesian = function polarToCartesian2(centerX, centerY, radius, angleInDegrees) {
  var angleInRadians = (angleInDegrees - 90) * Math.PI / 180;
  return {
    x: centerX + radius * Math.cos(angleInRadians),
    y: centerY + radius * Math.sin(angleInRadians)
  };
};
var arcCommands = function arcCommands2(centerX, centerY, radius, startAngle, endAngle) {
  var normalizedEndAngle = endAngle;
  if (endAngle > startAngle && endAngle - startAngle >= 360) {
    normalizedEndAngle = startAngle + 359.99;
  }
  var start = polarToCartesian(centerX, centerY, radius, normalizedEndAngle);
  var end = polarToCartesian(centerX, centerY, radius, startAngle);
  var arcSweep = normalizedEndAngle - startAngle <= 180 ? "0" : "1";
  var d3 = ["M", start.x.toFixed(POST_DECIMAL_DIGITS), start.y.toFixed(POST_DECIMAL_DIGITS), "A", radius.toFixed(POST_DECIMAL_DIGITS), radius.toFixed(POST_DECIMAL_DIGITS), 0, arcSweep, 0, end.x.toFixed(POST_DECIMAL_DIGITS), end.y.toFixed(POST_DECIMAL_DIGITS)].join(" ");
  return d3;
};
var translateEndAngle = function translateEndAngle2(startAngle, anglePer, value) {
  return Math.max(0, startAngle + anglePer * value) % 360;
};

// node_modules/grommet/es6/utils/icon.js
var import_react2 = __toESM(require_react());
var useSizedIcon = function useSizedIcon2(icon, size, theme) {
  var _theme$icon;
  return icon && theme != null && (_theme$icon = theme.icon) != null && _theme$icon.matchSize && !icon.props.size ? (0, import_react2.cloneElement)(icon, {
    size
  }) : icon;
};

// node_modules/grommet/es6/utils/styles.js
init_styled_components_browser_esm();

// node_modules/grommet/es6/utils/responsive.js
var getBreakpoint = function getBreakpoint2(viewportWidth, theme) {
  var sortedBreakpoints = Object.keys(theme.global.breakpoints).sort(function(a3, b3) {
    var first = theme.global.breakpoints[a3];
    var second = theme.global.breakpoints[b3];
    if (!first)
      return 1;
    if (!second)
      return -1;
    if (!first.value)
      return 1;
    if (!second.value)
      return -1;
    return first.value - second.value;
  });
  var lastBreakpoint = sortedBreakpoints[sortedBreakpoints.length - 1];
  var result = sortedBreakpoints.find(function(name) {
    var breakpoint = theme.global.breakpoints[name];
    return !breakpoint.value || breakpoint.value >= viewportWidth ? name : false;
  });
  return result || lastBreakpoint;
};
var getDeviceBreakpoint = function getDeviceBreakpoint2(type, theme) {
  return theme.global.deviceBreakpoints[type];
};
var getBreakpointStyle = function getBreakpointStyle2(theme, breakpointSize) {
  var breakpoint = breakpointSize && theme.global.breakpoints[breakpointSize] || {};
  if (!breakpoint.edgeSize)
    breakpoint.edgeSize = theme.global.edgeSize;
  if (!breakpoint.borderSize)
    breakpoint.borderSize = theme.global.borderSize;
  if (!breakpoint.size)
    breakpoint.size = theme.global.size;
  return breakpoint;
};

// node_modules/grommet/es6/utils/styles.js
var baseStyle = Ae(["font-family:", ";font-size:", ";line-height:", ";font-weight:", ";", " ", " box-sizing:border-box;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;"], function(props) {
  return props.theme.global.font.family;
}, function(props) {
  return props.theme.global.font.size;
}, function(props) {
  return props.theme.global.font.height;
}, function(props) {
  return props.theme.global.font.weight;
}, function(props) {
  return props.theme.global.font.variant && "\n    font-variant:" + props.theme.global.font.variant + ";\n  ";
}, function(props) {
  return !props.plain && backgroundStyle(props.theme.baseBackground, props.theme);
});
var controlBorderStyle = Ae(["border:", " solid ", ";border-radius:", ";"], function(props) {
  return props.theme.global.control.border.width;
}, function(props) {
  return normalizeColor(props.theme.global.control.border.color || "border", props.theme);
}, function(props) {
  return props.theme.global.control.border.radius;
});
var edgeStyle = function edgeStyle2(kind, data, responsive, responsiveBreakpoint, theme) {
  var breakpoint = responsiveBreakpoint && theme.global.breakpoints[responsiveBreakpoint];
  if (typeof data === "string") {
    return Ae(["", ":", ";", ";"], kind, theme.global.edgeSize[data] || data, responsive && breakpoint ? breakpointStyle(breakpoint, "\n        " + kind + ": " + (breakpoint.edgeSize[data] || data) + ";\n      ") : "");
  }
  var result = [];
  var horizontal12 = data.horizontal, vertical12 = data.vertical, top = data.top, bottom = data.bottom, left = data.left, right = data.right;
  var horizontalVerticalEqual = horizontal12 && vertical12 && horizontal12 === vertical12;
  var allSidesEqual = top && bottom && left && right && top === bottom === left === right;
  if (horizontalVerticalEqual || allSidesEqual) {
    var value = horizontalVerticalEqual ? horizontal12 : top;
    return Ae(["", ":", ";", ";"], kind, theme.global.edgeSize[value] || value, responsive && breakpoint ? breakpointStyle(breakpoint, "\n        " + kind + ": " + (breakpoint.edgeSize[value] || value) + ";\n      ") : "");
  }
  if (horizontal12) {
    result.push(Ae(["", "-left:", ";", "-right:", ";", ";"], kind, theme.global.edgeSize[horizontal12] || horizontal12, kind, theme.global.edgeSize[horizontal12] || horizontal12, responsive && breakpoint ? breakpointStyle(breakpoint, "\n          " + kind + "-left: " + (breakpoint.edgeSize[horizontal12] || horizontal12) + ";\n          " + kind + "-right: " + (breakpoint.edgeSize[horizontal12] || horizontal12) + ";\n        ") : ""));
  }
  if (vertical12) {
    result.push(Ae(["", "-top:", ";", "-bottom:", ";", ";"], kind, theme.global.edgeSize[vertical12] || vertical12, kind, theme.global.edgeSize[vertical12] || vertical12, responsive && breakpoint ? breakpointStyle(breakpoint, "\n          " + kind + "-top: " + (breakpoint.edgeSize[vertical12] || vertical12) + ";\n          " + kind + "-bottom: " + (breakpoint.edgeSize[vertical12] || vertical12) + ";\n        ") : ""));
  }
  if (top) {
    result.push(Ae(["", "-top:", ";", ";"], kind, theme.global.edgeSize[top] || top, responsive && breakpoint ? breakpointStyle(breakpoint, "\n          " + kind + "-top: " + (breakpoint.edgeSize[top] || top) + ";\n        ") : ""));
  }
  if (bottom) {
    result.push(Ae(["", "-bottom:", ";", ";"], kind, theme.global.edgeSize[bottom] || bottom, responsive && breakpoint ? breakpointStyle(breakpoint, "\n          " + kind + "-bottom: " + (breakpoint.edgeSize[bottom] || bottom) + ";\n        ") : ""));
  }
  if (left) {
    result.push(Ae(["", "-left:", ";", ";"], kind, theme.global.edgeSize[left] || left, responsive && breakpoint ? breakpointStyle(breakpoint, "\n          " + kind + "-left: " + (breakpoint.edgeSize[left] || left) + ";\n        ") : ""));
  }
  if (right) {
    result.push(Ae(["", "-right:", ";", ";"], kind, theme.global.edgeSize[right] || right, responsive && breakpoint ? breakpointStyle(breakpoint, "\n          " + kind + "-right: " + (breakpoint.edgeSize[right] || right) + ";\n        ") : ""));
  }
  if (data.start) {
    result.push(Ae(["", "-inline-start:", ";", ";"], kind, theme.global.edgeSize[data.start] || data.start, responsive && breakpoint ? breakpointStyle(breakpoint, "\n          " + kind + "-inline-start: " + (breakpoint.edgeSize[data.start] || data.start) + ";\n        ") : ""));
  }
  if (data.end) {
    result.push(Ae(["", "-inline-end:", ";", ";"], kind, theme.global.edgeSize[data.end] || data.end, responsive && breakpoint ? breakpointStyle(breakpoint, "\n          " + kind + "-inline-end: " + (breakpoint.edgeSize[data.end] || data.end) + ";\n        ") : ""));
  }
  return result;
};
var fillStyle = function fillStyle2(fillProp) {
  if (fillProp === "horizontal") {
    return "width: 100%;";
  }
  if (fillProp === "vertical") {
    return "height: 100%;";
  }
  if (fillProp) {
    return "\n      width: 100%;\n      height: 100%;\n    ";
  }
  return void 0;
};
var focusStyles = function focusStyles2(props, _temp) {
  var _ref = _temp === void 0 ? {} : _temp, forceOutline = _ref.forceOutline, justBorder = _ref.justBorder;
  var focus = props.theme.global.focus;
  if (!focus || forceOutline && !focus.outline) {
    var color = normalizeColor("focus", props.theme);
    if (color)
      return "outline: 2px solid " + color + ";";
    return "";
  }
  if (focus.outline && (!focus.border || !justBorder)) {
    if (typeof focus.outline === "object") {
      var _color = normalizeColor(focus.outline.color || "focus", props.theme);
      var size = focus.outline.size || "2px";
      return "\n        outline-offset: 0px;\n        outline: " + size + " solid " + _color + ";\n      ";
    }
    return "outline: " + focus.outline + ";";
  }
  if (focus.shadow && (!focus.border || !justBorder)) {
    if (typeof focus.shadow === "object") {
      var _color2 = normalizeColor(
        // If there is a focus.border.color, use that for shadow too.
        // This is for backwards compatibility in v2.
        focus.border && focus.border.color || focus.shadow.color || "focus",
        props.theme
      );
      var _size = focus.shadow.size || "2px";
      return "\n        outline: none;\n        box-shadow: 0 0 " + _size + " " + _size + " " + _color2 + ";\n      ";
    }
    return "\n      outline: none;\n      box-shadow: " + focus.shadow + ";\n    ";
  }
  if (focus.border) {
    var _color3 = normalizeColor(focus.border.color || "focus", props.theme);
    return "\n      outline: none;\n      border-color: " + _color3 + ";\n    ";
  }
  return "";
};
var unfocusStyles = function unfocusStyles2(props, _temp2) {
  var _ref2 = _temp2 === void 0 ? {} : _temp2, forceOutline = _ref2.forceOutline, justBorder = _ref2.justBorder;
  var focus = props.theme.global.focus;
  if (!focus || forceOutline && !focus.outline) {
    var color = normalizeColor("focus", props.theme);
    if (color)
      return "outline: none;";
    return "";
  }
  if (focus.outline && (!focus.border || !justBorder)) {
    if (typeof focus.outline === "object") {
      return "\n        outline-offset: 0px;\n        outline: none;\n      ";
    }
    return "outline: none;";
  }
  if (focus.shadow && (!focus.border || !justBorder)) {
    if (typeof focus.shadow === "object") {
      return "\n        outline: none;\n        box-shadow: none;\n      ";
    }
    return "\n      outline: none;\n      box-shadow: none;\n    ";
  }
  if (focus.border) {
    return "\n      outline: none;\n      border-color: none;\n    ";
  }
  return "";
};
var focusStyle = function focusStyle2(_temp3) {
  var _ref3 = _temp3 === void 0 ? {} : _temp3, forceOutline = _ref3.forceOutline, justBorder = _ref3.justBorder, skipSvgChildren = _ref3.skipSvgChildren;
  return Ae(["", " ", " ", ""], function(props) {
    return !skipSvgChildren && "\n  > circle,\n  > ellipse,\n  > line,\n  > path,\n  > polygon,\n  > polyline,\n  > rect {\n    " + focusStyles(props) + "\n  }";
  }, function(props) {
    return focusStyles(props, {
      forceOutline,
      justBorder
    });
  }, !forceOutline && "\n  ::-moz-focus-inner {\n    border: 0;\n  }\n  ");
};
var unfocusStyle = function unfocusStyle2(_temp4) {
  var _ref4 = _temp4 === void 0 ? {} : _temp4, forceOutline = _ref4.forceOutline, justBorder = _ref4.justBorder, skipSvgChildren = _ref4.skipSvgChildren;
  return Ae(["", " ", " ", ""], function(props) {
    return !skipSvgChildren && "\n  > circle,\n  > ellipse,\n  > line,\n  > path,\n  > polygon,\n  > polyline,\n  > rect {\n    " + unfocusStyles(props) + "\n  }";
  }, function(props) {
    return unfocusStyles(props, {
      forceOutline,
      justBorder
    });
  }, !forceOutline && "\n  ::-moz-focus-inner {\n    border: 0;\n  }\n  ");
};
var adjustPad = function adjustPad2(props, value) {
  return parseMetricToNum((props.theme.global.edgeSize[value] || value) + "px") + parseMetricToNum(props.theme.global.control.border.width + "px") + "px";
};
var getInputPadBySide = function getInputPadBySide2(props, side) {
  if (typeof props.theme.global.input.padding !== "object") {
    var _adjustedPad = adjustPad(props, props.theme.global.input.padding);
    return _adjustedPad;
  }
  var orientation;
  if (side === "left" || side === "right")
    orientation = "horizontal";
  else if (side === "top" || side === "bottom")
    orientation = "vertical";
  else
    orientation = void 0;
  var pad = props.theme.global.input.padding[side] || props.theme.global.input.padding[orientation];
  var adjustedPad = adjustPad(props, pad);
  return adjustedPad;
};
var placeholderColor = Ae(["color:", ";"], function(props) {
  return normalizeColor(props.theme.global.colors.placeholder, props.theme);
});
var placeholderStyle = Ae(["&::-webkit-input-placeholder{", ";}&::-moz-placeholder{", ";}&:-ms-input-placeholder{", ";}"], placeholderColor, placeholderColor, placeholderColor);
var inputSizeStyle = function inputSizeStyle2(props) {
  var data = props.theme.text[props.size];
  if (!data) {
    return Ae(["font-size:", ";"], props.size);
  }
  return Ae(["font-size:", ";line-height:", ";"], data.size, data.height);
};
var inputStyle = Ae(["box-sizing:border-box;", " font-family:inherit;border:none;-webkit-appearance:none;background:transparent;color:inherit;width:100%;", " ", " ", " margin:0;", " &:focus{", ";}", " ", "::-webkit-search-decoration{-webkit-appearance:none;}&::-moz-focus-inner{border:none;outline:none;}&:-moz-placeholder,&::-moz-placeholder{opacity:1;}", ""], function(props) {
  var _props$theme$text$pro;
  return "font-size: " + (props.theme.global.input.font.size ? ((_props$theme$text$pro = props.theme.text[props.theme.global.input.font.size]) == null ? void 0 : _props$theme$text$pro.size) || props.theme.global.input.font.size : "inherit") + ";";
}, function(props) {
  return props.theme.global.input.font.height && "line-height: " + props.theme.global.input.font.height + ";";
}, function(props) {
  return props.theme.global.input.padding && typeof props.theme.global.input.padding !== "object" ? (
    // On a breaking change release, this condition could be removed and
    // just the edgeStyle could remain. Currently, this is needed for
    // backwards compatibility since we are placing the calculation in
    // base.js
    "padding: " + (parseMetricToNum(props.theme.global.edgeSize[props.theme.global.input.padding] || props.theme.global.input.padding) - parseMetricToNum(props.theme.global.control.border.width)) + "px;"
  ) : edgeStyle("padding", props.theme.global.input.padding, props.responsive, props.theme.box.responsiveBreakpoint, props.theme);
}, function(props) {
  return (
    // for backwards compatibility, check if props.theme.global.input.weight
    (props.theme.global.input.weight || props.theme.global.input.font.weight) && Ae(["font-weight:", ";"], props.theme.global.input.weight || props.theme.global.input.font.weight)
  );
}, function(props) {
  return props.size && inputSizeStyle(props);
}, function(props) {
  return (!props.plain || props.focusIndicator) && focusStyle();
}, controlBorderStyle, placeholderStyle, function(props) {
  return props.theme.global.input.extend;
});
var inputPadForIcon = Ae(["", ""], function(props) {
  var _props$theme, _props$theme$icon, _props$theme$icon2, _props$theme$icon2$si;
  var pad = (_props$theme = props.theme) != null && (_props$theme$icon = _props$theme.icon) != null && _props$theme$icon.matchSize ? parseMetricToNum((_props$theme$icon2 = props.theme.icon) == null ? void 0 : (_props$theme$icon2$si = _props$theme$icon2.size) == null ? void 0 : _props$theme$icon2$si[(props == null ? void 0 : props.size) || "medium"]) + parseMetricToNum(props.theme.global.edgeSize.medium) + "px" : props.theme.global.edgeSize.large;
  return props.reverse ? "padding-right: " + pad + ";" : "padding-left: " + pad + ";";
});
var overflowStyle = function overflowStyle2(overflowProp) {
  if (typeof overflowProp === "string") {
    return Ae(["overflow:", ";"], overflowProp);
  }
  return Ae(["", " ", ";"], overflowProp.horizontal && "overflow-x: " + overflowProp.horizontal + ";", overflowProp.vertical && "overflow-y: " + overflowProp.vertical + ";");
};
var ALIGN_SELF_MAP = {
  center: "center",
  end: "flex-end",
  start: "flex-start",
  stretch: "stretch",
  baseline: "baseline"
};
var genericStyles = Ae(["", " ", " ", ""], function(props) {
  return props.alignSelf && "align-self: " + ALIGN_SELF_MAP[props.alignSelf] + ";";
}, function(props) {
  return props.gridArea && "grid-area: " + props.gridArea + ";";
}, function(props) {
  return props.margin && props.theme.global && edgeStyle("margin", props.margin, props.responsive, props.theme.global.edgeSize.responsiveBreakpoint, props.theme);
});
var disabledStyle = function disabledStyle2(componentStyle) {
  return Ae(["opacity:", ";cursor:default;"], function(props) {
    return componentStyle || props.theme.global.control.disabled.opacity;
  });
};
var sizeStyle = function sizeStyle2(name, value, theme) {
  return Ae(["", ":", ";"], name, theme.global.size[value] || value);
};
var plainInputStyle = Ae(["outline:none;border:none;"]);
var kindPartStyles = function kindPartStyles2(obj, theme, colorValue) {
  var styles = [];
  if (obj.padding || obj.pad) {
    var pad = obj.padding || obj.pad;
    if (pad.vertical || pad.horizontal)
      styles.push("padding: " + (theme.global.edgeSize[pad.vertical] || pad.vertical || 0) + " " + (theme.global.edgeSize[pad.horizontal] || pad.horizontal || 0) + ";");
    else
      styles.push("padding: " + (theme.global.edgeSize[pad] || pad || 0) + ";");
  }
  if (obj.background)
    styles.push(backgroundStyle(colorValue || obj.background, theme, obj.color || (Object.prototype.hasOwnProperty.call(obj, "color") && obj.color === void 0 ? false : void 0)));
  else if (obj.color)
    styles.push("color: " + normalizeColor(obj.color, theme) + ";");
  if (obj.border) {
    if (obj.border.width)
      styles.push(Ae(["border-style:solid;border-width:", ";"], obj.border.width));
    if (obj.border.color)
      styles.push(Ae(["border-color:", ";"], normalizeColor(!obj.background && colorValue || obj.border.color || "border", theme)));
    if (obj.border.radius)
      styles.push(Ae(["border-radius:", ";"], obj.border.radius));
  } else if (obj.border === false)
    styles.push("border: none;");
  if (colorValue && !obj.border && !obj.background)
    styles.push("color: " + normalizeColor(colorValue, theme) + ";");
  if (obj.font) {
    if (obj.font.size) {
      styles.push("font-size: " + (theme.text[obj.font.size].size || obj.font.size) + ";");
    }
    if (obj.font.height) {
      styles.push("line-height: " + obj.font.height + ";");
    }
    if (obj.font.weight) {
      styles.push("font-weight: " + obj.font.weight + ";");
    }
  }
  if (obj.opacity) {
    var opacity = obj.opacity === true ? theme.global.opacity.medium : theme.global.opacity[obj.opacity] || obj.opacity;
    styles.push("opacity: " + opacity + ";");
  }
  if (obj.extend)
    styles.push(obj.extend);
  return styles;
};
var ROUND_MAP = {
  full: "100%"
};
var roundStyle = function roundStyle2(data, responsive, theme) {
  var breakpoint = getBreakpointStyle(theme, theme.box.responsiveBreakpoint);
  var styles = [];
  if (typeof data === "object") {
    var size = ROUND_MAP[data.size] || theme.global.edgeSize[data.size || "medium"] || data.size;
    var responsiveSize = responsive && breakpoint && breakpoint.edgeSize[data.size] && (breakpoint.edgeSize[data.size] || data.size);
    if (data.corner === "top") {
      styles.push(Ae(["border-top-left-radius:", ";border-top-right-radius:", ";"], size, size));
      if (responsiveSize) {
        styles.push(breakpointStyle(breakpoint, "\n          border-top-left-radius: " + responsiveSize + ";\n          border-top-right-radius: " + responsiveSize + ";\n        "));
      }
    } else if (data.corner === "bottom") {
      styles.push(Ae(["border-bottom-left-radius:", ";border-bottom-right-radius:", ";"], size, size));
      if (responsiveSize) {
        styles.push(breakpointStyle(breakpoint, "\n          border-bottom-left-radius: " + responsiveSize + ";\n          border-bottom-right-radius: " + responsiveSize + ";\n        "));
      }
    } else if (data.corner === "left") {
      styles.push(Ae(["border-top-left-radius:", ";border-bottom-left-radius:", ";"], size, size));
      if (responsiveSize) {
        styles.push(breakpointStyle(breakpoint, "\n          border-top-left-radius: " + responsiveSize + ";\n          border-bottom-left-radius: " + responsiveSize + ";\n        "));
      }
    } else if (data.corner === "right") {
      styles.push(Ae(["border-top-right-radius:", ";border-bottom-right-radius:", ";"], size, size));
      if (responsiveSize) {
        styles.push(breakpointStyle(breakpoint, "\n          border-top-right-radius: " + responsiveSize + ";\n          border-bottom-right-radius: " + responsiveSize + ";\n        "));
      }
    } else if (data.corner) {
      styles.push(Ae(["border-", "-radius:", ";"], data.corner, size));
      if (responsiveSize) {
        styles.push(breakpointStyle(breakpoint, "\n          border-" + data.corner + "-radius: " + responsiveSize + ";\n        "));
      }
    } else {
      styles.push(Ae(["border-radius:", ";"], size));
      if (responsiveSize) {
        styles.push(breakpointStyle(breakpoint, "\n          border-radius: " + responsiveSize + ";\n        "));
      }
    }
  } else {
    var _size2 = data === true ? "medium" : data;
    styles.push(Ae(["border-radius:", ";"], ROUND_MAP[_size2] || theme.global.edgeSize[_size2] || _size2));
    var _responsiveSize = breakpoint && breakpoint.edgeSize[_size2];
    if (_responsiveSize) {
      styles.push(breakpointStyle(breakpoint, "\n        border-radius: " + _responsiveSize + ";\n      "));
    }
  }
  return styles;
};
var TEXT_ALIGN_MAP = {
  center: "center",
  end: "right",
  justify: "justify",
  start: "left"
};
var textAlignStyle = Ae(["text-align:", ";"], function(props) {
  return TEXT_ALIGN_MAP[props.textAlign];
});
var ALIGN_ITEMS_MAP = {
  baseline: "baseline",
  center: "center",
  end: "flex-end",
  start: "flex-start",
  stretch: "stretch"
};
var alignStyle = Ae(["align-items:", ";"], function(props) {
  var _ALIGN_ITEMS_MAP$prop;
  return (_ALIGN_ITEMS_MAP$prop = ALIGN_ITEMS_MAP[props.align]) != null ? _ALIGN_ITEMS_MAP$prop : props.align;
});
var ALIGN_CONTENT_MAP = {
  around: "space-around",
  baseline: "baseline",
  between: "space-between",
  center: "center",
  evenly: "space-evenly",
  end: "flex-end",
  start: "flex-start",
  stretch: "stretch"
};
var alignContentStyle = Ae(["align-content:", ";"], function(props) {
  var _ALIGN_CONTENT_MAP$pr;
  return (_ALIGN_CONTENT_MAP$pr = ALIGN_CONTENT_MAP[props.alignContent]) != null ? _ALIGN_CONTENT_MAP$pr : props.alignContent;
});
var getSize = function getSize2(theme, size) {
  return theme.global.size[size] || size;
};
var widthObjectStyle = function widthObjectStyle2(width, theme) {
  var result = [];
  if (width.max)
    result.push(Ae(["max-width:", ";"], getSize(theme, width.max)));
  if (width.min)
    result.push(Ae(["min-width:", ";"], getSize(theme, width.min)));
  if (width.width)
    result.push(Ae(["width:", ";"], getSize(theme, width.width)));
  return result;
};
var widthStringStyle = function widthStringStyle2(width, theme) {
  return Ae(["width:", ";"], getSize(theme, width));
};
var widthStyle = function widthStyle2(width, theme) {
  return typeof width === "object" ? widthObjectStyle(width, theme) : widthStringStyle(width, theme);
};
var heightObjectStyle = function heightObjectStyle2(height, theme) {
  var result = [];
  if (height.max)
    result.push(Ae(["max-height:", ";"], getSize(theme, height.max)));
  if (height.min)
    result.push(Ae(["min-height:", ";"], getSize(theme, height.min)));
  if (height.width)
    result.push(Ae(["height:", ";"], getSize(theme, height.height)));
  if (height.height)
    result.push(Ae(["height:", ";"], getSize(theme, height.height)));
  return result;
};
var heightStringStyle = function heightStringStyle2(height, theme) {
  return Ae(["height:", ";"], getSize(theme, height));
};
var heightStyle = function heightStyle2(height, theme) {
  return typeof height === "object" ? heightObjectStyle(height, theme) : heightStringStyle(height, theme);
};

// node_modules/grommet/es6/utils/object.js
function _extends2() {
  _extends2 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends2.apply(this, arguments);
}
var isObject = function isObject2(item) {
  return item && typeof item === "object" && !Array.isArray(item);
};
var deepFreeze = function deepFreeze2(obj) {
  Object.keys(obj).forEach(function(key) {
    return key && isObject(obj[key]) && Object.freeze(obj[key]);
  });
  return Object.freeze(obj);
};
var deepMerge = function deepMerge2(target) {
  for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    sources[_key - 1] = arguments[_key];
  }
  if (!sources.length) {
    return target;
  }
  var output = _extends2({}, target);
  sources.forEach(function(source) {
    if (isObject(source)) {
      Object.keys(source).forEach(function(key) {
        if (isObject(source[key])) {
          if (!output[key]) {
            output[key] = _extends2({}, source[key]);
          } else {
            output[key] = deepMerge2(output[key], source[key]);
          }
        } else {
          output[key] = source[key];
        }
      });
    }
  });
  return output;
};
var removeUndefined = function removeUndefined2(obj) {
  var result = {};
  Object.keys(obj).forEach(function(key) {
    if (obj[key] !== void 0) {
      result[key] = obj[key];
    }
  });
  return result;
};

// node_modules/grommet/es6/utils/pagination.js
var import_react3 = __toESM(require_react());
var _excluded = ["data", "page", "step"];
function _extends3() {
  _extends3 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends3.apply(this, arguments);
}
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var normalizeShow = function normalizeShow2(showProp, step) {
  var page;
  if (typeof showProp === "number")
    page = Math.ceil((showProp + 1) / step);
  else if (typeof showProp === "object" && "page" in showProp)
    page = showProp.page;
  return page;
};
var usePagination = function usePagination2(_ref) {
  var data = _ref.data, page = _ref.page, step = _ref.step, rest = _objectWithoutPropertiesLoose(_ref, _excluded);
  var totalPages = data ? Math.ceil(data.length / step) : 0;
  var _useState = (0, import_react3.useState)(Math.min(page, totalPages) || 1), activePage = _useState[0], setActivePage = _useState[1];
  if (activePage > totalPages && (data == null ? void 0 : data.length) > 0)
    setActivePage(Math.max(totalPages, 1));
  var itemsBeginIndex = step * (activePage - 1);
  var itemsEndIndex = itemsBeginIndex + step;
  var currentItems = (0, import_react3.useMemo)(function() {
    if (Array.isArray(data))
      return data.slice(itemsBeginIndex, itemsEndIndex);
    return [];
  }, [data, itemsBeginIndex, itemsEndIndex]);
  var paginationProps = _extends3({
    numberItems: data && data.length,
    onChange: function onChange(event) {
      return setActivePage(event.page);
    },
    page: activePage,
    step
  }, rest);
  return [currentItems, paginationProps];
};

// node_modules/grommet/es6/utils/PortalContext.js
var import_react4 = __toESM(require_react());
var PortalContext = import_react4.default.createContext([]);

// node_modules/grommet/es6/utils/refs.js
var import_react5 = __toESM(require_react());
var useForwardedRef = function useForwardedRef2(ref) {
  var innerRef = (0, import_react5.useRef)(null);
  (0, import_react5.useImperativeHandle)(ref, function() {
    return innerRef.current;
  }, [innerRef]);
  return innerRef;
};

// node_modules/grommet/es6/utils/use-keyboard.js
var import_react6 = __toESM(require_react());
var useKeyboard = function useKeyboard2() {
  var _useState = (0, import_react6.useState)(), usingKeyboard = _useState[0], setUsingKeyboard = _useState[1];
  (0, import_react6.useEffect)(function() {
    var onMouseDown = function onMouseDown2() {
      return setUsingKeyboard(false);
    };
    var onKeyDown = function onKeyDown2() {
      return setUsingKeyboard(true);
    };
    document.addEventListener("mousedown", onMouseDown);
    document.addEventListener("keydown", onKeyDown);
    return function() {
      document.removeEventListener("mousedown", onMouseDown);
      document.removeEventListener("keydown", onKeyDown);
    };
  }, []);
  return usingKeyboard;
};

// node_modules/grommet/es6/themes/base.js
var import_Actions = __toESM(require_Actions());
var import_AssistListening = __toESM(require_AssistListening());
var import_CircleInformation = __toESM(require_CircleInformation());
var import_ClosedCaption = __toESM(require_ClosedCaption());
var import_Expand = __toESM(require_Expand());
var import_FormClose = __toESM(require_FormClose());
var import_FormDown = __toESM(require_FormDown());
var import_FormNext = __toESM(require_FormNext());
var import_FormPrevious = __toESM(require_FormPrevious());
var import_FormUp = __toESM(require_FormUp());
var import_Next = __toESM(require_Next());
var import_Pause = __toESM(require_Pause());
var import_Play = __toESM(require_Play());
var import_FormPin = __toESM(require_FormPin());
var import_Previous = __toESM(require_Previous());
var import_StatusCriticalSmall = __toESM(require_StatusCriticalSmall());
var import_StatusGoodSmall = __toESM(require_StatusGoodSmall());
var import_StatusWarningSmall = __toESM(require_StatusWarningSmall());
var import_StatusUnknownSmall = __toESM(require_StatusUnknownSmall());
var import_Subtract = __toESM(require_Subtract());
var import_Volume = __toESM(require_Volume());
var import_VolumeLow = __toESM(require_VolumeLow());
var import_base = __toESM(require_base());
function _extends4() {
  _extends4 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends4.apply(this, arguments);
}
var brandColor = "#7D4CDB";
var accentColors = ["#6FFFB0", "#FD6FFF", "#81FCED", "#FFCA58"];
var neutralColors = ["#00873D", "#3D138D", "#00739D", "#A2423D"];
var statusColors = {
  critical: "#FF4040",
  error: "#B30000",
  warning: "#FFAA15",
  ok: "#00C781",
  unknown: "#CCCCCC",
  disabled: "#CCCCCC"
};
var darkColors = ["#333333", "#555555", "#777777", "#999999", "#999999", "#999999"];
var lightColors = ["#F8F8F8", "#F2F2F2", "#EDEDED", "#DADADA", "#DADADA", "#DADADA"];
var focusColor = accentColors[0];
var colors = {
  active: "rgba(221, 221, 221, 0.5)",
  "background-back": {
    dark: "#33333308",
    light: "#EDEDED"
  },
  "background-front": {
    dark: "#444444",
    light: "#FFFFFF"
  },
  "background-contrast": {
    light: "#33333310",
    dark: "#FFFFFF18"
  },
  "active-background": "background-contrast",
  "active-text": "text-strong",
  black: "#000000",
  border: {
    dark: "rgba(255, 255, 255, 0.33)",
    light: "rgba(0, 0, 0, 0.33)"
  },
  brand: brandColor,
  control: {
    dark: "accent-1",
    light: "brand"
  },
  focus: focusColor,
  "graph-0": "accent-1",
  "graph-1": "neutral-1",
  "graph-2": "neutral-2",
  "graph-3": "neutral-3",
  "graph-4": "neutral-4",
  placeholder: "#AAAAAA",
  selected: "brand",
  text: {
    dark: "#f8f8f8",
    light: "#444444"
  },
  "text-strong": {
    dark: "#FFFFFF",
    light: "#000000"
  },
  "text-weak": {
    dark: "#CCCCCC",
    light: "#555555"
  },
  "text-xweak": {
    dark: "#BBBBBB",
    light: "#666666"
  },
  icon: {
    dark: "#f8f8f8",
    light: "#666666"
  },
  "selected-background": "brand",
  "selected-text": "text-strong",
  white: "#FFFFFF"
};
var colorArray = function colorArray2(array, prefix) {
  return array.forEach(function(color, index) {
    colors[prefix + "-" + (index + 1)] = color;
  });
};
colorArray(accentColors, "accent");
colorArray(darkColors, "dark");
colorArray(lightColors, "light");
colorArray(neutralColors, "neutral");
Object.keys(statusColors).forEach(function(color) {
  colors["status-" + color] = statusColors[color];
});
var generate = function generate2(baseSpacing, scale) {
  if (baseSpacing === void 0) {
    baseSpacing = 24;
  }
  if (scale === void 0) {
    scale = 6;
  }
  var baseFontSize = baseSpacing * 0.75;
  var fontScale = baseSpacing / scale;
  var fontSizing = function fontSizing2(factor) {
    return {
      size: baseFontSize + factor * fontScale + "px",
      height: baseSpacing + factor * fontScale + "px",
      // maxWidth chosen to be ~50 characters wide
      // see: https://ux.stackexchange.com/a/34125
      maxWidth: baseSpacing * (baseFontSize + factor * fontScale) + "px"
    };
  };
  var borderWidth = 2;
  var controlBorderWidth = 1;
  var result = deepMerge(import_base.base, {
    global: {
      active: {
        background: {
          color: "active",
          opacity: "medium"
        },
        color: {
          dark: "white",
          light: "black"
        }
      },
      animation: {
        duration: "1s",
        jiggle: {
          duration: "0.1s"
        }
      },
      // backgrounds: undefined,
      borderSize: {
        xsmall: "1px",
        small: "2px",
        medium: baseSpacing / 6 + "px",
        // 4
        large: baseSpacing / 2 + "px",
        // 12
        xlarge: baseSpacing + "px"
        // 24
      },
      breakpoints: {
        small: {
          value: baseSpacing * 32,
          // 768
          borderSize: {
            xsmall: "1px",
            small: "2px",
            medium: baseSpacing / 6 + "px",
            // 4
            large: baseSpacing / 4 + "px",
            // 6
            xlarge: baseSpacing / 2 + "px"
            // 12
          },
          edgeSize: {
            none: "0px",
            hair: "1px",
            // for Chart
            xxsmall: "2px",
            xsmall: baseSpacing / 8 + "px",
            // 3
            small: baseSpacing / 4 + "px",
            // 6
            medium: baseSpacing / 2 + "px",
            // 12
            large: baseSpacing + "px",
            // 24
            xlarge: baseSpacing * 2 + "px"
            // 48
          },
          size: {
            xxsmall: baseSpacing + "px",
            // 24
            xsmall: baseSpacing * 2 + "px",
            // 48
            small: baseSpacing * 4 + "px",
            // 96
            medium: baseSpacing * 8 + "px",
            // 192
            large: baseSpacing * 16 + "px",
            // 384
            xlarge: baseSpacing * 32 + "px",
            // 768
            full: "100%"
          }
        },
        medium: {
          value: baseSpacing * 64
          // 1536
        },
        large: {}
        // anything above 'medium'
      },
      // Breakpoints used at Server Side Rendering for the initial rendering
      // These values correspond to the theme breakpoints
      deviceBreakpoints: {
        phone: "small",
        tablet: "medium",
        computer: "large"
      },
      colors,
      control: {
        border: {
          width: controlBorderWidth + "px",
          radius: "4px",
          color: "border"
        },
        disabled: {
          opacity: 0.3
        }
      },
      // The time to wait after the user stopped typing, measured in ms.
      // A half second (500ms) debounce can be a helpful starting point.
      // You want to give the user time to fill out a field, but capture
      // their attention before they move on past it. 2 second (2000ms)
      // might be too long depending on how fast people type, and 200ms
      // would be an eye blink
      debounceDelay: 500,
      drop: {
        // intelligentMargin: undefined,
        background: {
          dark: "black",
          light: "white"
        },
        border: {
          radius: "0px"
        },
        // margin: undefined
        shadowSize: "small",
        // shadowSize is deprecated, use 'elevation'
        zIndex: "20"
      },
      edgeSize: {
        none: "0px",
        hair: "1px",
        // for Chart
        xxsmall: baseSpacing / 8 + "px",
        // 3
        xsmall: baseSpacing / 4 + "px",
        // 6
        small: baseSpacing / 2 + "px",
        // 12
        medium: baseSpacing + "px",
        // 24
        large: baseSpacing * 2 + "px",
        // 48
        xlarge: baseSpacing * 4 + "px",
        // 96
        responsiveBreakpoint: "small"
      },
      elevation: {
        light: {
          none: "none",
          xsmall: "0px 1px 2px rgba(0, 0, 0, 0.20)",
          small: "0px 2px 4px rgba(0, 0, 0, 0.20)",
          medium: "0px 4px 8px rgba(0, 0, 0, 0.20)",
          large: "0px 8px 16px rgba(0, 0, 0, 0.20)",
          xlarge: "0px 12px 24px rgba(0, 0, 0, 0.20)"
        },
        dark: {
          none: "none",
          xsmall: "0px 2px 2px rgba(255, 255, 255, 0.40)",
          small: "0px 4px 4px rgba(255, 255, 255, 0.40)",
          medium: "0px 6px 8px rgba(255, 255, 255, 0.40)",
          large: "0px 8px 16px rgba(255, 255, 255, 0.40)",
          xlarge: "0px 12px 24px rgba(255, 255, 255, 0.40)"
        }
      },
      focus: {
        // shadow or outline are required for accessibility
        border: {
          // remove to only have shadow
          color: "focus"
        },
        // outline: { color: undefined, size: undefined },
        shadow: {
          color: "focus",
          size: "2px"
        }
      },
      font: _extends4({}, fontSizing(0)),
      hover: {
        background: {
          color: "active",
          opacity: "medium"
        },
        color: {
          dark: "white",
          light: "black"
        }
      },
      input: {
        padding: {
          horizontal: parseMetricToNum(baseSpacing / 2 + "px") - parseMetricToNum(controlBorderWidth + "px") + "px",
          vertical: parseMetricToNum(baseSpacing / 2 + "px") - parseMetricToNum(controlBorderWidth + "px") + "px"
        },
        font: {
          // size: undefined,
          // height: undefined,
          weight: 600
        }
        // deprecate in v3
        // weight: undefined,
      },
      opacity: {
        strong: 0.8,
        medium: 0.4,
        weak: 0.1
      },
      selected: {
        background: "selected",
        color: "white"
      },
      spacing: baseSpacing + "px",
      size: {
        xxsmall: baseSpacing * 2 + "px",
        // 48
        xsmall: baseSpacing * 4 + "px",
        // 96
        small: baseSpacing * 8 + "px",
        // 192
        medium: baseSpacing * 16 + "px",
        // 384
        large: baseSpacing * 32 + "px",
        // 768
        xlarge: baseSpacing * 48 + "px",
        // 1152
        xxlarge: baseSpacing * 64 + "px",
        // 1536
        full: "100%"
      }
    },
    // icon: {
    //   extennd: undefined,
    //   matchSize: undefined,
    //   size: undefined,
    // },
    accordion: {
      panel: {
        // border: {
        //   side: 'bottom',
        //   color: 'border',
        // },
      },
      border: {
        side: "bottom",
        color: "border"
      },
      heading: {
        level: "4"
        // level ranges from 1-6
        // margin: undefined
      },
      hover: {
        // background: undefined,
        color: {
          dark: "light-4",
          light: "dark-3"
        },
        // deprecated
        heading: {
          color: {
            dark: "light-4",
            light: "dark-3"
          }
        }
      },
      icons: {
        collapse: import_FormUp.FormUp,
        expand: import_FormDown.FormDown
        // color: { dark: undefined, light: undefined },
      }
    },
    anchor: {
      textDecoration: "none",
      fontWeight: 600,
      color: {
        dark: "accent-1",
        light: "brand"
      },
      gap: "small",
      hover: {
        textDecoration: "underline"
        // fontWeight: undefined,
        // extend: undefined,
      }
      // size: {
      //   medium: {
      //     color: undefined,
      //     fontWeight: undefined,
      //     textDecoration: undefined,
      //   },
      // },
      // extend: undefined,
    },
    avatar: {
      // extend: undefined,
      size: {
        xsmall: baseSpacing * 0.75 + "px",
        // 18px
        small: baseSpacing + "px",
        // 24px
        medium: baseSpacing * 2 + "px",
        // default 48px
        large: baseSpacing * 3 + "px",
        // 72px
        xlarge: baseSpacing * 4 + "px",
        // 96px
        "2xl": baseSpacing * 5 + "px",
        // 120px
        "3xl": baseSpacing * 6 + "px",
        // 144px
        "4xl": baseSpacing * 7 + "px",
        // 168px
        "5xl": baseSpacing * 8 + "px"
        // 192px
      },
      text: {
        size: {
          xsmall: "small",
          // 14px
          small: "medium",
          // 18px
          medium: "large",
          // 22px
          large: "xlarge",
          // 26px
          xlarge: "xxlarge",
          // 34px
          "2xl": "3xl",
          // 42px
          "3xl": "4xl",
          // 54px
          "4xl": "5xl",
          // 70px
          "5xl": "6xl"
          // 90px
        }
        // fontWeight: undefined,
        // extend: undefined
      }
    },
    box: {
      responsiveBreakpoint: "small"
      // when we switch rows to columns
      // extend: undefined,
    },
    button: {
      badge: {
        // align: undefined,,
        container: {
          background: "brand"
          // pad: undefined,
          // extend: undefined,
        },
        size: {
          medium: baseSpacing + "px"
          // 24px
        },
        text: {
          size: {
            medium: "small"
            // 14px
          }
        }
      },
      gap: "small",
      size: {
        small: {
          border: {
            radius: baseSpacing * 0.75 + "px"
          },
          pad: {
            vertical: baseSpacing / 4 - borderWidth + "px",
            // 4px
            horizontal: baseSpacing - borderWidth * 2 + "px"
            // 20px,
          }
          // iconOnly: {
          //   pad: undefined,
          // },
        },
        medium: {
          border: {
            radius: baseSpacing * 0.75 + "px"
            // 18px
          },
          pad: {
            vertical: baseSpacing / 4 - borderWidth + "px",
            // 4px
            horizontal: baseSpacing - borderWidth + "px"
            // 22px
          }
          // iconOnly: {
          //   pad: undefined,
          // },
        },
        large: {
          border: {
            radius: baseSpacing + "px"
            // 24px
          },
          pad: {
            vertical: baseSpacing / 4 + borderWidth + "px",
            // 8px
            horizontal: baseSpacing + borderWidth * 4 + "px"
            // 32px,
          }
          // iconOnly: {
          //   pad: undefined,
          // },
        }
      },
      border: {
        // color: { dark: undefined, light: undefined }
        width: borderWidth + "px",
        radius: baseSpacing * 0.75 + "px"
      },
      // color: { dark: undefined, light: undefined }
      // default: {
      //   background: undefined,
      //   border: undefined,
      //   color: undefined,
      //   direction: undefined,
      //   font: {
      //     size: undefined,
      //     weight: undefined,
      //   },
      //   icon: undefined,
      //   padding: {
      //     vertical: undefined,
      //     horizontal: undefined,
      //   },
      //   reverse: undefined,
      //   extend: undefined,
      // },
      // primary: {
      //   font: {
      //     size: undefined,
      //     weight: undefined,
      //   },
      //   background: undefined,
      //   border: undefined,
      //   color: undefined,
      //   direction: undefined,
      //   icon: undefined,
      //   padding: {
      //     vertical: undefined,
      //     horizontal: undefined,
      //   },
      //   reverse: undefined,
      //   extend: undefined,
      // },
      // secondary: {
      //   font: {
      //     size: undefined,
      //     weight: undefined,
      //   },
      //   background: undefined,
      //   border: undefined,
      //   color: undefined,
      //   direction: undefined,
      //   icon: undefined,
      //   padding: {
      //     vertical: undefined,
      //     horizontal: undefined,
      //   },
      //   reverse: undefined,
      //   extend: undefined,
      // },
      // option: {
      //   background: undefined,
      //   border: undefined,
      //   color: undefined,
      //   direction: undefined,
      //   icon: undefined,
      //   padding: {
      //     vertical: undefined,
      //     horizontal: undefined,
      //   },
      //   reverse: undefined,
      //   extend: undefined,
      // },
      active: {
        background: "active-background",
        //   border: undefined,
        color: "active-text"
        //   extend: undefined,
        //   default: {},
        //   primary: {},
        //   secondary: {},
      },
      disabled: {
        //   background: undefined,
        //   border: undefined,
        //   color: undefined,
        opacity: 0.3
        //   extend: undefined,
        //   default: {},
        //   primary: {},
        //   secondary: {},
      },
      // hover: {
      //   background: undefined,
      //   border: undefined,
      //   color: undefined,
      //   extend: undefined,
      //   default: {},
      //   primary: {},
      //   secondary: {},
      // },
      padding: {
        vertical: baseSpacing / 4 - borderWidth + "px",
        horizontal: baseSpacing - borderWidth + "px"
      },
      transition: {
        timing: "ease-in-out",
        duration: 0.1,
        properties: ["color", "background-color", "border-color", "box-shadow"]
      },
      skeleton: {
        width: {
          min: "100px"
        }
      }
    },
    calendar: {
      // daySize must align with global.size
      small: {
        // title: {},
        fontSize: baseFontSize - fontScale + "px",
        lineHeight: 1.375,
        daySize: baseSpacing * 8 / 7 + "px",
        slideDuration: "0.2s"
      },
      medium: {
        // title: {},
        fontSize: baseFontSize + "px",
        lineHeight: 1.45,
        daySize: baseSpacing * 16 / 7 + "px",
        slideDuration: "0.5s"
      },
      large: {
        // title: {},
        fontSize: baseFontSize + 3 * fontScale + "px",
        lineHeight: 1.11,
        daySize: baseSpacing * 32 / 7 + "px",
        slideDuration: "0.8s"
      },
      icons: {
        previous: import_Previous.Previous,
        next: import_Next.Next,
        small: {
          previous: import_FormPrevious.FormPrevious,
          next: import_FormNext.FormNext
        }
      },
      heading: {
        level: "4"
      }
      // level ranges from 1-6
    },
    card: {
      container: {
        round: "small",
        elevation: "small"
        // extend: undefined,
      },
      // hover: {
      //   container: {
      //     elevation: undefined,
      //   },
      // },
      header: {},
      body: {},
      footer: {}
    },
    cards: {
      container: {
        // any box props
        gap: "xsmall"
        // extend: undefined,
      }
    },
    carousel: {
      icons: {
        current: import_Subtract.Subtract,
        next: import_Next.Next,
        previous: import_Previous.Previous
        // color: { dark: undefined, light: undefined },
      },
      animation: {
        duration: 1e3
      },
      disabled: {
        icons: {
          // color: { dark: undefined, light: undefined },
        }
      }
    },
    chart: {
      color: "graph-0"
      // extend: undefined,
    },
    checkBox: {
      border: {
        color: {
          dark: "rgba(255, 255, 255, 0.5)",
          light: "rgba(0, 0, 0, 0.15)"
        },
        width: "2px"
      },
      check: {
        // extend: undefined,
        radius: "4px",
        thickness: "4px"
      },
      label: {
        align: "center"
      },
      // color: { dark: undefined, light: undefined },
      // extend: undefined,
      // gap: undefined
      hover: {
        border: {
          color: {
            dark: "white",
            light: "black"
          }
        }
        // background: undefined,
        // extend: undefined,
      },
      icon: {
        // size: undefined,
        // extend: undefined,
      },
      icons: {
        // checked: undefined,
        // indeterminate: undefined,
      },
      // pad: undefined,
      size: baseSpacing + "px",
      toggle: {
        // background: undefined
        color: {
          dark: "#d9d9d9",
          light: "#d9d9d9"
        },
        knob: {
          // extend: undefined,
        },
        radius: baseSpacing + "px",
        size: baseSpacing * 2 + "px"
        // extend: undefined,
      }
    },
    checkBoxGroup: {
      // container: {
      //   // any box props
      //   extend: undefined,
      // },
    },
    clock: {
      analog: {
        // extend: undefined,
        hour: {
          color: {
            dark: "light-2",
            light: "dark-3"
          },
          width: baseSpacing / 3 + "px",
          size: baseSpacing + "px",
          shape: "round"
        },
        minute: {
          color: {
            dark: "light-4",
            light: "dark-3"
          },
          width: baseSpacing / 6 + "px",
          size: Math.round(baseSpacing / 2) + "px",
          shape: "round"
        },
        second: {
          color: {
            dark: "accent-1",
            light: "accent-1"
          },
          width: baseSpacing / 8 + "px",
          size: Math.round(baseSpacing / 2.666) + "px",
          shape: "round"
        },
        size: {
          xsmall: baseSpacing * 2 + "px",
          small: baseSpacing * 3 + "px",
          medium: baseSpacing * 4 + "px",
          large: baseSpacing * 6 + "px",
          xlarge: baseSpacing * 9 + "px",
          xxlarge: baseSpacing * 12 + "px",
          huge: baseSpacing * 12 + "px"
          // kept for backwards compatibility
        }
      },
      digital: {
        text: {
          xsmall: {
            size: baseFontSize - 2 * fontScale + "px",
            height: 1.5
          },
          small: {
            size: baseFontSize - fontScale + "px",
            height: 1.43
          },
          medium: {
            size: baseFontSize + "px",
            height: 1.375
          },
          large: {
            size: baseFontSize + fontScale + "px",
            height: 1.167
          },
          xlarge: {
            size: baseFontSize + 2 * fontScale + "px",
            height: 1.1875
          },
          xxlarge: {
            size: baseFontSize + 4 * fontScale + "px",
            height: 1.125
          }
        }
      }
    },
    collapsible: {
      minSpeed: 200,
      baseline: 500
    },
    dateInput: {
      container: {
        round: "xxsmall"
      }
      // icon: {
      //   size: undefined,
      // },
    },
    dataTable: {
      // body: {
      //   extend: undefined,
      // },
      pinned: {
        // body: {
        //    background: undefined,
        //    extend: undefined,
        // },
        header: {
          background: {
            opacity: "strong"
          }
          //  extend: undefined,
        },
        footer: {
          background: {
            opacity: "strong"
          }
          //  extend: undefined,
        }
      },
      container: {
        // any box props
        gap: "xsmall"
        // extend: undefined,
      },
      groupHeader: {
        background: {
          dark: "dark-2",
          light: "light-2"
        },
        border: {
          side: "bottom",
          size: "xsmall"
        },
        pad: {
          horizontal: "small",
          vertical: "xsmall"
        }
      },
      groupEnd: {
        border: {
          side: "bottom",
          size: "xsmall"
        }
      },
      header: {
        // background: undefined,
        // border: undefined,
        // color: undefined,
        // extend: undefined,
        // font: {
        //   weight: undefined,
        //   size: undefined,
        // },
        gap: "small",
        // hover: {
        //   background: undefined,
        // },
        // pad: undefined,
        units: {
          color: "text-xweak",
          margin: {
            left: "xsmall"
          },
          alignSelf: "end"
        }
      },
      icons: {
        ascending: import_FormDown.FormDown,
        contract: import_FormUp.FormUp,
        descending: import_FormUp.FormUp,
        expand: import_FormDown.FormDown
        // sortable: undefined,
      },
      primary: {
        weight: "bold"
      },
      resize: {
        border: {
          color: "border",
          side: "end"
        }
        // hover: {
        //   border: {
        //     color: undefined,
        //     side: undefined,
        //     size: undefined,
        //   },
        // },
      }
    },
    diagram: {
      // extend: undefined,
      line: {
        color: "graph-0"
      }
    },
    // drop: {
    //   extend: undefined,
    //   maxHeight: undefined,
    // },
    fileInput: {
      // background: {},
      border: {
        // color: undefined,
        side: "all",
        size: "small",
        style: "dashed"
      },
      dragOver: {
        border: {
          color: "control"
        }
        // extend: undefined,
      },
      hover: {
        border: {
          color: "brand"
        }
        // extend: undefined,
      },
      icons: {
        remove: import_FormClose.FormClose
      },
      // pad: {},
      label: {
        margin: "small"
        // extend: undefined,
      },
      message: {
        margin: "small"
        // extend: undefined,
      }
      // extend: undefined,
    },
    formField: {
      border: {
        color: "border",
        error: {
          color: {
            dark: "white",
            light: "status-critical"
          }
        },
        position: "inner",
        side: "bottom"
      },
      // checkBox: {
      //   pad: undefined,
      // },
      content: {
        // margin: undefined,
        pad: "small"
      },
      disabled: {
        background: {
          color: "status-disabled",
          opacity: "medium"
        }
        // border: {
        //   color: undefined,
        // },
        // label: {
        //   color: undefined,
        // },
      },
      // focus: {
      //   background: {
      //     color: undefined,
      //   },
      //   border: {
      //     color: undefined,
      //   },
      // },
      error: {
        color: "status-critical",
        margin: {
          vertical: "xsmall",
          horizontal: "small"
        }
        // background: undefined,
        // container: {}, // any Box props
        // icon: undefined,
      },
      // extend: undefined,
      help: {
        color: "dark-3",
        margin: {
          start: "small"
        }
      },
      info: {
        color: "text-xweak",
        margin: {
          vertical: "xsmall",
          horizontal: "small"
        }
        // container: {}, // any Box props
        // icon: undefined,
      },
      label: {
        margin: {
          vertical: "xsmall",
          horizontal: "small"
        }
        // requiredIndicator: undefined,
      },
      margin: {
        bottom: "small"
      },
      // round: undefined,
      survey: {
        label: {
          margin: {
            bottom: "xsmall"
          },
          size: "medium",
          weight: 400
        }
      }
    },
    grommet: {
      // extend: undefined
    },
    header: {
      sticky: {
        zIndex: "20"
      }
    },
    heading: {
      // color: undefined,
      font: {
        // family: undefined
      },
      level: {
        1: {
          font: {
            // family: undefined,
            // weight: undefined,
          },
          small: _extends4({}, fontSizing(4)),
          medium: _extends4({}, fontSizing(8)),
          large: _extends4({}, fontSizing(16)),
          xlarge: _extends4({}, fontSizing(24))
        },
        2: {
          font: {
            // family: undefined,
            // weight: undefined,
          },
          small: _extends4({}, fontSizing(2)),
          medium: _extends4({}, fontSizing(4)),
          large: _extends4({}, fontSizing(8)),
          xlarge: _extends4({}, fontSizing(12))
        },
        3: {
          font: {
            // family: undefined,
            // weight: undefined,
          },
          small: _extends4({}, fontSizing(1)),
          medium: _extends4({}, fontSizing(2)),
          large: _extends4({}, fontSizing(4)),
          xlarge: _extends4({}, fontSizing(6))
        },
        4: {
          font: {
            // family: undefined,
            // weight: undefined,
          },
          small: _extends4({}, fontSizing(0)),
          medium: _extends4({}, fontSizing(0)),
          large: _extends4({}, fontSizing(0)),
          xlarge: _extends4({}, fontSizing(0))
        },
        5: {
          font: {
            // family: undefined,
            // weight: undefined,
          },
          small: _extends4({}, fontSizing(-0.5)),
          medium: _extends4({}, fontSizing(-0.5)),
          large: _extends4({}, fontSizing(-0.5)),
          xlarge: _extends4({}, fontSizing(-0.5))
        },
        6: {
          font: {
            // family: undefined,
            // weight: undefined,
          },
          small: _extends4({}, fontSizing(-1)),
          medium: _extends4({}, fontSizing(-1)),
          large: _extends4({}, fontSizing(-1)),
          xlarge: _extends4({}, fontSizing(-1))
        }
      },
      responsiveBreakpoint: "small",
      // when we scale the font size down
      weight: 600,
      skeleton: {
        width: {
          min: "150px",
          max: "200px"
        }
      }
    },
    layer: {
      background: {
        dark: "black",
        light: "white"
      },
      border: {
        radius: "4px"
        // intelligentRounding: undefined,
      },
      container: {
        // elevation: undefined,
        zIndex: "20"
      },
      // extend: undefined,
      overlay: {
        background: "rgba(0, 0, 0, 0.5)"
        // backdropFilter: undefined,
      },
      responsiveBreakpoint: "small",
      // when Layer takes over the full screen
      zIndex: "20"
    },
    list: {
      container: {
        // any box props
        gap: "xsmall"
        // extend: undefined,
      },
      item: {
        // background: undefined,
        border: "horizontal",
        disabled: {
          color: "status-disabled",
          cursor: "default"
        },
        pinned: {
          background: "background-contrast",
          icon: {
            size: "medium",
            pad: "small"
          }
        },
        pad: {
          horizontal: "medium",
          vertical: "small"
        }
        // extend: undefined,
      },
      icons: {
        down: import_FormDown.FormDown,
        up: import_FormUp.FormUp,
        pin: import_FormPin.FormPin
      }
      // extend: undefined,
    },
    maskedInput: {
      // container: {
      //   extend: undefined,
      // },
      // extend: undefined,
      // disabled: { opacity: undefined },
    },
    menu: {
      // background: undefined,
      // item: undefined,
      // extend: undefined,
      drop: {
        align: {
          top: "top",
          left: "left"
        }
        // any drop props
      },
      group: {
        container: {
          pad: {
            vertical: "xsmall"
          }
        },
        separator: {
          color: "border",
          size: "xsmall",
          pad: {
            horizontal: "small"
          }
        }
      },
      icons: {
        down: import_FormDown.FormDown
        // up: undefined,
        // color: { dark: undefined, light: undefined },
      }
    },
    meter: {
      color: "graph-0"
      // colors: [] || colors: ['graph-0', 'graph-1', 'graph-2', 'graph-3'],
      // extend: undefined,
    },
    nameValueList: {
      gap: {
        column: "large",
        row: "small"
      },
      pair: {
        column: {
          gap: {
            column: "large",
            row: "medium"
          }
        }
      },
      name: {
        width: "small"
      },
      value: {
        width: "medium"
      }
    },
    nameValuePair: {
      column: {
        gap: "xxsmall"
      },
      name: {
        // any text props
        color: "text",
        weight: "bold"
      },
      value: {
        // any text props
        color: "text"
      }
    },
    notification: {
      actions: {
        // any anchor props
      },
      direction: "column",
      container: {
        // any box props
        round: "xsmall",
        pad: {
          horizontal: "small",
          vertical: "xsmall"
        },
        background: {
          color: "background-front"
        }
      },
      global: {
        direction: "row",
        container: {
          // any box props
          round: "none",
          pad: {
            horizontal: "large",
            vertical: "xsmall"
          }
        }
      },
      toast: {
        // direction: undefined,
        container: {
          // any box props
          elevation: "medium",
          width: "medium"
        },
        layer: {
          position: "top",
          margin: "medium"
        },
        time: 8e3
      },
      iconContainer: {
        // any box props
        pad: {
          right: "small"
        },
        flex: false
      },
      textContainer: {
        // any box props
        gap: "medium"
      },
      title: {
        // any text props
        weight: "bold"
      },
      message: {
        // any text props
        margin: "none"
      },
      close: {
        icon: import_FormClose.FormClose
      },
      critical: {
        icon: import_StatusCriticalSmall.StatusCriticalSmall,
        background: {
          color: "status-critical",
          opacity: "weak"
        },
        color: "status-critical",
        // global: {},
        toast: {
          background: "background-front"
        }
      },
      warning: {
        icon: import_StatusWarningSmall.StatusWarningSmall,
        background: {
          color: "status-warning",
          opacity: "weak"
        },
        color: "status-warning",
        // global: {},
        toast: {
          background: "background-front"
        }
      },
      normal: {
        icon: import_StatusGoodSmall.StatusGoodSmall,
        background: {
          color: "status-ok",
          opacity: "weak"
        },
        color: "status-ok",
        // global: {},
        toast: {
          background: "background-front"
        }
      },
      info: {
        icon: import_CircleInformation.CircleInformation,
        background: "background-contrast",
        color: "text-strong",
        // global: {},
        toast: {
          background: "background-front"
        }
      },
      unknown: {
        icon: import_StatusUnknownSmall.StatusUnknownSmall,
        background: {
          color: "status-unknown",
          opacity: "weak"
        },
        color: "status-unknown",
        // global: {},
        toast: {
          background: "background-front"
        }
      },
      // deprecate "undefined" in v3
      // and if undefined, no icon
      undefined: {
        icon: import_StatusUnknownSmall.StatusUnknownSmall,
        // background: undefined,
        color: "status-unknown"
        // global: {},
        // toast: {},
      }
    },
    page: {
      wide: {
        alignSelf: "center",
        width: {
          min: "medium",
          max: "xxlarge"
        },
        small: {
          pad: {
            horizontal: "large"
          }
        },
        medium: {
          pad: {
            horizontal: "medium"
          }
        },
        large: {
          pad: {
            horizontal: "large"
          }
        }
      },
      narrow: {
        alignSelf: "center",
        width: {
          min: "medium",
          max: "large"
        },
        small: {
          pad: {
            horizontal: "large"
          }
        },
        medium: {
          pad: {
            horizontal: "medium"
          }
        },
        large: {
          pad: {
            horizontal: "large"
          }
        }
      },
      full: {
        alignSelf: "start",
        width: {
          min: "medium",
          max: "100%"
        },
        small: {
          pad: {
            horizontal: "large"
          }
        },
        medium: {
          pad: {
            horizontal: "medium"
          }
        },
        large: {
          pad: {
            horizontal: "large"
          }
        }
      }
    },
    pageHeader: {
      actions: {
        // any box props
        align: "end"
      },
      pad: {
        top: "large",
        bottom: "medium"
      },
      parent: {
        // any box props
        align: "start"
      },
      responsive: {
        actions: {
          // any box props
          align: "start",
          pad: {
            top: "small"
          }
        },
        areas: [["parent"], ["title"], ["subtitle"], ["actions"]],
        breakpoints: ["small"],
        columns: ["auto"],
        rows: ["auto"]
        // gap: undefined,
      },
      subtitle: {
        // any paragraph props
        margin: "none"
      },
      title: {
        // any heading props
        margin: "none",
        fill: true
      },
      size: {
        small: {
          pad: {
            top: "medium",
            bottom: "small"
          },
          subtitle: {
            size: "small"
          },
          title: {
            size: "small"
          }
        },
        // medium: {
        //   // pad: undefined,
        //   // subtitle: {},
        //   // title: {},
        // },
        large: {
          pad: {
            top: "xlarge",
            bottom: "large"
          },
          subtitle: {
            size: "large"
          },
          title: {
            size: "large"
          }
        }
      },
      small: {
        areas: [["parent", "parent"], ["title", "actions"], ["subtitle", "actions"]],
        columns: [["small", "flex"], "auto"],
        rows: ["auto", "auto", "auto"],
        gap: {
          row: "xsmall",
          column: "large"
        }
      },
      medium: {
        areas: [["parent", "parent"], ["title", "actions"], ["subtitle", "actions"]],
        columns: [["medium", "flex"], "auto"],
        rows: ["auto", "auto", "auto"],
        gap: {
          row: "xsmall",
          column: "medium"
        }
      },
      large: {
        areas: [["parent", "parent"], ["title", "actions"], ["subtitle", "actions"]],
        columns: [["medium", "flex"], "auto"],
        rows: ["auto", "auto", "auto"],
        gap: {
          row: "xsmall",
          column: "large"
        }
      }
    },
    pagination: {
      button: {
        active: {
          background: {
            color: "active-background"
          }
        },
        color: "text-strong",
        hover: {
          background: {
            color: "background-contrast"
          },
          color: void 0
        },
        size: {
          small: {
            border: {
              radius: baseSpacing / 8 + "px",
              // 3
              width: "2px"
            },
            pad: {
              vertical: "4px",
              horizontal: "4px"
            },
            font: _extends4({}, fontSizing(-1)),
            height: baseSpacing * 1.25 + "px",
            width: baseSpacing * 1.25 + "px"
          },
          medium: {
            border: {
              radius: baseSpacing / 6 + "px",
              // 4
              width: "2px"
            },
            pad: {
              vertical: "4px",
              horizontal: "4px"
            },
            font: _extends4({}, fontSizing(0)),
            height: baseSpacing * 1.5 + "px",
            width: baseSpacing * 1.5 + "px"
          },
          large: {
            border: {
              radius: baseSpacing / 4 + "px",
              // 6
              width: "2px"
            },
            pad: {
              vertical: "4px",
              horizontal: "4px"
            },
            font: _extends4({}, fontSizing(1)),
            height: baseSpacing * 2 + "px",
            width: baseSpacing * 2 + "px"
          }
        }
      },
      // container: {
      //   // any box props,
      //   extend: undefined,
      // },
      controls: {
        align: "center",
        direction: "row",
        gap: "xxsmall",
        margin: "none",
        pad: "none"
      },
      icons: {
        // color: undefined,
        next: import_Next.Next,
        previous: import_Previous.Previous
      }
    },
    paragraph: {
      font: {
        // family: undefined
      },
      small: _extends4({}, fontSizing(-1)),
      medium: _extends4({}, fontSizing(0)),
      large: _extends4({}, fontSizing(1)),
      xlarge: _extends4({}, fontSizing(2)),
      xxlarge: _extends4({}, fontSizing(4))
    },
    thumbsRating: {
      // dislike: {
      //   color: undefined,
      // },
      // like: {
      //   color: undefined,
      // },
    },
    spinner: {
      container: {
        animation: "rotateRight",
        color: "brand",
        pad: "small",
        round: "full",
        size: "small"
      },
      // icon: undefined
      size: {
        xsmall: baseSpacing * 0.75 + "px",
        small: baseSpacing + "px",
        // default 24
        medium: baseSpacing * 2 + "px",
        large: baseSpacing * 3 + "px",
        xlarge: baseSpacing * 4 + "px"
      }
    },
    radioButton: {
      border: {
        color: {
          dark: "rgba(255, 255, 255, 0.5)",
          light: "rgba(0, 0, 0, 0.15)"
        },
        width: "2px"
      },
      check: {
        radius: "100%"
        // background: {
        //  color: undefined,
        // },
        // color: { dark: undefined, light: undefined },
        // extend: undefined,
      },
      // color: undefined,
      hover: {
        // background: {
        //   color: undefined,
        // },
        border: {
          color: {
            dark: "white",
            light: "black"
          }
        }
      },
      icon: {
        // size: undefined,
        // extend: undefined,
      },
      icons: {
        // circle: undefined,
      },
      gap: "small",
      size: baseSpacing + "px",
      font: {
        // weight: undefined,
      },
      container: {
        // extend: undefined
      }
    },
    radioButtonGroup: {
      // container: {}, // any box props
    },
    rangeInput: {
      disabled: {
        opacity: 0.3
        //   thumb: {
        //     color: undefined,
        //   },
        //   track: {
        //     color: undefined,
        //   },
      },
      // extend: undefined
      track: {
        height: "4px",
        color: "border"
        // opacity: undefined,
        // lower: {
        //   color: 'undefined',
        //   opacity: undefined,
        // },
        // upper: {
        //   color: undefined,
        //   opacity: undefined,
        // },
        // extend: undefined
      },
      thumb: {
        // color: { dark: undefined, light: undefined },
        // extend: undefined
      }
    },
    rangeSelector: {
      background: {
        invert: {
          color: "light-4"
        }
      }
      // edge: {
      //   type: undefined,
      // },
    },
    select: {
      // background: undefined,
      clear: {
        container: {
          pad: "small",
          background: "background-contrast"
        },
        // any box props
        text: {
          color: "text-weak"
        }
        // any text props
      },
      container: {
        // extend: undefined,
      },
      control: {
        // extend: undefined,
        // open: undefined,
      },
      // emptySearchMessage: {
      //   container: {}, // any box props
      //   text: {}, // any text props
      // },
      icons: {
        // color: { dark: undefined, light: undefined },
        margin: {
          horizontal: "small"
        },
        down: import_FormDown.FormDown
        // up: undefined
      },
      options: {
        container: {
          align: "start",
          pad: "small"
        },
        text: {
          margin: "none"
        }
      },
      // searchInput: undefined,
      step: 20
    },
    selectMultiple: {
      maxInline: 5
    },
    skeleton: {
      border: false,
      colors: {
        dark: ["background", "background-front"],
        light: ["background", "background-back"]
      }
    },
    skipLinks: {
      position: "top",
      container: {
        elevation: "large",
        round: "small",
        pad: "medium"
      },
      label: {
        margin: {
          bottom: "medium"
        },
        size: "medium"
      }
    },
    starRating: {
      // color: undefined,
    },
    tab: {
      active: {
        color: "text"
        // background: undefined,
      },
      // background: undefined,
      border: {
        side: "bottom",
        size: "small",
        color: {
          dark: "accent-1",
          light: "brand"
        },
        active: {
          color: {
            dark: "white",
            light: "black"
          }
        },
        disabled: {
          // color: undefined,
        },
        hover: {
          color: {
            dark: "white",
            light: "black"
          }
          // extend: undefined,
        }
      },
      color: "control",
      // disabled: {
      //   color: undefined,
      // },
      // extend: undefined,
      hover: {
        // background: undefined,
        // extend: undefined,
        color: {
          dark: "white",
          light: "black"
        }
      },
      margin: {
        vertical: "xxsmall",
        horizontal: "small"
      },
      pad: {
        bottom: "xsmall"
      }
    },
    tabs: {
      // background: undefined,
      // extend: undefined,
      // gap: undefined,
      header: {
        // alignSelf: undefined,
        // background: undefined,
        // border: {
        //   side: undefined,
        //   size: undefined,
        //   style: undefined,
        //   color: undefined,
        // },
        // extend: undefined,
      },
      panel: {
        // extend: undefined,
      },
      step: {
        small: 1,
        medium: 3,
        large: 3
      }
    },
    table: {
      header: {
        align: "start",
        pad: {
          horizontal: "small",
          vertical: "xsmall"
        },
        border: "bottom"
        // verticalAlign: undefined,
        // background: undefined,
        // extend: undefined,
      },
      body: {
        align: "start",
        pad: {
          horizontal: "small",
          vertical: "xsmall"
        }
        // background: undefined,
        // border: undefined,
        // extend: undefined,
      },
      // row: {
      //   hover: {
      //     background: undefined,
      //     color: undefined,
      //   },
      // },
      footer: {
        align: "start",
        pad: {
          horizontal: "small",
          vertical: "xsmall"
        },
        border: "top"
        // verticalAlign: undefined,
        // background: undefined,
        // extend: undefined,
      }
    },
    tag: {
      // background: undefined,
      border: true,
      round: "large",
      // name: undefined,
      pad: {
        horizontal: "small",
        vertical: "xsmall"
      },
      remove: {
        margin: {
          right: "xsmall"
        }
      },
      separator: " : ",
      size: {
        xsmall: {
          pad: {
            horizontal: baseSpacing / 3 + "px",
            vertical: "xxsmall"
          },
          icon: {
            size: baseSpacing * 0.75 + "px"
          }
        },
        small: {
          pad: {
            horizontal: baseSpacing * 0.4 + "px",
            vertical: "xxsmall"
          },
          icon: {
            size: baseSpacing * 0.75 + "px"
          }
        },
        large: {
          pad: {
            horizontal: baseSpacing / 3 * 2 + "px",
            vertical: "xsmall"
          },
          icon: {
            size: baseSpacing * 1.25 + "px"
          }
        },
        xlarge: {
          pad: {
            horizontal: baseSpacing * 0.75 + "px",
            vertical: "xsmall"
          },
          icon: {
            size: baseSpacing * 1.5 + "px"
          }
        }
      },
      value: {
        weight: 600
      }
    },
    text: {
      font: {
        // family: undefined
      },
      xsmall: _extends4({}, fontSizing(-1.5)),
      small: _extends4({}, fontSizing(-1)),
      medium: _extends4({}, fontSizing(0)),
      // 18px
      large: _extends4({}, fontSizing(1)),
      // 22px
      xlarge: _extends4({}, fontSizing(2)),
      xxlarge: _extends4({}, fontSizing(4)),
      "2xl": _extends4({}, fontSizing(4)),
      "3xl": _extends4({}, fontSizing(6)),
      "4xl": _extends4({}, fontSizing(9)),
      "5xl": _extends4({}, fontSizing(13)),
      "6xl": _extends4({}, fontSizing(18)),
      skeleton: {
        width: {
          width: "100px",
          min: "100px"
        },
        margin: {
          vertical: "xsmall"
        },
        colors: {
          dark: ["border", "border"],
          light: ["background-front", "background-back"]
        }
      }
    },
    textArea: {
      // extend: undefined,
      // disabled: { opacity: undefined },
    },
    textInput: {
      // extend: undefined,
      // disabled: { opacity: undefined },
    },
    tip: {
      content: {
        // any Box props
        background: "background-contrast",
        elevation: "small",
        margin: "xsmall",
        pad: {
          vertical: "xsmall",
          horizontal: "small"
        },
        round: "small"
      },
      drop: {
        // any props for the drop
        align: {
          top: "bottom"
        },
        // most common use case is Header with Buttons
        background: "none",
        elevation: "none",
        margin: "none"
      }
    },
    video: {
      captions: {
        background: "rgba(0, 0, 0, 0.7)"
      },
      // controls: { background: undefined },
      icons: {
        closedCaption: import_ClosedCaption.ClosedCaption,
        configure: import_Actions.Actions,
        fullScreen: import_Expand.Expand,
        pause: import_Pause.Pause,
        play: import_Play.Play,
        reduceVolume: import_VolumeLow.VolumeLow,
        volume: import_Volume.Volume,
        description: import_AssistListening.AssistListening
        // color: { dark: undefined, light: undefined },
      },
      scrubber: {
        color: "light-4",
        interval: 10
        // track: { color: undefined }
      }
    },
    worldMap: {
      color: "light-3",
      continent: {
        active: "8px",
        base: "6px"
      },
      hover: {
        color: "light-4"
      },
      place: {
        active: "20px",
        base: "8px"
      }
    }
  });
  return deepFreeze(result);
};
var base = generate(24);

// node_modules/grommet/es6/default-props.js
var defaultProps2 = {
  theme: base
};
var extendDefaultTheme = function extendDefaultTheme2(theme) {
  defaultProps2.theme = deepMerge(base, theme);
};

// node_modules/grommet/es6/components/Keyboard/Keyboard.js
var import_react7 = __toESM(require_react());

// node_modules/grommet/es6/components/Keyboard/propTypes.js
var import_prop_types3 = __toESM(require_prop_types());
var PropType2 = {};
if (true) {
  PropType2 = {
    target: import_prop_types3.default.oneOf(["component", "document"]),
    onBackspace: import_prop_types3.default.func,
    onComma: import_prop_types3.default.func,
    onDown: import_prop_types3.default.func,
    onEnter: import_prop_types3.default.func,
    onEsc: import_prop_types3.default.func,
    onKeyDown: import_prop_types3.default.func,
    onLeft: import_prop_types3.default.func,
    onRight: import_prop_types3.default.func,
    onShift: import_prop_types3.default.func,
    onSpace: import_prop_types3.default.func,
    onTab: import_prop_types3.default.func,
    onUp: import_prop_types3.default.func
  };
}
var KeyboardPropTypes = PropType2;

// node_modules/grommet/es6/components/Keyboard/Keyboard.js
var _excluded2 = ["capture", "target", "children", "onKeyDown"];
function _objectWithoutPropertiesLoose2(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var KEYS = {
  8: "onBackspace",
  9: "onTab",
  13: "onEnter",
  27: "onEsc",
  32: "onSpace",
  37: "onLeft",
  38: "onUp",
  39: "onRight",
  40: "onDown",
  188: "onComma",
  16: "onShift"
};
var Keyboard = function Keyboard2(_ref) {
  var capture = _ref.capture, target = _ref.target, children2 = _ref.children, onKeyDown = _ref.onKeyDown, restProps = _objectWithoutPropertiesLoose2(_ref, _excluded2);
  var onKeyDownHandler = (0, import_react7.useCallback)(function(event) {
    var key = event.keyCode ? event.keyCode : event.which;
    var callbackName = KEYS[key];
    for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      rest[_key - 1] = arguments[_key];
    }
    if (callbackName && restProps[callbackName]) {
      restProps[callbackName].apply(restProps, [event].concat(rest));
    }
    if (onKeyDown) {
      onKeyDown.apply(void 0, [event].concat(rest));
    }
  }, [onKeyDown, restProps]);
  (0, import_react7.useEffect)(function() {
    if (target === "document") {
      document.addEventListener("keydown", onKeyDownHandler, capture);
    }
    return function() {
      if (target === "document") {
        document.removeEventListener("keydown", onKeyDownHandler, capture);
      }
    };
  }, [capture, onKeyDownHandler, target]);
  return target === "document" ? children2 : (0, import_react7.cloneElement)(import_react7.Children.only(children2), {
    onKeyDown: onKeyDownHandler
  });
};
Keyboard.propTypes = KeyboardPropTypes;

// node_modules/grommet/es6/components/Box/StyledBox.js
init_styled_components_browser_esm();
var _FLEX_MAP;
function _extends5() {
  _extends5 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends5.apply(this, arguments);
}
var BASIS_MAP = {
  auto: "auto",
  full: "100%",
  "1/2": "50%",
  "1/4": "25%",
  "2/4": "50%",
  "3/4": "75%",
  "1/3": "33.33%",
  "2/3": "66.66%"
};
var basisStyle = Ae(["flex-basis:", ";"], function(props) {
  return BASIS_MAP[props.basis] || props.theme.global.size[props.basis] || props.basis;
});
var directionStyle = function directionStyle2(direction, theme) {
  var styles = [Ae(["min-width:0;min-height:0;flex-direction:", ";"], direction === "row-responsive" ? "row" : direction)];
  if (direction === "row-responsive" && theme.box.responsiveBreakpoint) {
    var breakpoint = getBreakpointStyle(theme, theme.box.responsiveBreakpoint);
    if (breakpoint) {
      styles.push(breakpointStyle(breakpoint, "\n        flex-direction: column;\n        flex-basis: auto;\n        justify-content: flex-start;\n        align-items: stretch;\n      "));
    }
  }
  return styles;
};
var elevationStyle = function elevationStyle2(elevation) {
  return Ae(["box-shadow:", ";"], function(props) {
    return props.theme.global.elevation[props.theme.dark ? "dark" : "light"][elevation];
  });
};
var FLEX_MAP = (_FLEX_MAP = {}, _FLEX_MAP[true] = "1 1", _FLEX_MAP[false] = "0 0", _FLEX_MAP.grow = "1 0", _FLEX_MAP.shrink = "0 1", _FLEX_MAP);
var flexGrowShrinkProp = function flexGrowShrinkProp2(flex) {
  if (typeof flex === "boolean" || typeof flex === "string") {
    return FLEX_MAP[flex];
  }
  return (flex.grow ? flex.grow : 0) + " " + (flex.shrink ? flex.shrink : 0);
};
var flexStyle = Ae(["flex:", ";"], function(props) {
  return "" + flexGrowShrinkProp(props.flex) + (props.flex !== true && !props.basis ? " auto" : "");
});
var JUSTIFY_MAP = {
  around: "space-around",
  between: "space-between",
  center: "center",
  end: "flex-end",
  evenly: "space-evenly",
  start: "flex-start"
};
var justifyStyle = Ae(["justify-content:", ";"], function(props) {
  return JUSTIFY_MAP[props.justify];
});
var WRAP_MAP = {
  "true": "wrap",
  reverse: "wrap-reverse"
};
var wrapStyle = Ae(["flex-wrap:", ";"], function(props) {
  return WRAP_MAP[props.wrapProp];
});
var animationItemStyle = function animationItemStyle2(item, theme) {
  if (typeof item === "string") {
    return animationObjectStyle({
      type: item
    }, theme);
  }
  if (Array.isArray(item)) {
    return item.reduce(function(style, a3, index) {
      return Ae(["", "", " ", ""], style, index > 0 ? "," : "", animationItemStyle2(a3, theme));
    }, "");
  }
  if (typeof item === "object") {
    return animationObjectStyle(item, theme);
  }
  return "";
};
var animationAncilaries = function animationAncilaries2(animation) {
  if (animation.type === "flipIn" || animation.type === "flipOut") {
    return "perspective: 1000px; transform-style: preserve-3d;";
  }
  return "";
};
var animationObjectInitialStyle = function animationObjectInitialStyle2(animation) {
  var bounds2 = animationBounds(animation.type, animation.size);
  if (bounds2) {
    return bounds2[0] + " " + animationAncilaries(animation);
  }
  return "";
};
var animationInitialStyle = function animationInitialStyle2(item) {
  if (typeof item === "string") {
    return animationObjectInitialStyle({
      type: item
    });
  }
  if (Array.isArray(item)) {
    return item.map(function(a3) {
      return typeof a3 === "string" ? animationObjectInitialStyle({
        type: a3
      }) : animationObjectInitialStyle(a3);
    }).join("");
  }
  if (typeof item === "object") {
    return animationObjectInitialStyle(item);
  }
  return "";
};
var animationStyle = Ae(["", ";"], function(props) {
  return Ae(["", " animation:", ";"], animationInitialStyle(props.animation), animationItemStyle(props.animation, props.theme));
});
var interactiveStyle = Ae(["cursor:pointer;&:hover{", " ", "}"], function(props) {
  var _props$kindProp;
  return ((_props$kindProp = props.kindProp) == null ? void 0 : _props$kindProp.hover) && getHoverIndicatorStyle(props.kindProp.hover, props.theme);
}, function(props) {
  return props.hoverIndicator && getHoverIndicatorStyle(props.hoverIndicator, props.theme);
});
var gapStyle = function gapStyle2(directionProp, gap, responsive, wrap, theme) {
  var metric = theme.global.edgeSize[gap] || gap;
  var breakpoint = getBreakpointStyle(theme, theme.box.responsiveBreakpoint);
  var responsiveMetric = responsive && breakpoint && breakpoint.edgeSize[gap];
  var styles = [];
  if (directionProp === "column" || directionProp === "column-reverse") {
    styles.push("row-gap: " + metric + ";");
    if (responsiveMetric) {
      styles.push(breakpointStyle(breakpoint, "row-gap: " + responsiveMetric + ";"));
    }
  } else {
    styles.push("column-gap: " + metric + ";");
    if (wrap)
      styles.push("row-gap: " + metric + ";");
    if (responsiveMetric) {
      if (directionProp === "row" || directionProp === "row-reverse") {
        styles.push(breakpointStyle(breakpoint, "column-gap: " + responsiveMetric + ";"));
      } else if (directionProp === "row-responsive") {
        styles.push(breakpointStyle(breakpoint, "\n          row-gap: " + responsiveMetric + ";\n        "));
      }
    }
  }
  return styles;
};
var StyledBox = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledBox",
  componentId: "sc-13pk1d4-0"
})(["display:flex;box-sizing:border-box;", ";", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", ""], function(props) {
  return !props.basis && "max-width: 100%;";
}, genericStyles, function(props) {
  return props.align && alignStyle;
}, function(props) {
  return props.alignContent && alignContentStyle;
}, function(props) {
  return props.background && backgroundStyle(props.background, props.theme);
}, function(props) {
  return props.border && borderStyle(props.border, props.responsive, props.theme);
}, function(props) {
  return props.directionProp && directionStyle(props.directionProp, props.theme);
}, function(props) {
  return props.heightProp && heightStyle(props.heightProp, props.theme);
}, function(props) {
  return props.widthProp && widthStyle(props.widthProp, props.theme);
}, function(props) {
  return props.flex !== void 0 && flexStyle;
}, function(props) {
  return props.basis && basisStyle;
}, function(props) {
  return props.fillProp && fillStyle(props.fillProp);
}, function(props) {
  return props.justify && justifyStyle;
}, function(props) {
  return props.pad && edgeStyle("padding", props.pad, props.responsive, props.theme.box.responsiveBreakpoint, props.theme);
}, function(props) {
  return props.round && roundStyle(props.round, props.responsive, props.theme);
}, function(props) {
  return props.wrapProp && wrapStyle;
}, function(props) {
  return props.overflowProp && overflowStyle(props.overflowProp);
}, function(props) {
  return props.elevationProp && elevationStyle(props.elevationProp);
}, function(props) {
  return props.gap && gapStyle(props.directionProp, props.gap, props.responsive, props.wrapProp, props.theme);
}, function(props) {
  return props.animation && animationStyle;
}, function(props) {
  return props.onClick && interactiveStyle;
}, function(props) {
  return props.onClick && props.focus && props.focusIndicator !== false && focusStyle();
}, function(props) {
  return props.theme.box && props.theme.box.extend;
}, function(props) {
  return props.kindProp && props.kindProp.extend;
});
StyledBox.defaultProps = {};
Object.setPrototypeOf(StyledBox.defaultProps, defaultProps2);
var gapGapStyle = function gapGapStyle2(directionProp, gap, responsive, border, theme) {
  var metric = theme.global.edgeSize[gap] || gap;
  var breakpoint = getBreakpointStyle(theme, theme.box.responsiveBreakpoint);
  var responsiveMetric = responsive && breakpoint && breakpoint.edgeSize[gap];
  var styles = [];
  if (directionProp === "column" || directionProp === "column-reverse") {
    styles.push("height: " + metric + ";");
    if (responsiveMetric) {
      styles.push(breakpointStyle(breakpoint, "height: " + responsiveMetric + ";"));
    }
  } else {
    styles.push("width: " + metric + ";");
    if (responsiveMetric) {
      if (directionProp === "row" || directionProp === "row-reverse") {
        styles.push(breakpointStyle(breakpoint, "width: " + responsiveMetric + ";"));
      } else if (directionProp === "row-responsive") {
        styles.push(breakpointStyle(breakpoint, "\n          width: auto;\n          height: " + responsiveMetric + ";\n        "));
      }
    }
  }
  if (border === "between" || border && border.side === "between") {
    var borderSize = border.size || "xsmall";
    var borderMetric = theme.global.borderSize[borderSize] || borderSize;
    var borderOffset = parseMetricToNum(metric) / 2 - parseMetricToNum(borderMetric) / 2 + "px";
    var responsiveBorderMetric = responsive && breakpoint && (breakpoint.borderSize[borderSize] || borderSize);
    var responsiveBorderOffset = responsiveBorderMetric && parseMetricToNum(responsiveMetric || metric) / 2 - parseMetricToNum(responsiveBorderMetric) / 2 + "px";
    if (directionProp === "column" || directionProp === "column-reverse") {
      var adjustedBorder = typeof border === "string" ? "top" : _extends5({}, border, {
        side: "top"
      });
      styles.push(Ae(["position:relative;&:after{content:'';position:absolute;width:100%;top:", ";", "}"], borderOffset, borderStyle(adjustedBorder, responsive, theme)));
      if (responsiveBorderOffset) {
        styles.push(breakpointStyle(breakpoint, "\n            &:after {\n              content: '';\n              top: " + responsiveBorderOffset + ";\n            }"));
      }
    } else {
      var _adjustedBorder = typeof border === "string" ? "left" : _extends5({}, border, {
        side: "left"
      });
      styles.push(Ae(["position:relative;&:after{content:'';position:absolute;height:100%;left:", ";", "}"], borderOffset, borderStyle(_adjustedBorder, directionProp !== "row-responsive" && responsive, theme)));
      if (responsiveBorderOffset) {
        if (directionProp === "row" || directionProp === "row-reverse") {
          styles.push(breakpointStyle(breakpoint, "\n              &:after {\n                content: '';\n                left: " + responsiveBorderOffset + ";\n              }"));
        } else if (directionProp === "row-responsive") {
          var adjustedBorder2 = typeof border === "string" ? "top" : _extends5({}, border, {
            side: "top"
          });
          styles.push(breakpointStyle(breakpoint, "\n              &:after {\n                content: '';\n                height: auto;\n                left: unset;\n                width: 100%;\n                top: " + responsiveBorderOffset + ";\n                border-left: none;\n                " + responsiveBorderStyle(adjustedBorder2, theme) + "\n              }"));
        }
      }
    }
  }
  return styles;
};
var StyledBoxGap = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledBox__StyledBoxGap",
  componentId: "sc-13pk1d4-1"
})(["flex:0 0 auto;align-self:stretch;", ";"], function(props) {
  return props.gap && gapGapStyle(props.directionProp, props.gap, props.responsive, props.border, props.theme);
});
StyledBoxGap.defaultProps = {};
Object.setPrototypeOf(StyledBoxGap.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/Box/propTypes.js
var import_prop_types4 = __toESM(require_prop_types());
function _extends6() {
  _extends6 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends6.apply(this, arguments);
}
var OVERFLOW_VALUES2 = ["auto", "hidden", "scroll", "visible"];
var BORDER_SHAPE = import_prop_types4.default.shape({
  color: import_prop_types4.default.oneOfType([import_prop_types4.default.string, import_prop_types4.default.shape({
    dark: import_prop_types4.default.string,
    light: import_prop_types4.default.string
  })]),
  side: import_prop_types4.default.oneOf(["top", "left", "bottom", "right", "start", "end", "horizontal", "vertical", "all", "between"]),
  size: import_prop_types4.default.oneOfType([import_prop_types4.default.oneOf(["xsmall", "small", "medium", "large", "xlarge"]), import_prop_types4.default.string]),
  style: import_prop_types4.default.oneOf(["solid", "dashed", "dotted", "double", "groove", "ridge", "inset", "outset", "hidden"])
});
var overflowPropType = import_prop_types4.default.oneOfType([import_prop_types4.default.oneOf(OVERFLOW_VALUES2), import_prop_types4.default.shape({
  horizontal: import_prop_types4.default.oneOf(OVERFLOW_VALUES2),
  vertical: import_prop_types4.default.oneOf(OVERFLOW_VALUES2)
}), import_prop_types4.default.string]);
var PropType3 = {};
if (true) {
  PropType3 = _extends6({}, genericProps, {
    align: import_prop_types4.default.oneOfType([import_prop_types4.default.oneOf(["baseline", "center", "end", "start", "stretch"]), import_prop_types4.default.string]),
    alignContent: import_prop_types4.default.oneOfType([import_prop_types4.default.oneOf(["around", "baseline", "between", "center", "evenly", "end", "start", "stretch"]), import_prop_types4.default.string]),
    animation: animationPropType,
    background: backgroundDoc,
    basis: import_prop_types4.default.oneOfType([import_prop_types4.default.oneOf(["xxsmall", "xsmall", "small", "medium", "large", "xlarge", "xxlarge", "full", "1/2", "1/3", "2/3", "1/4", "2/4", "3/4", "auto"]), import_prop_types4.default.string]),
    border: import_prop_types4.default.oneOfType([import_prop_types4.default.bool, import_prop_types4.default.oneOf(["top", "left", "bottom", "right", "start", "end", "horizontal", "vertical", "all", "between"]), BORDER_SHAPE, import_prop_types4.default.arrayOf(BORDER_SHAPE)]),
    direction: import_prop_types4.default.oneOf(["row", "column", "row-responsive", "row-reverse", "column-reverse"]),
    elevation: elevationPropType,
    flex: import_prop_types4.default.oneOfType([import_prop_types4.default.oneOf(["grow", "shrink"]), import_prop_types4.default.bool, import_prop_types4.default.shape({
      grow: import_prop_types4.default.number,
      shrink: import_prop_types4.default.number
    })]),
    fill: import_prop_types4.default.oneOfType([import_prop_types4.default.oneOf(["horizontal", "vertical"]), import_prop_types4.default.bool]),
    focusIndicator: import_prop_types4.default.bool,
    gap: import_prop_types4.default.oneOfType([import_prop_types4.default.oneOf(["none", "xxsmall", "xsmall", "small", "medium", "large", "xlarge"]), import_prop_types4.default.string]),
    height: heightPropType,
    hoverIndicator: hoverIndicatorPropType,
    justify: import_prop_types4.default.oneOf(["around", "between", "center", "end", "evenly", "start", "stretch"]),
    onClick: import_prop_types4.default.func,
    overflow: overflowPropType,
    pad: padPropType,
    responsive: import_prop_types4.default.bool,
    round: roundPropType,
    skeleton: skeletonPropType,
    tag: import_prop_types4.default.oneOfType([import_prop_types4.default.string, import_prop_types4.default.func]),
    as: import_prop_types4.default.oneOfType([import_prop_types4.default.string, import_prop_types4.default.func, import_prop_types4.default.elementType]),
    width: widthPropType,
    wrap: import_prop_types4.default.oneOfType([import_prop_types4.default.bool, import_prop_types4.default.oneOf(["reverse"])])
  });
}
var BoxPropTypes = PropType3;

// node_modules/grommet/es6/components/Skeleton/Skeleton.js
var import_react9 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/Skeleton/propTypes.js
var import_prop_types5 = __toESM(require_prop_types());
function _extends7() {
  _extends7 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends7.apply(this, arguments);
}
var PropType4 = {};
if (true) {
  PropType4 = _extends7({}, genericProps, {
    as: import_prop_types5.default.oneOfType([import_prop_types5.default.string, import_prop_types5.default.func, import_prop_types5.default.element]),
    colors: skeletonColorsPropType,
    height: heightPropType,
    pad: padPropType,
    round: roundPropType,
    width: widthPropType
  });
}
var SkeletonPropTypes = PropType4;

// node_modules/grommet/es6/components/Skeleton/SkeletonContext.js
var import_react8 = __toESM(require_react());
var SkeletonContext = import_react8.default.createContext();
var useSkeleton = function useSkeleton2() {
  return (0, import_react8.useContext)(SkeletonContext);
};

// node_modules/grommet/es6/components/Skeleton/StyledSkeleton.js
init_styled_components_browser_esm();
var StyledSkeleton = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledSkeleton",
  componentId: "sc-1omqm6u-0"
})(["display:flex;box-sizing:border-box;", " ", " ", " ", " ", " ", ""], genericStyles, function(props) {
  return props.background && backgroundStyle(props.background, props.theme);
}, function(props) {
  var _props$theme$text, _props$theme$text$med;
  return heightStyle(props.heightProp || ((_props$theme$text = props.theme.text) == null ? void 0 : (_props$theme$text$med = _props$theme$text.medium) == null ? void 0 : _props$theme$text$med.height), props.theme);
}, function(props) {
  return widthStyle(props.widthProp || "100%", props.theme);
}, function(props) {
  return props.pad && edgeStyle("padding", props.pad, props.responsive, props.theme.box.responsiveBreakpoint, props.theme);
}, function(props) {
  return props.round && roundStyle(props.round, props.responsive, props.theme);
});

// node_modules/grommet/es6/components/Skeleton/Skeleton.js
var _excluded3 = ["as", "colors", "width", "height"];
function _extends8() {
  _extends8 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends8.apply(this, arguments);
}
function _objectWithoutPropertiesLoose3(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var Skeleton = (0, import_react9.forwardRef)(function(_ref, ref) {
  var _theme$skeleton;
  var as = _ref.as, colorsProp = _ref.colors, widthProp = _ref.width, heightProp = _ref.height, rest = _objectWithoutPropertiesLoose3(_ref, _excluded3);
  var theme = (0, import_react9.useContext)(Me) || defaultProps2.theme;
  var skeleton = useSkeleton();
  var depth = (skeleton == null ? void 0 : skeleton.depth) || 0;
  var colors3 = colorsProp || (theme == null ? void 0 : (_theme$skeleton = theme.skeleton) == null ? void 0 : _theme$skeleton.colors);
  var themeColors = colors3[theme.dark ? "dark" : "light"];
  var background = themeColors[(depth + 1) % themeColors.length];
  return import_react9.default.createElement(StyledSkeleton, _extends8({
    ref,
    as,
    background,
    widthProp,
    heightProp
  }, rest));
});
Skeleton.displayName = "Skeleton";
Skeleton.propTypes = SkeletonPropTypes;

// node_modules/grommet/es6/contexts/AnnounceContext/AnnounceContext.js
var import_react10 = __toESM(require_react());

// node_modules/grommet/es6/contexts/AnnounceContext/propTypes.js
var import_prop_types6 = __toESM(require_prop_types());
var PropType5 = {};
if (true) {
  PropType5 = {
    children: import_prop_types6.default.func
  };
}
var AnnounceContextPropTypes = PropType5;

// node_modules/grommet/es6/contexts/AnnounceContext/AnnounceContext.js
var createAnnouncer = function createAnnouncer2() {
  var announcer = document.createElement("div");
  announcer.id = "grommet-announcer";
  announcer.style.left = "-100%";
  announcer.style.right = "100%";
  announcer.style.position = "fixed";
  announcer.style["z-index"] = "-1";
  document.body.insertBefore(announcer, document.body.firstChild);
  return announcer;
};
var AnnounceContext = import_react10.default.createContext(function(message, mode, timeout) {
  if (mode === void 0) {
    mode = "polite";
  }
  if (timeout === void 0) {
    timeout = 500;
  }
  var announcer = document.body.querySelector("#grommet-announcer[aria-live]") || createAnnouncer();
  announcer.setAttribute("aria-live", "off");
  announcer.innerHTML = message;
  announcer.setAttribute("aria-live", mode);
  setTimeout(function() {
    announcer.innerHTML = "";
  }, timeout);
});
AnnounceContext.propTypes = AnnounceContextPropTypes;

// node_modules/grommet/es6/contexts/OptionsContext.js
var import_react11 = __toESM(require_react());
var OptionsContext = import_react11.default.createContext({});

// node_modules/grommet/es6/components/Box/Box.js
var _excluded4 = ["a11yTitle", "background", "border", "children", "cssGap", "direction", "elevation", "fill", "gap", "kind", "onBlur", "onClick", "onFocus", "overflow", "responsive", "tag", "as", "wrap", "width", "height", "tabIndex", "skeleton"];
var _excluded22 = ["colors", "size"];
function _extends9() {
  _extends9 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends9.apply(this, arguments);
}
function _objectWithoutPropertiesLoose4(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var Box = (0, import_react12.forwardRef)(function(_ref, ref) {
  var a11yTitle = _ref.a11yTitle, backgroundProp = _ref.background, border = _ref.border, children2 = _ref.children, cssGap = _ref.cssGap, _ref$direction = _ref.direction, direction = _ref$direction === void 0 ? "column" : _ref$direction, elevation = _ref.elevation, fill = _ref.fill, gap = _ref.gap, kind = _ref.kind, _onBlur = _ref.onBlur, onClick = _ref.onClick, _onFocus = _ref.onFocus, overflow = _ref.overflow, _ref$responsive = _ref.responsive, responsive = _ref$responsive === void 0 ? true : _ref$responsive, tag = _ref.tag, as = _ref.as, wrap = _ref.wrap, width = _ref.width, height = _ref.height, tabIndex = _ref.tabIndex, skeletonProp = _ref.skeleton, rest = _objectWithoutPropertiesLoose4(_ref, _excluded4);
  var theme = (0, import_react12.useContext)(Me) || defaultProps2.theme;
  var _useContext = (0, import_react12.useContext)(OptionsContext), boxOptions = _useContext.box;
  var skeleton = useSkeleton();
  var background = backgroundProp;
  var announce = (0, import_react12.useContext)(AnnounceContext);
  (0, import_react12.useEffect)(function() {
    var _skeletonProp$message;
    if (skeletonProp != null && (_skeletonProp$message = skeletonProp.message) != null && _skeletonProp$message.start)
      announce(skeletonProp.message.start);
    else if (typeof (skeletonProp == null ? void 0 : skeletonProp.message) === "string")
      announce(skeletonProp.message);
    return function() {
      var _skeletonProp$message2;
      return (skeletonProp == null ? void 0 : (_skeletonProp$message2 = skeletonProp.message) == null ? void 0 : _skeletonProp$message2.end) && announce(skeletonProp.message.end);
    };
  }, [announce, skeletonProp]);
  var focusable = (0, import_react12.useMemo)(function() {
    return onClick && !(tabIndex < 0);
  }, [onClick, tabIndex]);
  var _useState = (0, import_react12.useState)(), focus = _useState[0], setFocus = _useState[1];
  var clickProps = (0, import_react12.useMemo)(function() {
    if (focusable) {
      return {
        onClick,
        onFocus: function onFocus(event) {
          setFocus(true);
          if (_onFocus)
            _onFocus(event);
        },
        onBlur: function onBlur(event) {
          setFocus(false);
          if (_onBlur)
            _onBlur(event);
        }
      };
    }
    var result = {};
    if (_onBlur)
      result.onBlur = _onBlur;
    if (onClick)
      result.onClick = onClick;
    if (_onFocus)
      result.onFocus = _onFocus;
    return result;
  }, [focusable, onClick, _onFocus, _onBlur]);
  var adjustedTabIndex = (0, import_react12.useMemo)(function() {
    if (tabIndex !== void 0)
      return tabIndex;
    if (focusable)
      return 0;
    return void 0;
  }, [focusable, tabIndex]);
  if ((border === "between" || border && border.side === "between" || Array.isArray(border) && border.find(function(b3) {
    return b3.side === "between";
  })) && !gap) {
    console.warn("Box must have a gap to use border between");
  }
  var contents = children2;
  if (gap && gap !== "none" && (!(boxOptions != null && boxOptions.cssGap || cssGap) || // need this approach to show border between
  border === "between" || (border == null ? void 0 : border.side) === "between" || Array.isArray(border) && border.find(function(b3) {
    return b3.side === "between";
  }))) {
    var styledBoxGapBorder = Array.isArray(border) ? border.find(function(b3) {
      return b3.side === "between";
    }) : border;
    var boxAs = !as && tag ? tag : as;
    contents = [];
    var firstIndex;
    import_react12.Children.forEach(children2, function(child, index) {
      if (child) {
        if (firstIndex === void 0) {
          firstIndex = index;
        } else {
          contents.push(import_react12.default.createElement(
            StyledBoxGap,
            {
              key: "gap-" + index,
              as: boxAs === "span" ? boxAs : "div",
              gap,
              directionProp: direction,
              responsive,
              border: styledBoxGapBorder
            }
          ));
        }
      }
      contents.push(child);
    });
  }
  var nextSkeleton = (0, import_react12.useMemo)(function() {
    if (skeletonProp || (background || border) && skeleton) {
      var depth = skeleton ? skeleton.depth + 1 : 0;
      return _extends9({}, skeleton, {
        depth
      }, typeof skeletonProp === "object" ? skeletonProp : {});
    }
    return void 0;
  }, [background, border, skeleton, skeletonProp]);
  var skeletonProps = {};
  if (nextSkeleton) {
    var _theme$skeleton = theme.skeleton, skeletonThemeColors = _theme$skeleton.colors, skeletonThemeSize = _theme$skeleton.size, skeletonThemeProps = _objectWithoutPropertiesLoose4(_theme$skeleton, _excluded22);
    var skeletonColors = nextSkeleton.colors ? nextSkeleton.colors[theme.dark ? "dark" : "light"] : skeletonThemeColors == null ? void 0 : skeletonThemeColors[theme.dark ? "dark" : "light"];
    skeletonProps = _extends9({}, skeletonThemeProps);
    background = skeletonColors[nextSkeleton.depth % skeletonColors.length];
    if (skeletonProp != null && skeletonProp.animation) {
      skeletonProps.animation = skeletonProp.animation;
    }
    contents = import_react12.default.createElement(SkeletonContext.Provider, {
      value: nextSkeleton
    }, contents);
  }
  var nextTheme = (0, import_react12.useMemo)(function() {
    var result;
    if (background || theme.darkChanged) {
      var dark2 = backgroundIsDark(background, theme);
      var darkChanged = dark2 !== void 0 && dark2 !== theme.dark;
      if (darkChanged || theme.darkChanged) {
        result = _extends9({}, theme);
        result.dark = dark2 === void 0 ? theme.dark : dark2;
        result.background = background;
      } else if (background) {
        result = _extends9({}, theme);
        result.background = background;
      }
    }
    return result || theme;
  }, [background, theme]);
  var content = import_react12.default.createElement(StyledBox, _extends9({
    as: !as && tag ? tag : as,
    "aria-label": a11yTitle,
    background,
    border,
    ref,
    directionProp: direction,
    elevationProp: elevation,
    fillProp: fill,
    focus,
    gap: ((boxOptions == null ? void 0 : boxOptions.cssGap) || cssGap) && gap && gap !== "none" && border !== "between" && (border == null ? void 0 : border.side) !== "between" && (!Array.isArray(border) || !border.find(function(b3) {
      return b3.side === "between";
    })) && gap,
    kindProp: kind,
    overflowProp: overflow,
    wrapProp: wrap,
    widthProp: width,
    heightProp: height,
    responsive,
    tabIndex: adjustedTabIndex
  }, clickProps, rest, skeletonProps), import_react12.default.createElement(Me.Provider, {
    value: nextTheme
  }, contents));
  if (onClick) {
    content = import_react12.default.createElement(Keyboard, {
      onEnter: onClick
    }, content);
  }
  return content;
});
Box.displayName = "Box";
Box.propTypes = BoxPropTypes;

// node_modules/grommet/es6/components/Accordion/AccordionContext.js
var import_react13 = __toESM(require_react());
var AccordionContext = (0, import_react13.createContext)({});

// node_modules/grommet/es6/components/Accordion/Accordion.js
var _excluded5 = ["activeIndex", "animate", "children", "level", "multiple", "onActive"];
function _extends10() {
  _extends10 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends10.apply(this, arguments);
}
function _objectWithoutPropertiesLoose5(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var activeAsArray = function activeAsArray2(active) {
  return typeof active === "number" ? [active] : active;
};
var Accordion = (0, import_react14.forwardRef)(function(_ref, ref) {
  var activeIndex = _ref.activeIndex, _ref$animate = _ref.animate, animate = _ref$animate === void 0 ? true : _ref$animate, children2 = _ref.children, level = _ref.level, multiple = _ref.multiple, onActive = _ref.onActive, rest = _objectWithoutPropertiesLoose5(_ref, _excluded5);
  var _useState = (0, import_react14.useState)([]), activeIndexes = _useState[0], setActiveIndexes = _useState[1];
  var _useState2 = (0, import_react14.useState)(), stateActiveIndex = _useState2[0], setStateActiveIndex = _useState2[1];
  var derivedActiveIndexes = activeAsArray(activeIndex) || [];
  if ((typeof activeIndex !== "undefined" || activeIndex !== stateActiveIndex) && derivedActiveIndexes.join() !== activeIndexes.join()) {
    setActiveIndexes(derivedActiveIndexes);
    setStateActiveIndex(activeIndex);
  }
  var getAccordionContext = (0, import_react14.useCallback)(function(index) {
    var _onPanelChange = function onPanelChange(nextIndex) {
      var nextActiveIndexes = [].concat(activeIndexes || []);
      var nextActiveIndex = nextActiveIndexes.indexOf(nextIndex);
      if (nextActiveIndex > -1) {
        nextActiveIndexes.splice(nextActiveIndex, 1);
      } else if (multiple) {
        nextActiveIndexes.push(nextIndex);
      } else {
        nextActiveIndexes = [nextIndex];
      }
      setActiveIndexes(nextActiveIndexes);
      if (onActive) {
        onActive(nextActiveIndexes);
      }
    };
    return {
      active: activeIndexes.indexOf(index) > -1,
      animate,
      level,
      onPanelChange: function onPanelChange() {
        return _onPanelChange(index);
      }
    };
  }, [activeIndexes, animate, level, multiple, onActive]);
  return import_react14.default.createElement(Box, _extends10({
    ref
  }, rest), import_react14.Children.toArray(children2).filter(function(child) {
    return child;
  }).map(function(child, index) {
    return import_react14.default.createElement(AccordionContext.Provider, {
      // eslint-disable-next-line react/no-array-index-key
      key: index,
      value: getAccordionContext(index)
    }, child);
  }));
});
Accordion.propTypes = AccordionPropTypes;

// node_modules/grommet/es6/components/AccordionPanel/AccordionPanel.js
var import_react34 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/Button/Button.js
var import_react30 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/Button/propTypes.js
var import_prop_types7 = __toESM(require_prop_types());
function _extends11() {
  _extends11 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends11.apply(this, arguments);
}
var PropType6 = {};
if (true) {
  PropType6 = _extends11({}, genericProps, {
    children: import_prop_types7.default.oneOfType([import_prop_types7.default.func, import_prop_types7.default.object, import_prop_types7.default.node]),
    active: import_prop_types7.default.bool,
    as: import_prop_types7.default.oneOfType([import_prop_types7.default.string, import_prop_types7.default.func, import_prop_types7.default.elementType]),
    badge: import_prop_types7.default.oneOfType([import_prop_types7.default.bool, import_prop_types7.default.element, import_prop_types7.default.number, import_prop_types7.default.shape({
      background: backgroundPropType,
      max: import_prop_types7.default.number,
      value: import_prop_types7.default.oneOfType([import_prop_types7.default.bool, import_prop_types7.default.number])
    })]),
    busy: import_prop_types7.default.bool,
    color: colorPropType,
    disabled: import_prop_types7.default.bool,
    fill: import_prop_types7.default.oneOfType([import_prop_types7.default.oneOf(["horizontal", "vertical"]), import_prop_types7.default.bool]),
    focusIndicator: import_prop_types7.default.bool,
    gap: import_prop_types7.default.oneOfType([import_prop_types7.default.oneOf(["none", "xxsmall", "xsmall", "small", "medium", "large", "xlarge"]), import_prop_types7.default.string]),
    hoverIndicator: hoverIndicatorPropType,
    href: import_prop_types7.default.string,
    icon: import_prop_types7.default.element,
    justify: import_prop_types7.default.oneOf(["around", "between", "center", "end", "evenly", "start", "stretch"]),
    label: import_prop_types7.default.node,
    messages: import_prop_types7.default.shape({
      busy: import_prop_types7.default.string,
      success: import_prop_types7.default.string
    }),
    onClick: import_prop_types7.default.func,
    pad: padPropType,
    plain: import_prop_types7.default.bool,
    primary: import_prop_types7.default.bool,
    reverse: import_prop_types7.default.bool,
    secondary: import_prop_types7.default.bool,
    size: import_prop_types7.default.oneOfType([import_prop_types7.default.oneOf(["small", "medium", "large"]), import_prop_types7.default.string]),
    success: import_prop_types7.default.bool,
    target: import_prop_types7.default.oneOfType([import_prop_types7.default.oneOf(["_self", "_blank", "_parent", "_top"]), import_prop_types7.default.string]),
    tip: import_prop_types7.default.oneOfType([import_prop_types7.default.shape({
      content: import_prop_types7.default.oneOfType([import_prop_types7.default.node, import_prop_types7.default.string]),
      dropProps: import_prop_types7.default.shape({}),
      plain: import_prop_types7.default.bool
    }), import_prop_types7.default.string]),
    type: import_prop_types7.default.oneOf(["button", "reset", "submit"])
  });
}
var ButtonPropTypes = PropType6;

// node_modules/grommet/es6/contexts/MessageContext/MessageContext.js
var import_react15 = __toESM(require_react());

// node_modules/grommet/es6/languages/default.json
var default_default = {
  button: {
    busy: "button is in a busy state",
    success: "button action succeeded"
  },
  calendar: {
    previousMove: "Moved to {date}",
    previous: "Go to {date}",
    nextMove: "Moved to {date}",
    next: "Go to {date}"
  },
  carousel: {
    previous: "Go to slide {slide}",
    next: "Go to slide {slide}",
    jump: "Jump to slide {slide}"
  },
  dateInput: {
    openCalendar: "Press space to open calendar",
    enterCalendar: "Calendar is open, use arrow keys and enter to select a date.",
    exitCalendar: "Exited calendar dialog"
  },
  dataFilters: {
    clear: "Clear filters",
    heading: "Filters",
    open: "Open filters",
    openSet: {
      singular: "Open filters, {number} filter applied",
      plural: "Open filters, {number} filters applied"
    }
  },
  dataForm: {
    reset: "Undo changes",
    submit: "Apply filters"
  },
  dataSearch: {
    label: "Search",
    open: "Open search"
  },
  dataSort: {
    ascending: "Ascending",
    by: "Sort by",
    descending: "Descending",
    direction: "Sort direction",
    open: "Open sort"
  },
  dataSummary: {
    filtered: "{filteredTotal} results of {total} items",
    filteredSingle: "{filteredTotal} result of {total} items",
    total: "{total} items"
  },
  dataTableColumns: {
    open: "Open column selector",
    order: "Order columns",
    select: "Select columns",
    tip: "Manage columns"
  },
  dataTableGroupBy: {
    clear: "Clear group",
    label: "Group by"
  },
  dataView: {
    label: "View"
  },
  fileInput: {
    browse: "browse",
    dropPrompt: "Drop file here or",
    dropPromptMultiple: "Drop files here or",
    files: "files",
    maxSizeSingle: "The file is too large. Select a file no larger than {maxSize}.",
    maxSizeMultiple: {
      singular: "One file is too large. Select files which are no larger than {maxSize}.",
      plural: "{numOfFiles} files are too large. Select files which are no larger than {maxSize}."
    },
    remove: "remove",
    removeAll: "remove all",
    maxFile: "Attach a maximum of {max} files only."
  },
  form: {
    invalid: "invalid",
    required: "required"
  },
  menu: {
    openMenu: "Open Menu",
    closeMenu: "Close Menu"
  },
  rangeSelector: {
    lower: "Lower Bounds",
    upper: "Upper Bounds"
  },
  select: {
    multiple: "multiple",
    selected: "; Selected: {currentSelectedValue}"
  },
  skipLinks: {
    skipTo: "Skip To:"
  },
  tabs: {
    tabContents: "Tab Contents"
  },
  textInput: {
    enterSelect: "(Press Enter to Select)",
    suggestionsCount: "suggestions available",
    suggestionsExist: "This input has suggestions use arrow keys to navigate",
    suggestionIsOpen: "Suggestions drop is open, continue to use arrow keys to navigate"
  },
  video: {
    captions: "closed captions",
    closeMenu: "close menu",
    audioDescriptions: "video audio description",
    fullScreen: "full screen",
    progressMeter: "video progress",
    scrubber: "scrubber",
    openMenu: "open menu",
    pauseButton: "pause",
    playButton: "play",
    volumeDown: "volume down",
    volumeUp: "volume up",
    description: "video audio description"
  }
};

// node_modules/grommet/es6/contexts/MessageContext/MessageContext.js
var _format = function format(options, messages) {
  var _options$id;
  var idParts = ((_options$id = options.id) == null ? void 0 : _options$id.split(".")) || [];
  var baseId = idParts[(idParts == null ? void 0 : idParts.length) - 1];
  var messageObj = messages;
  idParts.forEach(function(idPart) {
    if (typeof messageObj === "object") {
      messageObj = messageObj[idPart];
    }
  });
  var message = (options.messages ? options.messages[baseId] : void 0) || messageObj || options.defaultMessage;
  var values = options.values;
  var newMessage = message;
  var tokens = message == null ? void 0 : message.match(/\{(.+?)\}/g);
  tokens == null ? void 0 : tokens.forEach(function(token) {
    var names = token.substr(1, token.length - 2);
    var value = values[names];
    newMessage = newMessage.replace(token, value);
  });
  return values ? newMessage : message;
};
var defaultValue = {
  messages: default_default,
  format: function format2(options) {
    return _format(options, default_default);
  }
};
var MessageContext = import_react15.default.createContext(defaultValue);

// node_modules/grommet/es6/components/Tip/Tip.js
var import_react21 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/Drop/Drop.js
var import_react20 = __toESM(require_react());
var import_react_dom = __toESM(require_react_dom());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/Drop/DropContainer.js
var import_react19 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/contexts/ContainerTargetContext/ContainerTargetContext.js
var import_react16 = __toESM(require_react());
var ContainerTargetContext = import_react16.default.createContext(typeof document === "object" ? document.body : void 0);

// node_modules/grommet/es6/components/FocusedContainer.js
var import_react18 = __toESM(require_react());

// node_modules/grommet/es6/contexts/RootsContext.js
var import_react17 = __toESM(require_react());
var RootsContext = import_react17.default.createContext([]);

// node_modules/grommet/es6/components/FocusedContainer.js
var _excluded6 = ["hidden", "restrictScroll", "children", "trapFocus"];
function _extends12() {
  _extends12 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends12.apply(this, arguments);
}
function _objectWithoutPropertiesLoose6(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var FocusedContainer = function FocusedContainer2(_ref) {
  var _ref$hidden = _ref.hidden, hidden = _ref$hidden === void 0 ? false : _ref$hidden, _ref$restrictScroll = _ref.restrictScroll, restrictScroll = _ref$restrictScroll === void 0 ? false : _ref$restrictScroll, children2 = _ref.children, trapFocus = _ref.trapFocus, rest = _objectWithoutPropertiesLoose6(_ref, _excluded6);
  var _useState = (0, import_react18.useState)(""), bodyOverflowStyle = _useState[0], setBodyOverflowStyle = _useState[1];
  var ref = (0, import_react18.useRef)(null);
  var roots = (0, import_react18.useContext)(RootsContext);
  var _useState2 = (0, import_react18.useState)(roots), nextRoots = _useState2[0], setNextRoots = _useState2[1];
  (0, import_react18.useEffect)(function() {
    if (ref.current)
      setNextRoots([].concat(roots, [ref.current]));
  }, [roots]);
  (0, import_react18.useEffect)(function() {
    if (bodyOverflowStyle !== "hidden" && !hidden && restrictScroll && trapFocus) {
      setBodyOverflowStyle(document.body.style.overflow);
      document.body.style.overflow = "hidden";
    }
    return function() {
      if (bodyOverflowStyle !== "hidden" && !hidden && restrictScroll && trapFocus) {
        document.body.style.overflow = bodyOverflowStyle;
      }
    };
  }, [bodyOverflowStyle, hidden, trapFocus, restrictScroll]);
  (0, import_react18.useEffect)(function() {
    var timer = setTimeout(function() {
      if (!hidden && trapFocus && roots && roots[0]) {
        roots.forEach(makeNodeUnfocusable);
      }
    }, 0);
    return function() {
      if (roots && roots[0])
        makeNodeFocusable(roots[roots.length - 1]);
      clearTimeout(timer);
    };
  }, [hidden, roots, trapFocus]);
  return import_react18.default.createElement(RootsContext.Provider, {
    value: nextRoots
  }, import_react18.default.createElement("div", _extends12({
    ref,
    "aria-hidden": hidden
  }, rest), children2));
};

// node_modules/grommet/es6/components/Drop/StyledDrop.js
init_styled_components_browser_esm();
function getTransformOriginStyle(align) {
  var vertical12 = "top";
  if (align.bottom) {
    vertical12 = "bottom";
  }
  var horizontal12 = "left";
  if (align.right) {
    horizontal12 = "right";
  }
  return vertical12 + " " + horizontal12;
}
var dropKeyFrames = We(["0%{opacity:0.5;transform:scale(0.8);}100%{opacity:1;transform:scale(1);}"]);
var marginStyle = function marginStyle2(theme, align, data, responsive, marginProp2) {
  var margin = theme.global.edgeSize[data] || data;
  var adjustedMargin = {};
  var customCSS = typeof margin === "string" && margin.split(" ").length > 1;
  if (theme.global.drop.intelligentMargin === true && !customCSS && typeof margin === "string") {
    if (align.top === "bottom")
      adjustedMargin.top = margin;
    else if (align.bottom === "top")
      adjustedMargin.bottom = margin;
    if (align.right === "left")
      adjustedMargin.left = "-" + margin;
    else if (align.left === "right")
      adjustedMargin.left = margin;
    if (!Object.keys(adjustedMargin))
      adjustedMargin = "none";
  } else {
    return edgeStyle("margin", marginProp2 || theme.global.drop.margin, responsive, theme.global.edgeSize.responsiveBreakpoint, theme);
  }
  return edgeStyle("margin", adjustedMargin, responsive, theme.global.edgeSize.responsiveBreakpoint, theme);
};
var StyledDrop = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledDrop",
  componentId: "sc-16s5rx8-0"
})(["", " ", " position:fixed;z-index:", ";outline:none;", " ", " opacity:0;transform-origin:", ";animation:", " 0.1s forwards;animation-delay:0.01s;@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none){display:flex;align-items:stretch;}", ""], baseStyle, function(props) {
  return !props.plain && (props.round && roundStyle(props.round, true, props.theme) || "border-radius: " + props.theme.global.drop.border.radius + ";");
}, function(props) {
  return props.theme.global.drop.zIndex;
}, function(props) {
  return !props.plain && backgroundStyle(props.background || props.theme.global.drop.background, props.theme);
}, function(props) {
  return !props.plain && (props.margin || props.theme.global.drop.margin) && props.theme.global && marginStyle(props.theme, props.alignProp, props.theme.global.drop.margin, props.responsive, props.margin);
}, function(props) {
  return getTransformOriginStyle(props.alignProp);
}, dropKeyFrames, function(props) {
  return props.theme.global.drop && props.theme.global.drop.extend;
});
StyledDrop.defaultProps = {};
Object.setPrototypeOf(StyledDrop.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/Drop/DropContainer.js
var _excluded7 = ["a11yTitle", "aria-label", "align", "background", "onAlign", "children", "dropTarget", "elevation", "onClickOutside", "onEsc", "onKeyDown", "overflow", "plain", "responsive", "restrictFocus", "stretch", "trapFocus"];
function _extends13() {
  _extends13 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends13.apply(this, arguments);
}
function _objectWithoutPropertiesLoose7(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var preventLayerClose = function preventLayerClose2(event) {
  var key = event.keyCode ? event.keyCode : event.which;
  if (key === 27) {
    event.stopPropagation();
  }
};
var defaultAlign = {
  top: "top",
  left: "left"
};
var DropContainer = (0, import_react19.forwardRef)(function(_ref, ref) {
  var a11yTitle = _ref.a11yTitle, ariaLabel = _ref["aria-label"], _ref$align = _ref.align, align = _ref$align === void 0 ? defaultAlign : _ref$align, background = _ref.background, onAlign = _ref.onAlign, children2 = _ref.children, dropTarget = _ref.dropTarget, elevation = _ref.elevation, onClickOutside = _ref.onClickOutside, onEsc = _ref.onEsc, onKeyDown = _ref.onKeyDown, _ref$overflow = _ref.overflow, overflow = _ref$overflow === void 0 ? "auto" : _ref$overflow, plain = _ref.plain, _ref$responsive = _ref.responsive, responsive = _ref$responsive === void 0 ? true : _ref$responsive, restrictFocus = _ref.restrictFocus, _ref$stretch = _ref.stretch, stretch = _ref$stretch === void 0 ? "width" : _ref$stretch, trapFocus = _ref.trapFocus, rest = _objectWithoutPropertiesLoose7(_ref, _excluded7);
  var containerTarget = (0, import_react19.useContext)(ContainerTargetContext);
  var theme = (0, import_react19.useContext)(Me) || defaultProps2.theme;
  var portalContext = (0, import_react19.useContext)(PortalContext);
  var portalId = (0, import_react19.useMemo)(function() {
    return portalContext.length;
  }, [portalContext]);
  var nextPortalContext = (0, import_react19.useMemo)(function() {
    return [].concat(portalContext, [portalId]);
  }, [portalContext, portalId]);
  var dropRef = useForwardedRef(ref);
  (0, import_react19.useEffect)(function() {
    var onClickDocument = function onClickDocument2(event) {
      var clickedPortalId = null;
      var node = event.composed && event.composedPath()[0] || event.target;
      while (clickedPortalId === null && node && node !== document && !(node instanceof ShadowRoot)) {
        var attr = node.getAttribute("data-g-portal-id");
        if (attr !== null)
          clickedPortalId = parseInt(attr, 10);
        node = node.parentNode;
      }
      if (clickedPortalId === null || portalContext.indexOf(clickedPortalId) !== -1) {
        onClickOutside(event);
      }
    };
    if (onClickOutside) {
      document.addEventListener("mousedown", onClickDocument);
    }
    return function() {
      if (onClickOutside) {
        document.removeEventListener("mousedown", onClickDocument);
      }
    };
  }, [onClickOutside, containerTarget, portalContext]);
  (0, import_react19.useEffect)(function() {
    var notifyAlign = function notifyAlign2() {
      var _dropRef$current;
      var styleCurrent = dropRef == null ? void 0 : (_dropRef$current = dropRef.current) == null ? void 0 : _dropRef$current.style;
      var alignControl = (styleCurrent == null ? void 0 : styleCurrent.top) !== "" ? "top" : "bottom";
      onAlign(alignControl);
    };
    var place = function place2(preserveHeight) {
      var windowWidth = window.innerWidth;
      var windowHeight = window.innerHeight;
      var target = (dropTarget == null ? void 0 : dropTarget.current) || dropTarget;
      var container = dropRef.current;
      if (container && target) {
        container.style.left = "";
        container.style.top = "";
        container.style.bottom = "";
        container.style.width = "";
        if (!preserveHeight) {
          container.style.maxHeight = "";
        }
        var targetRect = target.getBoundingClientRect();
        var containerRect = container.getBoundingClientRect();
        var width;
        if (stretch) {
          width = Math.min(stretch === "align" ? Math.min(targetRect.width, containerRect.width) : Math.max(targetRect.width, containerRect.width), windowWidth);
        } else {
          width = Math.min(containerRect.width, windowWidth);
        }
        var left;
        if (align.left) {
          if (align.left === "left") {
            left = targetRect.left;
          } else if (align.left === "right") {
            left = targetRect.left + targetRect.width;
          }
        } else if (align.right) {
          if (align.right === "left") {
            left = targetRect.left - width;
          } else if (align.right === "right") {
            left = targetRect.left + targetRect.width - width;
          }
        } else {
          left = targetRect.left + targetRect.width / 2 - width / 2;
        }
        if (left + width > windowWidth) {
          left -= left + width - windowWidth;
        } else if (left < 0) {
          left = 0;
        }
        var top;
        var bottom;
        var maxHeight = containerRect.height;
        if (responsive && (align.top === "top" && targetRect.top < 0 || align.bottom === "top" && targetRect.top - containerRect.height <= 0 && targetRect.bottom + containerRect.height < windowHeight)) {
          top = targetRect.bottom;
          maxHeight = top;
        } else if (responsive && (align.bottom === "bottom" && targetRect.bottom > windowHeight || align.top === "bottom" && targetRect.bottom + containerRect.height >= windowHeight && targetRect.top - containerRect.height > 0)) {
          bottom = targetRect.top;
          maxHeight = bottom;
        } else if (align.top === "top") {
          top = targetRect.top;
          maxHeight = windowHeight - top;
        } else if (align.top === "bottom") {
          top = targetRect.bottom;
          maxHeight = windowHeight - top;
        } else if (align.bottom === "top") {
          bottom = targetRect.top;
          maxHeight = bottom;
        } else if (align.bottom === "bottom") {
          bottom = targetRect.bottom;
          maxHeight = bottom;
        } else {
          top = targetRect.top + targetRect.height / 2 - containerRect.height / 2;
        }
        container.style.left = left + "px";
        if (stretch) {
          container.style.width = width + 0.1 + "px";
        }
        if (top !== "") {
          container.style.top = top + "px";
        }
        if (bottom !== "") {
          container.style.bottom = windowHeight - bottom + "px";
        }
        if (!preserveHeight) {
          if (theme.drop && theme.drop.maxHeight) {
            maxHeight = Math.min(maxHeight, parseMetricToNum(theme.drop.maxHeight));
          }
          container.style.maxHeight = maxHeight + "px";
        }
      }
      if (onAlign)
        notifyAlign();
    };
    var scrollParents;
    var addScrollListeners = function addScrollListeners2() {
      scrollParents = findScrollParents(dropTarget);
      scrollParents.forEach(function(scrollParent) {
        return scrollParent.addEventListener("scroll", place);
      });
    };
    var removeScrollListeners = function removeScrollListeners2() {
      scrollParents.forEach(function(scrollParent) {
        return scrollParent.removeEventListener("scroll", place);
      });
      scrollParents = [];
    };
    var onResize = function onResize2() {
      removeScrollListeners();
      addScrollListeners();
      place(false);
    };
    addScrollListeners();
    window.addEventListener("resize", onResize);
    place(false);
    return function() {
      removeScrollListeners();
      window.removeEventListener("resize", onResize);
    };
  }, [align, containerTarget, onAlign, dropTarget, portalContext, portalId, responsive, restrictFocus, stretch, theme.drop, dropRef]);
  (0, import_react19.useEffect)(function() {
    if (restrictFocus) {
      dropRef.current.focus();
    }
  }, [dropRef, restrictFocus]);
  var content = import_react19.default.createElement(StyledDrop, _extends13({
    "aria-label": a11yTitle || ariaLabel,
    ref: dropRef,
    as: Box,
    background,
    plain,
    elevation: !plain ? elevation || theme.global.drop.elevation || theme.global.drop.shadowSize || // backward compatibility
    "small" : void 0,
    tabIndex: "-1",
    alignProp: align,
    overflow,
    "data-g-portal-id": portalId
  }, rest), children2);
  var themeContextValue = (0, import_react19.useMemo)(function() {
    var dark3;
    if (background || theme.global.drop.background) {
      dark3 = backgroundIsDark(background || theme.global.drop.background, theme);
    }
    return _extends13({}, theme, {
      dark: dark3
    });
  }, [background, theme]);
  var dark2 = themeContextValue.dark;
  if (dark2 !== void 0 && dark2 !== theme.dark) {
    content = import_react19.default.createElement(Me.Provider, {
      value: themeContextValue
    }, content);
  }
  return import_react19.default.createElement(PortalContext.Provider, {
    value: nextPortalContext
  }, import_react19.default.createElement(FocusedContainer, {
    onKeyDown: onEsc && preventLayerClose,
    trapFocus
  }, import_react19.default.createElement(
    Keyboard,
    {
      capture: true,
      onEsc: onEsc ? function(event) {
        event.stopPropagation();
        onEsc(event);
      } : void 0,
      onKeyDown,
      target: "document"
    },
    content
  )));
});

// node_modules/grommet/es6/components/Drop/propTypes.js
var import_prop_types8 = __toESM(require_prop_types());
var dropOverflowPropTypes = import_prop_types8.default.oneOfType([import_prop_types8.default.oneOf(OVERFLOW_VALUES), import_prop_types8.default.shape({
  horizontal: import_prop_types8.default.oneOf(OVERFLOW_VALUES),
  vertical: import_prop_types8.default.oneOf(OVERFLOW_VALUES)
}), import_prop_types8.default.string]);
var PropType7 = {};
if (true) {
  PropType7 = {
    align: import_prop_types8.default.shape({
      top: import_prop_types8.default.oneOf(["top", "bottom"]),
      bottom: import_prop_types8.default.oneOf(["top", "bottom"]),
      right: import_prop_types8.default.oneOf(["left", "right"]),
      left: import_prop_types8.default.oneOf(["left", "right"])
    }),
    background: backgroundDoc,
    elevation: import_prop_types8.default.oneOfType([import_prop_types8.default.oneOf(["none", "xsmall", "small", "medium", "large", "xlarge"]), import_prop_types8.default.string]),
    inline: import_prop_types8.default.bool,
    margin: marginProp,
    onClickOutside: import_prop_types8.default.func,
    onEsc: import_prop_types8.default.func,
    overflow: dropOverflowPropTypes,
    plain: import_prop_types8.default.bool,
    responsive: import_prop_types8.default.bool,
    restrictFocus: import_prop_types8.default.bool,
    round: roundPropType,
    stretch: import_prop_types8.default.oneOfType([import_prop_types8.default.bool, import_prop_types8.default.oneOf(["align"])]),
    target: import_prop_types8.default.object.isRequired,
    trapFocus: import_prop_types8.default.bool
  };
}
var DropPropTypes = PropType7;

// node_modules/grommet/es6/components/Drop/Drop.js
var _excluded8 = ["inline", "restrictFocus", "target", "trapFocus"];
function _extends14() {
  _extends14 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends14.apply(this, arguments);
}
function _objectWithoutPropertiesLoose8(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var Drop = (0, import_react20.forwardRef)(function(_ref, ref) {
  var inline = _ref.inline, restrictFocus = _ref.restrictFocus, dropTarget = _ref.target, _ref$trapFocus = _ref.trapFocus, trapFocus = _ref$trapFocus === void 0 ? true : _ref$trapFocus, rest = _objectWithoutPropertiesLoose8(_ref, _excluded8);
  var theme = (0, import_react20.useContext)(Me) || defaultProps2.theme;
  var _useState = (0, import_react20.useState)(), originalFocusedElement = _useState[0], setOriginalFocusedElement = _useState[1];
  (0, import_react20.useEffect)(function() {
    return setOriginalFocusedElement(document.activeElement);
  }, []);
  var _useState2 = (0, import_react20.useState)(), dropContainer = _useState2[0], setDropContainer = _useState2[1];
  var containerTarget = (0, import_react20.useContext)(ContainerTargetContext);
  var containerChildNodesLength = (0, import_react20.useRef)(null);
  (0, import_react20.useEffect)(function() {
    if (!(containerChildNodesLength != null && containerChildNodesLength.current)) {
      containerChildNodesLength.current = containerTarget.childNodes.length;
      setDropContainer(!inline ? getNewContainer(containerTarget) : void 0);
    }
  }, [containerTarget, inline]);
  (0, import_react20.useEffect)(function() {
    return function() {
      if (restrictFocus && originalFocusedElement) {
        if (originalFocusedElement.focus) {
          setFocusWithoutScroll(originalFocusedElement);
        } else if (originalFocusedElement.parentNode && originalFocusedElement.parentNode.focus) {
          setFocusWithoutScroll(originalFocusedElement.parentNode);
        }
      }
      if (dropContainer) {
        containerTarget.removeChild(dropContainer);
      }
    };
  }, [containerTarget, dropContainer, originalFocusedElement, restrictFocus]);
  var content = import_react20.default.createElement(DropContainer, _extends14({
    ref,
    dir: theme && theme.dir,
    dropTarget,
    restrictFocus,
    trapFocus
  }, rest));
  if (inline)
    return content;
  if (dropContainer)
    return (0, import_react_dom.createPortal)(content, dropContainer);
  return null;
});
Drop.displayName = "Drop";
Drop.propTypes = DropPropTypes;

// node_modules/grommet/es6/components/Tip/propTypes.js
var import_prop_types9 = __toESM(require_prop_types());
var PropType8 = {};
if (true) {
  PropType8 = {
    content: import_prop_types9.default.node,
    dropProps: import_prop_types9.default.object,
    plain: import_prop_types9.default.bool
  };
}
var TipPropTypes = PropType8;

// node_modules/grommet/es6/components/Tip/Tip.js
function _extends15() {
  _extends15 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends15.apply(this, arguments);
}
var Tip = (0, import_react21.forwardRef)(function(_ref, tipRef) {
  var children2 = _ref.children, content = _ref.content, dropProps5 = _ref.dropProps, plain = _ref.plain;
  var theme = (0, import_react21.useContext)(Me);
  var _useState = (0, import_react21.useState)(false), over = _useState[0], setOver = _useState[1];
  var usingKeyboard = useKeyboard();
  var componentRef = useForwardedRef(tipRef);
  var child = import_react21.Children.count(children2) <= 1 && !import_react21.default.isValidElement(children2) && import_react21.default.createElement("span", null, children2) || import_react21.Children.only(children2);
  var clonedChild = (0, import_react21.cloneElement)(child, {
    onMouseEnter: function onMouseEnter(event) {
      var _child$props;
      setOver(true);
      if ((_child$props = child.props) != null && _child$props.onMouseEnter)
        child.props.onMouseEnter(event);
    },
    onMouseLeave: function onMouseLeave(event) {
      var _child$props2;
      setOver(false);
      if ((_child$props2 = child.props) != null && _child$props2.onMouseLeave)
        child.props.onMouseLeave(event);
    },
    onFocus: function onFocus(event) {
      var _child$props3;
      if (usingKeyboard)
        setOver(true);
      if ((_child$props3 = child.props) != null && _child$props3.onFocus)
        child.props.onFocus(event);
    },
    onBlur: function onBlur(event) {
      var _child$props4;
      if (usingKeyboard)
        setOver(false);
      if ((_child$props4 = child.props) != null && _child$props4.onBlur)
        child.props.onBlur(event);
    },
    key: "tip-child",
    ref: function ref(node) {
      if (typeof componentRef === "function") {
        componentRef(node);
      } else if (componentRef) {
        componentRef.current = node;
      }
      var callerRef = child.ref;
      if (typeof callerRef === "function") {
        callerRef(node);
      } else if (callerRef) {
        callerRef.current = node;
      }
    }
  });
  return [clonedChild, over && import_react21.default.createElement(Drop, _extends15({
    target: componentRef.current,
    trapFocus: false,
    key: "tip-drop"
  }, theme.tip.drop, dropProps5), plain ? content : import_react21.default.createElement(Box, theme.tip.content, content))];
});
Tip.displayName = "Tip";
Tip.propTypes = TipPropTypes;

// node_modules/grommet/es6/components/Button/Badge.js
var import_react27 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/utils/use-isomorphic-layout-effect.js
var import_react22 = __toESM(require_react());
var useLayoutEffect = typeof window !== "undefined" ? import_react22.useLayoutEffect : import_react22.useEffect;

// node_modules/grommet/es6/components/Stack/Stack.js
var import_react23 = __toESM(require_react());

// node_modules/grommet/es6/components/Stack/StyledStack.js
init_styled_components_browser_esm();
var fillStyle3 = Ae(["", " ", " flex-grow:1;display:flex;"], function(props) {
  return props.fillContainer === true || props.fillContainer === "horizontal" ? "\n        width: 100%;\n        max-width: none;\n      " : "";
}, function(props) {
  return props.fillContainer === true || props.fillContainer === "vertical" ? "height: 100%;" : "";
});
var StyledStack = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledStack",
  componentId: "sc-ajspsk-0"
})(["position:relative;", " ", " ", ""], genericStyles, function(props) {
  return props.fillContainer && fillStyle3;
}, function(props) {
  return props.theme.stack && props.theme.stack.extend;
});
StyledStack.defaultProps = {};
Object.setPrototypeOf(StyledStack.defaultProps, defaultProps2);
var styleMap = {
  fill: "\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n  ",
  center: "\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n  ",
  left: "\n    top: 50%;\n    left: 0;\n    transform: translateY(-50%);\n  ",
  right: "\n    top: 50%;\n    right: 0;\n    transform: translateY(-50%);\n  ",
  top: "\n    top: 0;\n    left: 50%;\n    transform: translateX(-50%);\n  ",
  bottom: "\n    bottom: 0;\n    left: 50%;\n    transform: translateX(-50%);\n  ",
  "top-left": "\n    top: 0;\n    left: 0;\n  ",
  "bottom-left": "\n    bottom: 0;\n    left: 0;\n  ",
  "top-right": "\n    top: 0;\n    right: 0;\n  ",
  "bottom-right": "\n    bottom: 0;\n    right: 0;\n  "
};
var StyledStackLayer = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledStack__StyledStackLayer",
  componentId: "sc-ajspsk-1"
})(["position:", ";", " ", " ", " ", ""], function(props) {
  return props.guiding ? "relative" : "absolute";
}, function(props) {
  return props.guiding && "display: block;";
}, function(props) {
  return !props.guiding && styleMap[props.anchor || "fill"] + ";";
}, function(props) {
  return props.fillContainer && "\n    width: 100%;\n    height: 100%;\n  ";
}, function(props) {
  return !props.interactive && "pointer-events: none;";
});
StyledStackLayer.defaultProps = {};
Object.setPrototypeOf(StyledStackLayer.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/Stack/propTypes.js
var import_prop_types10 = __toESM(require_prop_types());
function _extends16() {
  _extends16 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends16.apply(this, arguments);
}
var PropType9 = {};
if (true) {
  PropType9 = _extends16({}, genericProps, {
    anchor: import_prop_types10.default.oneOf(["center", "left", "right", "top", "bottom", "top-left", "bottom-left", "top-right", "bottom-right"]),
    fill: import_prop_types10.default.oneOfType([import_prop_types10.default.oneOf(["horizontal", "vertical"]), import_prop_types10.default.bool]),
    guidingChild: import_prop_types10.default.oneOfType([import_prop_types10.default.number, import_prop_types10.default.oneOf(["first", "last"])]),
    interactiveChild: import_prop_types10.default.oneOfType([import_prop_types10.default.number, import_prop_types10.default.oneOf(["first", "last"])])
  });
}
var StackPropTypes = PropType9;

// node_modules/grommet/es6/components/Stack/Stack.js
var _excluded9 = ["anchor", "children", "fill", "guidingChild", "interactiveChild"];
function _objectWithoutPropertiesLoose9(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function _extends17() {
  _extends17 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends17.apply(this, arguments);
}
var buildStyledChildren = function buildStyledChildren2(_ref) {
  var anchor = _ref.anchor, fill = _ref.fill, guidingIndex = _ref.guidingIndex, interactiveChild = _ref.interactiveChild, interactiveIndex = _ref.interactiveIndex;
  return function(child, index) {
    var interactive = interactiveChild === void 0 || interactiveIndex === index;
    var isGuidingIndex = index === guidingIndex;
    var props = isGuidingIndex ? {
      guiding: true,
      fillContainer: fill
    } : {
      anchor
    };
    return import_react23.default.createElement(StyledStackLayer, _extends17({
      key: index,
      interactive
    }, props), child);
  };
};
var Stack = (0, import_react23.forwardRef)(function(_ref2, ref) {
  var anchor = _ref2.anchor, children2 = _ref2.children, fill = _ref2.fill, guidingChild = _ref2.guidingChild, interactiveChild = _ref2.interactiveChild, rest = _objectWithoutPropertiesLoose9(_ref2, _excluded9);
  var prunedChildren = import_react23.Children.toArray(children2).filter(function(c3) {
    return c3;
  });
  var toChildIndex = function toChildIndex2(child) {
    var index = child;
    if (index === "first" || !index)
      index = 0;
    else if (index === "last")
      index = prunedChildren.length - 1;
    return index;
  };
  var guidingIndex = toChildIndex(guidingChild);
  var interactiveIndex = interactiveChild && toChildIndex(interactiveChild);
  var styledChildren = prunedChildren.map(buildStyledChildren({
    anchor,
    fill,
    guidingIndex,
    interactiveChild,
    interactiveIndex
  }));
  return import_react23.default.createElement(StyledStack, _extends17({
    ref,
    fillContainer: fill
  }, rest), styledChildren);
});
Stack.displayName = "Stack";
Stack.propTypes = StackPropTypes;

// node_modules/grommet/es6/components/Text/Text.js
var import_react26 = __toESM(require_react());

// node_modules/grommet/es6/components/Text/StyledText.js
init_styled_components_browser_esm();
var sizeStyle3 = function sizeStyle4(props) {
  var size = props.size || "medium";
  var data = props.theme.text[size];
  if (data) {
    return Ae(["font-size:", ";line-height:", ";"], data.size, data.height);
  }
  return Ae(["font-size:", ";line-height:normal;"], size);
};
var truncateStyle = "\n  white-space: nowrap;\n  max-width: 100%;\n  overflow: hidden;\n  text-overflow: ellipsis;\n";
var colorStyle = Ae(["color:", ";"], function(props) {
  return normalizeColor(props.colorProp, props.theme);
});
var weightStyle = Ae(["font-weight:", ";"], function(props) {
  return props.weight;
});
var wordBreakStyle = Ae(["word-break:", ";"], function(props) {
  return props.wordBreak;
});
var fontFamily = Ae(["font-family:", ";"], function(props) {
  return props.theme.text.font.family;
});
var StyledText = styled_components_browser_esm_default("span").withConfig({
  shouldForwardProp: function shouldForwardProp(prop, defaultValidatorFn) {
    return defaultValidatorFn(prop) && prop !== "size";
  }
}).withConfig({
  displayName: "StyledText",
  componentId: "sc-1sadyjn-0"
})(["", " ", " ", " ", " ", " ", " ", " ", " ", ""], genericStyles, function(props) {
  return sizeStyle3(props);
}, function(props) {
  return props.textAlign && textAlignStyle;
}, function(props) {
  return props.truncate && truncateStyle;
}, function(props) {
  return props.colorProp && colorStyle;
}, function(props) {
  return props.weight && weightStyle;
}, function(props) {
  return props.wordBreak && wordBreakStyle;
}, function(props) {
  return props.theme.text.font && props.theme.text.font.family && fontFamily;
}, function(props) {
  return props.theme.text && props.theme.text.extend;
});
StyledText.defaultProps = {};
Object.setPrototypeOf(StyledText.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/Text/propTypes.js
var import_prop_types11 = __toESM(require_prop_types());
function _extends18() {
  _extends18 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends18.apply(this, arguments);
}
var PropType10 = {};
if (true) {
  PropType10 = _extends18({}, genericProps, {
    color: colorPropType,
    margin: import_prop_types11.default.oneOfType([import_prop_types11.default.oneOf(["none"].concat(MARGIN_SIZES)), import_prop_types11.default.shape({
      bottom: import_prop_types11.default.oneOfType([import_prop_types11.default.oneOf(MARGIN_SIZES), import_prop_types11.default.string]),
      end: import_prop_types11.default.oneOfType([import_prop_types11.default.oneOf(MARGIN_SIZES), import_prop_types11.default.string]),
      horizontal: import_prop_types11.default.oneOfType([import_prop_types11.default.oneOf(MARGIN_SIZES), import_prop_types11.default.string]),
      left: import_prop_types11.default.oneOfType([import_prop_types11.default.oneOf(MARGIN_SIZES), import_prop_types11.default.string]),
      right: import_prop_types11.default.oneOfType([import_prop_types11.default.oneOf(MARGIN_SIZES), import_prop_types11.default.string]),
      start: import_prop_types11.default.oneOfType([import_prop_types11.default.oneOf(MARGIN_SIZES), import_prop_types11.default.string]),
      top: import_prop_types11.default.oneOfType([import_prop_types11.default.oneOf(MARGIN_SIZES), import_prop_types11.default.string]),
      vertical: import_prop_types11.default.oneOfType([import_prop_types11.default.oneOf(MARGIN_SIZES), import_prop_types11.default.string])
    }), import_prop_types11.default.string]),
    size: import_prop_types11.default.oneOfType([import_prop_types11.default.oneOf(["xsmall", "small", "medium", "large", "xlarge", "xxlarge", "2xl", "3xl", "4xl", "5xl", "6xl"]), import_prop_types11.default.string]),
    skeleton: skeletonPropType,
    tag: import_prop_types11.default.oneOfType([import_prop_types11.default.string, import_prop_types11.default.func]),
    as: import_prop_types11.default.oneOfType([import_prop_types11.default.string, import_prop_types11.default.func, import_prop_types11.default.element]),
    textAlign: import_prop_types11.default.oneOf(["start", "center", "end", "justify"]),
    tip: import_prop_types11.default.oneOfType([import_prop_types11.default.shape({
      content: import_prop_types11.default.oneOfType([import_prop_types11.default.node, import_prop_types11.default.string]),
      dropProps: import_prop_types11.default.shape({}),
      plain: import_prop_types11.default.bool
    }), import_prop_types11.default.string]),
    truncate: import_prop_types11.default.oneOfType([import_prop_types11.default.bool, import_prop_types11.default.oneOf(["tip"])]),
    weight: import_prop_types11.default.oneOfType([import_prop_types11.default.oneOf(["normal", "bold", "bolder", "lighter"]), import_prop_types11.default.number]),
    wordBreak: import_prop_types11.default.oneOf(["normal", "break-all", "keep-all", "break-word"])
  });
}
var TextPropTypes = PropType10;

// node_modules/grommet/es6/components/Text/TextSkeleton.js
var import_react24 = __toESM(require_react());
init_styled_components_browser_esm();
var _excluded10 = ["as", "size"];
function _extends19() {
  _extends19 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends19.apply(this, arguments);
}
function _objectWithoutPropertiesLoose10(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var TextSkeleton = (0, import_react24.forwardRef)(function(_ref, ref) {
  var as = _ref.as, sizeProp = _ref.size, rest = _objectWithoutPropertiesLoose10(_ref, _excluded10);
  var theme = (0, import_react24.useContext)(Me) || defaultProps2.theme;
  var size = sizeProp || "medium";
  var data = theme.text[size];
  var height = data ? data.size : sizeProp;
  return import_react24.default.createElement(Skeleton, _extends19({
    ref,
    as,
    height
  }, theme.text.skeleton, rest));
});
TextSkeleton.displayName = "TextSkeleton";

// node_modules/grommet/es6/components/Text/TextContext.js
var import_react25 = __toESM(require_react());
var TextContext = import_react25.default.createContext({});

// node_modules/grommet/es6/components/Text/Text.js
var _excluded11 = ["children", "color", "tag", "as", "tip", "a11yTitle", "truncate", "size", "skeleton"];
function _extends20() {
  _extends20 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends20.apply(this, arguments);
}
function _objectWithoutPropertiesLoose11(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var Text = (0, import_react26.forwardRef)(function(_ref, ref) {
  var children2 = _ref.children, color = _ref.color, tag = _ref.tag, as = _ref.as, tipProp = _ref.tip, _ref$a11yTitle = _ref.a11yTitle, a11yTitle = _ref$a11yTitle === void 0 ? typeof tipProp === "string" && tipProp || (tipProp == null ? void 0 : tipProp.content) || void 0 : _ref$a11yTitle, truncate = _ref.truncate, size = _ref.size, skeletonProp = _ref.skeleton, rest = _objectWithoutPropertiesLoose11(_ref, _excluded11);
  var textRef = useForwardedRef(ref);
  var _useState = (0, import_react26.useState)(false), textTruncated = _useState[0], setTextTruncated = _useState[1];
  var textContextValue = (0, import_react26.useMemo)(function() {
    return {
      size
    };
  }, [size]);
  var skeleton = useSkeleton();
  useLayoutEffect(function() {
    var updateTip = function updateTip2() {
      setTextTruncated(false);
      if (truncate === "tip" && textRef.current && textRef.current.scrollWidth > textRef.current.offsetWidth) {
        setTextTruncated(true);
      }
    };
    window.addEventListener("resize", updateTip);
    window.addEventListener("pagechange", updateTip);
    updateTip();
    return function() {
      window.removeEventListener("resize", updateTip);
      window.removeEventListener("pagechange", updateTip);
    };
  }, [textRef, truncate]);
  if (skeleton) {
    return import_react26.default.createElement(TextSkeleton, _extends20({
      ref,
      as,
      size
    }, skeletonProp, rest));
  }
  var styledTextResult = import_react26.default.createElement(StyledText, _extends20({
    as: !as && tag ? tag : as,
    colorProp: color,
    "aria-label": a11yTitle,
    truncate,
    size
  }, rest, {
    ref: textRef
  }), children2 !== void 0 ? import_react26.default.createElement(TextContext.Provider, {
    value: textContextValue
  }, children2) : void 0);
  if (tipProp || textTruncated) {
    if (textTruncated) {
      return import_react26.default.createElement(Tip, _extends20({
        content: children2
      }, tipProp), styledTextResult);
    }
    if (truncate !== "tip") {
      return import_react26.default.createElement(Tip, tipProp, styledTextResult);
    }
  }
  return styledTextResult;
});
Text.displayName = "Text";
Text.defaultProps = {
  level: 1
};
Text.propTypes = TextPropTypes;

// node_modules/grommet/es6/components/Button/Badge.js
var StyledBadgeContainer = styled_components_browser_esm_default(Box).withConfig({
  displayName: "Badge__StyledBadgeContainer",
  componentId: "sc-1es4ws1-0"
})(["", ""], function(props) {
  return props.theme.button.badge.container.extend;
});
var Badge = function Badge2(_ref) {
  var children2 = _ref.children, content = _ref.content;
  var theme = (0, import_react27.useContext)(Me);
  var containerRef = (0, import_react27.useRef)();
  var contentRef = (0, import_react27.useRef)();
  var stackRef = (0, import_react27.useRef)();
  var defaultBadgeDimension = typeof content === "boolean" || content && content.value && typeof content.value === "boolean" ? (
    // empty badge should be smaller. this value was chosen as a default
    // after experimenting with various values
    parseMetricToNum(theme.button.badge.size.medium) / 2 + "px"
  ) : theme.button.badge.size.medium;
  useLayoutEffect(function() {
    var onResize = function onResize2() {
      if (containerRef != null && containerRef.current) {
        containerRef.current.style.minHeight = "";
        containerRef.current.style.minWidth = "";
        if (contentRef != null && contentRef.current) {
          if (typeof content === "number" || typeof content === "object" && content.value) {
            containerRef.current.style.minHeight = defaultBadgeDimension;
            containerRef.current.style.minWidth = defaultBadgeDimension;
            var _contentRef$current$g = contentRef.current.getBoundingClientRect(), contentHeight = _contentRef$current$g.height, contentWidth = _contentRef$current$g.width;
            if (contentHeight) {
              var height = defaultBadgeDimension;
              var width = defaultBadgeDimension;
              var verticalSpace = (parseMetricToNum(height) - contentHeight) * 2.5;
              containerRef.current.style.minHeight = height;
              containerRef.current.style.minWidth = Math.max(parseMetricToNum(width), Math.ceil(contentWidth + verticalSpace)) + "px";
            }
          } else {
            containerRef.current.style.minHeight = contentRef.current.getBoundingClientRect().width;
            containerRef.current.style.minWidth = contentRef.current.getBoundingClientRect().height;
          }
        } else {
          containerRef.current.style.minHeight = defaultBadgeDimension;
          containerRef.current.style.minWidth = defaultBadgeDimension;
        }
      }
    };
    window.addEventListener("resize", onResize);
    onResize();
    return function() {
      window.removeEventListener("resize", onResize);
    };
  }, [content, defaultBadgeDimension]);
  useLayoutEffect(function() {
    if (stackRef != null && stackRef.current) {
      var offset = typeof content === "boolean" || content && content.value === true ? "25%" : "50%";
      stackRef.current.children[1].style.top = 0;
      stackRef.current.children[1].style.right = 0;
      stackRef.current.children[1].style.transform = "translate(" + offset + ", -" + offset + ")";
      stackRef.current.children[1].style.transformOrigin = "100% 0%";
    }
  }, [content]);
  var value;
  if (typeof content === "number")
    value = content;
  else if (typeof content === "object")
    value = content.value;
  var badge;
  if (typeof value === "number" || typeof value === "boolean" || typeof content === "boolean") {
    if (typeof value === "number") {
      var max = content.max || 9;
      badge = import_react27.default.createElement(Text, {
        color: "text-strong",
        size: theme.button.badge.text.size.medium,
        weight: "normal",
        ref: contentRef
      }, value > max ? max + "+" : value);
    }
    badge = import_react27.default.createElement(StyledBadgeContainer, {
      ref: containerRef,
      align: "center",
      background: content.background || theme.button.badge.container.background,
      flex: false,
      justify: "center",
      round: true,
      pad: !(typeof value === "boolean" || typeof content === "boolean") ? theme.button.badge.container.pad : void 0
    }, badge);
  } else
    badge = import_react27.default.createElement(Box, {
      ref: contentRef
    }, content);
  return import_react27.default.createElement(Stack, {
    ref: stackRef,
    anchor: "top-right"
  }, children2, badge);
};

// node_modules/grommet/es6/components/Button/StyledButton.js
init_styled_components_browser_esm();
var radiusStyle = function radiusStyle2(props) {
  var isIconOnly = props.hasIcon && !props.hasLabel;
  var size = props.sizeProp;
  if (!isIconOnly && size && props.theme.button.size && props.theme.button.size[size]) {
    return props.theme.button.size[size].border.radius;
  }
  return props.theme.button.border.radius;
};
var fontStyle = function fontStyle2(props) {
  var size = props.sizeProp || "medium";
  var data = props.theme.text[size];
  return Ae(["font-size:", ";line-height:", ";"], data.size, data.height);
};
var padStyle = function padStyle2(props) {
  var size = props.sizeProp;
  if (size && props.theme.button.size && props.theme.button.size[size]) {
    return Ae(["", " ", ""], props.theme.button.size[size].pad.vertical, props.theme.button.size[size].pad.horizontal);
  }
  return Ae(["", " ", ""], props.theme.button.padding.vertical, props.theme.button.padding.horizontal);
};
var basicStyle = function basicStyle2(props) {
  return Ae(["border:", " solid ", ";border-radius:", ";color:", ";padding:", ";", ""], props.theme.button.border.width, normalizeColor(props.colorValue || props.theme.button.border.color || "control", props.theme), radiusStyle(props), normalizeColor(props.theme.button.color || "text", props.theme), padStyle(props), fontStyle(props));
};
var primaryStyle = function primaryStyle2(props) {
  return Ae(["", " border-radius:", ";", ""], backgroundStyle(normalizeColor(props.colorValue || props.theme.button.primary && props.theme.button.primary.color || "control", props.theme), props.theme, props.theme.button.color), radiusStyle(props), props.theme.button.primary && props.theme.button.primary.extend);
};
function getHoverColor(props) {
  if (props.colorValue) {
    return normalizeColor(props.colorValue, props.theme);
  }
  if (props.active && props.primary && props.theme.button.primary && props.theme.button.primary.active && props.theme.button.primary.active.border && props.theme.button.primary.active.border.color) {
    return normalizeColor(props.theme.button.primary.active.border.color, props.theme);
  }
  return normalizeColor(props.theme.button.border.color || "control", props.theme);
}
var hoverStyle = Ae(["&:hover{", " ", ";}"], function(props) {
  return props.hoverIndicator && getHoverIndicatorStyle(props.hoverIndicator, props.theme);
}, function(props) {
  return !props.plain && Ae(["box-shadow:0px 0px 0px 2px ", ";"], getHoverColor(props));
});
var fillStyle4 = function fillStyle5(fillContainer) {
  if (fillContainer === "horizontal") {
    return "width: 100%;";
  }
  if (fillContainer === "vertical") {
    return "height: 100%;";
  }
  if (fillContainer) {
    return "\n      width: 100%;\n      height: 100%;\n      max-width: none;\n      flex: 1 0 auto;\n    ";
  }
  return void 0;
};
var plainStyle = function plainStyle2(props) {
  return Ae(["color:", ";outline:none;border:none;padding:0;text-align:inherit;"], normalizeColor(props.colorValue || "inherit", props.theme));
};
var activeButtonStyle = function activeButtonStyle2(props) {
  return Ae(["", " ", " ", ""], activeStyle, props.primary && props.theme.button.primary && props.theme.button.primary.active && props.theme.button.primary.active.border && props.theme.button.primary.active.border.color && "border: " + props.theme.button.border.width + " solid\n    " + normalizeColor(props.theme.button.primary.active.border.color, props.theme) + ";\n    ", props.primary && props.theme.button.primary && props.theme.button.primary.active && props.theme.button.primary.active.extend);
};
var disabledButtonStyle = function disabledButtonStyle2(props) {
  return Ae(["", " ", " ", " ", ""], disabledStyle(props.theme.button.disabled.opacity), !props.plain && props.theme.button.disabled.border && props.theme.button.disabled.border.color && "border: " + props.theme.button.border.width + " solid\n    " + normalizeColor(props.theme.button.disabled.border.color, props.theme) + ";", props.theme.button.disabled.color && // if primary button, apply disabled color to background. otherwise,
  // apply disabled color to the label
  (props.primary ? backgroundStyle(normalizeColor(props.theme.button.disabled.color, props.theme), props.theme, props.theme.button.color) : "color: " + normalizeColor(props.theme.button.disabled.color, props.theme) + ";"), props.theme.button.disabled && props.theme.button.disabled.extend);
};
var StyledButton = styled_components_browser_esm_default.button.withConfig({
  displayName: "StyledButton",
  componentId: "sc-323bzc-0"
})(["display:inline-block;box-sizing:border-box;cursor:pointer;font:inherit;text-decoration:none;margin:0;background:transparent;overflow:visible;text-transform:none;", " ", " ", " ", " ", " ", " ", " &:focus{", "}&:focus:not(:focus-visible){", "}", " ", " ", " ", " ", " ", " ", ""], genericStyles, function(props) {
  return props.plain && plainStyle(props);
}, function(props) {
  return !props.plain && basicStyle(props);
}, function(props) {
  return props.primary && primaryStyle(props);
}, function(props) {
  return !props.disabled && !props.selected && !props.focus && !props.busy && !props.success && hoverStyle;
}, function(props) {
  return !props.disabled && props.active && activeButtonStyle(props);
}, function(props) {
  return props.disabled && props.theme.button && props.theme.button.disabled && disabledButtonStyle(props);
}, function(props) {
  return (!props.plain || props.focusIndicator) && focusStyle();
}, unfocusStyle(), function(props) {
  return !props.plain && props.theme.button.transition && "\n    transition-property: " + props.theme.button.transition.properties.join(",") + ";\n    transition-duration: " + props.theme.button.transition.duration + "s;\n    transition-timing-function: " + props.theme.button.transition.timing + ";\n  ";
}, function(props) {
  return props.fillContainer && fillStyle4(props.fillContainer);
}, function(props) {
  return props.hasIcon && !props.hasLabel && "\n    line-height: 0;\n  ";
}, function(props) {
  return props.pad === true && props.hasIcon && !props.hasLabel && "\n    padding: " + props.theme.global.edgeSize.small + ";\n  ";
}, function(props) {
  return !props.plain && props.pad && edgeStyle("padding", props.pad, false, void 0, props.theme);
}, function(props) {
  return props.theme.button && props.theme.button.extend;
}, function(props) {
  return (props.busy || props.success) && "\n    cursor: default;\n  ";
});
StyledButton.defaultProps = {};
Object.setPrototypeOf(StyledButton.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/Button/StyledButtonKind.js
init_styled_components_browser_esm();
var radiusStyle3 = function radiusStyle4(props) {
  var size = props.sizeProp;
  var themeObj = typeof props.kind === "object" ? props.kind : props.theme.button;
  if (size && themeObj.size && themeObj.size[size])
    return Ae(["border-radius:", ";"], themeObj.size[size].border.radius);
  if (themeObj.border && themeObj.border.radius)
    return Ae(["border-radius:", ";"], themeObj.border.radius);
  return "";
};
var fontStyle3 = function fontStyle4(props) {
  var size = props.sizeProp || "medium";
  var data = props.theme.text[size];
  return Ae(["font-size:", ";line-height:", ";"], data.size, props.hasIcon && !props.hasLabel ? 0 : data.height);
};
var padFromTheme = function padFromTheme2(size, theme, themeObj, kind, iconOnly) {
  var _themeObj$size, _themeObj$size$size, _themeObj$size$size$i, _themeObj$size3, _themeObj$size3$size, _themeObj$size3$size$;
  if (size === void 0) {
    size = "medium";
  }
  if (size && iconOnly && themeObj != null && (_themeObj$size = themeObj.size) != null && (_themeObj$size$size = _themeObj$size[size]) != null && (_themeObj$size$size$i = _themeObj$size$size.iconOnly) != null && _themeObj$size$size$i.pad) {
    var _themeObj$size2, _themeObj$size2$size, _themeObj$size2$size$;
    var pad = themeObj == null ? void 0 : (_themeObj$size2 = themeObj.size) == null ? void 0 : (_themeObj$size2$size = _themeObj$size2[size]) == null ? void 0 : (_themeObj$size2$size$ = _themeObj$size2$size.iconOnly) == null ? void 0 : _themeObj$size2$size$.pad;
    return {
      vertical: typeof pad === "string" ? pad : pad.vertical,
      horizontal: typeof pad === "string" ? pad : pad.horizontal
    };
  }
  if (size && themeObj != null && (_themeObj$size3 = themeObj.size) != null && (_themeObj$size3$size = _themeObj$size3[size]) != null && (_themeObj$size3$size$ = _themeObj$size3$size[kind]) != null && _themeObj$size3$size$.pad) {
    return themeObj.size[size][kind].pad;
  }
  if (size && themeObj.size && themeObj.size[size] && themeObj.size[size].pad) {
    return {
      vertical: themeObj.size[size].pad.vertical,
      horizontal: themeObj.size[size].pad.horizontal
    };
  }
  if (theme.button.padding) {
    return {
      vertical: theme.global.edgeSize[theme.button.padding.vertical] || theme.button.padding.vertical,
      horizontal: theme.global.edgeSize[theme.button.padding.horizontal] || theme.button.padding.horizontal
    };
  }
  return void 0;
};
var padStyle3 = function padStyle4(_ref) {
  var hasIcon = _ref.hasIcon, hasLabel = _ref.hasLabel, size = _ref.sizeProp, theme = _ref.theme, kind = _ref.kind;
  var themeObj = typeof kind === "object" ? kind : theme.button;
  var iconOnly = hasIcon && !hasLabel;
  var pad = padFromTheme(size, theme, themeObj, kind, iconOnly);
  return pad ? Ae(["padding:", " ", ";"], pad.vertical, pad.horizontal) : "";
};
var basicStyle3 = function basicStyle4(props) {
  return Ae(["border:none;", ";", " ", " ", ""], radiusStyle3(props), padStyle3(props), fontStyle3(props), props.icon && "\n    > svg {\n      display: flex;\n      align-self: center;\n      vertical-align: middle;\n    }\n  ");
};
var getPath = function getPath2(theme, path) {
  var obj;
  if (path) {
    obj = theme;
    var parts2 = path.split(".");
    while (obj && parts2.length)
      obj = obj[parts2.shift()];
  }
  return obj;
};
var adjustPadStyle = function adjustPadStyle2(pad, width) {
  var offset = parseMetricToNum(width);
  return Ae(["padding:", "px ", "px;"], Math.max(parseMetricToNum(pad.vertical) - offset, 0), Math.max(parseMetricToNum(pad.horizontal) - offset, 0));
};
var kindStyle = function kindStyle2(_ref2) {
  var busy = _ref2.busy, colorValue = _ref2.colorValue, hasIcon = _ref2.hasIcon, hasLabel = _ref2.hasLabel, kind = _ref2.kind, size = _ref2.sizeProp, success = _ref2.success, themePaths = _ref2.themePaths, theme = _ref2.theme;
  var styles = [];
  var themeObj = typeof kind === "object" ? kind : theme.button;
  var iconOnly = hasIcon && !hasLabel;
  var pad = padFromTheme(size, theme, themeObj, kind, iconOnly);
  themePaths.base.forEach(function(themePath) {
    var obj2 = getPath(themeObj, themePath);
    if (obj2) {
      styles.push(kindPartStyles(obj2, theme, colorValue));
      if (obj2.border && obj2.border.width && pad && !obj2.padding) {
        styles.push(adjustPadStyle(pad, obj2.border.width));
      }
    }
  });
  if (!themePaths.base.length && typeof kind === "object") {
    var obj = kind;
    if (obj) {
      styles.push(kindPartStyles(obj, theme, colorValue));
      if (obj.border && obj.border.width && pad && !obj.padding) {
        styles.push(adjustPadStyle(pad, obj.border.width));
      }
    }
  }
  themePaths.hover.forEach(function(themePath) {
    var obj2 = getPath(themeObj, themePath);
    if (obj2) {
      var partStyles = kindPartStyles(obj2, theme);
      var adjPadStyles = "";
      if (obj2.border && obj2.border.width && pad && !obj2.padding) {
        adjPadStyles = adjustPadStyle(pad, obj2.border.width);
      }
      if (partStyles.length > 0 && !busy && !success) {
        styles.push(Ae(["&:hover{", " ", "}"], partStyles, adjPadStyles));
      }
    }
  });
  return styles;
};
var hoverIndicatorStyle = function hoverIndicatorStyle2(_ref3) {
  var hoverIndicator = _ref3.hoverIndicator, theme = _ref3.theme;
  var themishObj = {};
  if (hoverIndicator === true || hoverIndicator === "background")
    themishObj.background = theme.global.hover.background;
  else if (hoverIndicator.color || hoverIndicator.background) {
    if (hoverIndicator.background)
      themishObj.background = hoverIndicator.background;
    if (hoverIndicator.color)
      themishObj.color = hoverIndicator.color;
  } else
    themishObj.background = hoverIndicator;
  var styles = kindPartStyles(themishObj, theme);
  if (styles.length > 0)
    return Ae(["&:hover{", "}"], styles);
  return "";
};
var fillStyle6 = function fillStyle7(fillContainer) {
  if (fillContainer === "horizontal") {
    return "width: 100%;";
  }
  if (fillContainer === "vertical") {
    return "height: 100%;";
  }
  if (fillContainer) {
    return "\n      width: 100%;\n      height: 100%;\n      max-width: none;\n      flex: 1 0 auto;\n    ";
  }
  return void 0;
};
var plainStyle3 = function plainStyle4(props) {
  return Ae(["outline:none;border:none;padding:0;text-align:inherit;color:inherit;", " ", ""], props.icon && "\n    > svg {\n      display: flex;\n      align-self: center;\n      vertical-align: middle;\n    }\n  ", props.hasIcon && !props.hasLabel && "line-height: 0;");
};
var StyledButtonKind = styled_components_browser_esm_default.button.withConfig({
  // don't let kind attribute leak to DOM
  // https://styled-components.com/docs/api#shouldforwardprop
  shouldForwardProp: function shouldForwardProp2(prop, defaultValidatorFn) {
    return !["kind"].includes(prop) && defaultValidatorFn(prop);
  }
}).withConfig({
  displayName: "StyledButtonKind",
  componentId: "sc-1vhfpnt-0"
})(["display:inline-block;box-sizing:border-box;cursor:pointer;font:inherit;text-decoration:none;margin:0;background:transparent;overflow:visible;text-transform:none;", " ", " ", " ", " ", " ", " ", " ", " ", " &:focus{", "}&:focus:not(:focus-visible){", "}", " ", " ", " ", ""], genericStyles, function(props) {
  return props.plain && plainStyle3(props);
}, function(props) {
  return !props.disabled && props.active && activeStyle;
}, function(props) {
  return !props.plain && basicStyle3(props);
}, function(props) {
  return !props.plain && kindStyle(props);
}, function(props) {
  return !props.plain && props.pad && edgeStyle("padding", props.pad, false, void 0, props.theme);
}, function(props) {
  return !props.plain && props.align && "\n    text-align: " + props.align + ";\n    ";
}, function(props) {
  return !props.disabled && props.hoverIndicator && !props.busy && !props.success && hoverIndicatorStyle(props);
}, function(props) {
  return props.disabled && disabledStyle(props.theme.button.disabled.opacity);
}, function(props) {
  return (!props.plain || props.focusIndicator) && focusStyle();
}, unfocusStyle(), function(props) {
  return !props.plain && props.theme.button.transition && "\n    transition-property: " + props.theme.button.transition.properties.join(",") + ";\n    transition-duration: " + props.theme.button.transition.duration + "s;\n    transition-timing-function: " + props.theme.button.transition.timing + ";\n  ";
}, function(props) {
  return props.fillContainer && fillStyle6(props.fillContainer);
}, function(props) {
  return props.theme.button && props.theme.button.extend;
}, function(props) {
  return (props.busy || props.success) && "\n    cursor: default;\n  ";
});
StyledButtonKind.defaultProps = {};
Object.setPrototypeOf(StyledButtonKind.defaultProps, defaultProps2);

// node_modules/grommet/es6/contexts/AnalyticsContext/AnalyticsContext.js
var import_react28 = __toESM(require_react());
var AnalyticsContext = import_react28.default.createContext(function() {
});
var useAnalytics = function useAnalytics2() {
  return (0, import_react28.useContext)(AnalyticsContext);
};
var AnalyticsProvider = function AnalyticsProvider2(_ref) {
  var onAnalytics = _ref.onAnalytics, children2 = _ref.children;
  var lastUrlRef = (0, import_react28.useRef)();
  var sendAnalytics = (0, import_react28.useCallback)(function(data) {
    return onAnalytics && onAnalytics(data);
  }, [onAnalytics]);
  (0, import_react28.useEffect)(function() {
    var observer;
    if (onAnalytics) {
      observer = new window.MutationObserver(function() {
        var _window, _window$location;
        var url = (_window = window) == null ? void 0 : (_window$location = _window.location) == null ? void 0 : _window$location.href;
        var previousUrl = lastUrlRef.current;
        if (url !== previousUrl) {
          lastUrlRef.current = url;
          sendAnalytics({
            type: "pageView",
            url,
            previousUrl
          });
        }
      });
      observer.observe(document, {
        subtree: true,
        childList: true
      });
    }
    return function() {
      var _observer;
      return (_observer = observer) == null ? void 0 : _observer.disconnect();
    };
  }, [sendAnalytics, onAnalytics]);
  return import_react28.default.createElement(AnalyticsContext.Provider, {
    value: sendAnalytics
  }, children2);
};

// node_modules/grommet/es6/components/Button/BusyAnimation.js
var import_react29 = __toESM(require_react());
init_styled_components_browser_esm();
var import_Checkmark = __toESM(require_Checkmark());
var bounceDelay = We(["0%,80%,100%{transform:scale(0.4);}40%{transform:scale(0.8);}"]);
var bounceDelayRule = Ae(["animation:", " 1.4s infinite ease-in-out both;"], bounceDelay);
var Dot = styled_components_browser_esm_default(Box).withConfig({
  displayName: "BusyAnimation__Dot",
  componentId: "sc-feuivs-0"
})(["background-color:currentColor;width:8px;height:8px;border-radius:100%;display:inline-block;", " ", ""], bounceDelayRule, function(props) {
  return props.delay && "animation-delay: " + props.delay + ";";
});
var EllipsisAnimation = function EllipsisAnimation2() {
  return import_react29.default.createElement(Box, {
    style: {
      position: "absolute"
    },
    fill: true,
    alignContent: "center",
    justify: "center"
  }, import_react29.default.createElement(Box, {
    alignSelf: "center",
    direction: "row",
    gap: "small"
  }, import_react29.default.createElement(Dot, {
    delay: "-0.32s"
  }), import_react29.default.createElement(Dot, {
    delay: "-0.16s"
  }), import_react29.default.createElement(Dot, null)));
};
var grow = We(["0%{opacity:0;transform:scale(.3);}20%{opacity:1;transform:scale(1.15);}30%{transform:scale(.9);}45%{transform:scale(1.05);}55%{transform:scale(1);}100%{transform:scale(1);}"]);
var GrowCheckmark = styled_components_browser_esm_default(import_Checkmark.Checkmark).withConfig({
  displayName: "BusyAnimation__GrowCheckmark",
  componentId: "sc-feuivs-1"
})(["position:absolute;align-self:center;animation:", " 0.9s ease-in-out;"], grow);
var StyledBusyContents = styled_components_browser_esm_default.div.withConfig({
  displayName: "BusyAnimation__StyledBusyContents",
  componentId: "sc-feuivs-2"
})(["opacity:", ";}"], function(props) {
  return props.animating ? 0 : 1;
});

// node_modules/grommet/es6/components/Button/Button.js
var _excluded12 = ["active", "align", "aria-label", "badge", "busy", "color", "children", "disabled", "icon", "focusIndicator", "gap", "fill", "href", "justify", "kind", "label", "messages", "onBlur", "onClick", "onFocus", "onMouseOut", "onMouseOver", "pad", "plain", "primary", "reverse", "secondary", "selected", "size", "success", "tip", "type", "a11yTitle", "as"];
function _extends21() {
  _extends21 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends21.apply(this, arguments);
}
function _objectWithoutPropertiesLoose12(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var RelativeBox = styled_components_browser_esm_default(Box).withConfig({
  displayName: "Button__RelativeBox",
  componentId: "sc-zuqsuw-0"
})(["position:relative;"]);
var getIconColor = function getIconColor2(paths, theme, colorProp, kind) {
  if (paths === void 0) {
    paths = [];
  }
  var result = [];
  var index = paths.length - 1;
  if (typeof kind === "object")
    index = 0;
  while (index >= 0 && !result[1]) {
    var baseObj = typeof kind === "object" && kind || theme.button;
    var obj = baseObj;
    if (paths[index]) {
      var parts2 = paths[index].split(".");
      while (obj && parts2.length)
        obj = obj[parts2.shift()];
    }
    if (obj) {
      var _obj, _obj$icon, _obj$icon$props;
      var background = colorProp && obj.background && obj.background.color ? colorProp : obj.background;
      var objColor = obj.color || (Object.prototype.hasOwnProperty.call(obj, "color") && obj.color === void 0 ? false : void 0);
      var color = void 0;
      if ((_obj = obj) != null && (_obj$icon = _obj.icon) != null && (_obj$icon$props = _obj$icon.props) != null && _obj$icon$props.color)
        color = obj.icon.props.color;
      else if (paths[index + 1]) {
        var _obj2, _obj2$icon, _obj2$icon$props;
        var _parts = paths[index + 1].split(".");
        while (baseObj && _parts.length)
          obj = baseObj[_parts.shift()];
        if ((_obj2 = obj) != null && (_obj2$icon = _obj2.icon) != null && (_obj2$icon$props = _obj2$icon.props) != null && _obj2$icon$props.color)
          color = obj.icon.props.color;
      }
      if (!color)
        color = colorProp && (!obj.background || !obj.background.color) && (!obj.border || !obj.border.color) ? colorProp : objColor;
      result = backgroundAndTextColors(background, color, theme);
    }
    index -= 1;
  }
  return result[1] || void 0;
};
var getKindIcon = function getKindIcon2(paths, theme, kind) {
  if (paths === void 0) {
    paths = [];
  }
  var result;
  var index = paths.length - 1;
  if (typeof kind === "object")
    index = 0;
  while (index >= 0 && !result) {
    var _obj3;
    var obj = typeof kind === "object" && kind || theme.button;
    if (paths[index]) {
      var parts2 = paths[index].split(".");
      while (obj && parts2.length)
        obj = obj[parts2.shift()];
    }
    if ((_obj3 = obj) != null && _obj3.icon)
      result = obj.icon;
    index -= 1;
  }
  return result || void 0;
};
var getPropertyColor = function getPropertyColor2(property, paths, theme, kind, primary) {
  if (paths === void 0) {
    paths = [];
  }
  var result;
  if (kind) {
    var obj = typeof kind === "object" && kind || theme.button;
    if (paths[0]) {
      var parts2 = paths[0].split(".");
      while (obj && parts2.length)
        obj = obj[parts2.shift()];
    }
    if (obj) {
      result = obj[property] || obj[property] && obj[property].color;
    }
  } else if (primary && theme && theme.button && theme.button.primary) {
    result = theme.button.primary[property] || theme.button.primary[property] && theme.button.primary[property].color;
  } else {
    result = theme && theme.button && theme.button[property] || theme && theme.button && theme.button[property] && theme.button[property].color;
  }
  return result;
};
var Button = (0, import_react30.forwardRef)(function(_ref, ref) {
  var _theme$button$kind, _theme$button2, _theme$button2$badge;
  var active = _ref.active, _ref$align = _ref.align, align = _ref$align === void 0 ? "center" : _ref$align, ariaLabel = _ref["aria-label"], badgeProp = _ref.badge, busy = _ref.busy, color = _ref.color, children2 = _ref.children, disabled = _ref.disabled, icon = _ref.icon, _ref$focusIndicator = _ref.focusIndicator, focusIndicator = _ref$focusIndicator === void 0 ? true : _ref$focusIndicator, gap = _ref.gap, fill = _ref.fill, href = _ref.href, justify = _ref.justify, kindArg = _ref.kind, label = _ref.label, messages = _ref.messages, _onBlur = _ref.onBlur, onClickProp = _ref.onClick, _onFocus = _ref.onFocus, onMouseOut = _ref.onMouseOut, onMouseOver = _ref.onMouseOver, pad = _ref.pad, plain = _ref.plain, primary = _ref.primary, reverseProp = _ref.reverse, secondary = _ref.secondary, selected = _ref.selected, sizeProp = _ref.size, success = _ref.success, tip = _ref.tip, _ref$type = _ref.type, type = _ref$type === void 0 ? "button" : _ref$type, _ref$a11yTitle = _ref.a11yTitle, a11yTitle = _ref$a11yTitle === void 0 ? typeof tip === "string" ? tip : void 0 : _ref$a11yTitle, as = _ref.as, rest = _objectWithoutPropertiesLoose12(_ref, _excluded12);
  var theme = (0, import_react30.useContext)(Me) || defaultProps2.theme;
  var _useState = (0, import_react30.useState)(), focus = _useState[0], setFocus = _useState[1];
  var _useState2 = (0, import_react30.useState)(false), hover = _useState2[0], setHover = _useState2[1];
  var announce = (0, import_react30.useContext)(AnnounceContext);
  var _useContext = (0, import_react30.useContext)(MessageContext), format3 = _useContext.format;
  if (busy && success) {
    console.warn("Button cannot have both busy and success set to true.");
  }
  (0, import_react30.useEffect)(function() {
    if (busy)
      announce(format3({
        id: "button.busy",
        messages
      }));
    else if (success)
      announce(format3({
        id: "button.success",
        messages
      }));
  }, [announce, busy, format3, messages, success]);
  if ((icon || label) && children2) {
    console.warn("Button should not have children if icon or label is provided");
  }
  var skeleton = useSkeleton();
  var sendAnalytics = useAnalytics();
  var onClick = (0, import_react30.useCallback)(function(event) {
    sendAnalytics({
      type: "buttonClick",
      element: findButtonParent(event.target),
      event,
      href,
      label: typeof label === "string" ? label : void 0
    });
    if (onClickProp)
      onClickProp(event);
  }, [onClickProp, sendAnalytics, href, label]);
  var kindObj = (0, import_react30.useMemo)(function() {
    return typeof kindArg === "object";
  }, [kindArg]);
  var kind = (0, import_react30.useMemo)(function() {
    if (theme.button["default"] || kindObj) {
      if (kindArg)
        return kindArg;
      if (primary)
        return "primary";
      if (secondary)
        return "secondary";
      return "default";
    }
    return void 0;
  }, [kindArg, kindObj, primary, secondary, theme]);
  var size = sizeProp || kind && "medium" || void 0;
  var themePaths = (0, import_react30.useMemo)(function() {
    if (!kind || plain)
      return void 0;
    var result = {
      base: [],
      hover: []
    };
    if (!kindObj)
      result.base.push(kind);
    if (selected) {
      result.base.push("selected");
      if (!kindObj)
        result.base.push("selected." + kind);
    }
    if (disabled) {
      result.base.push("disabled");
      if (!kindObj)
        result.base.push("disabled." + kind);
    } else {
      if (active) {
        result.base.push("active");
        if (!kindObj)
          result.base.push("active." + kind);
      }
      result.hover.push("hover");
      if (!kindObj)
        result.hover.push("hover." + kind);
      if (active) {
        result.hover.push("hover.active");
        if (!kindObj) {
          result.hover.push("hover.active." + kind);
        }
      }
    }
    return result;
  }, [active, disabled, kind, kindObj, plain, selected]);
  var isDarkBackground = function isDarkBackground2() {
    var backgroundColor2 = normalizeBackground(normalizeColor(color || theme.button.primary && theme.button.primary.color || theme.global.colors.control || "brand", theme), theme);
    return colorIsDark(backgroundColor2, theme);
  };
  var onMouseOverButton = function onMouseOverButton2(event) {
    setHover(true);
    if (onMouseOver) {
      onMouseOver(event);
    }
  };
  var onMouseOutButton = function onMouseOutButton2(event) {
    setHover(false);
    if (onMouseOut) {
      onMouseOut(event);
    }
  };
  var kindIcon = hover && getKindIcon(themePaths == null ? void 0 : themePaths.hover, theme, kind) || getKindIcon(themePaths == null ? void 0 : themePaths.base, theme, kind);
  var buttonIcon = icon || kindIcon;
  if (icon && !icon.props.color) {
    if (kind) {
      if (!plain) {
        var iconColor = hover && getIconColor(themePaths.hover, theme) || getIconColor(themePaths.base, theme, color, kind);
        if (iconColor)
          buttonIcon = (0, import_react30.cloneElement)(icon, {
            color: iconColor
          });
      }
    } else if (primary) {
      buttonIcon = (0, import_react30.cloneElement)(icon, {
        color: theme.global.colors.text[isDarkBackground() ? "dark" : "light"]
      });
    }
  } else if (kindIcon && !plain) {
    var _iconColor = hover && getIconColor(themePaths.hover, theme) || getIconColor(themePaths.base, theme, color, kind);
    if (_iconColor)
      buttonIcon = (0, import_react30.cloneElement)(kindIcon, {
        color: _iconColor
      });
  }
  buttonIcon = useSizedIcon(buttonIcon, size, theme);
  if (skeleton) {
    var _theme$text, _theme$button$size;
    return import_react30.default.createElement(Skeleton, _extends21({
      ref,
      height: ((_theme$text = theme.text[size || "medium"]) == null ? void 0 : _theme$text.height) || size,
      a11yTitle
    }, rest, (_theme$button$size = theme.button.size) == null ? void 0 : _theme$button$size[size || "medium"], theme.button.skeleton));
  }
  var reverse = reverseProp != null ? reverseProp : (_theme$button$kind = theme.button[kind]) == null ? void 0 : _theme$button$kind.reverse;
  var domTag = !as && href ? "a" : as;
  var first = reverse ? label : buttonIcon;
  var second = reverse ? buttonIcon : label;
  var contents;
  if (first && second) {
    var _theme$button, _theme$button$kind2;
    contents = import_react30.default.createElement(Box, {
      direction: ((_theme$button = theme.button) == null ? void 0 : (_theme$button$kind2 = _theme$button[kind]) == null ? void 0 : _theme$button$kind2.direction) || "row",
      align: "center",
      justify: justify || (align === "center" ? "center" : "between"),
      gap: gap || theme.button.gap,
      responsive: false
    }, first, second);
  } else if (typeof children2 === "function") {
    contents = children2({
      disabled,
      hover,
      focus
    });
  } else {
    contents = first || second || children2;
  }
  var background = getPropertyColor("background", themePaths && themePaths.base, theme, kind, primary);
  var border = getPropertyColor("border", themePaths && themePaths.base, theme, kind, primary);
  var innerBadge = ((_theme$button2 = theme.button) == null ? void 0 : (_theme$button2$badge = _theme$button2.badge) == null ? void 0 : _theme$button2$badge.align) !== "container" && (!background && !border || !kind && icon && !label);
  if (badgeProp && innerBadge) {
    contents = import_react30.default.createElement(Badge, {
      content: badgeProp
    }, contents);
  }
  if (busy || success) {
    var animationColor;
    if (kind) {
      if (!plain) {
        animationColor = hover && getIconColor(themePaths.hover, theme) || getIconColor(themePaths.base, theme, color, kind);
      }
    } else if (primary) {
      animationColor = theme.global.colors.text[isDarkBackground() ? "dark" : "light"];
    }
    contents = // position relative is necessary to have the animation
    // display over the button content
    import_react30.default.createElement(RelativeBox, {
      flex: false
    }, busy && import_react30.default.createElement(EllipsisAnimation, null), success && import_react30.default.createElement(Box, {
      style: {
        position: "absolute"
      },
      fill: true,
      alignContent: "center",
      justify: "center"
    }, import_react30.default.createElement(GrowCheckmark, {
      color: animationColor,
      "aria-hidden": true
    })), import_react30.default.createElement(StyledBusyContents, {
      animating: busy || success
    }, contents));
  }
  var styledButtonResult;
  if (kind) {
    styledButtonResult = import_react30.default.createElement(StyledButtonKind, _extends21({}, rest, {
      as: domTag,
      ref,
      active,
      align,
      "aria-label": ariaLabel || a11yTitle,
      busy,
      badge: badgeProp,
      colorValue: color,
      disabled,
      hasIcon: !!icon,
      gap,
      hasLabel: !!label,
      icon,
      fillContainer: fill,
      focus,
      focusIndicator,
      href,
      kind,
      themePaths,
      onClick: !busy && !success ? onClick : void 0,
      onFocus: function onFocus(event) {
        setFocus(true);
        if (_onFocus)
          _onFocus(event);
      },
      onBlur: function onBlur(event) {
        setFocus(false);
        if (_onBlur)
          _onBlur(event);
      },
      onMouseOver: onMouseOverButton,
      onMouseOut: onMouseOutButton,
      pad,
      plain: plain || import_react30.Children.count(children2) > 0,
      primary,
      sizeProp: size,
      success,
      type: !href ? type : void 0
    }), contents);
  } else {
    styledButtonResult = import_react30.default.createElement(StyledButton, _extends21({}, rest, {
      as: domTag,
      ref,
      "aria-label": ariaLabel || a11yTitle,
      busy,
      colorValue: color,
      active,
      selected,
      disabled,
      hasIcon: !!icon,
      gap,
      hasLabel: !!label,
      fillContainer: fill,
      focus,
      focusIndicator,
      href,
      kind,
      themePaths,
      onClick: !busy && !success ? onClick : void 0,
      onFocus: function onFocus(event) {
        setFocus(true);
        if (_onFocus)
          _onFocus(event);
      },
      onBlur: function onBlur(event) {
        setFocus(false);
        if (_onBlur)
          _onBlur(event);
      },
      onMouseOver: onMouseOverButton,
      onMouseOut: onMouseOutButton,
      pad: pad || !plain,
      plain: typeof plain !== "undefined" ? plain : import_react30.Children.count(children2) > 0 || icon && !label,
      primary,
      sizeProp: size,
      success,
      type: !href ? type : void 0
    }), contents);
  }
  if (tip) {
    if (typeof tip === "string") {
      styledButtonResult = import_react30.default.createElement(Tip, {
        content: tip
      }, styledButtonResult);
    } else {
      styledButtonResult = import_react30.default.createElement(Tip, tip, styledButtonResult);
    }
  }
  if (badgeProp && !innerBadge) {
    styledButtonResult = import_react30.default.createElement(Badge, {
      content: badgeProp
    }, styledButtonResult);
  }
  return styledButtonResult;
});
Button.displayName = "Button";
Button.propTypes = ButtonPropTypes;

// node_modules/grommet/es6/components/Collapsible/Collapsible.js
var import_react31 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/Collapsible/propTypes.js
var import_prop_types12 = __toESM(require_prop_types());
var PropType11 = {};
if (true) {
  PropType11 = {
    open: import_prop_types12.default.bool,
    direction: import_prop_types12.default.oneOf(["horizontal", "vertical"])
  };
}
var CollapsiblePropTypes = PropType11;

// node_modules/grommet/es6/components/Collapsible/Collapsible.js
var AnimatedBox = styled_components_browser_esm_default(Box).withConfig({
  displayName: "Collapsible__AnimatedBox",
  componentId: "sc-15kniua-0"
})(["", ""], function(props) {
  return props.shouldOpen ? "visibility: hidden;\n      position: absolute;\n      pointer-events: none;" : (
    // eslint-disable-next-line max-len
    "transition: " + ("max-" + props.dimension + " " + props.speedProp + "ms, opacity " + props.speedProp + "ms") + ";\n      opacity: " + (props.open ? 1 : 0) + ";\n      overflow: " + (props.animate || !props.open ? "hidden" : "visible") + ";"
  );
});
var Collapsible = (0, import_react31.forwardRef)(function(_ref, ref) {
  var children2 = _ref.children, direction = _ref.direction, openArg = _ref.open;
  var theme = (0, import_react31.useContext)(Me) || defaultProps2.theme;
  var _useState = (0, import_react31.useState)(openArg), open = _useState[0], setOpen = _useState[1];
  var _useState2 = (0, import_react31.useState)(false), animate = _useState2[0], setAnimate = _useState2[1];
  var _useState3 = (0, import_react31.useState)(theme.collapsible.minSpeed), speed = _useState3[0], setSpeed = _useState3[1];
  var dimension = (0, import_react31.useMemo)(function() {
    return direction === "horizontal" ? "width" : "height";
  }, [direction]);
  var containerRef = useForwardedRef(ref);
  var sizeRef = (0, import_react31.useRef)(0);
  var shouldOpen = !open && openArg;
  var shouldClose = open && !openArg;
  (0, import_react31.useEffect)(function() {
    if (openArg !== open) {
      setAnimate(true);
      setOpen(openArg);
    }
  }, [open, openArg]);
  useLayoutEffect(function() {
    var container = containerRef.current;
    if (!animate && shouldOpen) {
      var parentPrevPosition = container.parentNode.style.position;
      container.parentNode.style.position = "relative";
      var _container$getBoundin = container.getBoundingClientRect(), size = _container$getBoundin[dimension];
      container.parentNode.style.position = parentPrevPosition;
      sizeRef.current = size;
    }
    if (shouldOpen) {
      container.style["max-" + dimension] = 0;
    } else if (shouldClose) {
      var _container$getBoundin2 = container.getBoundingClientRect(), _size = _container$getBoundin2[dimension];
      container.style["max-" + dimension] = _size + "px";
    }
  }, [shouldOpen, shouldClose, containerRef, dimension, animate]);
  (0, import_react31.useEffect)(function() {
    if (shouldOpen || shouldClose) {
      var container = containerRef.current;
      var _theme$collapsible = theme.collapsible, minSpeed = _theme$collapsible.minSpeed, baseline = _theme$collapsible.baseline;
      var nextSpeed = Math.max(sizeRef.current / baseline * minSpeed, minSpeed);
      setSpeed(nextSpeed);
      requestAnimationFrame(function() {
        requestAnimationFrame(function() {
          container.style["max-" + dimension] = shouldOpen ? sizeRef.current + "px" : 0;
        });
      });
    }
  }, [shouldOpen, shouldClose, containerRef, dimension, theme]);
  (0, import_react31.useEffect)(function() {
    if (animate) {
      var container = containerRef.current;
      var timer = setTimeout(function() {
        setAnimate(false);
        container.removeAttribute("style");
      }, speed);
      return function() {
        return clearTimeout(timer);
      };
    }
    return void 0;
  }, [animate, containerRef, speed, open]);
  return import_react31.default.createElement(AnimatedBox, {
    "aria-hidden": !open,
    ref: containerRef,
    open,
    animate,
    dimension,
    speedProp: speed,
    shouldOpen: !animate && shouldOpen
  }, shouldOpen || open || animate ? children2 : null);
});
Collapsible.displayName = "Collapsible";
Collapsible.propTypes = CollapsiblePropTypes;

// node_modules/grommet/es6/components/Heading/Heading.js
var import_react33 = __toESM(require_react());

// node_modules/grommet/es6/components/Heading/StyledHeading.js
init_styled_components_browser_esm();
var sizeStyle5 = function sizeStyle6(props) {
  var size = props.size || "medium";
  var headingTheme = props.theme.heading;
  var levelStyle = headingTheme.level[props.level];
  if (levelStyle) {
    var data = levelStyle[size];
    var styles = [Ae(["font-size:", ";line-height:", ";max-width:", ";font-weight:", ";overflow-wrap:", ";"], data ? data.size : size, data ? data.height : "normal", props.fillProp && "none" || data && data.maxWidth || levelStyle.medium.maxWidth, props.weight || levelStyle.font.weight || headingTheme.weight, props.overflowWrap)];
    if (props.responsive && headingTheme.responsiveBreakpoint) {
      var breakpoint = props.theme.global.breakpoints[headingTheme.responsiveBreakpoint];
      if (breakpoint) {
        var responsiveData = headingTheme.level[props.level + 1] ? headingTheme.level[props.level + 1][size] : headingTheme.level[props.level][size];
        if (responsiveData) {
          styles.push(breakpointStyle(breakpoint, "\n            font-size: " + responsiveData.size + ";\n            line-height: " + responsiveData.height + ";\n            max-width: " + (props.fillProp && "none" || responsiveData.maxWidth) + ";\n          "));
        }
      }
    }
    return styles;
  }
  console.warn("Heading level " + props.level + " is not defined in your theme.");
  return "";
};
var fontFamily2 = function fontFamily3(props) {
  var _ref = props.theme.heading.level[props.level] || {}, font = _ref.font;
  if (font && font.family) {
    return Ae(["font-family:", ";"], font.family);
  }
  return props.theme.heading.font ? Ae(["font-family:", ";"], props.theme.heading.font.family) : "";
};
var truncateStyle2 = "\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n";
var colorStyle2 = Ae(["color:", ";"], function(props) {
  return normalizeColor(props.colorProp || props.theme.heading.color, props.theme);
});
var StyledHeading = styled_components_browser_esm_default.h1.withConfig({
  displayName: "StyledHeading",
  componentId: "sc-1rdh4aw-0"
})(["", " ", " ", " ", " ", " ", " ", ""], genericStyles, function(props) {
  return fontFamily2(props);
}, function(props) {
  return sizeStyle5(props);
}, function(props) {
  return props.textAlign && textAlignStyle;
}, function(props) {
  return props.truncate && truncateStyle2;
}, function(props) {
  return (props.colorProp || props.theme.heading.color) && colorStyle2;
}, function(props) {
  return props.theme.heading && props.theme.heading.extend;
});
StyledHeading.defaultProps = {};
Object.setPrototypeOf(StyledHeading.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/Heading/propTypes.js
var import_prop_types13 = __toESM(require_prop_types());
function _extends22() {
  _extends22 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends22.apply(this, arguments);
}
var PropType12 = {};
if (true) {
  PropType12 = _extends22({}, genericProps, {
    color: colorPropType,
    fill: import_prop_types13.default.bool,
    level: import_prop_types13.default.oneOf([1, 2, 3, 4, 5, 6, "1", "2", "3", "4", "5", "6"]),
    overflowWrap: import_prop_types13.default.oneOfType([import_prop_types13.default.oneOf(["normal", "break-word", "anywhere"]), import_prop_types13.default.string]),
    responsive: import_prop_types13.default.bool,
    size: import_prop_types13.default.oneOfType([import_prop_types13.default.oneOf(["small", "medium", "large", "xlarge"]), import_prop_types13.default.string]),
    textAlign: import_prop_types13.default.oneOf(["start", "center", "end", "justify"]),
    truncate: import_prop_types13.default.bool,
    weight: import_prop_types13.default.oneOfType([import_prop_types13.default.oneOf(["normal", "bold", "lighter", "bolder"]), import_prop_types13.default.number, import_prop_types13.default.string])
  });
}
var HeadingPropTypes = PropType12;

// node_modules/grommet/es6/components/Heading/HeadingSkeleton.js
var import_react32 = __toESM(require_react());
init_styled_components_browser_esm();
function _extends23() {
  _extends23 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends23.apply(this, arguments);
}
var HeadingSkeleton = (0, import_react32.forwardRef)(function(_ref, ref) {
  var as = _ref.as, level = _ref.level, size = _ref.size;
  var theme = (0, import_react32.useContext)(Me) || defaultProps.theme;
  var levelStyle = theme.heading.level[level];
  var data = levelStyle == null ? void 0 : levelStyle[size || "medium"];
  var height = data ? data.height : size;
  return import_react32.default.createElement(Skeleton, _extends23({
    as,
    ref,
    height
  }, theme.heading.skeleton));
});
HeadingSkeleton.displayName = "HeadingSkeleton";
HeadingSkeleton.defaultProps = {
  level: 1
};

// node_modules/grommet/es6/components/Heading/Heading.js
var _excluded13 = ["children", "color", "fill", "level", "overflowWrap", "weight"];
function _extends24() {
  _extends24 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends24.apply(this, arguments);
}
function _objectWithoutPropertiesLoose13(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var Heading = (0, import_react33.forwardRef)(function(_ref, ref) {
  var children2 = _ref.children, color = _ref.color, fill = _ref.fill, level = _ref.level, overflowWrapProp = _ref.overflowWrap, weight = _ref.weight, rest = _objectWithoutPropertiesLoose13(_ref, _excluded13);
  var headingRef = useForwardedRef(ref);
  var _useState = (0, import_react33.useState)(overflowWrapProp || "break-word"), overflowWrap = _useState[0], setOverflowWrap = _useState[1];
  var skeleton = useSkeleton();
  useLayoutEffect(function() {
    var updateOverflowWrap = function updateOverflowWrap2() {
      var wrap;
      if (!overflowWrapProp && headingRef.current) {
        wrap = headingRef.current.scrollWidth > headingRef.current.offsetWidth ? "anywhere" : "break-word";
        setOverflowWrap(wrap);
      }
    };
    window.addEventListener("resize", updateOverflowWrap);
    updateOverflowWrap();
    return function() {
      return window.removeEventListener("resize", updateOverflowWrap);
    };
  }, [headingRef, overflowWrapProp]);
  var content = children2;
  if (skeleton) {
    content = import_react33.default.createElement(HeadingSkeleton, _extends24({
      level,
      fill
    }, rest));
  }
  return (
    // enforce level to be a number
    import_react33.default.createElement(StyledHeading, _extends24({
      as: "h" + level,
      colorProp: color,
      fillProp: fill,
      level: +level,
      overflowWrap,
      weight
    }, rest, {
      ref: headingRef
    }), content)
  );
});
Heading.displayName = "Heading";
Heading.defaultProps = {
  level: 1,
  responsive: true
};
Heading.propTypes = HeadingPropTypes;

// node_modules/grommet/es6/components/AccordionPanel/propTypes.js
var import_prop_types14 = __toESM(require_prop_types());
var PropType13 = {};
if (true) {
  PropType13 = {
    label: import_prop_types14.default.oneOfType([import_prop_types14.default.string, import_prop_types14.default.node]),
    header: import_prop_types14.default.node
  };
}
var AccordionPanelPropTypes = PropType13;

// node_modules/grommet/es6/components/AccordionPanel/AccordionPanel.js
var _excluded14 = ["children", "header", "label", "onClick", "onMouseOut", "onMouseOver", "onFocus", "onBlur"];
function _extends25() {
  _extends25 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends25.apply(this, arguments);
}
function _objectWithoutPropertiesLoose14(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var AccordionPanel = (0, import_react34.forwardRef)(function(_ref, ref) {
  var children2 = _ref.children, header = _ref.header, label = _ref.label, onClick = _ref.onClick, _onMouseOut = _ref.onMouseOut, _onMouseOver = _ref.onMouseOver, _onFocus = _ref.onFocus, _onBlur = _ref.onBlur, rest = _objectWithoutPropertiesLoose14(_ref, _excluded14);
  var theme = (0, import_react34.useContext)(Me) || defaultProps2.theme;
  var _useContext = (0, import_react34.useContext)(AccordionContext), active = _useContext.active, animate = _useContext.animate, level = _useContext.level, onPanelChange = _useContext.onPanelChange;
  var _useState = (0, import_react34.useState)(void 0), hover = _useState[0], setHover = _useState[1];
  var _useState2 = (0, import_react34.useState)(), focus = _useState2[0], setFocus = _useState2[1];
  var iconColor = (0, import_react34.useMemo)(function() {
    return normalizeColor(theme.accordion.icons.color || "control", theme);
  }, [theme]);
  var AccordionIcon = (0, import_react34.useMemo)(function() {
    return active ? theme.accordion.icons.collapse : theme.accordion.icons.expand;
  }, [active, theme.accordion.icons]);
  var defaultHoverColor = JSON.stringify({
    dark: "light-4",
    light: "dark-3"
  });
  if (JSON.stringify(theme.accordion.hover.color) !== defaultHoverColor)
    console.warn("The theme style for accordion.hover.color is deprecated, \n        use accordion.hover.heading.color instead.");
  var headingColor = theme.accordion.hover && JSON.stringify(theme.accordion.hover.heading.color) !== defaultHoverColor ? theme.accordion.hover.heading.color : theme.accordion.hover.color;
  var contentBorder = theme.accordion.border;
  var panelBorder = theme.accordion.panel.border;
  var abutMargin;
  if (panelBorder)
    abutMargin = {
      bottom: "-" + parseMetricToNum(
        // in case border.size defined as a t-shirt size
        // or in case border size is a custom size i.e. '5px'
        theme.global.borderSize[panelBorder.size] || panelBorder.size || theme.global.borderSize.xsmall
        // '-1px'
      ) + "px"
    };
  return import_react34.default.createElement(Box, {
    ref,
    flex: false,
    onClick,
    border: panelBorder,
    margin: abutMargin
  }, import_react34.default.createElement(Button, {
    "aria-expanded": active,
    plain: theme.button["default"] ? true : void 0,
    onClick: onPanelChange,
    hoverIndicator: theme.accordion.hover.background,
    onMouseOver: function onMouseOver(event) {
      setHover(headingColor);
      if (_onMouseOver)
        _onMouseOver(event);
    },
    onMouseOut: function onMouseOut(event) {
      setHover(void 0);
      if (_onMouseOut)
        _onMouseOut(event);
    },
    onFocus: function onFocus(event) {
      setHover(headingColor);
      setFocus(true);
      if (_onFocus)
        _onFocus(event);
    },
    onBlur: function onBlur(event) {
      setHover(void 0);
      setFocus(false);
      if (_onBlur)
        _onBlur(event);
    },
    style: focus ? {
      zIndex: 1
    } : void 0
  }, header || import_react34.default.createElement(Box, _extends25({
    align: "center",
    direction: "row",
    justify: "between"
  }, rest), typeof label === "string" ? import_react34.default.createElement(Box, {
    pad: {
      horizontal: "xsmall"
    }
  }, import_react34.default.createElement(Heading, {
    level: level || theme.accordion.heading && theme.accordion.heading.level || 4,
    margin: theme.accordion.heading && theme.accordion.heading.margin || void 0,
    color: hover
  }, label)) : label, AccordionIcon && import_react34.default.createElement(Box, {
    pad: {
      horizontal: "small"
    },
    width: {
      min: "fit-content"
    }
  }, import_react34.default.createElement(AccordionIcon, {
    color: iconColor
  })))), import_react34.default.createElement(Box, {
    role: "region",
    border: contentBorder
  }, animate ? import_react34.default.createElement(Collapsible, {
    open: active
  }, children2) : active && children2));
});
AccordionPanel.displayName = "AccordionPanel";
AccordionPanel.propTypes = AccordionPanelPropTypes;

// node_modules/grommet/es6/components/Anchor/Anchor.js
var import_react35 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/Anchor/StyledAnchor.js
init_styled_components_browser_esm();
var disabledStyle3 = "\n  opacity: 0.3;\n  cursor: default;\n  text-decoration: none;\n";
var sizeStyle7 = function sizeStyle8(props) {
  if (props.size) {
    var size = props.size || "medium";
    var data = props.theme.text[size];
    return Ae(["font-size:", ";line-height:", ";"], data ? data.size : size, data ? data.height : "normal");
  }
  return Ae(["font-size:inherit;line-height:inherit;"]);
};
var StyledAnchor = styled_components_browser_esm_default.a.withConfig({
  // prevent custom props from bleeding into DOM
  // https://styled-components.com/docs/api#shouldforwardprop
  shouldForwardProp: function shouldForwardProp3(prop, defaultValidatorFn) {
    return !["as", "colorProp", "focus", "hasIcon", "hasLabel", "reverse"].includes(prop) && defaultValidatorFn(prop);
  }
}).withConfig({
  displayName: "StyledAnchor",
  componentId: "sc-1rp7lwl-0"
})(["box-sizing:border-box;", " color:", ";", " text-decoration:", ";cursor:pointer;", " ", " ", " ", " ", " ", ""], function(props) {
  return sizeStyle7(props);
}, function(props) {
  var _props$theme$anchor, _props$theme$anchor$s, _props$theme$anchor$s2;
  return normalizeColor(props.colorProp || ((_props$theme$anchor = props.theme.anchor) == null ? void 0 : (_props$theme$anchor$s = _props$theme$anchor.size) == null ? void 0 : (_props$theme$anchor$s2 = _props$theme$anchor$s[props.size]) == null ? void 0 : _props$theme$anchor$s2.color) || props.theme.anchor.color, props.theme);
}, function(props) {
  var _props$theme$anchor2, _props$theme$anchor2$, _props$theme$anchor2$2, _props$theme$anchor3, _props$theme$anchor3$, _props$theme$anchor3$2;
  return props.weight ? "font-weight: " + props.weight + ";" : (((_props$theme$anchor2 = props.theme.anchor) == null ? void 0 : (_props$theme$anchor2$ = _props$theme$anchor2.size) == null ? void 0 : (_props$theme$anchor2$2 = _props$theme$anchor2$[props.size]) == null ? void 0 : _props$theme$anchor2$2.fontWeight) || props.theme.anchor.fontWeight) && "font-weight: " + (((_props$theme$anchor3 = props.theme.anchor) == null ? void 0 : (_props$theme$anchor3$ = _props$theme$anchor3.size) == null ? void 0 : (_props$theme$anchor3$2 = _props$theme$anchor3$[props.size]) == null ? void 0 : _props$theme$anchor3$2.fontWeight) || props.theme.anchor.fontWeight) + ";";
}, function(props) {
  var _props$theme$anchor4, _props$theme$anchor4$, _props$theme$anchor4$2;
  return props.hasIcon ? "none" : ((_props$theme$anchor4 = props.theme.anchor) == null ? void 0 : (_props$theme$anchor4$ = _props$theme$anchor4.size) == null ? void 0 : (_props$theme$anchor4$2 = _props$theme$anchor4$[props.size]) == null ? void 0 : _props$theme$anchor4$2.textDecoration) || props.theme.anchor.textDecoration;
}, genericStyles, function(props) {
  return !props.disabled && props.theme.anchor.hover && Ae(["&:hover{", " ", " ", "}"], props.theme.anchor.hover.textDecoration && "text-decoration: " + props.theme.anchor.hover.textDecoration + ";", props.theme.anchor.hover.fontWeight && "font-weight: " + props.theme.anchor.hover.fontWeight + ";", props.theme.anchor.hover.extend);
}, function(props) {
  return props.hasIcon && !props.hasLabel && "\n    padding: " + props.theme.global.edgeSize.small + ";\n  ";
}, function(props) {
  return props.disabled && disabledStyle3;
}, function(props) {
  return props.focus && focusStyle();
}, function(props) {
  return props.theme.anchor.extend;
});
StyledAnchor.defaultProps = {};
Object.setPrototypeOf(StyledAnchor.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/Anchor/propTypes.js
var import_prop_types15 = __toESM(require_prop_types());
function _extends26() {
  _extends26 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends26.apply(this, arguments);
}
var PropType14 = {};
if (true) {
  PropType14 = _extends26({}, genericProps, {
    a11yTitle: import_prop_types15.default.string,
    as: import_prop_types15.default.oneOfType([import_prop_types15.default.string, import_prop_types15.default.func, import_prop_types15.default.elementType]),
    color: colorPropType,
    disabled: import_prop_types15.default.bool,
    gap: import_prop_types15.default.oneOfType([import_prop_types15.default.oneOf(["none", "xxsmall", "xsmall", "small", "medium", "large", "xlarge"]), import_prop_types15.default.string]),
    href: import_prop_types15.default.string,
    icon: import_prop_types15.default.element,
    label: import_prop_types15.default.node,
    onClick: import_prop_types15.default.func,
    reverse: import_prop_types15.default.bool,
    size: import_prop_types15.default.oneOfType([import_prop_types15.default.oneOf(["xsmall", "small", "medium", "large", "xlarge", "xxlarge"]), import_prop_types15.default.string]),
    weight: import_prop_types15.default.oneOfType([import_prop_types15.default.oneOf(["normal", "bold"]), import_prop_types15.default.string, import_prop_types15.default.number])
  });
}
var AnchorPropTypes = PropType14;

// node_modules/grommet/es6/components/Anchor/Anchor.js
var _excluded15 = ["a11yTitle", "aria-label", "children", "color", "disabled", "gap", "href", "icon", "label", "onBlur", "onClick", "onFocus", "reverse", "size"];
function _extends27() {
  _extends27 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends27.apply(this, arguments);
}
function _objectWithoutPropertiesLoose15(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var Anchor = (0, import_react35.forwardRef)(function(_ref, ref) {
  var a11yTitle = _ref.a11yTitle, ariaLabel = _ref["aria-label"], children2 = _ref.children, color = _ref.color, disabled = _ref.disabled, gap = _ref.gap, href = _ref.href, icon = _ref.icon, label = _ref.label, _onBlur = _ref.onBlur, onClickProp = _ref.onClick, _onFocus = _ref.onFocus, reverse = _ref.reverse, sizeProp = _ref.size, rest = _objectWithoutPropertiesLoose15(_ref, _excluded15);
  var theme = (0, import_react35.useContext)(Me) || defaultProps2.theme;
  var _useState = (0, import_react35.useState)(), focus = _useState[0], setFocus = _useState[1];
  var _useContext = (0, import_react35.useContext)(TextContext), size = _useContext.size;
  var sendAnalytics = useAnalytics();
  var onClick = (0, import_react35.useCallback)(function(event) {
    sendAnalytics({
      type: "anchorClick",
      element: findButtonParent(event.target),
      event,
      href,
      label: typeof label === "string" ? label : void 0
    });
    if (onClickProp)
      onClickProp(event);
  }, [onClickProp, sendAnalytics, label, href]);
  (0, import_react35.useEffect)(function() {
    if ((icon || label) && children2) {
      console.warn("Anchor should not have children if icon or label is provided");
    }
  }, [children2, icon, label]);
  var coloredIcon = icon;
  if (icon && !icon.props.color) {
    var _theme$anchor, _theme$anchor$size, _theme$anchor$size2;
    coloredIcon = (0, import_react35.cloneElement)(icon, {
      color: normalizeColor(color || ((_theme$anchor = theme.anchor) == null ? void 0 : (_theme$anchor$size = _theme$anchor.size) == null ? void 0 : (_theme$anchor$size2 = _theme$anchor$size[sizeProp || size]) == null ? void 0 : _theme$anchor$size2.color) || theme.anchor.color, theme)
    });
  }
  var anchorIcon = useSizedIcon(coloredIcon, sizeProp || size, theme);
  var first = reverse ? label : anchorIcon;
  var second = reverse ? anchorIcon : label;
  return import_react35.default.createElement(StyledAnchor, _extends27({}, rest, {
    ref,
    "aria-label": ariaLabel || a11yTitle,
    colorProp: color,
    disabled,
    hasIcon: !!icon,
    focus,
    hasLabel: label,
    reverse,
    href: !disabled ? href : void 0,
    onClick: !disabled ? onClick : void 0,
    onFocus: function onFocus(event) {
      setFocus(true);
      if (_onFocus)
        _onFocus(event);
    },
    onBlur: function onBlur(event) {
      setFocus(false);
      if (_onBlur)
        _onBlur(event);
    },
    size: sizeProp || size
  }), first && second ? import_react35.default.createElement(Box, {
    as: "span",
    direction: "row",
    align: "center",
    gap: gap || theme.anchor.gap,
    responsive: false,
    style: {
      display: "inline-flex"
    }
  }, first, second) : first || second || children2);
});
Anchor.displayName = "Anchor";
Anchor.propTypes = AnchorPropTypes;

// node_modules/grommet/es6/components/Avatar/Avatar.js
var import_react37 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/Image/Image.js
var import_react36 = __toESM(require_react());

// node_modules/grommet/es6/components/Image/StyledImage.js
init_styled_components_browser_esm();
var FIT_MAP = {
  cover: "cover",
  contain: "contain"
};
var fitStyle = Ae(["flex:1 1;overflow:hidden;object-fit:", ";"], function(props) {
  return FIT_MAP[props.fit];
});
var StyledImage = styled_components_browser_esm_default.img.withConfig({
  displayName: "StyledImage",
  componentId: "sc-ey4zx9-0"
})(["", " ", " ", " ", " ", ""], genericStyles, function(props) {
  return props.fit && fitStyle;
}, function(props) {
  return props.fillProp && fillStyle(props.fillProp);
}, function(props) {
  return props.theme.image && props.theme.image.extend;
}, function(props) {
  return props.opacityProp && "opacity: " + (props.opacityProp === true ? props.theme.global.opacity.medium : props.theme.global.opacity[props.opacityProp] || props.opacityProp) + ";\n  ";
});
StyledImage.defaultProps = {};
Object.setPrototypeOf(StyledImage.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/Image/propTypes.js
var import_prop_types16 = __toESM(require_prop_types());
function _extends28() {
  _extends28 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends28.apply(this, arguments);
}
var PropType15 = {};
if (true) {
  PropType15 = _extends28({}, genericProps, {
    fill: import_prop_types16.default.oneOfType([import_prop_types16.default.oneOf(["horizontal", "vertical"]), import_prop_types16.default.bool]),
    fit: import_prop_types16.default.oneOf(["cover", "contain"]),
    fallback: import_prop_types16.default.string,
    opacity: import_prop_types16.default.oneOfType([import_prop_types16.default.oneOf(["weak", "medium", "strong"]), import_prop_types16.default.string, import_prop_types16.default.bool])
  });
}
var ImagePropTypes = PropType15;

// node_modules/grommet/es6/components/Image/Image.js
var _excluded16 = ["a11yTitle", "fallback", "onError", "onLoad", "opacity", "fill", "src"];
function _extends29() {
  _extends29 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends29.apply(this, arguments);
}
function _objectWithoutPropertiesLoose16(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var Image = (0, import_react36.forwardRef)(function(_ref, ref) {
  var a11yTitle = _ref.a11yTitle, fallback = _ref.fallback, onError = _ref.onError, onLoad = _ref.onLoad, opacity = _ref.opacity, fill = _ref.fill, src = _ref.src, rest = _objectWithoutPropertiesLoose16(_ref, _excluded16);
  var _useState = (0, import_react36.useState)(false), isFallbackInUse = _useState[0], setFallbackInUse = _useState[1];
  var handleError = function handleError2(event) {
    if (onError)
      onError(event);
    if (!isFallbackInUse && fallback && fallback !== "") {
      event.target.src = fallback;
      setFallbackInUse(true);
    }
  };
  var handleOnLoad = function handleOnLoad2(event) {
    if (onLoad)
      onLoad(event);
    setFallbackInUse(false);
  };
  var extraProps = {
    onError: (onError || fallback) && handleError,
    onLoad: handleOnLoad
  };
  return import_react36.default.createElement(StyledImage, _extends29({
    "aria-label": a11yTitle
  }, rest, extraProps, {
    ref,
    opacityProp: opacity,
    fillProp: fill,
    src: src === void 0 ? "" : src
  }));
});
Image.displayName = "Image";
Image.propTypes = ImagePropTypes;

// node_modules/grommet/es6/components/Avatar/StyledAvatar.js
init_styled_components_browser_esm();
var StyledAvatarText = styled_components_browser_esm_default(Text).withConfig({
  displayName: "StyledAvatar__StyledAvatarText",
  componentId: "sc-1suyamb-0"
})(["", " ", ""], function(props) {
  return props.theme.avatar && props.theme.avatar.text && props.theme.avatar.text.fontWeight && "font-weight: " + props.theme.avatar.text.fontWeight + ";";
}, function(props) {
  return props.theme.avatar.text && props.theme.avatar.text.extend;
});
StyledAvatarText.defaultProps = {};
Object.setPrototypeOf(StyledAvatarText.defaultProps, defaultProps2);
var StyledAvatar = styled_components_browser_esm_default(Box).withConfig({
  displayName: "StyledAvatar",
  componentId: "sc-1suyamb-1"
})(["", ""], function(props) {
  return props.theme.avatar && props.theme.avatar.extend;
});
StyledAvatar.defaultProps = {};
Object.setPrototypeOf(StyledAvatar.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/Avatar/propTypes.js
var import_prop_types17 = __toESM(require_prop_types());
var PropType16 = {};
if (true) {
  PropType16 = {
    size: import_prop_types17.default.oneOfType([import_prop_types17.default.oneOf(["xsmall", "small", "medium", "large", "xlarge", "2xl", "3xl", "4xl", "5xl"]), import_prop_types17.default.string]),
    src: import_prop_types17.default.string
  };
}
var AvatarPropTypes = PropType16;

// node_modules/grommet/es6/components/Avatar/Avatar.js
var _excluded17 = ["a11yTitle", "aria-label", "align", "children", "height", "justify", "round", "size", "src", "width"];
function _extends30() {
  _extends30 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends30.apply(this, arguments);
}
function _objectWithoutPropertiesLoose17(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var Avatar = function Avatar2(_ref) {
  var a11yTitle = _ref.a11yTitle, ariaLabel = _ref["aria-label"], _ref$align = _ref.align, align = _ref$align === void 0 ? "center" : _ref$align, children2 = _ref.children, height = _ref.height, _ref$justify = _ref.justify, justify = _ref$justify === void 0 ? "center" : _ref$justify, _ref$round = _ref.round, round3 = _ref$round === void 0 ? "full" : _ref$round, _ref$size = _ref.size, size = _ref$size === void 0 ? "medium" : _ref$size, src = _ref.src, width = _ref.width, rest = _objectWithoutPropertiesLoose17(_ref, _excluded17);
  var theme = (0, import_react37.useContext)(Me) || defaultProps2.theme;
  var avatarSize = theme.avatar.size[size] || size;
  var avatarTextSize = theme.avatar.text.size[size] || "large";
  var avatarProps = (0, import_react37.useMemo)(function() {
    return {
      align,
      height: avatarSize,
      justify,
      overflow: "hidden",
      round: round3,
      width: avatarSize
    };
  }, [align, avatarSize, justify, round3]);
  var AvatarChildren = (0, import_react37.useCallback)(function() {
    return import_react37.default.createElement(StyledAvatar, _extends30({}, avatarProps, rest), children2);
  }, [avatarProps, children2, rest]);
  if (height || width) {
    console.warn("Avatar should use `size` instead of `height` or `width` props");
  }
  var content;
  if (typeof children2 === "string") {
    content = import_react37.default.createElement(StyledAvatarText, {
      alignSelf: "center",
      size: avatarTextSize
    }, children2);
  } else if (typeof src === "string") {
    content = import_react37.default.createElement(Image, {
      role: "presentation",
      fit: "contain",
      src
    });
  }
  if (typeof children2 === "string" || typeof src === "string") {
    return import_react37.default.createElement(StyledAvatar, _extends30({
      role: typeof src === "string" ? "figure" : void 0,
      a11yTitle: a11yTitle || ariaLabel
    }, avatarProps, rest), content);
  }
  return import_react37.default.createElement(AvatarChildren, null);
};
Avatar.propTypes = AvatarPropTypes;

// node_modules/grommet/es6/components/Calendar/Calendar.js
var import_react39 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/Header/Header.js
var import_react38 = __toESM(require_react());
init_styled_components_browser_esm();
var _excluded18 = ["sticky"];
function _extends31() {
  _extends31 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends31.apply(this, arguments);
}
function _objectWithoutPropertiesLoose18(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var Header = import_react38.default.forwardRef(function(_ref, ref) {
  var _theme$header2, _theme$header2$sticky;
  var sticky = _ref.sticky, rest = _objectWithoutPropertiesLoose18(_ref, _excluded18);
  var theme = (0, import_react38.useContext)(Me);
  var headerRef = useForwardedRef(ref);
  (0, import_react38.useEffect)(function() {
    var scrollTop = 0;
    var updateScrollDir = function updateScrollDir2() {
      var target = findScrollParent(headerRef.current);
      var header = headerRef.current;
      if (target && sticky === "scrollup") {
        var nextScrollTop = target === document ? window.pageYOffset : target.scrollTop;
        if (scrollTop - nextScrollTop <= 0) {
          header.style.top = "-" + header.getBoundingClientRect().height + "px";
          header.style.zIndex = "";
        } else if (scrollTop - nextScrollTop > 0) {
          var _theme$header, _theme$header$sticky;
          header.style.position = "sticky";
          header.style.top = "0px";
          header.style.zIndex = "" + ((_theme$header = theme.header) == null ? void 0 : (_theme$header$sticky = _theme$header.sticky) == null ? void 0 : _theme$header$sticky.zIndex);
          header.style.transition = "top 0.6s";
        }
        scrollTop = nextScrollTop;
      }
    };
    if (sticky === "scrollup") {
      updateScrollDir();
      window.addEventListener("resize", updateScrollDir);
      window.addEventListener("scroll", updateScrollDir, true);
    }
    return function() {
      if (sticky === "scrollup") {
        window.removeEventListener("resize", updateScrollDir);
        window.removeEventListener("scroll", updateScrollDir, true);
      }
    };
  }, [headerRef, sticky, (_theme$header2 = theme.header) == null ? void 0 : (_theme$header2$sticky = _theme$header2.sticky) == null ? void 0 : _theme$header2$sticky.zIndex]);
  return import_react38.default.createElement(Box, _extends31({
    align: "center",
    as: "header",
    direction: "row",
    flex: false,
    justify: "between",
    gap: "medium",
    ref: headerRef
  }, rest));
});
Header.displayName = "Header";

// node_modules/grommet/es6/components/Calendar/propTypes.js
var import_prop_types18 = __toESM(require_prop_types());
function _extends32() {
  _extends32 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends32.apply(this, arguments);
}
var PropType17 = {};
if (true) {
  PropType17 = _extends32({}, genericProps, {
    activeDate: import_prop_types18.default.oneOf(["start", "end"]),
    animate: import_prop_types18.default.bool,
    bounds: import_prop_types18.default.arrayOf(import_prop_types18.default.string),
    children: import_prop_types18.default.func,
    date: import_prop_types18.default.oneOfType([import_prop_types18.default.string, import_prop_types18.default.arrayOf(import_prop_types18.default.oneOfType([import_prop_types18.default.string, import_prop_types18.default.arrayOf(import_prop_types18.default.string)]))]),
    dates: import_prop_types18.default.arrayOf(import_prop_types18.default.oneOfType([import_prop_types18.default.string, import_prop_types18.default.arrayOf(import_prop_types18.default.string)])),
    disabled: import_prop_types18.default.arrayOf(import_prop_types18.default.oneOfType([import_prop_types18.default.string, import_prop_types18.default.arrayOf(import_prop_types18.default.string)])),
    daysOfWeek: import_prop_types18.default.bool,
    fill: import_prop_types18.default.bool,
    firstDayOfWeek: import_prop_types18.default.oneOf([0, 1]),
    header: import_prop_types18.default.func,
    locale: import_prop_types18.default.string,
    messages: import_prop_types18.default.shape({
      previous: import_prop_types18.default.string,
      next: import_prop_types18.default.string
    }),
    onReference: import_prop_types18.default.func,
    onSelect: import_prop_types18.default.func,
    range: import_prop_types18.default.oneOfType([import_prop_types18.default.bool, import_prop_types18.default.oneOf(["array"])]),
    reference: import_prop_types18.default.string,
    showAdjacentDays: import_prop_types18.default.oneOfType([import_prop_types18.default.bool, import_prop_types18.default.oneOf(["trim"])]),
    size: import_prop_types18.default.oneOfType([import_prop_types18.default.oneOf(["small", "medium", "large"]), import_prop_types18.default.string])
  });
}
var CalendarPropTypes = PropType17;

// node_modules/grommet/es6/components/Calendar/StyledCalendar.js
init_styled_components_browser_esm();
var sizeStyle9 = function sizeStyle10(props) {
  var data = props.theme.calendar[props.sizeProp];
  var width = props.fillContainer ? "100%" : props.theme.global.size[props.sizeProp];
  return Ae(["font-size:", ";line-height:", ";width:", ";", ""], data.fontSize, data.lineHeight, width, function(p2) {
    return p2.fillContainer && "height: 100%;";
  });
};
var StyledCalendar = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledCalendar",
  componentId: "sc-1y4xhmp-0"
})(["", " ", " ", ""], genericStyles, function(props) {
  return sizeStyle9(props);
}, function(props) {
  return props.theme.calendar && props.theme.calendar.extend;
});
StyledCalendar.defaultProps = {};
Object.setPrototypeOf(StyledCalendar.defaultProps, defaultProps2);
var weeksContainerSizeStyle = function weeksContainerSizeStyle2(props) {
  var height = props.fillContainer ? "100%" : parseMetricToNum(props.theme.calendar[props.sizeProp].daySize) * 6 + "px";
  return "\n    height: " + height + ";\n\n  ";
};
var StyledWeeksContainer = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledCalendar__StyledWeeksContainer",
  componentId: "sc-1y4xhmp-1"
})(["overflow:hidden;", " ", ";"], function(props) {
  return weeksContainerSizeStyle(props);
}, function(props) {
  return props.focus && !props.plain && focusStyle();
});
StyledWeeksContainer.defaultProps = {};
Object.setPrototypeOf(StyledWeeksContainer.defaultProps, defaultProps2);
var slideStyle = function slideStyle2(props) {
  var _props$slide = props.slide, direction = _props$slide.direction, weeks = _props$slide.weeks, sizeProp = props.sizeProp, theme = props.theme;
  var _theme$calendar$sizeP = theme.calendar[sizeProp], daySize = _theme$calendar$sizeP.daySize, slideDuration = _theme$calendar$sizeP.slideDuration;
  var amount = parseMetricToNum(daySize) * weeks;
  var translateYFrom = direction === "down" ? "-" + amount + "px" : "0";
  var translateYTo = direction === "up" ? "-" + amount + "px" : "0";
  var slideTransition = Ae(["0%{transform:translateY(", ");}100%{transform:translateY(", ");}"], translateYFrom, translateYTo);
  return Ae(["animation:", " ", " forwards;"], We(["", ""], slideTransition), slideDuration);
};
var weeksSizeStyle = function weeksSizeStyle2() {
  return Ae(["display:flex;flex-direction:column;height:100%;"]);
};
var StyledWeeks = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledCalendar__StyledWeeks",
  componentId: "sc-1y4xhmp-2"
})(["position:relative;", " ", ";"], function(props) {
  return props.fillContainer && weeksSizeStyle();
}, function(props) {
  return props.slide && slideStyle(props);
});
StyledWeeks.defaultProps = {};
Object.setPrototypeOf(StyledWeeks.defaultProps, defaultProps2);
var StyledWeek = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledCalendar__StyledWeek",
  componentId: "sc-1y4xhmp-3"
})(["display:flex;justify-content:space-between;", ""], function(props) {
  return props.fillContainer && "flex: 1;";
});
StyledWeek.defaultProps = {};
Object.setPrototypeOf(StyledWeek.defaultProps, defaultProps2);
var StyledDayContainer = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledCalendar__StyledDayContainer",
  componentId: "sc-1y4xhmp-4"
})(["flex:0 1 auto;", ""], function(props) {
  return props.fillContainer && "width: 14.3%;";
});
StyledDayContainer.defaultProps = {};
Object.setPrototypeOf(StyledDayContainer.defaultProps, defaultProps2);
var daySizeStyle = function daySizeStyle2(props) {
  var data = props.theme.calendar[props.sizeProp];
  return Ae(["width:", ";height:", ";"], props.fillContainer ? "100%" : data.daySize, props.fillContainer ? "100%" : data.daySize);
};
var StyledDay = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledCalendar__StyledDay",
  componentId: "sc-1y4xhmp-5"
})(["display:flex;justify-content:center;align-items:center;", " ", " ", " ", " ", " ", ""], function(props) {
  return daySizeStyle(props);
}, function(props) {
  return props.isSelected && backgroundStyle("control", props.theme) || props.inRange && backgroundStyle({
    color: "control",
    opacity: "weak"
  }, props.theme);
}, function(props) {
  return props.otherMonth && "opacity: 0.5;";
}, function(props) {
  return props.isSelected && "font-weight: bold;";
}, function(props) {
  return (
    // when theme uses kind Buttons, since we use children for Button,
    // we have to special case how we handle disabled days here
    props.disabledProp && props.theme.button["default"] && kindPartStyles(props.theme.button.disabled, props.theme)
  );
}, function(props) {
  return props.theme.calendar && props.theme.calendar.day && props.theme.calendar.day.extend;
});
StyledDay.defaultProps = {};
Object.setPrototypeOf(StyledDay.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/Calendar/utils.js
var DAY_MILLISECONDS = 24 * 60 * 60 * 1e3;
var addDays = function addDays2(date, days) {
  var result = new Date(date.getTime() + DAY_MILLISECONDS * days);
  var hourDelta = result.getHours() - date.getHours();
  if (hourDelta === 23) {
    hourDelta -= 24;
  } else if (hourDelta === -23) {
    hourDelta += 24;
  }
  result.setHours(result.getHours() - hourDelta);
  return result;
};
var subtractDays = function subtractDays2(date, days) {
  return addDays(date, -days);
};
var addMonths = function addMonths2(date, months) {
  var result = new Date(date);
  var years = Math.floor((date.getMonth() + months) / 12);
  result.setFullYear(date.getFullYear() + years);
  var targetMonth = (date.getMonth() + months) % 12;
  result.setMonth(targetMonth < 0 ? 12 + targetMonth : targetMonth);
  return result;
};
var subtractMonths = function subtractMonths2(date, months) {
  return addMonths(date, -months);
};
var startOfMonth = function startOfMonth2(date) {
  var result = new Date(date);
  result.setDate(1);
  return result;
};
var endOfMonth = function endOfMonth2(date) {
  var result = addMonths(date, 1);
  result.setDate(0);
  return result;
};
var sameDay = function sameDay2(date1, date2) {
  return date1.getFullYear() === date2.getFullYear() && date1.getMonth() === date2.getMonth() && date1.getDate() === date2.getDate();
};
var sameDayOrAfter = function sameDayOrAfter2(date1, date2) {
  return date1.getFullYear() > date2.getFullYear() || date1.getFullYear() === date2.getFullYear() && (date1.getMonth() > date2.getMonth() || date1.getMonth() === date2.getMonth() && date1.getDate() >= date2.getDate());
};
var sameDayOrBefore = function sameDayOrBefore2(date1, date2) {
  return date1.getFullYear() < date2.getFullYear() || date1.getFullYear() === date2.getFullYear() && (date1.getMonth() < date2.getMonth() || date1.getMonth() === date2.getMonth() && date1.getDate() <= date2.getDate());
};
var daysApart = function daysApart2(date1, date2) {
  return Math.floor((date1.getTime() - date2.getTime()) / DAY_MILLISECONDS);
};
var betweenDates = function betweenDates2(date, dates) {
  var result;
  if (dates) {
    var _ref = Array.isArray(dates) ? dates.map(function(d3) {
      return d3 ? new Date(d3) : void 0;
    }) : [dates, void 0], from = _ref[0], to = _ref[1];
    if (from && sameDay(date, from) || to && sameDay(date, to)) {
      result = 2;
    } else if (from && sameDayOrAfter(date, from) && to && sameDayOrBefore(date, to)) {
      result = 1;
    }
  } else {
    result = 1;
  }
  return result;
};
var withinDates = function withinDates2(date, dates) {
  var result;
  if (dates) {
    if (Array.isArray(dates)) {
      dates.some(function(d3) {
        if (d3 instanceof Date) {
          if (sameDay(date, d3)) {
            result = 2;
          }
        } else {
          result = betweenDates(date, d3);
        }
        return result;
      });
    } else if (sameDay(date, dates)) {
      result = 2;
    }
  }
  return result;
};
var handleOffset = function handleOffset2(date) {
  var normalizedDate = new Date(date);
  var offset = normalizedDate.getTimezoneOffset();
  var hour = normalizedDate.getHours();
  normalizedDate.setHours(hour, offset < 0 ? -offset : offset);
  return normalizedDate;
};

// node_modules/grommet/es6/components/Calendar/Calendar.js
var _excluded19 = ["activeDate", "animate", "bounds", "children", "date", "dates", "daysOfWeek", "disabled", "initialFocus", "fill", "firstDayOfWeek", "header", "locale", "messages", "onReference", "onSelect", "range", "reference", "showAdjacentDays", "size", "timestamp"];
function _objectWithoutPropertiesLoose19(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function _extends33() {
  _extends33 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends33.apply(this, arguments);
}
var headingPadMap = {
  small: "xsmall",
  medium: "small",
  large: "medium"
};
var getLocaleString = function getLocaleString2(value, locale) {
  return value == null ? void 0 : value.toLocaleDateString(locale, {
    month: "long",
    day: "numeric",
    year: "numeric"
  });
};
var currentlySelectedString = function currentlySelectedString2(value, locale) {
  var selected;
  if (value instanceof Date) {
    selected = "Currently selected " + getLocaleString(value, locale) + ";";
  } else if (value != null && value.length) {
    selected = "Currently selected " + value.map(function(item) {
      var dates;
      if (!Array.isArray(item)) {
        dates = "" + getLocaleString(item, locale);
      } else {
        var start = item[0] !== void 0 ? getLocaleString(item[0], locale) : "none";
        var end = item[1] !== void 0 ? getLocaleString(item[1], locale) : "none";
        dates = start + " through " + end;
      }
      return dates;
    });
  } else {
    selected = "No date selected";
  }
  return selected;
};
var normalizeInput = function normalizeInput2(dateValue) {
  var result;
  if (dateValue instanceof Date) {
    result = dateValue;
  } else if (typeof dateValue === "string" && dateValue.length) {
    result = setHoursWithOffset(dateValue);
  } else if (Array.isArray(dateValue)) {
    result = dateValue.map(function(d3) {
      return normalizeInput2(d3);
    });
  }
  return result;
};
var normalizeOutput = function normalizeOutput2(dateValue, outputFormat) {
  var result;
  var normalize = function normalize2(value) {
    var normalizedValue = value.toISOString();
    if (normalizedValue && outputFormat === "no timezone") {
      var _handleOffset$toISOSt = handleOffset(normalizedValue).toISOString().split("T");
      normalizedValue = _handleOffset$toISOSt[0];
    }
    return normalizedValue;
  };
  if (dateValue instanceof Date) {
    result = normalize(dateValue);
  } else if (typeof dateValue === "undefined") {
    result = void 0;
  } else {
    result = dateValue.map(function(d3) {
      return normalizeOutput2(d3, outputFormat);
    });
  }
  return result;
};
var normalizeRange = function normalizeRange2(value, activeDate) {
  var range = value;
  if (range instanceof Date)
    range = activeDate === "start" ? [[void 0, range]] : [[range, void 0]];
  else if (Array.isArray(range) && !Array.isArray(range[0]))
    range = [range];
  return range;
};
var getReference = function getReference2(reference, value) {
  var nextReference;
  if (value) {
    if (Array.isArray(value)) {
      if (value[0] instanceof Date) {
        nextReference = value[0];
      } else if (Array.isArray(value[0])) {
        nextReference = value[0][0] ? value[0][0] : value[0][1];
      } else {
        nextReference = /* @__PURE__ */ new Date();
        nextReference.setHours(0, 0, 0, 0);
      }
    } else
      nextReference = value;
  } else if (reference) {
    nextReference = reference;
  } else {
    nextReference = /* @__PURE__ */ new Date();
    nextReference.setHours(0, 0, 0, 0);
  }
  return nextReference;
};
var buildDisplayBounds = function buildDisplayBounds2(reference, firstDayOfWeek) {
  var start = new Date(reference);
  start.setDate(1);
  start = start.getDay() === 0 && firstDayOfWeek === 1 ? start = subtractDays(start, 6) : (
    // beginning of week
    start = subtractDays(start, start.getDay() - firstDayOfWeek)
  );
  var end = addDays(start, 7 * 5 + 7);
  return [start, end];
};
var disabledCalendarPreviousMonthButton = function disabledCalendarPreviousMonthButton2(date, reference, bounds2) {
  if (!bounds2)
    return false;
  var lastBound = new Date(bounds2[1]);
  return !sameDayOrBefore(lastBound, reference) && !betweenDates(date, bounds2);
};
var disabledCalendarNextMonthButton = function disabledCalendarNextMonthButton2(date, reference, bounds2) {
  if (!bounds2)
    return false;
  var firstBound = new Date(bounds2[0]);
  return !sameDayOrAfter(firstBound, reference) && !betweenDates(date, bounds2);
};
var getOutputFormat = function getOutputFormat2(dates) {
  if (typeof dates === "string" && (dates == null ? void 0 : dates.indexOf("T")) === -1) {
    return "no timezone";
  }
  if (Array.isArray(dates)) {
    return getOutputFormat2(dates[0]);
  }
  return "date timezone";
};
var millisecondsPerYear = 315576e5;
var CalendarDayButton = function CalendarDayButton2(props) {
  return import_react39.default.createElement(Button, _extends33({
    tabIndex: -1,
    plain: true
  }, props));
};
var CalendarDay = function CalendarDay2(_ref) {
  var children2 = _ref.children, fill = _ref.fill, size = _ref.size, isInRange = _ref.isInRange, isSelected = _ref.isSelected, otherMonth = _ref.otherMonth, _ref$buttonProps = _ref.buttonProps, buttonProps = _ref$buttonProps === void 0 ? {} : _ref$buttonProps;
  return import_react39.default.createElement(StyledDayContainer, {
    role: "gridcell",
    sizeProp: size,
    fillContainer: fill
  }, import_react39.default.createElement(CalendarDayButton, _extends33({
    fill
  }, buttonProps), import_react39.default.createElement(StyledDay, {
    disabledProp: buttonProps.disabled,
    inRange: isInRange,
    otherMonth,
    isSelected,
    sizeProp: size,
    fillContainer: fill
  }, children2)));
};
var CalendarCustomDay = function CalendarCustomDay2(_ref2) {
  var children2 = _ref2.children, fill = _ref2.fill, size = _ref2.size, buttonProps = _ref2.buttonProps;
  if (!buttonProps) {
    return import_react39.default.createElement(StyledDayContainer, {
      role: "gridcell",
      sizeProp: size,
      fillContainer: fill
    }, children2);
  }
  return import_react39.default.createElement(StyledDayContainer, {
    role: "gridcell",
    sizeProp: size,
    fillContainer: fill
  }, import_react39.default.createElement(CalendarDayButton, _extends33({
    fill
  }, buttonProps), children2));
};
var Calendar = (0, import_react39.forwardRef)(function(_ref3, ref) {
  var activeDateProp = _ref3.activeDate, _ref3$animate = _ref3.animate, animate = _ref3$animate === void 0 ? true : _ref3$animate, boundsProp = _ref3.bounds, children2 = _ref3.children, dateProp = _ref3.date, datesProp = _ref3.dates, daysOfWeek = _ref3.daysOfWeek, disabled = _ref3.disabled, initialFocus = _ref3.initialFocus, fill = _ref3.fill, _ref3$firstDayOfWeek = _ref3.firstDayOfWeek, firstDayOfWeek = _ref3$firstDayOfWeek === void 0 ? 0 : _ref3$firstDayOfWeek, header = _ref3.header, _ref3$locale = _ref3.locale, locale = _ref3$locale === void 0 ? "en-US" : _ref3$locale, messages = _ref3.messages, onReference = _ref3.onReference, onSelect = _ref3.onSelect, range = _ref3.range, referenceProp = _ref3.reference, _ref3$showAdjacentDay = _ref3.showAdjacentDays, showAdjacentDays = _ref3$showAdjacentDay === void 0 ? true : _ref3$showAdjacentDay, _ref3$size = _ref3.size, size = _ref3$size === void 0 ? "medium" : _ref3$size, timestampProp = _ref3.timestamp, rest = _objectWithoutPropertiesLoose19(_ref3, _excluded19);
  var theme = (0, import_react39.useContext)(Me) || defaultProps2.theme;
  var announce = (0, import_react39.useContext)(AnnounceContext);
  var _useContext = (0, import_react39.useContext)(MessageContext), format3 = _useContext.format;
  var _useState = (0, import_react39.useState)(false), mouseDown = _useState[0], setMouseDown = _useState[1];
  var onMouseDown = function onMouseDown2() {
    return setMouseDown(true);
  };
  var onMouseUp = function onMouseUp2() {
    return setMouseDown(false);
  };
  (0, import_react39.useEffect)(function() {
    document.addEventListener("mousedown", onMouseDown);
    document.addEventListener("mouseup", onMouseUp);
    return function() {
      document.removeEventListener("mousedown", onMouseDown);
      document.removeEventListener("mouseup", onMouseUp);
    };
  }, []);
  var _useState2 = (0, import_react39.useState)(dateProp && typeof dateProp === "string" && range ? "end" : "start"), activeDate = _useState2[0], setActiveDate = _useState2[1];
  (0, import_react39.useEffect)(function() {
    if (activeDateProp)
      setActiveDate(activeDateProp);
  }, [activeDateProp]);
  var _useState3 = (0, import_react39.useState)(normalizeInput(dateProp || datesProp)), value = _useState3[0], setValue = _useState3[1];
  (0, import_react39.useEffect)(function() {
    var val = dateProp || datesProp;
    setValue(normalizeInput(val));
  }, [dateProp, datesProp]);
  var _useState4 = (0, import_react39.useState)(getReference(normalizeInput(referenceProp), value)), reference = _useState4[0], setReference = _useState4[1];
  (0, import_react39.useEffect)(function() {
    if (value) {
      setReference(getReference(normalizeInput(referenceProp), value));
    }
  }, [referenceProp, value]);
  var _useState5 = (0, import_react39.useState)(getOutputFormat(dateProp || datesProp)), outputFormat = _useState5[0], setOutputFormat = _useState5[1];
  (0, import_react39.useEffect)(function() {
    setOutputFormat(getOutputFormat(dateProp || datesProp));
  }, [dateProp, datesProp]);
  var _useState6 = (0, import_react39.useState)(boundsProp), bounds2 = _useState6[0], setBounds = _useState6[1];
  (0, import_react39.useEffect)(function() {
    if (boundsProp)
      setBounds(boundsProp);
    else
      setBounds(void 0);
  }, [boundsProp]);
  var _useState7 = (0, import_react39.useState)(buildDisplayBounds(reference, firstDayOfWeek)), displayBounds = _useState7[0], setDisplayBounds = _useState7[1];
  var _useState8 = (0, import_react39.useState)(), targetDisplayBounds = _useState8[0], setTargetDisplayBounds = _useState8[1];
  var _useState9 = (0, import_react39.useState)(), slide = _useState9[0], setSlide = _useState9[1];
  var _useState10 = (0, import_react39.useState)(), animating = _useState10[0], setAnimating = _useState10[1];
  (0, import_react39.useEffect)(function() {
    var nextDisplayBounds = buildDisplayBounds(reference, firstDayOfWeek);
    if (nextDisplayBounds[0].getTime() !== displayBounds[0].getTime() && nextDisplayBounds[1].getTime() !== displayBounds[1].getTime()) {
      var diffBoundsAboveYear = false;
      if (nextDisplayBounds[0].getTime() < displayBounds[0].getTime()) {
        if (displayBounds[0].getTime() - nextDisplayBounds[0].getTime() > millisecondsPerYear) {
          diffBoundsAboveYear = true;
        }
      } else if (nextDisplayBounds[1].getTime() > displayBounds[1].getTime()) {
        if (nextDisplayBounds[1].getTime() - displayBounds[1].getTime() > millisecondsPerYear) {
          diffBoundsAboveYear = true;
        }
      }
      if (!animate || diffBoundsAboveYear) {
        setDisplayBounds(nextDisplayBounds);
      } else {
        setTargetDisplayBounds(nextDisplayBounds);
      }
    }
  }, [animate, firstDayOfWeek, reference, displayBounds]);
  (0, import_react39.useEffect)(function() {
    if (targetDisplayBounds) {
      if (targetDisplayBounds[0].getTime() < displayBounds[0].getTime() || targetDisplayBounds[1].getTime() > displayBounds[1].getTime()) {
        setDisplayBounds([targetDisplayBounds[0], targetDisplayBounds[1]]);
      }
      if (targetDisplayBounds[0].getTime() < displayBounds[0].getTime()) {
        if (displayBounds[0].getTime() - targetDisplayBounds[0].getTime() < millisecondsPerYear && daysApart(displayBounds[0], targetDisplayBounds[0])) {
          setSlide({
            direction: "down",
            weeks: daysApart(displayBounds[0], targetDisplayBounds[0]) / 7
          });
          setAnimating(true);
        }
      } else if (targetDisplayBounds[1].getTime() > displayBounds[1].getTime()) {
        if (targetDisplayBounds[1].getTime() - displayBounds[1].getTime() < millisecondsPerYear && daysApart(targetDisplayBounds[1], displayBounds[1])) {
          setSlide({
            direction: "up",
            weeks: daysApart(targetDisplayBounds[1], displayBounds[1]) / 7
          });
          setAnimating(true);
        }
      }
      return void 0;
    }
    setSlide(void 0);
    return void 0;
  }, [animating, displayBounds, targetDisplayBounds]);
  (0, import_react39.useEffect)(function() {
    if (animating && targetDisplayBounds) {
      var timer = setTimeout(
        function() {
          setDisplayBounds(targetDisplayBounds);
          setTargetDisplayBounds(void 0);
          setSlide(void 0);
          setAnimating(false);
        },
        400
        // Empirically determined.
      );
      return function() {
        return clearTimeout(timer);
      };
    }
    return void 0;
  }, [animating, targetDisplayBounds]);
  var previousMonth = (0, import_react39.useMemo)(function() {
    return endOfMonth(subtractMonths(startOfMonth(reference), 1));
  }, [reference]);
  var nextMonth = (0, import_react39.useMemo)(function() {
    return startOfMonth(addMonths(startOfMonth(reference), 1));
  }, [reference]);
  var daysRef = (0, import_react39.useRef)();
  var _useState11 = (0, import_react39.useState)(), focus = _useState11[0], setFocus = _useState11[1];
  var _useState12 = (0, import_react39.useState)(), active = _useState12[0], setActive = _useState12[1];
  (0, import_react39.useEffect)(function() {
    if (initialFocus === "days")
      daysRef.current.focus();
  }, [initialFocus]);
  var handleReference = (0, import_react39.useCallback)(function(nextReference) {
    setReference(nextReference);
    if (onReference)
      onReference(nextReference.toISOString());
  }, [onReference]);
  var changeReference = (0, import_react39.useCallback)(function(nextReference) {
    if (betweenDates(nextReference, bounds2))
      handleReference(nextReference);
  }, [handleReference, bounds2]);
  var changeCalendarMonth = function changeCalendarMonth2(messageId, newMonth) {
    handleReference(newMonth);
    announce(format3({
      id: messageId,
      messages,
      values: {
        date: newMonth.toLocaleDateString(locale, {
          month: "long",
          year: "numeric"
        })
      }
    }));
  };
  var handleRange = (0, import_react39.useCallback)(function(selectedDate) {
    var _priorRange$, _priorRange$$, _priorRange$2, _priorRange$2$;
    var result;
    var priorRange = normalizeRange(value, activeDate);
    if (selectedDate.getTime() === (priorRange == null ? void 0 : (_priorRange$ = priorRange[0]) == null ? void 0 : (_priorRange$$ = _priorRange$[0]) == null ? void 0 : _priorRange$$.getTime())) {
      result = [[void 0, priorRange[0][1]]];
      setActiveDate("start");
    } else if (selectedDate.getTime() === (priorRange == null ? void 0 : (_priorRange$2 = priorRange[0]) == null ? void 0 : (_priorRange$2$ = _priorRange$2[1]) == null ? void 0 : _priorRange$2$.getTime())) {
      result = [[priorRange[0][0], void 0]];
      setActiveDate("end");
    } else if (activeDate === "start") {
      if (!priorRange) {
        result = [[selectedDate, void 0]];
      } else if (!priorRange[0][1]) {
        result = [[selectedDate, priorRange[0][1]]];
      } else if (selectedDate.getTime() < priorRange[0][1].getTime()) {
        result = [[selectedDate, priorRange[0][1]]];
      } else if (selectedDate.getTime() > priorRange[0][1].getTime()) {
        result = [[selectedDate, void 0]];
      }
      setActiveDate("end");
    } else if (!priorRange) {
      result = [[void 0, selectedDate]];
      setActiveDate("start");
    } else if (selectedDate.getTime() < priorRange[0][0].getTime()) {
      result = [[selectedDate, void 0]];
      setActiveDate("end");
    } else if (selectedDate.getTime() > priorRange[0][0].getTime()) {
      result = [[priorRange[0][0], selectedDate]];
      setActiveDate("start");
    }
    if (result[0].includes(void 0)) {
      if (range === "array") {
        result = !result[0][0] && !result[0][1] ? void 0 : result;
      } else {
        result = result[0].find(function(d3) {
          return d3 !== void 0;
        });
      }
    }
    setValue(result);
    return result;
  }, [activeDate, value, range]);
  var selectDate = (0, import_react39.useCallback)(function(selectedDate) {
    var nextValue;
    if (range || Array.isArray(value == null ? void 0 : value[0])) {
      nextValue = handleRange(selectedDate);
    } else {
      nextValue = selectedDate;
    }
    if (onSelect) {
      nextValue = normalizeOutput(nextValue, outputFormat);
      onSelect(nextValue);
    }
  }, [handleRange, onSelect, outputFormat, range, value]);
  var _onClick = function onClick(selectedDate) {
    selectDate(selectedDate);
    announce("Selected " + getLocaleString(selectedDate, locale), "assertive");
    daysRef.current.focus();
    setActive(selectedDate);
  };
  var renderCalendarHeader = function renderCalendarHeader2() {
    var _theme$calendar$size;
    var PreviousIcon = size === "small" ? theme.calendar.icons.small.previous : theme.calendar.icons.previous;
    var NextIcon = size === "small" ? theme.calendar.icons.small.next : theme.calendar.icons.next;
    var monthAndYear = reference.toLocaleDateString(locale, {
      month: "long",
      year: "numeric"
    });
    return import_react39.default.createElement(Box, {
      direction: "row",
      justify: "between",
      align: "center"
    }, import_react39.default.createElement(Header, {
      flex: true,
      pad: {
        horizontal: headingPadMap[size] || "small"
      }
    }, (_theme$calendar$size = theme.calendar[size]) != null && _theme$calendar$size.title ? import_react39.default.createElement(Text, theme.calendar[size].title, monthAndYear) : (
      // theme.calendar.heading.level should be removed in v3 of grommet
      // theme.calendar[size].title should be used instead
      import_react39.default.createElement(Heading, {
        level: size === "small" ? theme.calendar.heading && theme.calendar.heading.level || 4 : (theme.calendar.heading && theme.calendar.heading.level || 4) - 1,
        size,
        margin: "none",
        overflowWrap: "normal"
      }, monthAndYear)
    )), import_react39.default.createElement(Box, {
      flex: false,
      direction: "row",
      align: "center"
    }, import_react39.default.createElement(Button, {
      a11yTitle: format3({
        id: "calendar.previous",
        messages,
        values: {
          date: previousMonth.toLocaleDateString(locale, {
            month: "long",
            year: "numeric"
          })
        }
      }),
      icon: import_react39.default.createElement(PreviousIcon, {
        size: size !== "small" ? size : void 0
      }),
      disabled: disabledCalendarPreviousMonthButton(previousMonth, reference, bounds2),
      onClick: function onClick() {
        return changeCalendarMonth("calendar.previousMove", previousMonth);
      }
    }), import_react39.default.createElement(Button, {
      a11yTitle: format3({
        id: "calendar.next",
        messages,
        values: {
          date: nextMonth.toLocaleDateString(locale, {
            month: "long",
            year: "numeric"
          })
        }
      }),
      icon: import_react39.default.createElement(NextIcon, {
        size: size !== "small" ? size : void 0
      }),
      disabled: disabledCalendarNextMonthButton(nextMonth, reference, bounds2),
      onClick: function onClick() {
        return changeCalendarMonth("calendar.nextMove", nextMonth);
      }
    })));
  };
  var renderDaysOfWeek = function renderDaysOfWeek2() {
    var day2 = new Date(displayBounds[0]);
    var days2 = [];
    while (days2.length < 7) {
      days2.push(import_react39.default.createElement(StyledDayContainer, {
        role: "gridcell",
        key: days2.length,
        sizeProp: size,
        fillContainer: fill
      }, import_react39.default.createElement(StyledDay, {
        otherMonth: true,
        sizeProp: size,
        fillContainer: fill
      }, day2.toLocaleDateString(locale, {
        weekday: "narrow"
      }))));
      day2 = addDays(day2, 1);
    }
    return import_react39.default.createElement(StyledWeek, {
      role: "row"
    }, days2);
  };
  var weeks = [];
  var day = new Date(displayBounds[0]);
  var days;
  var firstDayInMonth;
  var blankWeek = false;
  var _loop = function _loop2() {
    if (day.getDay() === firstDayOfWeek) {
      if (days) {
        weeks.push(import_react39.default.createElement(StyledWeek, {
          role: "row",
          key: day.getTime(),
          fillContainer: fill
        }, days));
      }
      days = [];
    }
    var otherMonth = day.getMonth() !== reference.getMonth();
    if (!showAdjacentDays && otherMonth) {
      days.push(import_react39.default.createElement(StyledDayContainer, {
        key: day.getTime(),
        sizeProp: size,
        fillContainer: fill
      }, import_react39.default.createElement(StyledDay, {
        sizeProp: size,
        fillContainer: fill
      })));
      if (weeks.length === 5 && /* If the length days array is less than the current getDate()
      we know that all days in the array are from the next month. */
      days.length < day.getDate()) {
        blankWeek = true;
      }
    } else if (
      /* Do not show adjacent days in 6th row if all days
      fall in the next month */
      showAdjacentDays === "trim" && otherMonth && weeks.length === 5 && /* If the length days array is less than the current getDate()
      we know that all days in the array are from the next month. */
      days.length < day.getDate()
    ) {
      blankWeek = true;
      days.push(import_react39.default.createElement(StyledDayContainer, {
        key: day.getTime(),
        sizeProp: size,
        fillContainer: fill
      }, import_react39.default.createElement(StyledDay, {
        sizeProp: size,
        fillContainer: fill
      })));
    } else {
      var dateObject = day;
      var selected = false;
      var inRange = false;
      var selectedState = withinDates(day, range ? normalizeRange(value, activeDate) : value);
      if (selectedState === 2) {
        selected = true;
      } else if (selectedState === 1) {
        inRange = true;
      }
      var dayDisabled = withinDates(day, normalizeInput(disabled)) || bounds2 && !betweenDates(day, normalizeInput(bounds2));
      if (!firstDayInMonth && !dayDisabled && day.getMonth() === reference.getMonth()) {
        firstDayInMonth = dateObject;
      }
      if (!children2) {
        days.push(import_react39.default.createElement(CalendarDay, {
          key: day.getTime(),
          buttonProps: {
            a11yTitle: day.toDateString(),
            active: active && active.getTime() === day.getTime(),
            disabled: dayDisabled && !!dayDisabled,
            onClick: function onClick() {
              return _onClick(dateObject);
            },
            onMouseOver: function onMouseOver() {
              return setActive(dateObject);
            },
            onMouseOut: function onMouseOut() {
              return setActive(void 0);
            }
          },
          isInRange: inRange,
          isSelected: selected,
          otherMonth: day.getMonth() !== reference.getMonth(),
          size,
          fill
        }, day.getDate()));
      } else {
        days.push(import_react39.default.createElement(CalendarCustomDay, {
          key: day.getTime(),
          buttonProps: onSelect ? {
            a11yTitle: day.toDateString(),
            active: active && active.getTime() === day.getTime(),
            disabled: dayDisabled && !!dayDisabled,
            onClick: function onClick() {
              return _onClick(dateObject);
            },
            onMouseOver: function onMouseOver() {
              return setActive(dateObject);
            },
            onMouseOut: function onMouseOut() {
              return setActive(void 0);
            }
          } : null,
          size,
          fill
        }, children2({
          date: day,
          day: day.getDate(),
          isInRange: inRange,
          isSelected: selected
        })));
      }
    }
    day = addDays(day, 1);
  };
  while (day.getTime() < displayBounds[1].getTime()) {
    _loop();
  }
  weeks.push(import_react39.default.createElement(
    StyledWeek,
    {
      role: !blankWeek ? "row" : void 0,
      key: day.getTime(),
      fillContainer: fill
    },
    days
  ));
  return import_react39.default.createElement(StyledCalendar, _extends33({
    ref,
    sizeProp: size,
    fillContainer: fill
  }, rest), import_react39.default.createElement(Box, {
    fill
  }, header ? header({
    date: reference,
    locale,
    onPreviousMonth: function onPreviousMonth() {
      changeReference(previousMonth);
      announce(format3({
        id: "calendar.previous",
        messages,
        values: {
          date: previousMonth.toLocaleDateString(locale, {
            month: "long",
            year: "numeric"
          })
        }
      }));
    },
    onNextMonth: function onNextMonth() {
      changeReference(nextMonth);
      announce(format3({
        id: "calendar.next",
        messages,
        values: {
          date: nextMonth.toLocaleDateString(locale, {
            month: "long",
            year: "numeric"
          })
        }
      }));
    },
    previousInBound: betweenDates(previousMonth, bounds2),
    nextInBound: betweenDates(nextMonth, bounds2)
  }) : renderCalendarHeader(previousMonth, nextMonth), daysOfWeek && renderDaysOfWeek(), import_react39.default.createElement(Keyboard, {
    onEnter: function onEnter() {
      return active !== void 0 ? _onClick(active) : void 0;
    },
    onUp: function onUp(event) {
      event.preventDefault();
      event.stopPropagation();
      setActive(addDays(active, -7));
      if (!betweenDates(addDays(active, -7), displayBounds)) {
        changeReference(addDays(active, -7));
      }
    },
    onDown: function onDown(event) {
      event.preventDefault();
      event.stopPropagation();
      setActive(addDays(active, 7));
      if (!betweenDates(addDays(active, 7), displayBounds)) {
        changeReference(active);
      }
    },
    onLeft: function onLeft() {
      setActive(addDays(active, -1));
      if (!betweenDates(addDays(active, -1), displayBounds)) {
        changeReference(active);
      }
    },
    onRight: function onRight() {
      setActive(addDays(active, 1));
      if (!betweenDates(addDays(active, 2), displayBounds)) {
        changeReference(active);
      }
    }
  }, import_react39.default.createElement(StyledWeeksContainer, {
    tabIndex: 0,
    role: "grid",
    "aria-label": reference.toLocaleDateString(locale, {
      month: "long",
      year: "numeric"
    }) + "; " + currentlySelectedString(value, locale),
    ref: daysRef,
    sizeProp: size,
    fillContainer: fill,
    focus,
    onFocus: function onFocus() {
      setFocus(true);
      if (!mouseDown) {
        setActive(new Date(firstDayInMonth));
      }
    },
    onBlur: function onBlur() {
      setFocus(false);
      setActive(void 0);
    }
  }, import_react39.default.createElement(StyledWeeks, {
    slide,
    sizeProp: size,
    fillContainer: fill
  }, weeks)))));
});
Calendar.displayName = "Calendar";
Calendar.propTypes = CalendarPropTypes;

// node_modules/grommet/es6/components/Card/Card.js
var import_react40 = __toESM(require_react());
init_styled_components_browser_esm();
function _objectDestructuringEmpty(obj) {
  if (obj == null)
    throw new TypeError("Cannot destructure " + obj);
}
function _extends34() {
  _extends34 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends34.apply(this, arguments);
}
var Card = (0, import_react40.forwardRef)(function(_ref, ref) {
  var _theme$card$hover;
  var rest = _extends34({}, (_objectDestructuringEmpty(_ref), _ref));
  var theme = (0, import_react40.useContext)(Me) || defaultProps2.theme;
  return import_react40.default.createElement(Box, _extends34({
    overflow: "hidden",
    kind: _extends34({
      hover: (_theme$card$hover = theme.card.hover) == null ? void 0 : _theme$card$hover.container
    }, theme.card.container),
    ref
  }, theme.card.container, rest));
});
Card.displayName = "Card";

// node_modules/grommet/es6/components/CardBody/CardBody.js
var import_react41 = __toESM(require_react());
init_styled_components_browser_esm();
function _objectDestructuringEmpty2(obj) {
  if (obj == null)
    throw new TypeError("Cannot destructure " + obj);
}
function _extends35() {
  _extends35 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends35.apply(this, arguments);
}
var CardBody = function CardBody2(_ref) {
  var rest = _extends35({}, (_objectDestructuringEmpty2(_ref), _ref));
  var theme = (0, import_react41.useContext)(Me) || defaultProps2.theme;
  return import_react41.default.createElement(Box, _extends35({
    flex: true
  }, theme.card.body, rest));
};

// node_modules/grommet/es6/components/CardFooter/CardFooter.js
var import_react43 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/Footer/Footer.js
var import_react42 = __toESM(require_react());
function _objectDestructuringEmpty3(obj) {
  if (obj == null)
    throw new TypeError("Cannot destructure " + obj);
}
function _extends36() {
  _extends36 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends36.apply(this, arguments);
}
var Footer = function Footer2(_ref) {
  var rest = _extends36({}, (_objectDestructuringEmpty3(_ref), _ref));
  return import_react42.default.createElement(Box, _extends36({
    as: "footer",
    align: "center",
    direction: "row",
    flex: false,
    gap: "medium",
    justify: "between"
  }, rest));
};

// node_modules/grommet/es6/components/CardFooter/CardFooter.js
function _objectDestructuringEmpty4(obj) {
  if (obj == null)
    throw new TypeError("Cannot destructure " + obj);
}
function _extends37() {
  _extends37 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends37.apply(this, arguments);
}
var CardFooter = function CardFooter2(_ref) {
  var rest = _extends37({}, (_objectDestructuringEmpty4(_ref), _ref));
  var theme = (0, import_react43.useContext)(Me) || defaultProps2.theme;
  return import_react43.default.createElement(Footer, _extends37({}, theme.card.footer, rest));
};

// node_modules/grommet/es6/components/CardHeader/CardHeader.js
var import_react44 = __toESM(require_react());
init_styled_components_browser_esm();
function _objectDestructuringEmpty5(obj) {
  if (obj == null)
    throw new TypeError("Cannot destructure " + obj);
}
function _extends38() {
  _extends38 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends38.apply(this, arguments);
}
var CardHeader = function CardHeader2(_ref) {
  var rest = _extends38({}, (_objectDestructuringEmpty5(_ref), _ref));
  var theme = (0, import_react44.useContext)(Me) || defaultProps2.theme;
  return import_react44.default.createElement(Header, _extends38({}, theme.card.header, rest));
};

// node_modules/grommet/es6/components/Cards/Cards.js
var import_react51 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/contexts/DataContext.js
var import_react45 = __toESM(require_react());
var DataContext = import_react45.default.createContext({
  data: [],
  addToolbarKey: function addToolbarKey() {
  }
});

// node_modules/grommet/es6/components/Grid/Grid.js
var import_react46 = __toESM(require_react());

// node_modules/grommet/es6/components/Grid/StyledGrid.js
init_styled_components_browser_esm();
var fillStyle8 = function fillStyle9(fill) {
  if (!fill) {
    return fill;
  }
  if (fill === "horizontal") {
    return "width: 100%;";
  }
  if (fill === "vertical") {
    return "height: 100%;";
  }
  return "\n      width: 100%;\n      height: 100%;\n    ";
};
var JUSTIFY_MAP2 = {
  center: "center",
  end: "flex-end",
  start: "flex-start",
  stretch: "stretch"
};
var justifyStyle2 = Ae(["justify-items:", ";"], function(props) {
  return JUSTIFY_MAP2[props.justify];
});
var JUSTIFY_CONTENT_MAP = {
  around: "space-around",
  between: "space-between",
  center: "center",
  end: "flex-end",
  start: "flex-start",
  stretch: "stretch"
};
var justifyContentStyle = Ae(["justify-content:", ";"], function(props) {
  return JUSTIFY_CONTENT_MAP[props.justifyContent];
});
var gapSizes = function gapSizes2(props) {
  var result = [];
  if (typeof props.gap === "string") {
    var size = props.theme.global.edgeSize[props.gap] || props.gap;
    result[0] = size;
    result[1] = size;
  } else if (props.gap) {
    if (props.gap.row)
      result[0] = props.theme.global.edgeSize[props.gap.row] || props.gap.row;
    if (props.gap.column)
      result[1] = props.theme.global.edgeSize[props.gap.column] || props.gap.column;
  }
  return result;
};
var gapStyle3 = function gapStyle4(props) {
  var sizes4 = gapSizes(props);
  if (sizes4[0] !== void 0 && sizes4[1] !== void 0) {
    return "grid-gap: " + sizes4[0] + " " + sizes4[1] + ";";
  }
  if (sizes4[0] !== void 0) {
    return "grid-row-gap: " + sizes4[0] + ";";
  }
  if (sizes4[1] !== void 0) {
    return "grid-column-gap: " + sizes4[1] + ";";
  }
  return "";
};
var SIZE_MAP = {
  flex: "1fr",
  full: "100%",
  "1/2": "50%",
  "1/4": "25%",
  "2/4": "50%",
  "3/4": "75%",
  "1/3": "33.33%",
  "2/3": "66.66%"
};
var normalizeSize = function normalizeSize2(size, props) {
  return SIZE_MAP[size] || props.theme.global.size[size] || size;
};
var getRepeatCount = function getRepeatCount2(count) {
  return typeof count === "number" ? count : "auto-" + (count || "fit");
};
var getRepeatSize = function getRepeatSize2(size, props) {
  if (size === "flex")
    return "1fr";
  var gaps = gapSizes(props);
  var min;
  var max;
  var minFill;
  if (Array.isArray(size)) {
    var _size$ = size[0], minSize = _size$ === void 0 ? "auto" : _size$, _size$2 = size[1], maxSize = _size$2 === void 0 ? "auto" : _size$2;
    min = normalizeSize(minSize, props);
    if (min.search(/px/) !== -1)
      minFill = true;
    max = normalizeSize(maxSize, props);
    if (gaps[1] !== void 0) {
      if (minSize.indexOf("/") !== -1)
        min = "calc(" + min + " - (" + gaps[1] + " * (1 - " + minSize + ")))";
      if (maxSize.indexOf("/") !== -1)
        max = "calc(" + max + " - (" + gaps[1] + " * (1 - " + maxSize + ")))";
    }
  } else {
    min = normalizeSize(size, props);
    if (min.search(/px/) !== -1)
      minFill = true;
    max = "1fr";
    if (gaps[1] !== void 0) {
      if (size.indexOf("/") !== -1)
        min = "calc(" + min + " - (" + gaps[1] + " * (1 - " + size + ")))";
    }
  }
  if (minFill) {
    min = "min(" + min + ", 100%)";
  }
  return "minmax(" + min + ", " + max + ")";
};
var columnsStyle = function columnsStyle2(props) {
  if (Array.isArray(props.columns)) {
    return Ae(["grid-template-columns:", ";"], props.columns.map(function(s3) {
      if (Array.isArray(s3)) {
        return "minmax(" + normalizeSize(s3[0], props) + ", " + normalizeSize(s3[1], props) + ")";
      }
      return normalizeSize(s3, props);
    }).join(" "));
  }
  if (typeof props.columns === "object") {
    return Ae(["grid-template-columns:repeat( ", ",", " );"], getRepeatCount(props.columns.count), getRepeatSize(props.columns.size, props));
  }
  return Ae(["grid-template-columns:repeat( auto-fill,", " );"], getRepeatSize(props.columns, props));
};
var rowsStyle = function rowsStyle2(props) {
  if (Array.isArray(props.rowsProp)) {
    return Ae(["grid-template-rows:", ";"], props.rowsProp.map(function(s3) {
      if (Array.isArray(s3)) {
        return "minmax(" + normalizeSize(s3[0], props) + ", " + normalizeSize(s3[1], props) + ")";
      }
      return normalizeSize(s3, props);
    }).join(" "));
  }
  return Ae(["grid-auto-rows:", ";"], props.theme.global.size[props.rowsProp]);
};
var areasStyle = function areasStyle2(props) {
  if (!Array.isArray(props.rowsProp) || !Array.isArray(props.columns)) {
    console.warn("Grid `areas` requires `rows` and `columns` to be arrays.");
  }
  if (Array.isArray(props.areas) && props.areas.every(function(area) {
    return Array.isArray(area);
  })) {
    return "grid-template-areas: " + props.areas.map(function(area) {
      return '"' + area.join(" ") + '"';
    }).join(" ") + ";";
  }
  var cells = props.rowsProp.map(function() {
    return props.columns.map(function() {
      return ".";
    });
  });
  props.areas.forEach(function(area) {
    for (var row = area.start[1]; row <= area.end[1]; row += 1) {
      for (var column = area.start[0]; column <= area.end[0]; column += 1) {
        cells[row][column] = area.name;
      }
    }
  });
  return "grid-template-areas: " + cells.map(function(r3) {
    return '"' + r3.join(" ") + '"';
  }).join(" ") + ";";
};
var StyledGrid = styled_components_browser_esm_default.div.attrs(function(props) {
  return {
    "aria-label": props.a11yTitleProp
  };
}).withConfig({
  displayName: "StyledGrid",
  componentId: "sc-1wofa1l-0"
})(["display:grid;box-sizing:border-box;", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", ""], genericStyles, function(props) {
  return props.border && borderStyle(props.border, props.responsive, props.theme);
}, function(props) {
  return fillStyle8(props.fillContainer);
}, function(props) {
  return props.align && alignStyle;
}, function(props) {
  return props.alignContent && alignContentStyle;
}, function(props) {
  return props.areas && areasStyle(props);
}, function(props) {
  return props.columns && columnsStyle(props);
}, function(props) {
  return props.gap && gapStyle3(props);
}, function(props) {
  return props.justify && justifyStyle2;
}, function(props) {
  return props.justifyContent && justifyContentStyle;
}, function(props) {
  return props.pad && edgeStyle("padding", props.pad, props.responsive, props.theme.global.edgeSize.responsiveBreakpoint, props.theme);
}, function(props) {
  return props.rowsProp && rowsStyle(props);
}, function(props) {
  return props.heightProp && heightStyle(props.heightProp, props.theme);
}, function(props) {
  return props.widthProp && widthStyle(props.widthProp, props.theme);
}, function(props) {
  return props.theme.grid && props.theme.grid.extend;
});
StyledGrid.defaultProps = {};
Object.setPrototypeOf(StyledGrid.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/Grid/propTypes.js
var import_prop_types19 = __toESM(require_prop_types());
function _extends39() {
  _extends39 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends39.apply(this, arguments);
}
var fixedSizes = ["xsmall", "small", "medium", "large", "xlarge"];
var sizes = ["xsmall", "small", "medium", "large", "xlarge", "full", "1/2", "1/3", "2/3", "1/4", "2/4", "3/4", "flex", "auto"];
var edgeSizes = ["xxsmall", "xsmall", "small", "medium", "large", "xlarge", "none"];
var BORDER_SHAPE2 = import_prop_types19.default.shape({
  color: import_prop_types19.default.oneOfType([import_prop_types19.default.string, import_prop_types19.default.shape({
    dark: import_prop_types19.default.string,
    light: import_prop_types19.default.string
  })]),
  side: import_prop_types19.default.oneOf(["top", "left", "bottom", "right", "start", "end", "horizontal", "vertical", "all", "between"]),
  size: import_prop_types19.default.oneOfType([import_prop_types19.default.oneOf(["xsmall", "small", "medium", "large", "xlarge"]), import_prop_types19.default.string]),
  style: import_prop_types19.default.oneOf(["solid", "dashed", "dotted", "double", "groove", "ridge", "inset", "outset", "hidden"])
});
var PropType18 = {};
if (true) {
  PropType18 = _extends39({}, genericProps, {
    align: alignPropType,
    alignContent: import_prop_types19.default.oneOfType([import_prop_types19.default.oneOf(["around", "baseline", "between", "center", "evenly", "end", "start", "stretch"]), import_prop_types19.default.string]),
    areas: import_prop_types19.default.oneOfType([import_prop_types19.default.arrayOf(import_prop_types19.default.shape({
      name: import_prop_types19.default.string,
      start: import_prop_types19.default.arrayOf(import_prop_types19.default.number),
      end: import_prop_types19.default.arrayOf(import_prop_types19.default.number)
    })), import_prop_types19.default.arrayOf(import_prop_types19.default.arrayOf(import_prop_types19.default.string))]),
    border: import_prop_types19.default.oneOfType([import_prop_types19.default.bool, import_prop_types19.default.oneOf(["top", "left", "bottom", "right", "start", "end", "horizontal", "vertical", "all"]), BORDER_SHAPE2, import_prop_types19.default.arrayOf(BORDER_SHAPE2)]),
    columns: import_prop_types19.default.oneOfType([import_prop_types19.default.arrayOf(import_prop_types19.default.oneOfType([import_prop_types19.default.arrayOf(import_prop_types19.default.oneOfType([import_prop_types19.default.oneOf(sizes), import_prop_types19.default.string])), import_prop_types19.default.oneOf(sizes), import_prop_types19.default.string])), import_prop_types19.default.oneOf(sizes), import_prop_types19.default.shape({
      count: import_prop_types19.default.oneOfType([import_prop_types19.default.oneOf(["fit", "fill"]), import_prop_types19.default.number]),
      size: import_prop_types19.default.oneOfType([import_prop_types19.default.oneOf(sizes), import_prop_types19.default.arrayOf(import_prop_types19.default.oneOfType([import_prop_types19.default.oneOf(sizes), import_prop_types19.default.string])), import_prop_types19.default.string])
    }), import_prop_types19.default.string]),
    fill: import_prop_types19.default.oneOfType([import_prop_types19.default.oneOf(["horizontal", "vertical"]), import_prop_types19.default.bool]),
    gap: import_prop_types19.default.oneOfType([import_prop_types19.default.oneOf(edgeSizes), import_prop_types19.default.shape({
      row: import_prop_types19.default.oneOfType([import_prop_types19.default.oneOf(edgeSizes), import_prop_types19.default.string]),
      column: import_prop_types19.default.oneOfType([import_prop_types19.default.oneOf(edgeSizes), import_prop_types19.default.string])
    }), import_prop_types19.default.string]),
    height: heightPropType,
    justify: import_prop_types19.default.oneOf(["start", "center", "end", "stretch"]),
    justifyContent: import_prop_types19.default.oneOf(["start", "center", "end", "between", "around", "stretch"]),
    pad: padPropType,
    responsive: import_prop_types19.default.bool,
    rows: import_prop_types19.default.oneOfType([import_prop_types19.default.arrayOf(import_prop_types19.default.oneOfType([import_prop_types19.default.arrayOf(import_prop_types19.default.oneOfType([import_prop_types19.default.oneOf(sizes), import_prop_types19.default.string])), import_prop_types19.default.oneOf(sizes), import_prop_types19.default.string])), import_prop_types19.default.oneOf(fixedSizes), import_prop_types19.default.string]),
    tag: import_prop_types19.default.oneOfType([import_prop_types19.default.string, import_prop_types19.default.func]),
    as: import_prop_types19.default.oneOfType([import_prop_types19.default.string, import_prop_types19.default.func]),
    width: widthPropType
  });
}
var GridPropTypes = PropType18;

// node_modules/grommet/es6/components/Grid/Grid.js
var _excluded20 = ["a11yTitle", "aria-label", "border", "fill", "height", "responsive", "rows", "tag", "as", "width"];
function _extends40() {
  _extends40 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends40.apply(this, arguments);
}
function _objectWithoutPropertiesLoose20(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var Grid = (0, import_react46.forwardRef)(function(props, ref) {
  var a11yTitle = props.a11yTitle, ariaLabel = props["aria-label"], border = props.border, fill = props.fill, height = props.height, _props$responsive = props.responsive, responsive = _props$responsive === void 0 ? true : _props$responsive, rows = props.rows, tag = props.tag, as = props.as, width = props.width, rest = _objectWithoutPropertiesLoose20(props, _excluded20);
  return import_react46.default.createElement(StyledGrid, _extends40({
    ref,
    a11yTitleProp: ariaLabel || a11yTitle,
    as: !as && tag ? tag : as,
    border,
    fillContainer: fill,
    heightProp: height,
    responsive,
    rowsProp: rows,
    widthProp: width
  }, rest));
});
Grid.displayName = "Grid";
Grid.propTypes = GridPropTypes;
Grid.available = true;

// node_modules/grommet/es6/components/InfiniteScroll/InfiniteScroll.js
var import_react47 = __toESM(require_react());

// node_modules/grommet/es6/components/InfiniteScroll/propTypes.js
var import_prop_types20 = __toESM(require_prop_types());
var PropType19 = {};
if (true) {
  PropType19 = {
    children: import_prop_types20.default.func,
    items: import_prop_types20.default.arrayOf(import_prop_types20.default.any),
    onMore: import_prop_types20.default.func,
    renderMarker: import_prop_types20.default.func,
    replace: import_prop_types20.default.bool,
    show: import_prop_types20.default.number,
    step: import_prop_types20.default.number
  };
}
var InfiniteScrollPropTypes = PropType19;

// node_modules/grommet/es6/components/InfiniteScroll/InfiniteScroll.js
var calculateLastPageBound = function calculateLastPageBound2(show, step) {
  return show ? Math.floor((show + step) / step) - 1 : 0;
};
var InfiniteScroll = function InfiniteScroll2(_ref) {
  var children2 = _ref.children, _ref$items = _ref.items, items = _ref$items === void 0 ? [] : _ref$items, onMore = _ref.onMore, renderMarker = _ref.renderMarker, replace = _ref.replace, show = _ref.show, _ref$step = _ref.step, step = _ref$step === void 0 ? 50 : _ref$step;
  var _useState = (0, import_react47.useState)(), scrollShow = _useState[0], setScrollShow = _useState[1];
  var lastPage = (0, import_react47.useMemo)(function() {
    return Math.max(0, Math.ceil(items.length / step) - 1);
  }, [items.length, step]);
  var _useState2 = (0, import_react47.useState)([0, calculateLastPageBound(show, step)]), renderPageBounds = _useState2[0], setRenderPageBounds = _useState2[1];
  var _useState3 = (0, import_react47.useState)([]), pageHeights = _useState3[0], setPageHeights = _useState3[1];
  var _useState4 = (0, import_react47.useState)(0), pendingLength = _useState4[0], setPendingLength = _useState4[1];
  var aboveMarkerRef = (0, import_react47.useRef)();
  var belowMarkerRef = (0, import_react47.useRef)();
  (0, import_react47.useEffect)(function() {
    var scrollParents;
    var evaluate = function evaluate2() {
      if (!scrollParents)
        return;
      var scrollParent = scrollParents[0];
      var top;
      var height;
      if (scrollParent === document) {
        top = document.documentElement.scrollTop || document.body.scrollTop;
        height = window.innerHeight;
      } else {
        top = scrollParent.scrollTop;
        var rect = scrollParent.getBoundingClientRect();
        height = rect.height;
      }
      var offset = height / 4;
      var nextBeginPage = 0;
      var index = 0;
      var pagesHeight = pageHeights[index] || 0;
      while (pageHeights[index + 1] && pagesHeight < top - offset) {
        index += 1;
        nextBeginPage += 1;
        pagesHeight += pageHeights[index];
      }
      var nextEndPage = nextBeginPage;
      while (pageHeights[index] !== void 0 && pagesHeight < top + height + offset) {
        index += 1;
        nextEndPage += 1;
        pagesHeight += pageHeights[index] || 0;
      }
      if (!replace) {
        nextBeginPage = 0;
        nextEndPage = Math.max(renderPageBounds[1], nextEndPage);
      }
      if (show) {
        var showPage = calculateLastPageBound(show, step);
        nextBeginPage = Math.min(showPage, nextBeginPage);
        nextEndPage = Math.max(showPage, nextEndPage);
      }
      if (nextBeginPage !== renderPageBounds[0] || nextEndPage !== renderPageBounds[1]) {
        setRenderPageBounds([nextBeginPage, nextEndPage]);
      }
    };
    var timer;
    var debounce = function debounce2() {
      clearTimeout(timer);
      timer = setTimeout(evaluate, 10);
    };
    if (belowMarkerRef.current) {
      scrollParents = findScrollParents(belowMarkerRef.current);
      scrollParents.forEach(function(sp) {
        return sp.addEventListener("scroll", debounce);
      });
    }
    window.addEventListener("resize", debounce);
    evaluate();
    return function() {
      if (scrollParents) {
        scrollParents.forEach(function(sp) {
          return sp.removeEventListener("scroll", debounce);
        });
      }
      window.removeEventListener("resize", debounce);
      clearTimeout(timer);
    };
  }, [pageHeights, renderPageBounds, replace, show, step]);
  (0, import_react47.useEffect)(function() {
    if (onMore && renderPageBounds[1] === lastPage && items.length >= pendingLength && items.length > 0) {
      setPendingLength(items.length + 1);
      onMore();
    }
  }, [items.length, lastPage, onMore, pendingLength, renderPageBounds, step]);
  (0, import_react47.useEffect)(function() {
    if (items.length === 0 && lastPage === 0 && pendingLength !== 0) {
      setPageHeights([]);
      setPendingLength(0);
      setRenderPageBounds([0, calculateLastPageBound(show, step)]);
    }
  }, [lastPage, pendingLength, show, step, items.length]);
  useLayoutEffect(function() {
    var timer = setTimeout(function() {
      if (show && belowMarkerRef.current && show !== scrollShow) {
        var showIndex = show - renderPageBounds[0] * step + (renderPageBounds[0] ? 1 : 0);
        var showNode = belowMarkerRef.current.parentNode.children.item(showIndex);
        if (showNode) {
          var scrollParent = findScrollParent(showNode);
          if (isNodeBeforeScroll(showNode, scrollParent)) {
            showNode.scrollIntoView(true);
          } else if (isNodeAfterScroll(showNode, scrollParent)) {
            showNode.scrollIntoView(false);
          }
          setScrollShow(show);
        }
      }
    }, 100);
    return function() {
      return clearTimeout(timer);
    };
  }, [renderPageBounds, show, step]);
  useLayoutEffect(function() {
    if (!belowMarkerRef.current)
      return;
    var rendered = belowMarkerRef.current.parentNode.children;
    if ((aboveMarkerRef.current ? 1 : 0) + (renderPageBounds[1] - renderPageBounds[0] + 1) * step + 1 === rendered.length) {
      var nextPageHeights;
      var i3 = renderPageBounds[0];
      var lastBottom;
      while (i3 <= renderPageBounds[1]) {
        var topIndex = (aboveMarkerRef.current ? 1 : 0) + (i3 - renderPageBounds[0]) * step;
        var bottomIndex = Math.min(topIndex + step - 1, rendered.length - 1);
        var top = lastBottom !== void 0 ? lastBottom : rendered.item(topIndex).getBoundingClientRect().top;
        var _rendered$item$getBou = rendered.item(bottomIndex).getBoundingClientRect(), bottom = _rendered$item$getBou.bottom;
        var height = bottom - top;
        if (bottom && (!pageHeights || pageHeights[i3] !== height)) {
          if (!nextPageHeights)
            nextPageHeights = [].concat(pageHeights || []);
          nextPageHeights[i3] = height;
        }
        lastBottom = bottom;
        i3 += 1;
      }
      while (replace && i3 <= lastPage) {
        if (!pageHeights[i3] && pageHeights[i3] !== pageHeights[0]) {
          if (!nextPageHeights)
            nextPageHeights = [].concat(pageHeights || []);
          var _nextPageHeights = nextPageHeights;
          nextPageHeights[i3] = _nextPageHeights[0];
        }
        i3 += 1;
      }
      if (nextPageHeights)
        setPageHeights(nextPageHeights);
    }
  }, [lastPage, pageHeights, renderPageBounds, replace, step]);
  var aboveHeight = (0, import_react47.useMemo)(function() {
    if (!replace)
      return 0;
    var height = 0;
    var i3 = 0;
    while (i3 < renderPageBounds[0]) {
      height += pageHeights[i3] || 0;
      i3 += 1;
    }
    return height;
  }, [pageHeights, renderPageBounds, replace]);
  var belowHeight = (0, import_react47.useMemo)(function() {
    if (!replace)
      return 0;
    var height = 0;
    var i3 = renderPageBounds[1] + 1;
    while (i3 <= lastPage) {
      height += pageHeights[i3] || 0;
      i3 += 1;
    }
    return height;
  }, [lastPage, pageHeights, renderPageBounds, replace]);
  var firstIndex = renderPageBounds[0] * step;
  var lastIndex = Math.min((renderPageBounds[1] + 1) * step, items.length) - 1;
  var result = [];
  if (aboveHeight) {
    var marker = import_react47.default.createElement(Box, {
      key: "above",
      ref: aboveMarkerRef,
      flex: false,
      height: aboveHeight + "px"
    });
    if (renderMarker) {
      marker = import_react47.default.cloneElement(renderMarker(marker), {
        key: "above"
      });
    }
    result.push(marker);
  }
  items.slice(firstIndex, lastIndex + 1).forEach(function(item, index) {
    var itemsIndex = firstIndex + index;
    var child = children2(item, itemsIndex);
    result.push(child);
  });
  if (replace || renderPageBounds[1] < lastPage || onMore) {
    var _marker = import_react47.default.createElement(Box, {
      key: "below",
      ref: !renderMarker && belowMarkerRef || void 0,
      flex: false,
      height: (belowHeight || 0) + "px"
    });
    if (renderMarker) {
      var renderedMarker = renderMarker(_marker);
      _marker = import_react47.default.cloneElement(renderedMarker, {
        key: "below",
        // We need to make sure our belowMarkerRef is tied to a component
        // that has the same parent as the items being rendered. This is so
        // we can use belowMarkerRef.current.parentNode.children to
        // get a reference to the items in the DOM for calculating pageHeights.
        //
        // Since the caller might have included a ref in what their
        // renderMarker returns, we have to take care of both refs.
        // https://github.com/facebook/react/issues/8873#issuecomment-489579878
        ref: function ref(node) {
          belowMarkerRef.current = node;
          var ref2 = renderedMarker.ref;
          if (typeof ref2 === "function") {
            ref2(node);
          } else if (ref2 !== null) {
            ref2.current = node;
          }
        }
      });
    }
    result.push(_marker);
  }
  return result;
};
InfiniteScroll.propTypes = InfiniteScrollPropTypes;

// node_modules/grommet/es6/components/Pagination/Pagination.js
var import_react50 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/Nav/Nav.js
var import_react48 = __toESM(require_react());
function _objectDestructuringEmpty6(obj) {
  if (obj == null)
    throw new TypeError("Cannot destructure " + obj);
}
function _extends41() {
  _extends41 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends41.apply(this, arguments);
}
var Nav = function Nav2(_ref) {
  var rest = _extends41({}, (_objectDestructuringEmpty6(_ref), _ref));
  return import_react48.default.createElement(Box, _extends41({
    as: "nav",
    flex: false,
    gap: "medium"
  }, rest));
};

// node_modules/grommet/es6/components/Pagination/PageControl.js
var import_react49 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/Pagination/StyledPageControl.js
init_styled_components_browser_esm();
var sizeStyle11 = function sizeStyle12(props) {
  var style = props.theme.pagination.button && props.theme.pagination.button.size && props.theme.pagination.button.size[props.size || "medium"];
  return style ? {
    content: {
      fontSize: style.font && style.font.size,
      // fix for safari, apply line-height 0 on next/previous
      // icon-only buttons
      lineHeight: style.font && props.hasLabel ? style.font.height : 0
    },
    container: {
      height: style.height,
      minWidth: style.width
    }
  } : "";
};
var StyledPaginationButton = styled_components_browser_esm_default(Button).withConfig({
  displayName: "StyledPageControl__StyledPaginationButton",
  componentId: "sc-1vlfaez-0"
})(["> svg{margin:0 auto;}", ";"], function(props) {
  return sizeStyle11(props).content;
});
var StyledContainer = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledPageControl__StyledContainer",
  componentId: "sc-1vlfaez-1"
})(["display:flex;align-items:center;justify-content:center;max-width:100%;", ";", ";"], function(props) {
  return sizeStyle11(props).container;
}, function(props) {
  return props.theme.pagination.control && props.theme.pagination.control.extend;
});
var StyledSeparator = styled_components_browser_esm_default(Text).withConfig({
  displayName: "StyledPageControl__StyledSeparator",
  componentId: "sc-1vlfaez-2"
})(["font-weight:bold;", ";", ";"], function(props) {
  return "font-size: " + (sizeStyle11(props).content && sizeStyle11(props).content.fontSize);
}, function(props) {
  return "line-height: " + (sizeStyle11(props).content && sizeStyle11(props).content.lineHeight);
});

// node_modules/grommet/es6/components/Pagination/PageControl.js
var _excluded21 = ["control", "separator", "size"];
function _extends42() {
  _extends42 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends42.apply(this, arguments);
}
function _objectWithoutPropertiesLoose21(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var PageControl = function PageControl2(_ref) {
  var control = _ref.control, separator = _ref.separator, sizeProp = _ref.size, rest = _objectWithoutPropertiesLoose21(_ref, _excluded21);
  var theme = (0, import_react49.useContext)(Me);
  var size = sizeProp || "medium";
  return import_react49.default.createElement(StyledContainer, {
    as: "li",
    size
  }, separator ? import_react49.default.createElement(StyledSeparator, {
    size
  }, "…") : import_react49.default.createElement(StyledPaginationButton, _extends42({
    a11yTitle: "Go to page " + control,
    fill: true,
    kind: theme.pagination.button,
    label: control,
    size
  }, rest)));
};

// node_modules/grommet/es6/components/Pagination/propTypes.js
var import_prop_types21 = __toESM(require_prop_types());
function _extends43() {
  _extends43 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends43.apply(this, arguments);
}
var PropType20 = {};
if (true) {
  PropType20 = _extends43({}, genericProps, {
    numberEdgePages: import_prop_types21.default.number,
    numberItems: import_prop_types21.default.number,
    numberMiddlePages: import_prop_types21.default.number,
    onChange: import_prop_types21.default.func,
    page: import_prop_types21.default.number,
    size: import_prop_types21.default.oneOf(["small", "medium", "large"]),
    step: import_prop_types21.default.number
  });
}
var PaginationPropTypes = PropType20;

// node_modules/grommet/es6/components/Pagination/Pagination.js
var _excluded23 = ["a11yTitle", "aria-label", "numberItems", "numberEdgePages", "numberMiddlePages", "onChange", "page", "size", "step"];
function _extends44() {
  _extends44 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends44.apply(this, arguments);
}
function _objectWithoutPropertiesLoose22(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var StyledPaginationContainer = styled_components_browser_esm_default(Box).withConfig({
  displayName: "Pagination__StyledPaginationContainer",
  componentId: "sc-rnlw6m-0"
})(["", ""], function(props) {
  return props.theme.pagination.container && props.theme.pagination.container.extend;
});
var getPageIndices = function getPageIndices2(begin, end) {
  var indices = [];
  for (var i3 = begin; i3 <= end; i3 += 1) {
    indices.push(i3);
  }
  return indices;
};
var Pagination = (0, import_react50.forwardRef)(function(_ref, ref) {
  var _ref2;
  var a11yTitle = _ref.a11yTitle, ariaLabel = _ref["aria-label"], numberItems = _ref.numberItems, _ref$numberEdgePages = _ref.numberEdgePages, numberEdgePages = _ref$numberEdgePages === void 0 ? 1 : _ref$numberEdgePages, _ref$numberMiddlePage = _ref.numberMiddlePages, numberMiddlePagesProp = _ref$numberMiddlePage === void 0 ? 3 : _ref$numberMiddlePage, onChange = _ref.onChange, pageProp = _ref.page, size = _ref.size, stepProp = _ref.step, rest = _objectWithoutPropertiesLoose22(_ref, _excluded23);
  var theme = (0, import_react50.useContext)(Me) || defaultProps2.theme;
  var _useContext = (0, import_react50.useContext)(DataContext), onView = _useContext.onView, filteredTotal = _useContext.filteredTotal, view = _useContext.view;
  var step = stepProp || (view == null ? void 0 : view.step) || 10;
  var total = (_ref2 = numberItems != null ? numberItems : filteredTotal) != null ? _ref2 : 0;
  var page = pageProp || (view == null ? void 0 : view.page) || 1;
  var totalPages = Math.ceil(total / step);
  var _useState = (0, import_react50.useState)(Math.min(page, totalPages) || 1), activePage = _useState[0], setActivePage = _useState[1];
  (0, import_react50.useEffect)(function() {
    setActivePage(page);
    var pageEvent = new Event("pagechange");
    window.dispatchEvent(pageEvent);
  }, [page]);
  (0, import_react50.useEffect)(function() {
    if (onView && ((view == null ? void 0 : view.step) !== step || (view == null ? void 0 : view.page) !== page))
      onView(_extends44({}, view, {
        page,
        step
      }));
  }, [onView, page, step, view]);
  var beginPages = getPageIndices(1, Math.min(numberEdgePages, totalPages));
  var endPages = getPageIndices(Math.max(totalPages - numberEdgePages + 1, numberEdgePages + 1), totalPages);
  var numberMiddlePages;
  if (numberMiddlePagesProp < 1) {
    numberMiddlePages = 1;
    console.warn(
      // eslint-disable-next-line max-len
      'Property "numberMiddlePages" should not be < 1. One middle page button will be shown. Set "numberMiddlePages" >= 1 to remove this warning.'
    );
  } else
    numberMiddlePages = numberMiddlePagesProp;
  var startingMiddlePages;
  if (numberMiddlePages % 2)
    startingMiddlePages = Math.min(activePage - Math.floor(numberMiddlePages / 2), totalPages - numberEdgePages - numberMiddlePages);
  else
    startingMiddlePages = Math.min(activePage - Math.floor(numberMiddlePages / 2) + 1, totalPages - numberEdgePages - numberMiddlePages);
  var middlePagesBegin = Math.max(startingMiddlePages, numberEdgePages + 2);
  var middlePagesEnd = Math.min(Math.max(activePage + Math.floor(numberMiddlePages / 2), numberEdgePages + numberMiddlePages + 1), endPages.length > 0 ? endPages[0] - 2 : totalPages - 1);
  var middlePages = getPageIndices(middlePagesBegin, middlePagesEnd);
  var beginFlex = [];
  if (middlePagesBegin > numberEdgePages + 2)
    beginFlex = ["more-prev"];
  else if (numberEdgePages + 1 < totalPages - numberEdgePages)
    beginFlex = [numberEdgePages + 1];
  var endFlex = [];
  if (middlePagesEnd < totalPages - numberEdgePages - 1)
    endFlex = ["more-next"];
  else if (totalPages - numberEdgePages > numberEdgePages)
    endFlex = [totalPages - numberEdgePages];
  var getItemIndices = function getItemIndices2(nextPage) {
    var startIndex = step * (nextPage - 1);
    var endIndex = startIndex + step;
    return {
      startIndex,
      endIndex
    };
  };
  var handleClick = function handleClick2(event, nextPage) {
    setActivePage(nextPage);
    if (onView)
      onView(_extends44({}, view, {
        page: nextPage
      }));
    if (onChange) {
      event.persist();
      var adjustedEvent = event;
      adjustedEvent.page = nextPage;
      var _getItemIndices = getItemIndices(nextPage), startIndex = _getItemIndices.startIndex, endIndex = _getItemIndices.endIndex;
      adjustedEvent.startIndex = startIndex;
      adjustedEvent.endIndex = endIndex;
      onChange(adjustedEvent);
    }
  };
  var NextIcon = theme.pagination.icons.next;
  var PreviousIcon = theme.pagination.icons.previous;
  var iconColor = theme.pagination.icons.color;
  var navProps = {
    next: {
      // https://a11y-style-guide.com/style-guide/section-navigation.html#kssref-navigation-pagination
      "aria-disabled": activePage === totalPages ? "true" : void 0,
      disabled: activePage === totalPages || !total,
      icon: import_react50.default.createElement(NextIcon, {
        color: iconColor
      }),
      onClick: function onClick(event) {
        var nextPage = activePage + 1;
        handleClick(event, nextPage);
      },
      label: void 0
    },
    previous: {
      "aria-disabled": activePage === 1 ? "true" : void 0,
      disabled: activePage === 1 || !total,
      icon: import_react50.default.createElement(PreviousIcon, {
        color: iconColor
      }),
      onClick: function onClick(event) {
        var previousPage = activePage - 1;
        handleClick(event, previousPage);
      },
      label: void 0
    }
  };
  var controls = ["previous"].concat(beginPages, beginFlex, middlePages, endFlex, endPages, ["next"]);
  controls = controls.map(function(control) {
    return _extends44({
      active: control === activePage,
      a11yTitle: typeof control === "number" ? "Go to page " + control : "Go to " + control + " page",
      // https://a11y-style-guide.com/style-guide/section-navigation.html#kssref-navigation-pagination
      // https://www.w3.org/TR/wai-aria-1.1/#aria-current
      "aria-current": control === activePage ? "page" : void 0,
      control,
      onClick: function onClick(event) {
        handleClick(event, control);
      },
      separator: control === "more-prev" || control === "more-next"
    }, navProps[control]);
  });
  return import_react50.default.createElement(StyledPaginationContainer, _extends44({
    flex: false
  }, theme.pagination.container, rest), import_react50.default.createElement(Nav, {
    a11yTitle: ariaLabel || a11yTitle || "Pagination Navigation",
    ref
  }, import_react50.default.createElement(Box, _extends44({
    as: "ul"
  }, theme.pagination.controls), controls.map(function(control, index) {
    return (
      /* Using index as key (as opposed to a unique id) seems to
       * help React prioritize rendering the updated controls as
       * desired. Whereas, using a unique id resulted in rendering
       * the active control with an undesired lag. */
      // eslint-disable-next-line react/no-array-index-key
      import_react50.default.createElement(PageControl, _extends44({
        key: index,
        size
      }, control))
    );
  }))));
});
Pagination.displayName = "Pagination";
Pagination.propTypes = PaginationPropTypes;

// node_modules/grommet/es6/components/Cards/propTypes.js
var import_prop_types22 = __toESM(require_prop_types());
function _extends45() {
  _extends45 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends45.apply(this, arguments);
}
var PropType21 = {};
if (true) {
  PropType21 = _extends45({}, genericProps, {
    as: import_prop_types22.default.string,
    data: import_prop_types22.default.arrayOf(import_prop_types22.default.oneOfType([import_prop_types22.default.string, import_prop_types22.default.shape({})])),
    children: import_prop_types22.default.func,
    onMore: import_prop_types22.default.func,
    paginate: import_prop_types22.default.oneOfType([import_prop_types22.default.bool, import_prop_types22.default.object]),
    show: import_prop_types22.default.oneOfType([import_prop_types22.default.number, import_prop_types22.default.shape({
      page: import_prop_types22.default.number
    })]),
    step: import_prop_types22.default.number
  });
}
var CardsPropTypes = PropType21;

// node_modules/grommet/es6/components/Cards/Cards.js
var _excluded24 = ["as", "children", "data", "margin", "onMore", "pad", "paginate", "show", "size", "step"];
function _extends46() {
  _extends46 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends46.apply(this, arguments);
}
function _objectWithoutPropertiesLoose23(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var emptyData = [];
var Cards = import_react51.default.forwardRef(function(_ref, ref) {
  var _ref$as = _ref.as, as = _ref$as === void 0 ? "ul" : _ref$as, children2 = _ref.children, dataProp = _ref.data, margin = _ref.margin, onMore = _ref.onMore, pad = _ref.pad, paginate = _ref.paginate, showProp = _ref.show, _ref$size = _ref.size, size = _ref$size === void 0 ? "small" : _ref$size, _ref$step = _ref.step, step = _ref$step === void 0 ? paginate ? 50 : void 0 : _ref$step, rest = _objectWithoutPropertiesLoose23(_ref, _excluded24);
  var theme = (0, import_react51.useContext)(Me);
  var _useContext = (0, import_react51.useContext)(DataContext), contextData = _useContext.data;
  var data = dataProp || contextData || emptyData;
  var _usePagination = usePagination(_extends46({
    data,
    page: normalizeShow(showProp, step),
    step
  }, paginate)), items = _usePagination[0], paginationProps = _usePagination[1];
  var Container2 = paginate ? Box : import_react51.Fragment;
  var containerProps = paginate ? _extends46({}, theme.cards.container, {
    pad,
    margin
  }) : void 0;
  return import_react51.default.createElement(Container2, containerProps, import_react51.default.createElement(Grid, _extends46({
    ref,
    as,
    columns: size,
    gap: "medium",
    margin: !paginate && margin || "none",
    pad: !paginate && pad || "none"
  }, rest), import_react51.default.createElement(InfiniteScroll, {
    items: !paginate ? data : items,
    onMore,
    show: !paginate ? showProp : void 0,
    step,
    renderMarker: function renderMarker(marker) {
      return import_react51.default.createElement(Box, {
        as: "li",
        flex: false
      }, marker);
    }
  }, function(item, index) {
    var _ref2, _ref3;
    return children2 ? children2(item, index) : import_react51.default.createElement(Card, {
      key: index.toString(),
      as: as === "ul" ? "li" : void 0
    }, import_react51.default.createElement(CardBody, null, (_ref2 = (_ref3 = typeof item === "string" && item) != null ? _ref3 : typeof item === "object" && Object.values(item)[0]) != null ? _ref2 : index));
  })), paginate && data.length > step && items && items.length ? import_react51.default.createElement(Pagination, _extends46({
    alignSelf: "end"
  }, paginationProps)) : null);
});
Cards.displayName = "Cards";
Cards.propTypes = CardsPropTypes;

// node_modules/grommet/es6/components/Carousel/Carousel.js
var import_react55 = __toESM(require_react());

// node_modules/grommet/es6/contexts/ResponsiveContext/ResponsiveContext.js
var import_react52 = __toESM(require_react());

// node_modules/grommet/es6/contexts/ResponsiveContext/propTypes.js
var import_prop_types23 = __toESM(require_prop_types());
var PropType22 = {};
if (true) {
  PropType22 = {
    children: import_prop_types23.default.func
  };
}
var ResponsiveContextPropTypes = PropType22;

// node_modules/grommet/es6/contexts/ResponsiveContext/ResponsiveContext.js
var ResponsiveContext = import_react52.default.createContext(void 0);
ResponsiveContext.propTypes = ResponsiveContextPropTypes;

// node_modules/grommet/es6/contexts/ThemeContext/ThemeContext.js
var import_react53 = __toESM(require_react());
var import_prop_types25 = __toESM(require_prop_types());
init_styled_components_browser_esm();

// node_modules/grommet/es6/contexts/ThemeContext/propTypes.js
var import_prop_types24 = __toESM(require_prop_types());
var PropType23 = {};
if (true) {
  PropType23 = {
    value: import_prop_types24.default.shape({})
  };
}
var ThemeContextPropTypes = PropType23;

// node_modules/grommet/es6/contexts/ThemeContext/ThemeContext.js
Me.Extend = function(_ref) {
  var children2 = _ref.children, value = _ref.value;
  return import_react53.default.createElement(Me.Consumer, null, function(theme) {
    return import_react53.default.createElement(Me.Provider, {
      value: deepMerge(theme, value)
    }, children2);
  });
};
Me.Extend.propTypes = {
  children: import_prop_types25.default.node.isRequired,
  value: import_prop_types25.default.shape({}).isRequired
};
Me.propTypes = ThemeContextPropTypes;

// node_modules/grommet/es6/components/Carousel/StyledCarousel.js
init_styled_components_browser_esm();
var StyledCarouselContainer = styled_components_browser_esm_default(Box).withConfig({
  displayName: "StyledCarousel__StyledCarouselContainer",
  componentId: "sc-c2hjel-0"
})(["position:relative;overflow:hidden;"]);
var animationKeyframes = {
  // Slide Right = Previous or Backward
  slideRightPrevious: We(["0%{transform:translateX(0%)}100%{transform:translateX(100%)}"]),
  slideRightCurrent: We(["0%{transform:translateX(-100%)}100%{transform:translateX(0%)}"]),
  // Slide Left = Next or Forward
  slideLeftPrevious: We(["0%{transform:translateX(0%)}100%{transform:translateX(-100%)}"]),
  slideLeftCurrent: We(["0%{transform:translateX(100%)}100%{transform:translateX(0%)}"])
};
var StyledCarouselChild = styled_components_browser_esm_default(Box).withConfig({
  displayName: "StyledCarousel__StyledCarouselChild",
  componentId: "sc-c2hjel-1"
})(["visibility:", ";position:", ";width:100%;height:100%;overflow:hidden;", ";animation-fill-mode:both;"], function(props) {
  return props.visibilityProp;
}, function(props) {
  return props.positionProp;
}, function(props) {
  return props.animationType ? Ae(["animation:", " ", "s ease-in-out;"], animationKeyframes[props.animationType], props.animationDuration / 1e3) : "";
});
var StyledControl = styled_components_browser_esm_default(Box).withConfig({
  displayName: "StyledCarousel__StyledControl",
  componentId: "sc-c2hjel-2"
})(["position:absolute;z-index:1;", " align-items:center;justify-content:center;"], function(props) {
  return props.offsetProp + ": 0;";
});

// node_modules/grommet/es6/components/Carousel/CarouselChild.js
var import_react54 = __toESM(require_react());

// node_modules/grommet/es6/components/Carousel/propTypes.js
var import_prop_types26 = __toESM(require_prop_types());
function _extends47() {
  _extends47 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends47.apply(this, arguments);
}
var CarouselPropType;
if (true) {
  CarouselPropType = _extends47({}, genericProps, {
    activeChild: import_prop_types26.default.number,
    initialChild: import_prop_types26.default.number,
    fill: import_prop_types26.default.bool,
    wrap: import_prop_types26.default.bool,
    controls: import_prop_types26.default.oneOfType([import_prop_types26.default.oneOf(["arrows", "selectors"]), import_prop_types26.default.bool]),
    onChild: import_prop_types26.default.func,
    width: widthPropType,
    height: heightPropType,
    play: import_prop_types26.default.number
  });
}
var CarouselPropTypes = CarouselPropType;
var CarouselChildPropType;
if (true) {
  CarouselChildPropType = {
    animationDuration: import_prop_types26.default.number.isRequired,
    fill: import_prop_types26.default.bool,
    index: import_prop_types26.default.number.isRequired,
    activeIndex: import_prop_types26.default.number.isRequired,
    priorActiveIndex: import_prop_types26.default.number,
    direction: import_prop_types26.default.oneOf(["left", "right"])
  };
}
var CarouselChildPropTypes = CarouselChildPropType;

// node_modules/grommet/es6/components/Carousel/CarouselChild.js
var CarouselChild = function CarouselChild2(_ref) {
  var animationDuration2 = _ref.animationDuration, fill = _ref.fill, index = _ref.index, activeIndex = _ref.activeIndex, priorActiveIndex = _ref.priorActiveIndex, direction = _ref.direction, children2 = _ref.children;
  var _useState = (0, import_react54.useState)(void 0), animation = _useState[0], setAnimation = _useState[1];
  var _useState2 = (0, import_react54.useState)(index === activeIndex ? "visible" : "hidden"), visibility = _useState2[0], setVisibility = _useState2[1];
  (0, import_react54.useEffect)(function() {
    var timer;
    if (index === activeIndex) {
      if (priorActiveIndex !== void 0) {
        setAnimation(direction === "left" ? "slideLeftCurrent" : "slideRightCurrent");
      }
      setVisibility("visible");
    } else if (index === priorActiveIndex) {
      setAnimation(direction === "left" ? "slideLeftPrevious" : "slideRightPrevious");
      timer = setTimeout(function() {
        return setVisibility("hidden");
      }, animationDuration2);
    }
    return function() {
      return clearTimeout(timer);
    };
  }, [activeIndex, priorActiveIndex, index, direction, animationDuration2]);
  var position = index === 0 ? "relative" : "absolute";
  return import_react54.default.createElement(StyledCarouselChild, {
    fill,
    visibilityProp: visibility,
    positionProp: position,
    animationType: animation,
    animationDuration: animationDuration2
  }, import_react54.default.createElement(Box, {
    fill
  }, children2));
};
CarouselChild.propTypes = CarouselChildPropTypes;
CarouselChild.defaultProps = {
  fill: false,
  play: void 0,
  priorActiveIndex: void 0
};

// node_modules/grommet/es6/components/Carousel/Carousel.js
var _excluded25 = ["activeChild", "initialChild", "onChild", "play", "children", "controls", "height", "fill", "width", "onFocus", "onBlur", "wrap"];
function _extends48() {
  _extends48 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends48.apply(this, arguments);
}
function _objectWithoutPropertiesLoose24(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var Carousel = function Carousel2(_ref) {
  var activeChild = _ref.activeChild, initialChild = _ref.initialChild, onChild = _ref.onChild, play = _ref.play, children2 = _ref.children, controls = _ref.controls, height = _ref.height, fill = _ref.fill, width = _ref.width, onFocus = _ref.onFocus, onBlur = _ref.onBlur, wrap = _ref.wrap, rest = _objectWithoutPropertiesLoose24(_ref, _excluded25);
  var theme = (0, import_react55.useContext)(Me) || defaultProps2.theme;
  var _useContext = (0, import_react55.useContext)(MessageContext), format3 = _useContext.format;
  var timerRef = (0, import_react55.useRef)();
  var animationDuration2 = (0, import_react55.useMemo)(function() {
    return play && play < theme.carousel.animation.duration ? play : theme.carousel.animation.duration;
  }, [play, theme.carousel.animation.duration]);
  var _useState = (0, import_react55.useState)({
    activeIndex: activeChild !== void 0 ? activeChild : initialChild
  }), indexes = _useState[0], setIndexes = _useState[1];
  var _useState2 = (0, import_react55.useState)(activeChild), activeChildState = _useState2[0], setActiveChildState = _useState2[1];
  var _useState3 = (0, import_react55.useState)(), direction = _useState3[0], setDirection = _useState3[1];
  var _useState4 = (0, import_react55.useState)(false), inTransition = _useState4[0], setInTransition = _useState4[1];
  var activeIndex = indexes.activeIndex, priorActiveIndex = indexes.priorActiveIndex;
  var lastIndex = import_react55.Children.count(children2) - 1;
  var onChildChange = (0, import_react55.useCallback)(function(index) {
    if (onChild) {
      onChild(index);
    }
  }, [onChild]);
  var onRight = (0, import_react55.useCallback)(function() {
    if (inTransition)
      return;
    clearInterval(timerRef.current);
    var nextActiveIndex = activeIndex < lastIndex ? activeIndex + 1 : 0;
    setIndexes({
      activeIndex: nextActiveIndex,
      priorActiveIndex: activeIndex
    });
    setInTransition(true);
    setDirection("left");
    onChildChange(nextActiveIndex);
  }, [activeIndex, inTransition, lastIndex, onChildChange]);
  var onLeft = (0, import_react55.useCallback)(function() {
    if (inTransition)
      return;
    clearInterval(timerRef.current);
    var nextActiveIndex = activeIndex === 0 ? lastIndex : activeIndex - 1;
    setIndexes({
      activeIndex: nextActiveIndex,
      priorActiveIndex: activeIndex
    });
    setInTransition(true);
    setDirection("right");
    onChildChange(nextActiveIndex);
  }, [activeIndex, inTransition, lastIndex, onChildChange]);
  var onSelect = (0, import_react55.useCallback)(function(index) {
    return function() {
      if (!inTransition && activeIndex !== index) {
        clearInterval(timerRef.current);
        setIndexes({
          activeIndex: index,
          priorActiveIndex: activeIndex
        });
        setInTransition(true);
        setDirection(index > activeIndex ? "left" : "right");
        onChildChange(index);
      }
    };
  }, [activeIndex, inTransition, onChildChange]);
  var onControlledNavigation = (0, import_react55.useCallback)(function() {
    if (inTransition || activeChild === activeChildState || activeChild === activeIndex || activeChild === void 0 || activeChild < 0 || activeChild > lastIndex)
      return;
    setDirection(activeChild > activeIndex ? "left" : "right");
    setInTransition(true);
    setIndexes({
      activeIndex: activeChild,
      priorActiveIndex: activeIndex
    });
    setActiveChildState(activeChild);
    onChildChange(activeChild);
  }, [activeChild, activeChildState, activeIndex, inTransition, lastIndex, onChildChange]);
  (0, import_react55.useEffect)(function() {
    var transitionTimer;
    if (inTransition) {
      transitionTimer = setTimeout(function() {
        setInTransition(false);
      }, animationDuration2);
    }
    return function() {
      return clearTimeout(transitionTimer);
    };
  }, [inTransition, setInTransition, animationDuration2]);
  (0, import_react55.useEffect)(function() {
    if (play && (wrap !== false || activeIndex < lastIndex)) {
      var timer = setInterval(function() {
        var nextActiveIndex = activeIndex < lastIndex ? activeIndex + 1 : 0;
        setIndexes({
          activeIndex: nextActiveIndex,
          priorActiveIndex: activeIndex
        });
        setInTransition(true);
        setDirection("left");
        onChildChange(nextActiveIndex);
      }, play);
      timerRef.current = timer;
      return function() {
        clearTimeout(timer);
      };
    }
    return function() {
    };
  }, [activeIndex, play, children2, lastIndex, onChildChange, wrap]);
  (0, import_react55.useEffect)(function() {
    onControlledNavigation(activeIndex, activeChild, activeChildState, inTransition);
  }, [onControlledNavigation, activeIndex, activeChild, activeChildState, inTransition]);
  var showArrows = controls && controls !== "selectors";
  var showSelectors = controls && controls !== "arrows";
  var CurrentIcon = theme.carousel.icons.current;
  var iconColor = normalizeColor(theme.carousel.icons.color || "control", theme);
  var selectors = [];
  var wrappedChildren = import_react55.Children.map(children2, function(child, index) {
    selectors.push(import_react55.default.createElement(Button, {
      a11yTitle: format3({
        id: "carousel.jump",
        values: {
          slide: index + 1
        }
      }),
      key: index,
      icon: import_react55.default.createElement(CurrentIcon, {
        color: activeIndex === index ? iconColor : void 0
      }),
      onClick: onSelect(index)
    }));
    return import_react55.default.createElement(CarouselChild, {
      animationDuration: animationDuration2,
      fill: fill || !!height || !!width,
      index,
      activeIndex,
      priorActiveIndex,
      direction
    }, child);
  });
  var NextIcon = theme.carousel.icons.next;
  var PreviousIcon = theme.carousel.icons.previous;
  var nextIconDisabled = !wrap && activeIndex >= lastIndex;
  var previousIconDisabled = !wrap && activeIndex <= 0;
  return import_react55.default.createElement(Keyboard, {
    onLeft,
    onRight
  }, import_react55.default.createElement(StyledCarouselContainer, _extends48({
    fill,
    height,
    width
  }, rest), showArrows && import_react55.default.createElement(StyledControl, {
    offsetProp: "left",
    fill: "vertical"
  }, import_react55.default.createElement(Button, {
    fill: "vertical",
    icon: import_react55.default.createElement(PreviousIcon, {
      color: normalizeColor(previousIconDisabled ? theme.carousel.disabled.icons.color : theme.carousel.icons.color, theme)
    }),
    a11yTitle: format3({
      id: "carousel.previous",
      values: {
        slide: activeIndex
      }
    }),
    plain: true,
    disabled: previousIconDisabled,
    onClick: onLeft,
    hoverIndicator: true
  })), wrappedChildren, showSelectors && import_react55.default.createElement(StyledControl, {
    offsetProp: "bottom",
    fill: "horizontal"
  }, import_react55.default.createElement(Box, {
    justify: "end",
    fill: !showArrows && "horizontal"
  }, import_react55.default.createElement(Box, {
    direction: "row",
    justify: "center"
  }, selectors))), showArrows && import_react55.default.createElement(StyledControl, {
    offsetProp: "right",
    fill: "vertical"
  }, import_react55.default.createElement(Button, {
    fill: "vertical",
    icon: import_react55.default.createElement(NextIcon, {
      color: normalizeColor(nextIconDisabled ? theme.carousel.disabled.icons.color : theme.carousel.icons.color, theme)
    }),
    a11yTitle: format3({
      id: "carousel.next",
      values: {
        slide: activeIndex + 2
      }
    }),
    plain: true,
    disabled: nextIconDisabled,
    onClick: onRight,
    hoverIndicator: true
  }))));
};
Carousel.defaultProps = {
  initialChild: 0,
  controls: true
};
Object.setPrototypeOf(Carousel.defaultProps, defaultProps2);
Carousel.displayName = "Carousel";
Carousel.propTypes = CarouselPropTypes;

// node_modules/grommet/es6/components/CheckBoxGroup/CheckBoxGroup.js
var import_react58 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/CheckBox/CheckBox.js
var import_react57 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/Form/FormContext.js
var import_react56 = __toESM(require_react());
var useFormInput = function useFormInput2(_ref) {
  var valueProp = _ref.value, initialValue = _ref.initialValue;
  var _useState = (0, import_react56.useState)(valueProp !== void 0 ? valueProp : initialValue), value = _useState[0], setValue = _useState[1];
  return [valueProp !== void 0 ? valueProp : value, function(nextValue) {
    if (initialValue !== void 0)
      setValue(nextValue);
  }];
};
var useFormField = function useFormField2(_ref2) {
  var error = _ref2.error, info = _ref2.info, disabled = _ref2.disabled;
  return {
    error,
    info,
    disabled
  };
};
var FormContext = import_react56.default.createContext({
  useFormField,
  useFormInput,
  noForm: true
});

// node_modules/grommet/es6/components/CheckBox/propTypes.js
var import_prop_types27 = __toESM(require_prop_types());
var PropType24 = {};
if (true) {
  PropType24 = {
    a11yTitle: import_prop_types27.default.string,
    checked: import_prop_types27.default.bool,
    disabled: import_prop_types27.default.bool,
    fill: import_prop_types27.default.bool,
    id: import_prop_types27.default.string,
    label: import_prop_types27.default.node,
    name: import_prop_types27.default.string,
    onChange: import_prop_types27.default.func,
    pad: padPropType,
    reverse: import_prop_types27.default.bool,
    toggle: import_prop_types27.default.bool,
    indeterminate: import_prop_types27.default.bool
  };
}
var CheckBoxPropTypes = PropType24;

// node_modules/grommet/es6/components/CheckBox/StyledCheckBox.js
init_styled_components_browser_esm();
var fillStyle10 = function fillStyle11() {
  return "\n      width: auto;\n      height: 100%;\n      max-width: none;\n      flex: 1 0 auto;\n      justify-content: space-between;\n    ";
};
var disabledStyle4 = "\n  opacity: 0.5;\n  cursor: default;\n";
var hoverStyle2 = Ae([":hover input:not([disabled]) + div,:hover input:not([disabled]) + span{border-color:", ";", "}:hover{background-color:", ";}"], function(props) {
  var _props$theme$checkBox, _props$theme$checkBox2;
  return normalizeColor((_props$theme$checkBox = props.theme.checkBox.hover) == null ? void 0 : (_props$theme$checkBox2 = _props$theme$checkBox.border) == null ? void 0 : _props$theme$checkBox2.color, props.theme);
}, function(props) {
  var _props$theme$checkBox3;
  return (_props$theme$checkBox3 = props.theme.checkBox.hover) == null ? void 0 : _props$theme$checkBox3.extend;
}, function(props) {
  var _props$theme$checkBox4, _props$theme$checkBox5;
  return normalizeColor(!props.disabled && ((_props$theme$checkBox4 = props.theme.checkBox.hover) == null ? void 0 : (_props$theme$checkBox5 = _props$theme$checkBox4.background) == null ? void 0 : _props$theme$checkBox5.color), props.theme);
});
var StyledCheckBoxIcon = styled_components_browser_esm_default.svg.withConfig({
  displayName: "StyledCheckBox__StyledCheckBoxIcon",
  componentId: "sc-1dbk5ju-0"
})(["box-sizing:border-box;stroke-width:", ";stroke:", ";width:", ";height:", ";", ";"], function(props) {
  return props.theme.checkBox.check.thickness;
}, function(props) {
  return normalizeColor(props.theme.checkBox.color || "control", props.theme);
}, function(props) {
  return props.theme.checkBox.icon.size || props.theme.checkBox.size;
}, function(props) {
  return props.theme.checkBox.icon.size || props.theme.checkBox.size;
}, function(props) {
  return props.theme.checkBox.icon.extend;
});
StyledCheckBoxIcon.defaultProps = {};
Object.setPrototypeOf(StyledCheckBoxIcon.defaultProps, defaultProps2);
var StyledCheckBoxContainer = styled_components_browser_esm_default.label.withConfig({
  displayName: "StyledCheckBox__StyledCheckBoxContainer",
  componentId: "sc-1dbk5ju-1"
})(["display:flex;flex-direction:row;align-items:", ";user-select:none;", " ", " ", " ", " ", " ", " ", ""], function(props) {
  return typeof props.label === "string" ? props.theme.checkBox.label.align : void 0;
}, function(props) {
  return props.fillProp ? fillStyle10() : "width: fit-content;";
}, function(props) {
  return (props.pad || props.theme.checkBox.pad) && edgeStyle("padding", props.pad || props.theme.checkBox.pad, props.responsive, props.theme.box.responsiveBreakpoint, props.theme);
}, function(props) {
  return props.disabled && disabledStyle4;
}, function(props) {
  return !props.disabled && "cursor: pointer;";
}, hoverStyle2, function(props) {
  var _props$theme$checkBox6, _props$theme$checkBox7, _props$theme$checkBox8, _props$theme$checkBox9;
  return props.focus && !props.focusIndicator && "\n    input:not([disabled]) + div,\n    input:not([disabled]) + span {\n      border-color: " + normalizeColor((_props$theme$checkBox6 = props.theme.checkBox.hover) == null ? void 0 : (_props$theme$checkBox7 = _props$theme$checkBox6.border) == null ? void 0 : _props$theme$checkBox7.color, props.theme) + ";\n    }\n\n    background-color: " + normalizeColor(!props.disabled && ((_props$theme$checkBox8 = props.theme.checkBox.hover) == null ? void 0 : (_props$theme$checkBox9 = _props$theme$checkBox8.background) == null ? void 0 : _props$theme$checkBox9.color), props.theme) + ";";
}, function(props) {
  return props.theme.checkBox.extend;
});
StyledCheckBoxContainer.defaultProps = {};
Object.setPrototypeOf(StyledCheckBoxContainer.defaultProps, defaultProps2);
var StyledCheckBoxInput = styled_components_browser_esm_default.input.withConfig({
  displayName: "StyledCheckBox__StyledCheckBoxInput",
  componentId: "sc-1dbk5ju-2"
})(["opacity:0;-moz-appearance:none;width:0;height:0;margin:0;", ":checked + span > span{", ":calc( ", " - ", " );background:", ";}"], function(props) {
  return !props.disabled && "cursor: pointer;";
}, function(props) {
  return !props.theme.dir ? "left" : "right";
}, function(props) {
  return props.theme.checkBox.toggle.size;
}, function(props) {
  return props.theme.checkBox.size;
}, function(props) {
  return normalizeColor(props.theme.checkBox.color || "control", props.theme);
});
StyledCheckBoxInput.defaultProps = {};
Object.setPrototypeOf(StyledCheckBoxInput.defaultProps, defaultProps2);
var StyledCheckBoxBox = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledCheckBox__StyledCheckBoxBox",
  componentId: "sc-1dbk5ju-3"
})(["", ";", ";"], function(props) {
  return props.focus && props.focusIndicator && focusStyle();
}, function(props) {
  return props.theme.checkBox.check.extend;
});
StyledCheckBoxBox.defaultProps = {};
Object.setPrototypeOf(StyledCheckBoxBox.defaultProps, defaultProps2);
var StyledCheckBoxToggle = styled_components_browser_esm_default.span.withConfig({
  displayName: "StyledCheckBox__StyledCheckBoxToggle",
  componentId: "sc-1dbk5ju-4"
})(["box-sizing:border-box;vertical-align:middle;display:inline-block;width:", ";height:", ";border:", " solid;border-color:", ";border-radius:", ";background-color:", ";", ";", ";"], function(props) {
  return props.theme.checkBox.toggle.size;
}, function(props) {
  return props.theme.checkBox.size;
}, function(props) {
  return props.theme.checkBox.border.width;
}, function(props) {
  return normalizeColor(props.theme.checkBox.border.color, props.theme);
}, function(props) {
  return props.theme.checkBox.toggle.radius;
}, function(props) {
  return props.theme.checkBox.toggle.background ? normalizeColor(props.theme.checkBox.toggle.background, props.theme) : "transparent";
}, function(props) {
  return props.focus && props.focusIndicator && focusStyle();
}, function(props) {
  return props.theme.checkBox.toggle.extend;
});
StyledCheckBoxToggle.defaultProps = {};
Object.setPrototypeOf(StyledCheckBoxToggle.defaultProps, defaultProps2);
var StyledCheckBoxKnob = styled_components_browser_esm_default.span.withConfig({
  displayName: "StyledCheckBox__StyledCheckBoxKnob",
  componentId: "sc-1dbk5ju-5"
})(["box-sizing:border-box;position:relative;display:inherit;top:-", ";", ":-", ";transition:all 0.3s;width:", ";height:", ";background:", ";border-radius:", ";", ";"], function(props) {
  return props.theme.checkBox.border.width;
}, function(props) {
  return !props.theme.dir ? "left" : "right";
}, function(props) {
  return props.theme.checkBox.border.width;
}, function(props) {
  return props.theme.checkBox.size;
}, function(props) {
  return props.theme.checkBox.size;
}, function(props) {
  return normalizeColor(props.theme.checkBox.toggle.color, props.theme);
}, function(props) {
  return props.theme.checkBox.toggle.radius;
}, function(props) {
  return props.theme.checkBox.toggle.knob.extend;
});
StyledCheckBoxKnob.defaultProps = {};
Object.setPrototypeOf(StyledCheckBoxKnob.defaultProps, defaultProps2);
var StyledCheckBox = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledCheckBox",
  componentId: "sc-1dbk5ju-6"
})(["flex-shrink:0;"]);
StyledCheckBox.defaultProps = {};
Object.setPrototypeOf(StyledCheckBox.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/CheckBox/CheckBox.js
var _excluded26 = ["a11yTitle", "aria-label", "checked", "children", "defaultChecked", "disabled", "fill", "focus", "focusIndicator", "id", "label", "name", "onBlur", "onChange", "onFocus", "onMouseEnter", "onMouseLeave", "onMouseOut", "onMouseOver", "pad", "reverse", "toggle", "indeterminate"];
function _extends49() {
  _extends49 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends49.apply(this, arguments);
}
function _objectWithoutPropertiesLoose25(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var stopLabelClick = function stopLabelClick2(event) {
  if (event.target.type !== "checkbox") {
    event.stopPropagation();
  }
};
var CheckBox = (0, import_react57.forwardRef)(function(_ref, ref) {
  var _ref2;
  var a11yTitle = _ref.a11yTitle, ariaLabel = _ref["aria-label"], checkedProp = _ref.checked, children2 = _ref.children, _ref$defaultChecked = _ref.defaultChecked, defaultChecked = _ref$defaultChecked === void 0 ? false : _ref$defaultChecked, disabled = _ref.disabled, fill = _ref.fill, focusProp = _ref.focus, _ref$focusIndicator = _ref.focusIndicator, focusIndicator = _ref$focusIndicator === void 0 ? true : _ref$focusIndicator, id = _ref.id, label = _ref.label, name = _ref.name, _onBlur = _ref.onBlur, _onChange = _ref.onChange, _onFocus = _ref.onFocus, _onMouseEnter = _ref.onMouseEnter, _onMouseLeave = _ref.onMouseLeave, _onMouseOut = _ref.onMouseOut, _onMouseOver = _ref.onMouseOver, pad = _ref.pad, reverse = _ref.reverse, toggle = _ref.toggle, indeterminate = _ref.indeterminate, rest = _objectWithoutPropertiesLoose25(_ref, _excluded26);
  var theme = (0, import_react57.useContext)(Me) || defaultProps2.theme;
  var formContext = (0, import_react57.useContext)(FormContext);
  var _formContext$useFormI = formContext.useFormInput({
    name,
    value: checkedProp,
    initialValue: defaultChecked
  }), checked = _formContext$useFormI[0], setChecked = _formContext$useFormI[1];
  var _useState = (0, import_react57.useState)(focusProp), focus = _useState[0], setFocus = _useState[1];
  (0, import_react57.useEffect)(function() {
    if (disabled && focusProp)
      setFocus(false);
    else
      setFocus(focusProp);
  }, [disabled, focusProp]);
  (0, import_react57.useEffect)(function() {
    if (checkedProp && indeterminate) {
      console.warn('Checkbox cannot be "checked" and "indeterminate" at the same time.');
    }
    if (toggle && indeterminate) {
      console.warn('Checkbox of type toggle does not have "indeterminate" state.');
    }
  }, [checkedProp, toggle, indeterminate]);
  var themeableProps = {
    checked,
    disabled,
    focus,
    // when contained in a FormField, focusIndicator = false,
    // so that the FormField has focus style. However, we still
    // need to visually indicate when a CheckBox is active.
    // If focus = true but focusIndicator = false,
    // we will apply the hover treament.
    focusIndicator,
    reverse,
    toggle,
    indeterminate
  };
  var hidden;
  if (disabled && checked) {
    hidden = import_react57.default.createElement("input", {
      name,
      type: "hidden",
      value: "true"
    });
  }
  var _theme$checkBox$icons = theme.checkBox.icons, CheckedIcon = _theme$checkBox$icons.checked, IndeterminateIcon = _theme$checkBox$icons.indeterminate;
  var borderColor = normalizeColor(theme.checkBox.border.color, theme);
  if (checked) {
    borderColor = normalizeColor(theme.checkBox.color || "control", theme);
  }
  var visual = toggle ? import_react57.default.createElement(StyledCheckBoxToggle, themeableProps, import_react57.default.createElement(StyledCheckBoxKnob, themeableProps)) : import_react57.default.createElement(StyledCheckBoxBox, _extends49({
    as: Box,
    align: "center",
    justify: "center",
    width: theme.checkBox.size,
    height: theme.checkBox.size,
    border: {
      size: theme.checkBox.border.width,
      color: borderColor
    },
    round: theme.checkBox.check.radius
  }, themeableProps), !indeterminate && checked && (CheckedIcon ? import_react57.default.createElement(CheckedIcon, {
    theme,
    as: StyledCheckBoxIcon
  }) : import_react57.default.createElement(StyledCheckBoxIcon, _extends49({
    theme,
    viewBox: "0 0 24 24",
    preserveAspectRatio: "xMidYMid meet"
  }, themeableProps), import_react57.default.createElement("path", {
    fill: "none",
    d: "M6,11.3 L10.3,16 L18,6.2"
  }))), !checked && indeterminate && (IndeterminateIcon ? import_react57.default.createElement(IndeterminateIcon, {
    theme,
    as: StyledCheckBoxIcon
  }) : import_react57.default.createElement(StyledCheckBoxIcon, _extends49({
    theme,
    viewBox: "0 0 24 24",
    preserveAspectRatio: "xMidYMid meet"
  }, themeableProps), import_react57.default.createElement("path", {
    fill: "none",
    d: "M6,12 L18,12"
  }))));
  var side = !reverse !== !theme.dir ? "left" : "right";
  var checkBoxNode = import_react57.default.createElement(StyledCheckBox, _extends49({
    as: Box,
    align: "center",
    justify: "center",
    margin: label && (_ref2 = {}, _ref2[side] = theme.checkBox.gap || "small", _ref2)
  }, themeableProps), import_react57.default.createElement(StyledCheckBoxInput, _extends49({
    "aria-label": ariaLabel || a11yTitle
  }, rest, {
    ref,
    type: "checkbox"
  }, removeUndefined({
    id,
    name,
    checked,
    disabled
  }), themeableProps, {
    onFocus: function onFocus(event) {
      setFocus(true);
      if (_onFocus)
        _onFocus(event);
    },
    onBlur: function onBlur(event) {
      setFocus(false);
      if (_onBlur)
        _onBlur(event);
    },
    onChange: function onChange(event) {
      setChecked(event.target.checked);
      if (_onChange)
        _onChange(event);
    }
  })), children2 ? children2({
    checked,
    indeterminate
  }) : visual, hidden);
  var normalizedLabel = typeof label === "string" ? import_react57.default.createElement("span", null, label) : label;
  var first = reverse ? normalizedLabel : checkBoxNode;
  var second = reverse ? checkBoxNode : normalizedLabel;
  return import_react57.default.createElement(StyledCheckBoxContainer, _extends49({
    fillProp: fill,
    reverse
  }, removeUndefined({
    htmlFor: id,
    disabled
  }), {
    checked,
    label,
    onClick: stopLabelClick,
    pad,
    onMouseEnter: function onMouseEnter(event) {
      return _onMouseEnter == null ? void 0 : _onMouseEnter(event);
    },
    onMouseOver: function onMouseOver(event) {
      return _onMouseOver == null ? void 0 : _onMouseOver(event);
    },
    onMouseLeave: function onMouseLeave(event) {
      return _onMouseLeave == null ? void 0 : _onMouseLeave(event);
    },
    onMouseOut: function onMouseOut(event) {
      return _onMouseOut == null ? void 0 : _onMouseOut(event);
    }
  }, themeableProps), first, second);
});
CheckBox.displayName = "CheckBox";
CheckBox.propTypes = CheckBoxPropTypes;

// node_modules/grommet/es6/components/CheckBoxGroup/StyledCheckBoxGroup.js
init_styled_components_browser_esm();
var StyledCheckBoxGroup = styled_components_browser_esm_default(Box).withConfig({
  displayName: "StyledCheckBoxGroup",
  componentId: "sc-2nhc5d-0"
})(["", ""], function(props) {
  return props.theme.checkBoxGroup && props.theme.checkBoxGroup.container && props.theme.checkBoxGroup.container.extend;
});
StyledCheckBoxGroup.defaultProps = {};
Object.setPrototypeOf(StyledCheckBoxGroup.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/CheckBoxGroup/propTypes.js
var import_prop_types28 = __toESM(require_prop_types());
var PropType25 = {};
if (true) {
  PropType25 = {
    value: import_prop_types28.default.arrayOf(import_prop_types28.default.oneOfType([import_prop_types28.default.number, import_prop_types28.default.string])),
    defaultValue: import_prop_types28.default.arrayOf(import_prop_types28.default.oneOfType([import_prop_types28.default.string, import_prop_types28.default.number])),
    disabled: import_prop_types28.default.bool,
    labelKey: import_prop_types28.default.string,
    name: import_prop_types28.default.string,
    onChange: import_prop_types28.default.func,
    options: import_prop_types28.default.oneOfType([import_prop_types28.default.arrayOf(import_prop_types28.default.string), import_prop_types28.default.arrayOf(import_prop_types28.default.shape({}))]),
    valueKey: import_prop_types28.default.string
  };
}
var CheckBoxGroupPropTypes = PropType25;

// node_modules/grommet/es6/components/CheckBoxGroup/CheckBoxGroup.js
var _excluded27 = ["children", "defaultValue", "value", "disabled", "focusIndicator", "gap", "labelKey", "valueKey", "onChange", "options", "name"];
var _excluded28 = ["value"];
function _extends50() {
  _extends50 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends50.apply(this, arguments);
}
function _objectWithoutPropertiesLoose26(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var CheckBoxGroup = (0, import_react58.forwardRef)(function(_ref, ref) {
  var children2 = _ref.children, defaultValue3 = _ref.defaultValue, valueProp = _ref.value, disabledProp = _ref.disabled, _ref$focusIndicator = _ref.focusIndicator, focusIndicator = _ref$focusIndicator === void 0 ? true : _ref$focusIndicator, gap = _ref.gap, labelKey = _ref.labelKey, valueKey = _ref.valueKey, onChange = _ref.onChange, optionsProp = _ref.options, name = _ref.name, rest = _objectWithoutPropertiesLoose26(_ref, _excluded27);
  var formContext = (0, import_react58.useContext)(FormContext);
  var theme = (0, import_react58.useContext)(Me) || defaultProps.theme;
  var options = optionsProp.map(function(option) {
    return typeof option === "string" ? {
      disabled: disabledProp,
      value: option,
      label: option
    } : option;
  });
  var _formContext$useFormI = formContext.useFormInput({
    name,
    value: valueProp,
    initialValue: defaultValue3 || []
  }), value = _formContext$useFormI[0], setValue = _formContext$useFormI[1];
  var onCheckBoxChange = function onCheckBoxChange2(event, optionValue, option) {
    var nextValue = JSON.parse(JSON.stringify(value)) || [];
    var optionIndex = nextValue.indexOf(optionValue);
    if (optionIndex < 0)
      nextValue.push(optionValue);
    else
      nextValue.splice(optionIndex, 1);
    setValue(nextValue);
    if (onChange) {
      event.persist();
      var adjustedEvent = event;
      adjustedEvent.value = nextValue;
      adjustedEvent.option = option;
      onChange(adjustedEvent);
    }
  };
  return import_react58.default.createElement(StyledCheckBoxGroup, _extends50({
    ref,
    role: "group"
  }, theme.checkBoxGroup.container, {
    gap: gap || (theme.checkBoxGroup.container && theme.checkBoxGroup.container.gap ? theme.checkBoxGroup.container.gap : "small")
    // consistent with RadioButtonGroup default
  }, rest), options.map(function(option, index) {
    var optionValue = option.value;
    var label = labelKey ? option[labelKey] : option.label;
    var valueOption = valueKey ? option[valueKey] : optionValue;
    var checked = value.indexOf(valueOption) >= 0;
    var disabled = disabledProp || option.disabled;
    var key = label + "-" + valueOption;
    if (option.checked)
      console.warn(
        // eslint-disable-next-line max-len
        "'checked' prop of an individual CheckBox shouldn't be used in a CheckBoxGroup component. Use the CheckBoxGroup 'value' prop instead."
      );
    var omit = option.value, optionRest = _objectWithoutPropertiesLoose26(option, _excluded28);
    var optionProps = _extends50({}, optionRest, {
      label,
      disabled
    });
    return import_react58.default.createElement(CheckBox, _extends50({
      key
    }, optionProps, {
      disabled,
      checked,
      focusIndicator,
      label,
      onChange: function onChange2(event) {
        return onCheckBoxChange(event, valueOption, optionProps);
      }
    }), children2 ? function(state) {
      return children2(options[index], state);
    } : null);
  }));
});
CheckBoxGroup.displayName = "CheckBoxGroup";
CheckBoxGroup.propTypes = CheckBoxGroupPropTypes;

// node_modules/grommet/es6/components/Chart/Chart.js
var import_react59 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/Chart/StyledChart.js
init_styled_components_browser_esm();
var animateStyle = function animateStyle2(_ref) {
  var theme = _ref.theme, typeProp = _ref.typeProp;
  var animateBounds;
  if (typeProp === "line")
    animateBounds = ["stroke-dashoffset: 200%;", "stroke-dashoffset: 0%;"];
  else if (typeProp === "point")
    animateBounds = ["opacity: 0;", "opacity: 1;"];
  else
    animateBounds = ["transform: scaleY(0);", "transform: scaleY(1);"];
  return Ae(["", " animation:", " ", " forwards;", ""], typeProp === "line" && "stroke-dasharray: 200%;", We(["from{", "}to{", "}"], animateBounds[0], animateBounds[1]), theme.global.animation.duration, (typeProp === "bar" || typeProp === "area") && "transform-origin: center bottom 0;");
};
var StyledChart = styled_components_browser_esm_default.svg.withConfig({
  displayName: "StyledChart",
  componentId: "sc-1nae0gf-0"
})(["display:block;max-width:100%;overflow:visible;", " ", " ", ";"], genericStyles, function(props) {
  return props.animate && animateStyle(props);
}, function(props) {
  return props.theme.chart && props.theme.chart.extend;
});
StyledChart.defaultProps = {};
Object.setPrototypeOf(StyledChart.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/Chart/utils.js
var normalizeValues = function normalizeValues2(values) {
  return (values || []).map(function(value, index) {
    if (value === void 0)
      return {
        value: [index, void 0]
      };
    if (Array.isArray(value))
      return {
        value
      };
    if (typeof value === "object")
      return value;
    return {
      value: [index, value]
    };
  });
};
var normalizeBounds = function normalizeBounds2(boundsProp, values, direction) {
  var vertical12 = direction === "vertical";
  var result;
  if (boundsProp) {
    if (vertical12)
      result = {
        x: {
          min: boundsProp[1][0],
          max: boundsProp[1][1]
        },
        y: {
          min: boundsProp[0][0],
          max: boundsProp[0][1]
        }
      };
    else
      result = {
        x: {
          min: boundsProp[0][0],
          max: boundsProp[0][1]
        },
        y: {
          min: boundsProp[1][0],
          max: boundsProp[1][1]
        }
      };
  } else {
    var min0 = 0;
    var max0 = 1;
    var min1 = 0;
    var max1 = 1;
    (values || []).forEach(function(value) {
      if (value.value[0] !== void 0) {
        min0 = Math.min(min0, value.value[0]);
        max0 = Math.max(max0, value.value[0]);
      }
      if (value.value[1] !== void 0) {
        min1 = Math.min(min1, value.value[1]);
        max1 = Math.max(max1, value.value[1]);
      }
      if (value.value[2] !== void 0) {
        min1 = Math.min(min1, value.value[2]);
        max1 = Math.max(max1, value.value[2]);
      }
    });
    if (vertical12) {
      result = {
        x: {
          min: min1,
          max: max1
        },
        y: {
          min: min0,
          max: max0
        }
      };
    } else {
      result = {
        x: {
          min: min0,
          max: max0
        },
        y: {
          min: min1,
          max: max1
        }
      };
    }
  }
  return result;
};

// node_modules/grommet/es6/components/Chart/propTypes.js
var import_prop_types29 = __toESM(require_prop_types());
function _extends51() {
  _extends51 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends51.apply(this, arguments);
}
var thicknessType = import_prop_types29.default.oneOfType([import_prop_types29.default.oneOf(["hair", "xsmall", "small", "medium", "large", "xlarge", "none"]), import_prop_types29.default.string, import_prop_types29.default.number]);
var PropType26 = {};
if (true) {
  PropType26 = _extends51({}, genericProps, {
    animate: import_prop_types29.default.bool,
    bounds: import_prop_types29.default.arrayOf(import_prop_types29.default.arrayOf(import_prop_types29.default.number)),
    color: import_prop_types29.default.oneOfType([colorPropType, import_prop_types29.default.shape({
      color: colorPropType,
      // deprecated, use top level 'opacity'
      opacity: import_prop_types29.default.oneOfType([import_prop_types29.default.oneOf(["weak", "medium", "strong"]), import_prop_types29.default.bool])
    }), import_prop_types29.default.arrayOf(import_prop_types29.default.shape({
      color: colorPropType,
      value: import_prop_types29.default.number
    }))]),
    id: import_prop_types29.default.string,
    dash: import_prop_types29.default.bool,
    direction: import_prop_types29.default.oneOf(["horizontal", "vertical"]),
    gap: import_prop_types29.default.oneOfType([import_prop_types29.default.oneOf(["none", "xxsmall", "xsmall", "small", "medium", "large", "xlarge"]), import_prop_types29.default.string]),
    onClick: import_prop_types29.default.func,
    onHover: import_prop_types29.default.func,
    opacity: import_prop_types29.default.oneOfType([import_prop_types29.default.oneOf(["weak", "medium", "strong"]), import_prop_types29.default.bool]),
    overflow: import_prop_types29.default.bool,
    pad: padPropType,
    pattern: patternPropType,
    point: pointPropType,
    round: import_prop_types29.default.bool,
    size: import_prop_types29.default.oneOfType([import_prop_types29.default.oneOf(["xxsmall", "xsmall", "small", "medium", "large", "xlarge", "fill", "full"]), import_prop_types29.default.shape({
      height: import_prop_types29.default.oneOfType([import_prop_types29.default.oneOf(["xxsmall", "xsmall", "small", "medium", "large", "xlarge", "fill", "full"]), import_prop_types29.default.string]),
      width: import_prop_types29.default.oneOfType([import_prop_types29.default.oneOf(["xxsmall", "xsmall", "small", "medium", "large", "xlarge", "fill", "full", "auto"]), import_prop_types29.default.string])
    }), import_prop_types29.default.string]),
    thickness: thicknessType,
    type: import_prop_types29.default.oneOf(["bar", "line", "area", "point"]),
    values: import_prop_types29.default.arrayOf(import_prop_types29.default.oneOfType([import_prop_types29.default.number, import_prop_types29.default.arrayOf(import_prop_types29.default.number), import_prop_types29.default.shape({
      color: colorPropType,
      label: import_prop_types29.default.string,
      // for accessibility of bars and points
      onClick: import_prop_types29.default.func,
      onHover: import_prop_types29.default.func,
      opacity: import_prop_types29.default.oneOfType([import_prop_types29.default.string, import_prop_types29.default.number, import_prop_types29.default.bool]),
      thickness: thicknessType,
      value: import_prop_types29.default.oneOfType([import_prop_types29.default.number, import_prop_types29.default.arrayOf(import_prop_types29.default.number)])
    })]))
  });
}
var ChartPropTypes = PropType26;

// node_modules/grommet/es6/components/Chart/Chart.js
var _excluded29 = ["a11yTitle", "bounds", "color", "dash", "direction", "gap", "id", "onClick", "onHover", "opacity", "overflow", "pad", "pattern", "point", "round", "size", "thickness", "type", "values"];
var _excluded210 = ["color", "label", "onHover", "opacity", "thickness", "value"];
var _excluded32 = ["color", "label", "onHover", "opacity", "thickness", "value"];
function _extends52() {
  _extends52 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends52.apply(this, arguments);
}
function _objectWithoutPropertiesLoose27(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var gradientMaskColor = "#ffffff";
var defaultSize = {
  height: "small",
  width: "medium"
};
var defaultValues = [];
var Chart = import_react59.default.forwardRef(function(_ref, ref) {
  var a11yTitle = _ref.a11yTitle, boundsProp = _ref.bounds, color = _ref.color, dash = _ref.dash, direction = _ref.direction, gap = _ref.gap, id = _ref.id, onClick = _ref.onClick, onHover = _ref.onHover, opacityProp = _ref.opacity, _ref$overflow = _ref.overflow, overflow = _ref$overflow === void 0 ? false : _ref$overflow, pad = _ref.pad, pattern = _ref.pattern, point = _ref.point, round3 = _ref.round, _ref$size = _ref.size, sizeProp = _ref$size === void 0 ? defaultSize : _ref$size, _ref$thickness = _ref.thickness, thickness = _ref$thickness === void 0 ? "medium" : _ref$thickness, _ref$type = _ref.type, type = _ref$type === void 0 ? "bar" : _ref$type, _ref$values = _ref.values, valuesProp = _ref$values === void 0 ? defaultValues : _ref$values, rest = _objectWithoutPropertiesLoose27(_ref, _excluded29);
  var containerRef = useForwardedRef(ref);
  var theme = (0, import_react59.useContext)(Me) || defaultProps2.theme;
  var values = (0, import_react59.useMemo)(function() {
    return normalizeValues(valuesProp);
  }, [valuesProp]);
  var vertical12 = (0, import_react59.useMemo)(function() {
    return direction === "vertical";
  }, [direction]);
  var bounds2 = (0, import_react59.useMemo)(function() {
    return normalizeBounds(boundsProp, values, direction);
  }, [direction, boundsProp, values]);
  var strokeWidth = (0, import_react59.useMemo)(function() {
    return parseMetricToNum(theme.global.edgeSize[thickness] || thickness);
  }, [theme.global.edgeSize, thickness]);
  var inset = (0, import_react59.useMemo)(function() {
    var result = {
      top: 0,
      left: 0,
      bottom: 0,
      right: 0
    };
    if (pad) {
      if (pad.horizontal) {
        var padSize = parseMetricToNum(theme.global.edgeSize[pad.horizontal] || pad.horizontal);
        result.left = padSize;
        result.right = padSize;
      }
      if (pad.vertical) {
        var _padSize = parseMetricToNum(theme.global.edgeSize[pad.vertical] || pad.vertical);
        result.top = _padSize;
        result.bottom = _padSize;
      }
      if (pad.start) {
        result.left = parseMetricToNum(theme.global.edgeSize[pad.start] || pad.start);
      }
      if (pad.end) {
        result.right = parseMetricToNum(theme.global.edgeSize[pad.end] || pad.end);
      }
      if (typeof pad === "string") {
        var _padSize2 = parseMetricToNum(theme.global.edgeSize[pad]);
        result.top = _padSize2;
        result.left = _padSize2;
        result.bottom = _padSize2;
        result.right = _padSize2;
      }
    }
    return result;
  }, [pad, theme.global.edgeSize]);
  var strokeDasharray = (0, import_react59.useMemo)(function() {
    if (dash) {
      if (round3)
        return strokeWidth + " " + strokeWidth * 1.5;
      return strokeWidth * 2 + " " + strokeWidth / 2;
    }
    return void 0;
  }, [dash, round3, strokeWidth]);
  var _useState = (0, import_react59.useState)([0, 0]), containerSize = _useState[0], setContainerSize = _useState[1];
  var needContainerSize = (0, import_react59.useMemo)(function() {
    return sizeProp && (sizeProp === "full" || sizeProp === "fill" || sizeProp.height === "full" || sizeProp.height === "fill" || sizeProp.width === "full" || sizeProp.width === "fill");
  }, [sizeProp]);
  var size = (0, import_react59.useMemo)(function() {
    var gapWidth = gap ? parseMetricToNum(theme.global.edgeSize[gap] || gap) : strokeWidth;
    var autoSize = strokeWidth * values.length + (values.length - 1) * gapWidth;
    var sizeWidth = typeof sizeProp === "string" ? sizeProp : sizeProp.width || defaultSize.width;
    var width;
    if (sizeWidth === "full" || sizeWidth === "fill") {
      width = containerSize[0];
    } else if (sizeWidth === "auto") {
      width = autoSize;
    } else {
      width = parseMetricToNum(theme.global.size[sizeWidth] || sizeWidth);
    }
    var sizeHeight = typeof sizeProp === "string" ? sizeProp : sizeProp.height || defaultSize.height;
    var height;
    if (sizeHeight === "full" || sizeHeight === "fill") {
      height = containerSize[1];
    } else if (sizeHeight === "auto") {
      height = autoSize;
    } else {
      height = parseMetricToNum(theme.global.size[sizeHeight] || sizeHeight);
    }
    return {
      width,
      height
    };
  }, [containerSize, gap, sizeProp, strokeWidth, theme.global.edgeSize, theme.global.size, values]);
  var scale = (0, import_react59.useMemo)(function() {
    return {
      x: (size.width - (inset.left + inset.right)) / (bounds2.x.max - bounds2.x.min),
      y: (size.height - (inset.top + inset.bottom)) / (bounds2.y.max - bounds2.y.min)
    };
  }, [bounds2, inset, size]);
  var viewBoxBounds = (0, import_react59.useMemo)(function() {
    if (overflow) {
      return [0, 0, size.width, size.height];
    }
    return [-(strokeWidth / 2), -(strokeWidth / 2), size.width + strokeWidth, size.height + strokeWidth];
  }, [overflow, size, strokeWidth]);
  useLayoutEffect(function() {
    if (containerRef.current && needContainerSize) {
      var containerNode = containerRef.current;
      if (containerNode) {
        var parentNode = containerNode.parentNode;
        if (parentNode) {
          var rect = parentNode.getBoundingClientRect();
          if (rect.width !== containerSize[0] || rect.height !== containerSize[1]) {
            setContainerSize([rect.width, rect.height]);
          }
        }
      }
    }
  }, [containerRef, containerSize, needContainerSize]);
  (0, import_react59.useEffect)(function() {
    var onResize = function onResize2() {
      var parentNode = containerRef.current.parentNode;
      var rect = parentNode.getBoundingClientRect();
      setContainerSize([rect.width, rect.height]);
    };
    if (needContainerSize) {
      window.addEventListener("resize", onResize);
      return function() {
        return window.removeEventListener("resize", onResize);
      };
    }
    return void 0;
  }, [containerRef, needContainerSize]);
  var valueCoords = function valueCoords2(x3, y3) {
    return vertical12 ? [y3, x3] : [x3, y3];
  };
  var valueToCoordinate = function valueToCoordinate2(xValue, yValue) {
    var y3 = (yValue - bounds2.y.min) * scale.y + inset.top;
    return [
      (xValue - bounds2.x.min) * scale.x + inset.left,
      // vertical grows y top down, horizontal grows y bottom up
      vertical12 ? y3 : size.height - y3
    ];
  };
  var useGradient = color && Array.isArray(color);
  var patternId;
  function getOpacity(valueOpacity) {
    return valueOpacity && theme.global.opacity[valueOpacity] || // eslint-disable-next-line no-nested-ternary
    (valueOpacity === true ? theme.global.opacity.medium : valueOpacity === false ? void 0 : valueOpacity);
  }
  var renderBars = function renderBars2() {
    return (values || []).filter(function(_ref2) {
      var value = _ref2.value;
      return value[1] !== void 0;
    }).map(function(valueArg, index) {
      var valueColor = valueArg.color, label = valueArg.label, valueOnHover = valueArg.onHover, valueOpacity = valueArg.opacity, valueThickness = valueArg.thickness, value = valueArg.value, valueRest = _objectWithoutPropertiesLoose27(valueArg, _excluded210);
      var key = "p-" + index;
      var _valueCoords = valueCoords(value[0], value.length === 2 ? Math.min(Math.max(0, vertical12 ? bounds2.x.min : bounds2.y.min), value[1]) : Math.min(value[1], value[2])), startX = _valueCoords[0], startY = _valueCoords[1];
      var _valueCoords2 = valueCoords(value[0], value.length === 2 ? Math.max(Math.min(0, vertical12 ? bounds2.x.max : bounds2.y.max), value[1]) : Math.max(value[1], value[2])), endX = _valueCoords2[0], endY = _valueCoords2[1];
      var d3 = "M " + valueToCoordinate(startX, startY).join(",") + (" L " + valueToCoordinate(endX, endY).join(","));
      var hoverProps;
      if (valueOnHover) {
        hoverProps = {
          onMouseOver: function onMouseOver() {
            return valueOnHover(true);
          },
          onMouseLeave: function onMouseLeave() {
            return valueOnHover(false);
          }
        };
      }
      var clickProps;
      if (onClick) {
        clickProps = {
          onClick
        };
      }
      return import_react59.default.createElement("g", {
        key,
        fill: "none",
        stroke: valueColor ? normalizeColor(valueColor, theme) : void 0,
        strokeWidth: valueThickness ? parseMetricToNum(theme.global.edgeSize[valueThickness] || valueThickness) : void 0,
        opacity: getOpacity(valueOpacity)
      }, import_react59.default.createElement("title", null, label), import_react59.default.createElement("path", _extends52({
        d: d3
      }, hoverProps, clickProps, valueRest, {
        strokeDasharray
      })));
    });
  };
  var renderLine = function renderLine2() {
    var d3 = "";
    var d22 = "";
    (values || []).filter(function(_ref3) {
      var value = _ref3.value;
      return value[1] !== void 0;
    }).forEach(function(_ref4) {
      var value = _ref4.value;
      var _valueCoords3 = valueCoords(value[0], value[1]), x3 = _valueCoords3[0], y3 = _valueCoords3[1];
      d3 += (d3 ? " L" : "M") + " " + valueToCoordinate(x3, y3).join(",");
      if (value[2] !== void 0) {
        var _valueCoords4 = valueCoords(value[0], value[2]), x22 = _valueCoords4[0], y22 = _valueCoords4[1];
        d22 += (d22 ? " L" : "M") + " " + valueToCoordinate(x22, y22).join(",");
      }
    });
    var hoverProps;
    if (onHover) {
      hoverProps = {
        onMouseOver: function onMouseOver() {
          return onHover(true);
        },
        onMouseLeave: function onMouseLeave() {
          return onHover(false);
        }
      };
    }
    var clickProps;
    if (onClick) {
      clickProps = {
        onClick
      };
    }
    return import_react59.default.createElement("g", {
      fill: "none"
    }, import_react59.default.createElement("path", _extends52({
      d: d3
    }, hoverProps, clickProps, {
      strokeDasharray
    })), d22 && import_react59.default.createElement("path", _extends52({
      d: d22
    }, hoverProps, clickProps, {
      strokeDasharray
    })));
  };
  var renderArea = function renderArea2() {
    var d3 = "";
    (values || []).filter(function(_ref5) {
      var value = _ref5.value;
      return value[1] !== void 0;
    }).forEach(function(_ref6, index) {
      var value = _ref6.value;
      var _valueCoords5 = valueCoords(
        value[0],
        // when a range, second value is on top
        value[value.length === 2 ? 1 : 2]
      ), x3 = _valueCoords5[0], y3 = _valueCoords5[1];
      d3 += (!index ? "M" : " L") + " " + valueToCoordinate(x3, y3).join(",");
    });
    (values || []).filter(function(_ref7) {
      var value = _ref7.value;
      return value[1] !== void 0;
    }).reverse().forEach(function(_ref8) {
      var value = _ref8.value;
      var _valueCoords6 = valueCoords(
        value[0],
        // Math.max() is to account for value[1] being negative
        value.length === 2 ? Math.max(0, vertical12 ? bounds2.x.min : bounds2.y.min) : value[1]
      ), x3 = _valueCoords6[0], y3 = _valueCoords6[1];
      d3 += " L " + valueToCoordinate(x3, y3).join(",");
    });
    if (d3.length > 0) {
      d3 += " Z";
    }
    var hoverProps;
    if (onHover) {
      hoverProps = {
        onMouseOver: function onMouseOver() {
          return onHover(true);
        },
        onMouseLeave: function onMouseLeave() {
          return onHover(false);
        }
      };
    }
    var clickProps;
    if (onClick) {
      clickProps = {
        onClick
      };
    }
    patternId = pattern && pattern + "-" + id + "-pattern";
    return import_react59.default.createElement("g", null, import_react59.default.createElement("path", _extends52({
      d: d3,
      fill: patternId ? "url(#" + patternId + ")" : void 0
    }, hoverProps, clickProps)));
  };
  var renderPoints = function renderPoints2() {
    return (values || []).filter(function(_ref9) {
      var value = _ref9.value;
      return value[1] !== void 0;
    }).map(function(valueArg, index) {
      var valueColor = valueArg.color, label = valueArg.label, valueOnHover = valueArg.onHover, valueOpacity = valueArg.opacity, valueThickness = valueArg.thickness, value = valueArg.value, valueRest = _objectWithoutPropertiesLoose27(valueArg, _excluded32);
      var key = "p-" + index;
      var hoverProps;
      if (valueOnHover) {
        hoverProps = {
          onMouseOver: function onMouseOver() {
            return valueOnHover(true);
          },
          onMouseLeave: function onMouseLeave() {
            return valueOnHover(false);
          }
        };
      }
      var clickProps;
      if (onClick) {
        clickProps = {
          onClick
        };
      }
      var width = valueThickness ? parseMetricToNum(theme.global.edgeSize[valueThickness] || valueThickness) : strokeWidth;
      var renderPoint = function renderPoint2(valueX, valueY) {
        var props = _extends52({}, hoverProps, clickProps, valueRest);
        var _valueCoords7 = valueCoords(valueX, valueY), x3 = _valueCoords7[0], y3 = _valueCoords7[1];
        var _valueToCoordinate = valueToCoordinate(x3, y3), cx = _valueToCoordinate[0], cy = _valueToCoordinate[1];
        var off = width / 2;
        if (point === "circle" || !point && round3)
          return import_react59.default.createElement("circle", _extends52({
            cx,
            cy,
            r: off
          }, props));
        var d3;
        if (point === "diamond")
          d3 = "M " + cx + " " + (cy - off) + " L " + (cx + off) + " " + cy + " L " + cx + " " + (cy + off) + " L " + (cx - off) + " " + cy + " Z";
        else if (point === "star") {
          var off1 = off / 3;
          var off2 = off1 * 2;
          d3 = "M " + cx + " " + (cy - off) + " L " + (cx - off2) + " " + (cy + off) + " L " + (cx + off) + " " + (cy - off1) + " L " + (cx - off) + " " + (cy - off1) + " L " + (cx + off2) + " " + (cy + off) + " Z";
        } else if (point === "triangle")
          d3 = "M " + cx + " " + (cy - off) + " L " + (cx + off) + " " + (cy + off) + " L " + (cx - off) + " " + (cy + off) + " Z";
        else if (point === "triangleDown")
          d3 = "M " + (cx - off) + " " + (cy - off) + " L " + (cx + off) + " " + (cy - off) + " L " + cx + " " + (cy + off) + " Z";
        else
          d3 = "M " + (cx - off) + " " + (cy - off) + " L " + (cx + off) + " " + (cy - off) + " L " + (cx + off) + " " + (cy + off) + " L " + (cx - off) + " " + (cy + off) + " Z";
        return import_react59.default.createElement("path", {
          d: d3
        });
      };
      return import_react59.default.createElement("g", {
        key,
        stroke: "none",
        fill: valueColor ? normalizeColor(valueColor, theme) : void 0,
        opacity: getOpacity(valueOpacity)
      }, import_react59.default.createElement("title", null, label), renderPoint(value[0], value[1]), value[2] !== void 0 && renderPoint(value[0], value[2]));
    });
  };
  var contents;
  if (type === "bar") {
    contents = renderBars();
  } else if (type === "line") {
    contents = renderLine();
  } else if (type === "area") {
    contents = renderArea();
  } else if (type === "point") {
    contents = renderPoints();
  }
  var viewBox = viewBoxBounds.join(" ");
  var colorName;
  if (!useGradient) {
    if (color && color.color)
      colorName = color.color;
    else if (color)
      colorName = color;
    else if (theme.chart && theme.chart.color)
      colorName = theme.chart.color;
  }
  var opacity;
  if (opacityProp === true) {
    opacity = theme.global.opacity.medium;
  } else if (opacityProp) {
    opacity = theme.global.opacity[opacityProp] ? theme.global.opacity[opacityProp] : opacityProp;
  } else if (color && color.opacity) {
    opacity = theme.global.opacity[color.opacity] ? theme.global.opacity[color.opacity] : color.opacity;
  } else
    opacity = void 0;
  var stroke;
  if (type !== "point") {
    if (useGradient)
      stroke = gradientMaskColor;
    else
      stroke = normalizeColor(colorName, theme);
  } else
    stroke = "none";
  var fill;
  if (type === "point" || type === "area") {
    if (useGradient)
      fill = gradientMaskColor;
    else
      fill = normalizeColor(colorName, theme);
  } else
    fill = "none";
  var drawing = import_react59.default.createElement("g", {
    stroke,
    strokeWidth: type !== "point" && (type !== "area" || !pattern) ? strokeWidth : void 0,
    fill,
    strokeLinecap: round3 ? "round" : "butt",
    strokeLinejoin: round3 ? "round" : "miter",
    opacity
  }, contents);
  var defs = [];
  var gradientRect;
  if (useGradient && size.height) {
    var uniqueGradientId = color.map(function(element) {
      return element.color;
    }).join("-");
    var gradientId = uniqueGradientId + "-" + id + "-gradient";
    var maskId = uniqueGradientId + "-" + id + "-mask";
    defs.push(import_react59.default.createElement("linearGradient", {
      key: "gradientId",
      id: gradientId,
      x1: 0,
      y1: 0,
      x2: 0,
      y2: 1
    }, color.slice(0).sort(function(c1, c22) {
      return c22.value - c1.value;
    }).map(function(_ref10) {
      var value = _ref10.value, gradientColor = _ref10.color;
      return import_react59.default.createElement("stop", {
        key: value,
        offset: (size.height - (value - bounds2.y.min) * scale.y) / size.height,
        stopColor: normalizeColor(gradientColor, theme)
      });
    })));
    defs.push(import_react59.default.createElement("mask", {
      key: "mask",
      id: maskId
    }, drawing));
    gradientRect = import_react59.default.createElement("rect", {
      x: viewBoxBounds[0],
      y: viewBoxBounds[1],
      width: viewBoxBounds[2],
      height: viewBoxBounds[3],
      fill: "url(#" + gradientId + ")",
      mask: "url(#" + maskId + ")"
    });
  } else if (patternId) {
    var content;
    var diagonal = pattern.match(/Diagonal/);
    var unit = diagonal ? strokeWidth * Math.sqrt(2) : strokeWidth;
    var half = unit / 2;
    var _double = unit * 2;
    var pColor = normalizeColor(colorName, theme);
    if (pattern === "squares") {
      content = import_react59.default.createElement("rect", {
        x: half,
        y: half,
        width: unit,
        height: unit,
        fill: pColor
      });
    } else if (pattern === "circles") {
      content = import_react59.default.createElement("circle", {
        cx: unit,
        cy: unit,
        r: half,
        fill: pColor
      });
    } else if (pattern === "stripesHorizontal") {
      content = import_react59.default.createElement("path", {
        d: "M 0 " + unit + " L " + _double + " " + unit,
        stroke: pColor,
        strokeWidth
      });
    } else if (pattern === "stripesVertical") {
      content = import_react59.default.createElement("path", {
        d: "M " + unit + " 0 L " + unit + " " + _double,
        stroke: pColor,
        strokeWidth
      });
    } else if (pattern === "stripesDiagonalDown") {
      content = import_react59.default.createElement("path", {
        d: "M " + half + " " + -half + " L " + (_double + half) + " " + (_double - half) + "\n              M " + -half + " " + half + " L " + (_double - half) + " " + (_double + half),
        stroke: pColor,
        strokeWidth
      });
    } else if (pattern === "stripesDiagonalUp") {
      content = import_react59.default.createElement("path", {
        d: "M " + -half + " " + (_double - half) + " L " + (_double - half) + " " + -half + "\n              M " + half + " " + (_double + half) + " L " + (_double + half) + " " + half,
        stroke: pColor,
        strokeWidth
      });
    }
    defs.push(import_react59.default.createElement("pattern", {
      key: patternId,
      id: patternId,
      width: _double,
      height: _double,
      patternUnits: "userSpaceOnUse"
    }, content));
  }
  return import_react59.default.createElement(StyledChart, _extends52({
    ref: containerRef,
    id,
    "aria-label": a11yTitle,
    viewBox,
    preserveAspectRatio: "none",
    width: size === "full" ? "100%" : size.width,
    height: size === "full" ? "100%" : size.height,
    typeProp: type
    // prevent adding to DOM
  }, rest), defs.length && import_react59.default.createElement("defs", null, defs), useGradient ? gradientRect : drawing);
});
Chart.displayName = "Chart";
Chart.propTypes = ChartPropTypes;

// node_modules/grommet/es6/components/Chart/calcs.js
var thicknessPad = {
  xlarge: "large",
  large: "medium",
  medium: "small",
  small: "xsmall",
  xsmall: "xxsmall"
};
var round = function round2(value, decimals) {
  return Number(Math.round(value + "e" + decimals) + "e-" + decimals);
};
var alignMax = function alignMax2(value, interval) {
  if (value > 0)
    return value - value % interval + interval;
  if (value < 0)
    return value + value % interval;
  return value;
};
var alignMin = function alignMin2(value, interval) {
  if (value > 0)
    return value - value % interval;
  if (value < 0)
    return value - value % interval - interval;
  return value;
};
var calcBounds = function calcBounds2(values, options) {
  if (options === void 0) {
    options = {};
  }
  var coarseness = Array.isArray(options.coarseness) && options.coarseness || options.coarseness && [void 0, options.coarseness] || [void 0, 5];
  var coarseX = coarseness[0], coarseY = coarseness[1];
  var steps = options.steps || [1, 1];
  var stepsY = steps[1];
  var calcValues = normalizeValues(values || []);
  var minX;
  var maxX;
  var minY;
  var maxY;
  if (calcValues.length) {
    calcValues.filter(function(value) {
      return value !== void 0;
    }).forEach(function(value) {
      var x3 = value.value[0];
      if (x3 !== void 0) {
        minX = minX === void 0 ? x3 : Math.min(minX, x3);
        maxX = maxX === void 0 ? x3 : Math.max(maxX, x3);
      }
      var y3 = value.value[1];
      if (y3 !== void 0) {
        minY = minY === void 0 ? y3 : Math.min(minY, y3);
        maxY = maxY === void 0 ? y3 : Math.max(maxY, y3);
      }
      var y22 = value.value[2];
      if (y22 !== void 0) {
        minY = Math.min(minY, y22);
        maxY = Math.max(maxY, y22);
      }
    });
    if (maxX === minX) {
      if (maxX > 0)
        minX = maxX - 1;
      else
        maxX = minX + 1;
    }
    if (maxY === minY) {
      if (maxY > 0)
        minY = maxY - 1;
      else
        maxY = minY + 1;
    }
    if (coarseX) {
      var deltaX = maxX - minX;
      var intervalX = Number.parseFloat((deltaX / coarseX).toPrecision(1));
      minX = alignMin(minX, intervalX);
      maxX = alignMax(maxX, intervalX);
    }
    if (coarseY) {
      var deltaY = maxY - minY;
      var intervalY = Number.parseFloat((deltaY / coarseY).toPrecision(1));
      minY = alignMin(minY, intervalY);
      maxY = alignMax(maxY, intervalY);
    }
    if (minY < 0 && maxY > 0 && Math.abs(minY) !== Math.abs(maxY)) {
      if (stepsY === 1) {
        var largest = Math.max(Math.abs(minY), Math.abs(maxY));
        minY = -largest;
        maxY = largest;
      } else {
        var stepInterval = (maxY - minY) / stepsY;
        var minSteps = minY / stepInterval;
        var maxSteps = maxY / stepInterval;
        if (Math.abs(minSteps) < Math.abs(maxSteps)) {
          stepInterval = maxY / Math.floor(maxSteps);
          maxY = stepInterval * Math.floor(maxSteps);
          minY = stepInterval * Math.floor(minSteps);
        } else {
          stepInterval = Math.abs(minY / Math.ceil(minSteps));
          minY = stepInterval * Math.ceil(minSteps);
          maxY = stepInterval * Math.ceil(maxSteps);
        }
      }
    }
  }
  var bounds2;
  if (calcValues.length)
    bounds2 = [[minX, maxX], [minY, maxY]];
  else
    bounds2 = [[], []];
  return bounds2;
};
var calcs = function calcs2(values, options) {
  if (values === void 0) {
    values = [];
  }
  if (options === void 0) {
    options = {};
  }
  var steps = options.steps || [1, 1];
  var stepsX = steps[0], stepsY = steps[1];
  var bounds2 = options.bounds || calcBounds(values, options);
  if (options.min !== void 0)
    bounds2[1][0] = options.min;
  if (options.max !== void 0)
    bounds2[1][1] = options.max;
  var boundsX = bounds2[0], boundsY = bounds2[1];
  var boundsXmin = boundsX[0], boundsXmax = boundsX[1];
  var boundsYmin = boundsY[0], boundsYmax = boundsY[1];
  var dimensions = [round(boundsXmax - boundsXmin, 2), round(boundsYmax - boundsYmin, 2)];
  var dimensionsX = dimensions[0], dimensionsY = dimensions[1];
  var yAxis = [];
  var y3 = boundsYmax;
  var yStepInterval = round(dimensionsY / stepsY, 4);
  while (round(y3, 2) >= boundsYmin) {
    yAxis.push(round(y3, 2));
    y3 -= yStepInterval;
  }
  var xAxis = [];
  var x3 = boundsXmin;
  var xStepInterval = round(dimensionsX / stepsX, 4);
  while (round(x3, 2) <= boundsXmax) {
    xAxis.push(round(x3, 2));
    x3 += xStepInterval;
  }
  var _options = options, thickness = _options.thickness;
  if (!thickness) {
    if (values.length < 5) {
      thickness = "xlarge";
    } else if (values.length < 11) {
      thickness = "large";
    } else if (values.length < 21) {
      thickness = "medium";
    } else if (values.length < 61) {
      thickness = "small";
    } else if (values.length < 121) {
      thickness = "xsmall";
    } else {
      thickness = "hair";
    }
  }
  var pad = thicknessPad[thickness];
  return {
    axis: [xAxis, yAxis],
    bounds: bounds2,
    dimensions,
    pad,
    thickness
  };
};

// node_modules/grommet/es6/components/Clock/Clock.js
var import_react62 = __toESM(require_react());

// node_modules/grommet/es6/components/Clock/Analog.js
var import_react60 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/Clock/StyledClock.js
init_styled_components_browser_esm();
var StyledHour = styled_components_browser_esm_default.line.withConfig({
  displayName: "StyledClock__StyledHour",
  componentId: "sc-y4xw8s-0"
})(["stroke-width:", ";stroke:", ";transition:stroke 1s ease-out;"], function(props) {
  return props.theme.clock.analog.hour.width;
}, function(props) {
  return normalizeColor(props.theme.clock.analog.hour.color, props.theme);
});
StyledHour.defaultProps = {};
Object.setPrototypeOf(StyledHour.defaultProps, defaultProps2);
var StyledMinute = styled_components_browser_esm_default.line.withConfig({
  displayName: "StyledClock__StyledMinute",
  componentId: "sc-y4xw8s-1"
})(["stroke-width:", ";stroke:", ";transition:stroke 1s ease-out;"], function(props) {
  return props.theme.clock.analog.minute.width;
}, function(props) {
  return normalizeColor(props.theme.clock.analog.minute.color, props.theme);
});
StyledMinute.defaultProps = {};
Object.setPrototypeOf(StyledMinute.defaultProps, defaultProps2);
var StyledSecond = styled_components_browser_esm_default.line.withConfig({
  displayName: "StyledClock__StyledSecond",
  componentId: "sc-y4xw8s-2"
})(["stroke-width:", ";stroke:", ";transition:stroke 1s ease-out;"], function(props) {
  return props.theme.clock.analog.second.width;
}, function(props) {
  return normalizeColor(props.theme.clock.analog.second.color, props.theme);
});
StyledSecond.defaultProps = {};
Object.setPrototypeOf(StyledSecond.defaultProps, defaultProps2);
var StyledAnalog = styled_components_browser_esm_default.svg.withConfig({
  displayName: "StyledClock__StyledAnalog",
  componentId: "sc-y4xw8s-3"
})(["width:", ";height:", ";", " ", ";"], function(props) {
  return props.theme.clock.analog.size[props.size];
}, function(props) {
  return props.theme.clock.analog.size[props.size];
}, genericStyles, function(props) {
  return props.theme.clock.analog && props.theme.clock.analog.extend;
});
StyledAnalog.defaultProps = {};
Object.setPrototypeOf(StyledAnalog.defaultProps, defaultProps2);
var sizeStyle13 = function sizeStyle14(props) {
  var size = props.size || "medium";
  var data = props.theme.clock.digital.text[size] || {};
  return Ae(["font-size:", ";line-height:", ";"], data.size || props.theme.clock.digital.text.medium.size, data.height || props.theme.clock.digital.text.medium.height);
};
var StyledDigitalDigit = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledClock__StyledDigitalDigit",
  componentId: "sc-y4xw8s-4"
})(["position:relative;width:0.8em;text-align:center;overflow:hidden;", ";"], function(props) {
  return sizeStyle13(props);
});
StyledDigitalDigit.defaultProps = {};
Object.setPrototypeOf(StyledDigitalDigit.defaultProps, defaultProps2);
var previousUp = We(["0%{transform:translateY(0);}100%{transform:translateY(-100%);}"]);
var previousDown = We(["0%{transform:translateY(0);}100%{transform:translateY(100%);}"]);
var StyledDigitalPrevious = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledClock__StyledDigitalPrevious",
  componentId: "sc-y4xw8s-5"
})(["position:absolute;top:0;left:0;width:0.8em;text-align:center;animation:", " 0.5s forwards;"], function(props) {
  return props.direction === "down" ? previousDown : previousUp;
});
StyledDigitalPrevious.defaultProps = {};
Object.setPrototypeOf(StyledDigitalPrevious.defaultProps, defaultProps2);
var nextUp = We(["0%{transform:translateY(100%);}100%{transform:translateY(0);}"]);
var nextDown = We(["0%{transform:translateY(-100%);}100%{transform:translateY(0);}"]);
var StyledDigitalNext = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledClock__StyledDigitalNext",
  componentId: "sc-y4xw8s-6"
})(["position:absolute;top:0;left:0;width:0.8em;text-align:center;animation:", " 0.5s forwards;"], function(props) {
  return props.direction === "down" ? nextDown : nextUp;
});
StyledDigitalNext.defaultProps = {};
Object.setPrototypeOf(StyledDigitalNext.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/Clock/Analog.js
var _excluded30 = ["elements", "precision"];
function _extends53() {
  _extends53 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends53.apply(this, arguments);
}
function _objectWithoutPropertiesLoose28(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var ANGLE_UNIT = 6;
var HOUR_ANGLE_UNIT = 30;
var getClockDimensions = function getClockDimensions2(theme) {
  return {
    size: parseMetricToNum(theme.clock.analog.size.medium),
    secondSize: parseMetricToNum(theme.clock.analog.second.size),
    minuteSize: parseMetricToNum(theme.clock.analog.minute.size),
    hourSize: parseMetricToNum(theme.clock.analog.hour.size)
  };
};
var getClockState = function getClockState2(_ref) {
  var hours = _ref.hours, minutes = _ref.minutes, seconds = _ref.seconds;
  var hour12 = hours > 12 ? hours - 12 : hours;
  var minuteAngle = minutes * ANGLE_UNIT;
  return {
    // offset hour angle by half of the minute angle so that it gets closer
    // to the next hour
    hourAngle: hour12 * HOUR_ANGLE_UNIT + minutes / 2,
    minuteAngle,
    secondAngle: seconds * ANGLE_UNIT
  };
};
var Analog = (0, import_react60.forwardRef)(function(_ref2, ref) {
  var elements = _ref2.elements, precision = _ref2.precision, rest = _objectWithoutPropertiesLoose28(_ref2, _excluded30);
  var theme = (0, import_react60.useContext)(Me) || defaultProps2.theme;
  var _useMemo = (0, import_react60.useMemo)(function() {
    return getClockState(elements);
  }, [elements]), hourAngle = _useMemo.hourAngle, minuteAngle = _useMemo.minuteAngle, secondAngle = _useMemo.secondAngle;
  var _useMemo2 = (0, import_react60.useMemo)(function() {
    return getClockDimensions(theme);
  }, [theme]), size = _useMemo2.size, secondSize = _useMemo2.secondSize, minuteSize = _useMemo2.minuteSize, hourSize = _useMemo2.hourSize;
  var halfSize = size / 2;
  var secondHand;
  if (precision === "seconds") {
    secondHand = import_react60.default.createElement(StyledSecond, {
      x1: halfSize,
      y1: halfSize,
      x2: halfSize,
      y2: secondSize,
      stroke: "#000000",
      strokeLinecap: theme.clock.analog.second.shape,
      style: {
        transform: "rotate(" + secondAngle + "deg)",
        transformOrigin: halfSize + "px " + halfSize + "px"
      }
    });
  }
  var minuteHand;
  if (precision === "seconds" || precision === "minutes") {
    minuteHand = import_react60.default.createElement(StyledMinute, {
      x1: halfSize,
      y1: halfSize,
      x2: halfSize,
      y2: minuteSize,
      stroke: "#000000",
      strokeLinecap: theme.clock.analog.minute.shape,
      style: {
        transform: "rotate(" + minuteAngle + "deg)",
        transformOrigin: halfSize + "px " + halfSize + "px"
      }
    });
  }
  return import_react60.default.createElement(StyledAnalog, _extends53({
    ref,
    version: "1.1",
    width: size,
    height: size,
    preserveAspectRatio: "xMidYMid meet",
    viewBox: "0 0 " + size + " " + size
  }, rest), secondHand, minuteHand, import_react60.default.createElement(StyledHour, {
    x1: halfSize,
    y1: halfSize,
    x2: halfSize,
    y2: hourSize,
    stroke: "#000000",
    strokeLinecap: theme.clock.analog.hour.shape,
    style: {
      transform: "rotate(" + hourAngle + "deg)",
      transformOrigin: halfSize + "px " + halfSize + "px"
    }
  }));
});
Analog.displayName = "Analog";

// node_modules/grommet/es6/components/Clock/Digital.js
var import_react61 = __toESM(require_react());
var _excluded31 = ["elements", "precision", "run", "size"];
function _extends54() {
  _extends54 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends54.apply(this, arguments);
}
function _objectWithoutPropertiesLoose29(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var Digit = function Digit2(_ref) {
  var number = _ref.number, run = _ref.run, size = _ref.size;
  var _useState = (0, import_react61.useState)(number), previous = _useState[0], setPrevious = _useState[1];
  var _useState2 = (0, import_react61.useState)(), changing = _useState2[0], setChanging = _useState2[1];
  (0, import_react61.useEffect)(function() {
    if (number !== previous) {
      setChanging(true);
      var timer = setTimeout(function() {
        setPrevious(number);
        setChanging(false);
      }, 900);
      return function() {
        return clearTimeout(timer);
      };
    }
    return void 0;
  }, [number, previous]);
  if (changing) {
    var direction = run === "backward" ? "down" : "up";
    return import_react61.default.createElement(StyledDigitalDigit, {
      size
    }, import_react61.default.createElement(StyledDigitalPrevious, {
      direction
    }, Math.floor(previous)), import_react61.default.createElement(StyledDigitalNext, {
      direction
    }, Math.floor(number)));
  }
  return import_react61.default.createElement(StyledDigitalDigit, {
    size
  }, Math.floor(number));
};
var Element = function Element2(_ref2) {
  var number = _ref2.number, run = _ref2.run, sep = _ref2.sep, size = _ref2.size;
  var tens = Math.floor(number / 10);
  var ones = number % 10;
  var result = [import_react61.default.createElement(Digit, {
    key: "tens",
    run,
    size,
    number: tens
  }), import_react61.default.createElement(Digit, {
    key: "ones",
    run,
    size,
    number: ones
  })];
  if (sep) {
    result.unshift(import_react61.default.createElement(StyledDigitalDigit, {
      key: "sep",
      size
    }, ":"));
  }
  return result;
};
var Digital = (0, import_react61.forwardRef)(function(props, ref) {
  var elements = props.elements, precision = props.precision, run = props.run, size = props.size, rest = _objectWithoutPropertiesLoose29(props, _excluded31);
  var seconds;
  if (precision === "seconds") {
    seconds = import_react61.default.createElement(Element, {
      number: elements.seconds,
      run,
      size,
      sep: true
    });
  }
  var minutes;
  if (precision === "minutes" || precision === "seconds") {
    minutes = import_react61.default.createElement(Element, {
      number: elements.minutes,
      run,
      size,
      sep: true
    });
  }
  return import_react61.default.createElement(Box, _extends54({
    ref,
    direction: "row"
  }, rest), import_react61.default.createElement(Element, {
    number: elements.hours12 || elements.hours,
    run,
    size
  }), minutes, seconds);
});

// node_modules/grommet/es6/components/Clock/propTypes.js
var import_prop_types30 = __toESM(require_prop_types());
function _extends55() {
  _extends55 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends55.apply(this, arguments);
}
var PropType27 = {};
if (true) {
  PropType27 = _extends55({}, genericProps, {
    hourLimit: import_prop_types30.default.oneOf([12, 24, "12", "24"]),
    onChange: import_prop_types30.default.func,
    precision: import_prop_types30.default.oneOf(["hours", "minutes", "seconds"]),
    run: import_prop_types30.default.oneOfType([import_prop_types30.default.bool, import_prop_types30.default.oneOf(["backward", "forward"])]),
    size: import_prop_types30.default.oneOfType([import_prop_types30.default.oneOf(["xsmall", "small", "medium", "large", "xlarge", "xxlarge"]), import_prop_types30.default.string]),
    time: import_prop_types30.default.string,
    type: import_prop_types30.default.oneOf(["analog", "digital"])
  });
}
var ClockPropTypes = PropType27;

// node_modules/grommet/es6/components/Clock/Clock.js
var _excluded33 = ["hourLimit", "onChange", "precision", "run", "size", "time", "type"];
function _extends56() {
  _extends56 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends56.apply(this, arguments);
}
function _objectWithoutPropertiesLoose30(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var TIME_REGEXP = /T([0-9]{2}):([0-9]{2})(?::([0-9.,]{2,}))?/;
var DURATION_REGEXP = /^(-|\+)?P.*T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?$/;
var parseTime = function parseTime2(time, hourLimit) {
  var result = {};
  if (time) {
    var match = DURATION_REGEXP.exec(time);
    if (match) {
      result.hours = parseFloat(match[2]) || 0;
      if (hourLimit === 12) {
        result.hours12 = result.hours > 12 ? result.hours - 12 : result.hours;
      }
      result.minutes = parseFloat(match[3]) || 0;
      result.seconds = parseFloat(match[4]) || 0;
      result.duration = true;
    } else {
      match = TIME_REGEXP.exec(time);
      if (match) {
        result.hours = parseFloat(match[1]);
        if (hourLimit === 12) {
          result.hours12 = result.hours > 12 ? result.hours - 12 : result.hours;
        }
        result.minutes = parseFloat(match[2]) || 0;
        result.seconds = parseFloat(match[3]) || 0;
      } else {
        console.error("Grommet Clock cannot parse '" + time + "'");
      }
    }
  } else {
    var date = /* @__PURE__ */ new Date();
    result.hours = date.getHours();
    result.minutes = date.getMinutes();
    result.seconds = date.getSeconds();
  }
  return result;
};
var Clock = (0, import_react62.forwardRef)(function(_ref, ref) {
  var _ref$hourLimit = _ref.hourLimit, hourLimit = _ref$hourLimit === void 0 ? 24 : _ref$hourLimit, onChange = _ref.onChange, _ref$precision = _ref.precision, precision = _ref$precision === void 0 ? "seconds" : _ref$precision, _ref$run = _ref.run, run = _ref$run === void 0 ? "forward" : _ref$run, _ref$size = _ref.size, size = _ref$size === void 0 ? "medium" : _ref$size, time = _ref.time, _ref$type = _ref.type, type = _ref$type === void 0 ? "analog" : _ref$type, rest = _objectWithoutPropertiesLoose30(_ref, _excluded33);
  var _useState = (0, import_react62.useState)(parseTime(time, hourLimit)), elements = _useState[0], setElements = _useState[1];
  (0, import_react62.useEffect)(function() {
    return setElements(parseTime(time, hourLimit));
  }, [hourLimit, time]);
  (0, import_react62.useEffect)(function() {
    var atDurationEnd = run === "backward" && elements.duration && !elements.hours && !elements.minutes && !elements.seconds;
    if (run && !atDurationEnd) {
      var interval = 1e3;
      var increment = "seconds";
      if (precision !== "seconds" && elements.seconds === 0) {
        interval *= 60;
        increment = "minutes";
        if (precision !== "minutes" && elements.minutes === 0) {
          interval *= 60;
          increment = "hours";
        }
      }
      var timer = setInterval(function() {
        var nextElements = _extends56({}, elements);
        if (increment === "seconds") {
          if (run === "backward") {
            nextElements.seconds -= 1;
          } else {
            nextElements.seconds += 1;
          }
        } else if (increment === "minutes") {
          if (run === "backward") {
            nextElements.minutes -= 1;
          } else {
            nextElements.minutes += 1;
          }
        } else if (increment === "hours") {
          if (run === "backward") {
            nextElements.hours -= 1;
          } else {
            nextElements.hours += 1;
          }
        }
        if (nextElements.seconds >= 60) {
          nextElements.minutes += Math.floor(nextElements.seconds / 60);
          nextElements.seconds = 0;
        } else if (nextElements.seconds < 0) {
          nextElements.minutes += Math.floor(nextElements.seconds / 60);
          nextElements.seconds = 59;
        }
        if (nextElements.minutes >= 60) {
          nextElements.hours += Math.floor(nextElements.minutes / 60);
          nextElements.minutes = 0;
        } else if (nextElements.minutes < 0) {
          nextElements.hours += Math.floor(nextElements.minutes / 60);
          nextElements.minutes = 59;
        }
        if (nextElements.hours >= 24 || nextElements.hours < 0) {
          nextElements.hours = 0;
        }
        if (hourLimit === 12) {
          nextElements.hours12 = nextElements.hours > 12 ? nextElements.hours - 12 : nextElements.hours;
        }
        setElements(nextElements);
        if (onChange) {
          var e3 = nextElements;
          if (e3.duration) {
            onChange("P" + e3.hours + "H" + e3.minutes + "M" + e3.seconds + "S");
          } else {
            onChange("T" + e3.hours + ":" + e3.minutes + ":" + e3.seconds);
          }
        }
      }, interval);
      return function() {
        return clearInterval(timer);
      };
    }
    return void 0;
  }, [elements, hourLimit, onChange, precision, run]);
  var content;
  if (type === "analog") {
    content = import_react62.default.createElement(Analog, _extends56({
      ref,
      elements,
      precision,
      size
    }, rest));
  } else if (type === "digital") {
    content = import_react62.default.createElement(Digital, _extends56({
      ref,
      elements,
      precision,
      run,
      size
    }, rest));
  }
  return content;
});
Clock.displayName = "Clock";
Clock.propTypes = ClockPropTypes;

// node_modules/grommet/es6/components/Data/Data.js
var import_react90 = __toESM(require_react());

// node_modules/grommet/es6/components/DataFilters/DataFilters.js
var import_react85 = __toESM(require_react());
var import_Filter = __toESM(require_Filter());
var import_FormClose2 = __toESM(require_FormClose());

// node_modules/grommet/es6/components/DataFilter/DataFilter.js
var import_react79 = __toESM(require_react());

// node_modules/grommet/es6/components/Data/DataForm.js
var import_react64 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/Form/Form.js
var import_react63 = __toESM(require_react());

// node_modules/grommet/es6/components/Form/propTypes.js
var import_prop_types31 = __toESM(require_prop_types());
var PropType28 = {};
if (true) {
  PropType28 = {
    errors: import_prop_types31.default.shape({}),
    infos: import_prop_types31.default.shape({}),
    kind: import_prop_types31.default.string,
    messages: import_prop_types31.default.shape({
      invalid: import_prop_types31.default.string,
      required: import_prop_types31.default.string
    }),
    onChange: import_prop_types31.default.func,
    onSubmit: import_prop_types31.default.func,
    onReset: import_prop_types31.default.func,
    onValidate: import_prop_types31.default.func,
    validate: import_prop_types31.default.oneOf(["blur", "submit", "change"]),
    value: import_prop_types31.default.shape({})
  };
}
var FormPropTypes = PropType28;

// node_modules/grommet/es6/components/Form/Form.js
var _excluded34 = ["children", "errors", "infos", "messages", "kind", "onChange", "onReset", "onSubmit", "onValidate", "validate", "value"];
function _objectWithoutPropertiesLoose31(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function _extends57() {
  _extends57 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends57.apply(this, arguments);
}
var defaultValue2 = {};
var defaultTouched = {};
var defaultValidationResults = {
  errors: {},
  infos: {}
};
var stringToArray = function stringToArray2(string) {
  var match = string == null ? void 0 : string.match(/^(.+)\[([0-9]+)\]\.(.*)$/);
  if (match) {
    var arrayName = match[1], indexOfArray = match[2], arrayObjName = match[3];
    return {
      indexOfArray,
      arrayName,
      arrayObjName
    };
  }
  return void 0;
};
var getValueAt = function getValueAt2(valueObject, pathArg) {
  if (valueObject === void 0)
    return void 0;
  var path = Array.isArray(pathArg) ? pathArg : pathArg.split(".");
  if (path.length === 1)
    return valueObject[path];
  return getValueAt2(valueObject[path.shift()], path);
};
var setValueAt = function setValueAt2(valueObject, pathArg, value) {
  var object = valueObject;
  var path = Array.isArray(pathArg) ? pathArg : pathArg.split(".");
  if (path.length === 1)
    object[path] = value;
  else {
    var key = path.shift();
    if (!object[key])
      object[key] = {};
    setValueAt2(object[key], path, value);
  }
};
var getFieldValue = function getFieldValue2(name, value) {
  var isArrayField = stringToArray(name);
  if (isArrayField) {
    var _value$arrayName;
    var indexOfArray = isArrayField.indexOfArray, arrayName = isArrayField.arrayName, arrayObjName = isArrayField.arrayObjName;
    var obj = (_value$arrayName = value[arrayName]) == null ? void 0 : _value$arrayName[indexOfArray];
    return arrayObjName ? obj == null ? void 0 : obj[arrayObjName] : obj;
  }
  return getValueAt(value, name);
};
var setFieldValue = function setFieldValue2(name, componentValue, prevValue) {
  var nextValue = _extends57({}, prevValue);
  var isArrayField = stringToArray(name);
  if (isArrayField) {
    var indexOfArray = isArrayField.indexOfArray, arrayName = isArrayField.arrayName, arrayObjName = isArrayField.arrayObjName;
    if (!nextValue[arrayName])
      nextValue[arrayName] = [];
    if (arrayObjName) {
      var _nextValue$arrayName$;
      if (!nextValue[arrayName][indexOfArray])
        nextValue[arrayName][indexOfArray] = (_nextValue$arrayName$ = {}, _nextValue$arrayName$[arrayObjName] = componentValue, _nextValue$arrayName$);
      nextValue[arrayName][indexOfArray][arrayObjName] = componentValue;
    } else
      nextValue[arrayName][indexOfArray] = componentValue;
  } else {
    setValueAt(nextValue, name, componentValue);
  }
  return nextValue;
};
var validate = function validate2(rule, fieldValue, formValue, format3, messages) {
  var result;
  if (typeof rule === "function") {
    result = rule(fieldValue, formValue);
  } else if (rule.regexp) {
    if (!rule.regexp.test(fieldValue)) {
      result = rule.message || format3({
        id: "form.invalid",
        messages
      });
      if (rule.status) {
        result = {
          message: result,
          status: rule.status
        };
      }
    }
  }
  return result;
};
var validateName = function validateName2(validationRules, required) {
  return function(name, formValue, format3, messages) {
    var fieldValue = getFieldValue(name, formValue);
    var validationResult;
    if (required && // false is for CheckBox
    (fieldValue === void 0 || fieldValue === "" || fieldValue === false || Array.isArray(fieldValue) && !fieldValue.length)) {
      validationResult = format3({
        id: "form.required",
        messages
      });
    } else if (validationRules) {
      if (Array.isArray(validationRules)) {
        validationRules.some(function(rule) {
          validationResult = validate(rule, fieldValue, formValue, format3, messages);
          return !!validationResult;
        });
      } else {
        validationResult = validate(validationRules, fieldValue, formValue, format3, messages);
      }
    }
    return validationResult;
  };
};
var validateForm = function validateForm2(validationRules, formValue, format3, messages, omitValid) {
  var nextErrors = {};
  var nextInfos = {};
  validationRules.forEach(function(_ref) {
    var name = _ref[0], _ref$ = _ref[1], field = _ref$.field, input = _ref$.input, validateOn = _ref$.validateOn;
    if (!omitValid) {
      nextErrors[name] = void 0;
      nextInfos[name] = void 0;
    }
    if (!validateOn)
      return;
    var result;
    if (input) {
      result = input(name, formValue, format3, messages);
    }
    if (field && !result) {
      result = field(name, formValue, format3, messages);
    }
    if (typeof result === "object") {
      if (result.status === "info") {
        nextInfos[name] = result.message;
      } else {
        nextErrors[name] = result.message || result;
      }
    } else if (typeof result === "string") {
      nextErrors[name] = result;
    }
  });
  return [nextErrors, nextInfos];
};
var isInstantValidate = function isInstantValidate2(validateOn) {
  return ["blur", "change"].includes(validateOn);
};
var Form = (0, import_react63.forwardRef)(function(_ref2, ref) {
  var children2 = _ref2.children, _ref2$errors = _ref2.errors, errorsProp = _ref2$errors === void 0 ? defaultValidationResults.errors : _ref2$errors, _ref2$infos = _ref2.infos, infosProp = _ref2$infos === void 0 ? defaultValidationResults.infos : _ref2$infos, messages = _ref2.messages, kind = _ref2.kind, onChange = _ref2.onChange, _onReset = _ref2.onReset, _onSubmit = _ref2.onSubmit, onValidate = _ref2.onValidate, _ref2$validate = _ref2.validate, validateOnProp = _ref2$validate === void 0 ? "submit" : _ref2$validate, valueProp = _ref2.value, rest = _objectWithoutPropertiesLoose31(_ref2, _excluded34);
  var formRef = useForwardedRef(ref);
  var _useContext = (0, import_react63.useContext)(MessageContext), format3 = _useContext.format;
  var _useState = (0, import_react63.useState)(valueProp || defaultValue2), valueState = _useState[0], setValueState = _useState[1];
  var value = (0, import_react63.useMemo)(function() {
    return valueProp || valueState;
  }, [valueProp, valueState]);
  var _useState2 = (0, import_react63.useState)(defaultTouched), touched = _useState2[0], setTouched = _useState2[1];
  var _useState3 = (0, import_react63.useState)(validateOnProp), validateOn = _useState3[0], setValidateOn = _useState3[1];
  var _useState4 = (0, import_react63.useState)({
    errors: errorsProp,
    infos: infosProp
  }), validationResults = _useState4[0], setValidationResults = _useState4[1];
  var validationResultsRef = (0, import_react63.useRef)({});
  var _useState5 = (0, import_react63.useState)("unmounted"), mounted = _useState5[0], setMounted = _useState5[1];
  (0, import_react63.useEffect)(function() {
    if (!mounted)
      setMounted("mounting");
    else if (mounted === "mounting")
      setMounted("mounted");
  }, [mounted]);
  var _useState6 = (0, import_react63.useState)(void 0), pendingValidation = _useState6[0], setPendingValidation = _useState6[1];
  var validationRulesRef = (0, import_react63.useRef)({});
  var requiredFields = (0, import_react63.useRef)([]);
  var analyticsRef = (0, import_react63.useRef)({
    start: /* @__PURE__ */ new Date(),
    errors: {}
  });
  var sendAnalytics = useAnalytics();
  var buildValid = (0, import_react63.useCallback)(function(nextErrors) {
    var valid = false;
    valid = requiredFields.current.filter(function(n3) {
      return Object.keys(validationRulesRef.current).includes(n3);
    }).every(function(field) {
      return value[field] && (value[field] !== "" || value[field] !== false);
    });
    if (Object.keys(nextErrors).length > 0)
      valid = false;
    return valid;
  }, [value]);
  var filterRemovedFields = function filterRemovedFields2(prevValidations) {
    var nextValidations = prevValidations;
    return Object.keys(nextValidations).filter(function(n3) {
      return !validationRulesRef.current[n3] || nextValidations[n3] === void 0;
    }).forEach(function(n3) {
      return delete nextValidations[n3];
    });
  };
  var updateAnalytics = function updateAnalytics2() {
    var _validationResultsRef;
    var errorFields = Object.keys((_validationResultsRef = validationResultsRef.current) == null ? void 0 : _validationResultsRef.errors);
    var errorCounts = analyticsRef.current.errors;
    if (errorFields.length > 0) {
      errorFields.forEach(function(key) {
        errorCounts[key] = (errorCounts[key] || 0) + 1;
      });
    }
  };
  var applyValidationRules = (0, import_react63.useCallback)(function(validationRules) {
    var _validateForm = validateForm(validationRules, value, format3, messages), validatedErrors = _validateForm[0], validatedInfos = _validateForm[1];
    setValidationResults(function(prevValidationResults) {
      var nextErrors = _extends57({}, prevValidationResults.errors, validatedErrors);
      var nextInfos = _extends57({}, prevValidationResults.infos, validatedInfos);
      filterRemovedFields(nextErrors);
      filterRemovedFields(nextInfos);
      var nextValidationResults = {
        errors: nextErrors,
        infos: nextInfos
      };
      if (onValidate)
        onValidate(_extends57({}, nextValidationResults, {
          valid: buildValid(nextErrors)
        }));
      validationResultsRef.current = nextValidationResults;
      updateAnalytics();
      return nextValidationResults;
    });
  }, [buildValid, format3, messages, onValidate, value]);
  (0, import_react63.useEffect)(function() {
    var validationRules = Object.entries(validationRulesRef.current);
    if (mounted !== "mounted" && (isInstantValidate(validateOn) || validationRules.some(function(_ref3) {
      var v3 = _ref3[1];
      return isInstantValidate(v3.validateOn);
    })) && Object.keys(value).length > 0 && Object.keys(touched).length === 0) {
      applyValidationRules(validationRules.filter(function(_ref4) {
        var n3 = _ref4[0], v3 = _ref4[1];
        return getFieldValue(n3, value) && v3.validateOn;
      }).filter(function(_ref5) {
        var n3 = _ref5[0];
        return !(Array.isArray(getFieldValue(n3, value)) && getFieldValue(n3, value).length === 0);
      }));
    }
  }, [applyValidationRules, mounted, touched, validateOn, value]);
  (0, import_react63.useEffect)(function() {
    var validationRules = Object.entries(validationRulesRef.current);
    var timer = setTimeout(function() {
      if (pendingValidation && (isInstantValidate(validateOn) || validationRules.some(function(_ref6) {
        var v3 = _ref6[1];
        return isInstantValidate(v3.validateOn);
      }))) {
        applyValidationRules(validationRules.filter(function(_ref7) {
          var n3 = _ref7[0], v3 = _ref7[1];
          return (touched[n3] || pendingValidation.includes(n3)) && v3.validateOn;
        }));
        setPendingValidation(void 0);
      }
    }, 120);
    return function() {
      return clearTimeout(timer);
    };
  }, [applyValidationRules, pendingValidation, touched, validateOn]);
  (0, import_react63.useEffect)(function() {
    var _validationResultsRef2;
    var validationRules = Object.entries(validationRulesRef.current);
    if ((_validationResultsRef2 = validationResultsRef.current) != null && _validationResultsRef2.errors && Object.keys(validationResultsRef.current.errors).length > 0) {
      applyValidationRules(validationRules.filter(function(_ref8) {
        var n3 = _ref8[0];
        return touched[n3] && validationResultsRef.current.errors[n3];
      }));
    }
  }, [applyValidationRules, touched]);
  (0, import_react63.useEffect)(function() {
    var element = formRef.current;
    analyticsRef.current = {
      start: /* @__PURE__ */ new Date(),
      errors: {}
    };
    sendAnalytics({
      type: "formOpen",
      element
    });
    return function() {
      if (!analyticsRef.current.submitted) {
        sendAnalytics({
          type: "formClose",
          element,
          errors: analyticsRef.current.errors,
          elapsed: (/* @__PURE__ */ new Date()).getTime() - analyticsRef.current.start.getTime()
        });
      }
    };
  }, [sendAnalytics, formRef]);
  var formContextValue = (0, import_react63.useMemo)(function() {
    var useFormInput3 = function useFormInput4(_ref9) {
      var name = _ref9.name, componentValue = _ref9.value, initialValue = _ref9.initialValue, validateArg = _ref9.validate;
      var _useState7 = (0, import_react63.useState)(initialValue), inputValue = _useState7[0], setInputValue = _useState7[1];
      var formValue = name ? getFieldValue(name, value) : void 0;
      var keyCreated = (0, import_react63.useRef)(false);
      (0, import_react63.useEffect)(function() {
        if (name && // we have somewhere to put this
        componentValue !== void 0 && // input driving
        componentValue !== formValue) {
          setValueState(function(prevValue) {
            return setFieldValue(name, componentValue, prevValue);
          });
        }
      }, [componentValue, formValue, name]);
      (0, import_react63.useEffect)(
        function() {
          return function() {
            if (keyCreated.current) {
              keyCreated.current = false;
              setValueState(function(prevValue) {
                var nextValue = _extends57({}, prevValue);
                var isArrayField = stringToArray(name);
                if (isArrayField) {
                  var arrayName = isArrayField.arrayName;
                  delete nextValue[arrayName];
                } else {
                  delete nextValue[name];
                }
                return nextValue;
              });
            }
          };
        },
        // eslint-disable-next-line react-hooks/exhaustive-deps
        []
        // only run onmount and unmount
      );
      (0, import_react63.useEffect)(function() {
        if (validateArg) {
          if (!validationRulesRef.current[name]) {
            validationRulesRef.current[name] = {};
          }
          validationRulesRef.current[name].input = validateName(validateArg);
          return function() {
            return delete validationRulesRef.current[name].input;
          };
        }
        return void 0;
      }, [validateArg, name]);
      var useValue;
      if (componentValue !== void 0)
        useValue = componentValue;
      else if (valueProp && name && formValue !== void 0)
        useValue = formValue;
      else if (formValue === void 0 && name)
        useValue = initialValue;
      else
        useValue = inputValue;
      return [useValue, function(nextComponentValue) {
        if (name) {
          var nextTouched = _extends57({}, touched);
          nextTouched[name] = true;
          if (!touched[name]) {
            setTouched(nextTouched);
          }
          if (!(name in value))
            keyCreated.current = true;
          var nextValue = setFieldValue(name, nextComponentValue, value);
          setValueState(nextValue);
          if (onChange)
            onChange(nextValue, {
              touched: nextTouched
            });
        }
        if (initialValue !== void 0)
          setInputValue(nextComponentValue);
      }];
    };
    var useFormField3 = function useFormField4(_ref10) {
      var errorArg = _ref10.error, infoArg = _ref10.info, name = _ref10.name, required = _ref10.required, disabled = _ref10.disabled, validateArg = _ref10.validate, validateOnArg = _ref10.validateOn;
      var error = disabled ? void 0 : errorArg || validationResults.errors[name];
      var info = infoArg || validationResults.infos[name];
      (0, import_react63.useEffect)(function() {
        setValidateOn(function(prevValues) {
          var _extends210;
          if (typeof prevValues === "string") {
            var _ref11;
            return _ref11 = {}, _ref11[name] = validateOnArg || validateOnProp, _ref11;
          }
          return _extends57({}, prevValues, (_extends210 = {}, _extends210[name] = validateOnArg || validateOnProp, _extends210));
        });
      }, [validateOnArg, name]);
      (0, import_react63.useEffect)(function() {
        var index = requiredFields.current.indexOf(name);
        if (required) {
          if (index === -1)
            requiredFields.current.push(name);
        } else if (index !== -1)
          requiredFields.current.splice(index, 1);
        if (validateArg || required) {
          if (!validationRulesRef.current[name]) {
            validationRulesRef.current[name] = {};
          }
          validationRulesRef.current[name].field = validateName(validateArg, required);
          if (validateOnArg && validateOnArg !== "submit") {
            validationRulesRef.current[name].validateOn = validateOnArg;
          } else if (!validateOnArg && validateOnProp !== "submit") {
            validationRulesRef.current[name].validateOn = validateOnProp;
          }
          return function() {
            delete validationRulesRef.current[name].field;
            delete validationRulesRef.current[name].validateOn;
            var requiredFieldIndex = requiredFields.current.indexOf(name);
            if (requiredFieldIndex !== -1) {
              requiredFields.current.splice(requiredFieldIndex, 1);
            }
          };
        }
        return void 0;
      }, [error, name, required, validateArg, disabled, validateOnArg]);
      return {
        error,
        info,
        inForm: true,
        onBlur: validateOnArg === "blur" || validateOn[name] === "blur" ? function() {
          return setPendingValidation(pendingValidation ? [].concat(pendingValidation, [name]) : [name]);
        } : void 0,
        onChange: validateOnArg === "change" || validateOn[name] === "change" ? function() {
          return setPendingValidation(pendingValidation ? [].concat(pendingValidation, [name]) : [name]);
        } : void 0
      };
    };
    return {
      useFormField: useFormField3,
      useFormInput: useFormInput3,
      kind
    };
  }, [onChange, kind, pendingValidation, touched, validateOn, validationResults.errors, validationResults.infos, value, valueProp, validateOnProp]);
  return import_react63.default.createElement("form", _extends57({
    ref: formRef
  }, rest, {
    onReset: function onReset(event) {
      sendAnalytics({
        type: "formReset",
        element: formRef.current,
        data: event,
        errors: analyticsRef.current.errors,
        elapsed: (/* @__PURE__ */ new Date()).getTime() - analyticsRef.current.start.getTime()
      });
      setPendingValidation(void 0);
      if (!valueProp) {
        setValueState(defaultValue2);
        if (onChange)
          onChange(defaultValue2, {
            touched: defaultTouched
          });
      }
      setTouched(defaultTouched);
      setValidationResults(defaultValidationResults);
      analyticsRef.current = {
        start: /* @__PURE__ */ new Date(),
        errors: {}
      };
      if (_onReset) {
        event.persist();
        var adjustedEvent = event;
        adjustedEvent.value = defaultValue2;
        _onReset(adjustedEvent);
      }
    },
    onSubmit: function onSubmit(event) {
      event.preventDefault();
      setPendingValidation(void 0);
      var newValidationRulesRef = Object.keys(validationRulesRef.current).reduce(function(acc, key) {
        acc[key] = validationRulesRef.current[key];
        if (!acc[key].validateOn) {
          acc[key] = _extends57({}, validationRulesRef.current[key], {
            validateOn: "submit"
          });
        }
        return acc;
      }, {});
      var _validateForm2 = validateForm(Object.entries(newValidationRulesRef), value, format3, messages, true), nextErrors = _validateForm2[0], nextInfos = _validateForm2[1];
      setValidationResults(function() {
        var nextValidationResults = {
          errors: nextErrors,
          infos: nextInfos,
          // Show form's validity when clicking on Submit
          valid: buildValid(nextErrors)
        };
        if (onValidate)
          onValidate(nextValidationResults);
        validationResultsRef.current = nextValidationResults;
        updateAnalytics();
        return nextValidationResults;
      });
      if (Object.keys(nextErrors).length === 0 && _onSubmit) {
        event.persist();
        var adjustedEvent = event;
        adjustedEvent.value = value;
        adjustedEvent.touched = touched;
        _onSubmit(adjustedEvent);
        sendAnalytics({
          type: "formSubmit",
          element: formRef.current,
          data: adjustedEvent,
          errors: analyticsRef.current.errors,
          elapsed: (/* @__PURE__ */ new Date()).getTime() - analyticsRef.current.start.getTime()
        });
        analyticsRef.current.errors = {};
        analyticsRef.current.submitted = true;
      }
    }
  }), import_react63.default.createElement(FormContext.Provider, {
    value: formContextValue
  }, children2));
});
Form.displayName = "Form";
Form.propTypes = FormPropTypes;

// node_modules/grommet/es6/components/Data/DataForm.js
var _excluded35 = ["children", "footer", "onDone", "onTouched", "pad", "updateOn"];
function _objectWithoutPropertiesLoose32(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function _extends58() {
  _extends58 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends58.apply(this, arguments);
}
var HideableButton = styled_components_browser_esm_default(Button).withConfig({
  displayName: "DataForm__HideableButton",
  componentId: "sc-v64e1r-0"
})(["", ""], function(props) {
  return props.disabled && "\n  opacity: 0;";
});
var MaxForm = styled_components_browser_esm_default(Form).withConfig({
  displayName: "DataForm__MaxForm",
  componentId: "sc-v64e1r-1"
})(["max-width:100%;", ""], function(props) {
  return props.fill && "max-height: 100%;";
});
var hideButtonProps = {
  "aria-hidden": true,
  disabled: true,
  tabIndex: -1
};
var formSearchKey = "_search";
var formSortKey = "_sort";
var formRangeKey = "_range";
var formStepKey = "_step";
var formPageKey = "_page";
var formColumnsKey = "_columns";
var formGroupByKey = "_groupBy";
var formViewNameKey = "_view";
var viewFormKeyMap = {
  search: formSearchKey,
  sort: formSortKey,
  step: formStepKey,
  page: formPageKey,
  columns: formColumnsKey,
  groupBy: formGroupByKey,
  view: formViewNameKey
};
var flatten = function flatten2(formValue, options) {
  var result = JSON.parse(JSON.stringify(formValue));
  Object.keys(result).forEach(function(k3) {
    var name = k3;
    while (typeof result[name] === "object" && !Array.isArray(result[name]) && (options != null && options.full || !result[name][formRangeKey])) {
      var subPath = Object.keys(result[name])[0];
      var path = name + "." + subPath;
      result[path] = result[name][subPath];
      delete result[name];
      name = path;
    }
  });
  return result;
};
var unflatten = function unflatten2(formValue) {
  var result = JSON.parse(JSON.stringify(formValue));
  var specialKeys = Object.values(viewFormKeyMap);
  Object.keys(result).filter(function(k3) {
    return !specialKeys.includes(k3);
  }).forEach(function(k3) {
    var parts2 = k3.split(".");
    var val = result[k3];
    delete result[k3];
    var parent = result;
    while (parts2.length > 1) {
      var sub = parts2.shift();
      if (!parent[sub])
        parent[sub] = {};
      parent = parent[sub];
    }
    parent[parts2.shift()] = val;
  });
  return result;
};
var viewToFormValue = function viewToFormValue2(view) {
  var result = _extends58({}, (view == null ? void 0 : view.properties) || {});
  Object.keys(result).forEach(function(key) {
    var _result$key, _result$key2;
    if (typeof ((_result$key = result[key]) == null ? void 0 : _result$key.min) === "number" || typeof ((_result$key2 = result[key]) == null ? void 0 : _result$key2.max) === "number") {
      var _result$key3;
      result[key] = (_result$key3 = {}, _result$key3[formRangeKey] = [result[key].min, result[key].max], _result$key3);
    }
  });
  Object.keys(viewFormKeyMap).forEach(function(key) {
    if (view != null && view[key])
      result[viewFormKeyMap[key]] = view[key];
  });
  if (!result[formSearchKey])
    result[formSearchKey] = "";
  if (view != null && view.sort)
    result[formSortKey] = view.sort;
  if (view != null && view.name)
    result[formViewNameKey] = view.name;
  if (view != null && view.columns)
    result[formColumnsKey] = view.columns;
  if (view != null && view.groupBy)
    result[formGroupByKey] = view.groupBy;
  return unflatten(result);
};
var formValueToView = function formValueToView2(value, views) {
  var result = {};
  if (value[formViewNameKey])
    result = JSON.parse(JSON.stringify(views.find(function(v3) {
      return v3.name === value[formViewNameKey];
    })));
  var valueCopy = _extends58({}, value);
  Object.keys(viewFormKeyMap).forEach(function(key) {
    if (valueCopy[viewFormKeyMap[key]]) {
      result[key] = valueCopy[viewFormKeyMap[key]];
    }
    delete valueCopy[viewFormKeyMap[key]];
  });
  var flatValue = flatten(valueCopy);
  result.properties = _extends58({}, result.properties || {}, flatValue);
  Object.keys(result.properties).forEach(function(key) {
    if (result.properties[key][formRangeKey]) {
      result.properties[key] = {
        min: result.properties[key][formRangeKey][0],
        max: result.properties[key][formRangeKey][1]
      };
    }
  });
  return result;
};
var clearEmpty = function clearEmpty2(formValue) {
  var value = formValue;
  Object.keys(value).forEach(function(k3) {
    if (Array.isArray(value[k3]) && value[k3].length === 0)
      delete value[k3];
  });
  return value;
};
var resetPage = function resetPage2(nextFormValue, prevFormValue) {
  if (prevFormValue[formPageKey] && prevFormValue[formPageKey] > 1)
    nextFormValue[formPageKey] = 1;
};
var transformTouched = function transformTouched2(touched, value) {
  var result = {};
  Object.keys(touched).forEach(function(key) {
    var parts2 = key.split(".");
    if (parts2[1] === formRangeKey)
      result[key] = value[parts2[0]];
    else
      result[key] = flatten(value, {
        full: true
      })[key];
  });
  return result;
};
var normalizeValue = function normalizeValue2(nextValue, prevValue, views) {
  if (nextValue[formViewNameKey] && nextValue[formViewNameKey] !== prevValue[formViewNameKey]) {
    return viewToFormValue(views.find(function(v3) {
      return v3.name === nextValue[formViewNameKey];
    }));
  }
  var result = clearEmpty(nextValue);
  if (result[formViewNameKey]) {
    var view = views.find(function(v3) {
      return v3.name === result[formViewNameKey];
    });
    var viewValue = viewToFormValue(view);
    clearEmpty(viewValue);
    if (Object.keys(viewValue).some(function(k3) {
      return (
        // allow mismatch between empty and set strings
        viewValue[k3] && result[k3] && JSON.stringify(result[k3]) !== JSON.stringify(viewValue[k3])
      );
    })) {
      delete result[formViewNameKey];
    }
  }
  return result;
};
var DataForm = function DataForm2(_ref) {
  var children2 = _ref.children, footer = _ref.footer, onDone = _ref.onDone, onTouched = _ref.onTouched, pad = _ref.pad, updateOnProp = _ref.updateOn, rest = _objectWithoutPropertiesLoose32(_ref, _excluded35);
  var _useContext = (0, import_react64.useContext)(DataContext), messages = _useContext.messages, onView = _useContext.onView, updateOnData = _useContext.updateOn, view = _useContext.view, views = _useContext.views;
  var updateOn = updateOnProp != null ? updateOnProp : updateOnData;
  var _useContext2 = (0, import_react64.useContext)(MessageContext), format3 = _useContext2.format;
  var _useState = (0, import_react64.useState)(viewToFormValue(view)), formValue = _useState[0], setFormValue = _useState[1];
  var _useState2 = (0, import_react64.useState)(), changed = _useState2[0], setChanged = _useState2[1];
  var onSubmit = (0, import_react64.useCallback)(function(_ref2) {
    var value = _ref2.value, touched = _ref2.touched;
    var nextValue = normalizeValue(value, formValue, views);
    resetPage(nextValue, formValue);
    setFormValue(nextValue);
    setChanged(false);
    if (onTouched)
      onTouched(transformTouched(touched, nextValue));
    onView(formValueToView(nextValue, views));
    if (onDone)
      onDone();
  }, [formValue, onDone, onTouched, onView, views]);
  var onChange = (0, import_react64.useCallback)(function(value, _ref3) {
    var touched = _ref3.touched;
    var nextValue = normalizeValue(value, formValue, views);
    resetPage(nextValue, formValue);
    setFormValue(nextValue);
    setChanged(true);
    if (updateOn === "change") {
      if (onTouched)
        onTouched(transformTouched(touched, nextValue));
      onView(formValueToView(nextValue, views));
    }
  }, [formValue, onTouched, onView, updateOn, views]);
  var onReset = (0, import_react64.useCallback)(function() {
    setFormValue(viewToFormValue(view));
    setChanged(false);
  }, [view]);
  (0, import_react64.useEffect)(function() {
    return setFormValue(viewToFormValue(view));
  }, [view]);
  var content = children2;
  if (footer !== false && updateOn === "submit" || pad) {
    content = import_react64.default.createElement(Box, {
      fill: "vertical"
    }, import_react64.default.createElement(Box, {
      flex: true,
      overflow: "auto",
      pad: {
        horizontal: pad,
        top: pad
      }
    }, import_react64.default.createElement(Box, {
      flex: false
    }, content)), footer !== false && updateOn === "submit" && import_react64.default.createElement(Footer, {
      flex: false,
      margin: {
        top: "small"
      },
      pad: {
        horizontal: pad,
        bottom: pad
      },
      gap: "small"
    }, import_react64.default.createElement(Button, {
      label: format3({
        id: "dataForm.submit",
        messages: messages == null ? void 0 : messages.dataForm
      }),
      type: "submit",
      primary: true
    }), import_react64.default.createElement(HideableButton, _extends58({
      label: format3({
        id: "dataForm.reset",
        messages: messages == null ? void 0 : messages.dataForm
      }),
      type: "reset",
      onClick: onReset
    }, !changed ? hideButtonProps : {}))));
  }
  return import_react64.default.createElement(MaxForm, _extends58({}, rest, {
    value: formValue,
    onSubmit: updateOn === "submit" ? onSubmit : void 0,
    onChange
  }), content);
};

// node_modules/grommet/es6/components/FormField/FormField.js
var import_react68 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/RadioButtonGroup/RadioButtonGroup.js
var import_react66 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/RadioButton/RadioButton.js
var import_react65 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/RadioButton/StyledRadioButton.js
init_styled_components_browser_esm();
var disabledStyle5 = "\n  opacity: 0.5;\n  cursor: default;\n";
var StyledRadioButtonContainer = styled_components_browser_esm_default.label.withConfig({
  displayName: "StyledRadioButton__StyledRadioButtonContainer",
  componentId: "sc-g1f6ld-0"
})(["display:flex;flex-direction:row;align-items:center;user-select:none;width:fit-content;", " ", ":hover input:not([disabled]) + div,:hover input:not([disabled]) + span{border-color:", ";}:hover{background-color:", ";}", " ", ";"], function(props) {
  return props.disabled && disabledStyle5;
}, function(props) {
  return !props.disabled && "cursor: pointer;";
}, function(props) {
  return normalizeColor(props.theme.radioButton.hover.border.color, props.theme);
}, function(props) {
  return normalizeColor(!props.disabled && props.theme.radioButton.hover && props.theme.radioButton.hover.background && props.theme.radioButton.hover.background.color, props.theme);
}, function(props) {
  return props.focus && !props.focusIndicator && "\n      input:not([disabled]) + div,\n      input:not([disabled]) + span {\n      border-color: " + normalizeColor(props.theme.radioButton.hover.border.color, props.theme) + ";\n    }\n    background-color: " + normalizeColor(!props.disabled && props.theme.radioButton.hover && props.theme.radioButton.hover.background && props.theme.radioButton.hover.background.color, props.theme) + ";\n    ";
}, function(props) {
  return props.theme.radioButton.container.extend;
});
StyledRadioButtonContainer.defaultProps = {};
Object.setPrototypeOf(StyledRadioButtonContainer.defaultProps, defaultProps2);
var StyledRadioButtonInput = styled_components_browser_esm_default.input.withConfig({
  displayName: "StyledRadioButton__StyledRadioButtonInput",
  componentId: "sc-g1f6ld-1"
})(["opacity:0;-moz-appearance:none;width:0;height:0;margin:0;", ";"], function(props) {
  return !props.disabled && "cursor: pointer;";
});
StyledRadioButtonInput.defaultProps = {};
Object.setPrototypeOf(StyledRadioButtonInput.defaultProps, defaultProps2);
var StyledRadioButtonLabel = styled_components_browser_esm_default.span.withConfig({
  displayName: "StyledRadioButton__StyledRadioButtonLabel",
  componentId: "sc-g1f6ld-2"
})(["", ""], function(props) {
  return props.theme.radioButton.font.weight && Ae(["font-weight:", ";"], props.theme.radioButton.font.weight);
});
StyledRadioButtonLabel.defaultProps = {};
Object.setPrototypeOf(StyledRadioButtonLabel.defaultProps, defaultProps2);
var StyledRadioButtonIcon = styled_components_browser_esm_default.svg.withConfig({
  displayName: "StyledRadioButton__StyledRadioButtonIcon",
  componentId: "sc-g1f6ld-3"
})(["box-sizing:border-box;width:", ";height:", ";fill:", ";", ";"], function(props) {
  return props.theme.radioButton.icon.size || props.theme.radioButton.size;
}, function(props) {
  return props.theme.radioButton.icon.size || props.theme.radioButton.size;
}, function(props) {
  return normalizeColor(props.theme.radioButton.check.color || "control", props.theme);
}, function(props) {
  return props.theme.radioButton.icon.extend;
});
StyledRadioButtonIcon.defaultProps = {};
Object.setPrototypeOf(StyledRadioButtonIcon.defaultProps, defaultProps2);
var StyledRadioButtonBox = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledRadioButton__StyledRadioButtonBox",
  componentId: "sc-g1f6ld-4"
})(["background-color:", ";", ";", ";"], function(props) {
  var _props$theme$radioBut;
  return normalizeColor((_props$theme$radioBut = props.theme.radioButton.check.background) == null ? void 0 : _props$theme$radioBut.color, props.theme);
}, function(props) {
  return props.focus && focusStyle();
}, function(props) {
  return props.theme.radioButton.check.extend;
});
StyledRadioButtonBox.defaultProps = {};
Object.setPrototypeOf(StyledRadioButtonBox.defaultProps, defaultProps2);
var StyledRadioButton = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledRadioButton",
  componentId: "sc-g1f6ld-5"
})(["", ";"], function(props) {
  return props.theme.radioButton && props.theme.radioButton.extend;
});
StyledRadioButton.defaultProps = {};
Object.setPrototypeOf(StyledRadioButton.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/RadioButton/propTypes.js
var import_prop_types32 = __toESM(require_prop_types());
var PropType29 = {};
if (true) {
  PropType29 = {
    a11yTitle: import_prop_types32.default.string,
    checked: import_prop_types32.default.bool,
    children: import_prop_types32.default.func,
    disabled: import_prop_types32.default.bool,
    id: import_prop_types32.default.string,
    label: import_prop_types32.default.node,
    name: import_prop_types32.default.string.isRequired,
    onChange: import_prop_types32.default.func
  };
}
var RadioButtonPropTypes = PropType29;

// node_modules/grommet/es6/components/RadioButton/RadioButton.js
var _excluded36 = ["a11yTitle", "checked", "children", "disabled", "focus", "focusIndicator", "id", "label", "name", "onChange"];
function _extends59() {
  _extends59 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends59.apply(this, arguments);
}
function _objectWithoutPropertiesLoose33(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var RadioButton = (0, import_react65.forwardRef)(function(_ref, ref) {
  var a11yTitle = _ref.a11yTitle, checked = _ref.checked, children2 = _ref.children, disabled = _ref.disabled, focus = _ref.focus, focusIndicator = _ref.focusIndicator, id = _ref.id, label = _ref.label, name = _ref.name, onChange = _ref.onChange, rest = _objectWithoutPropertiesLoose33(_ref, _excluded36);
  var theme = (0, import_react65.useContext)(Me) || defaultProps2.theme;
  var _useState = (0, import_react65.useState)(), hover = _useState[0], setHover = _useState[1];
  var normalizedLabel = typeof label === "string" ? import_react65.default.createElement(StyledRadioButtonLabel, null, label) : label;
  var Icon = theme.radioButton.icons.circle;
  var borderColor = normalizeColor(theme.radioButton.border.color, theme);
  if (checked) {
    borderColor = normalizeColor(theme.radioButton.color || "control", theme);
  }
  return import_react65.default.createElement(StyledRadioButtonContainer, _extends59({}, removeUndefined({
    htmlFor: id,
    disabled
  }), {
    onClick: function onClick(event) {
      if (event.target.type !== "radio") {
        event.stopPropagation();
      }
    },
    focus,
    focusIndicator,
    onMouseEnter: function onMouseEnter() {
      return setHover(true);
    },
    onMouseLeave: function onMouseLeave() {
      return setHover(false);
    }
  }), import_react65.default.createElement(StyledRadioButton, {
    as: Box,
    flex: false,
    margin: label ? {
      right: theme.radioButton.gap || "small"
    } : void 0
  }, import_react65.default.createElement(StyledRadioButtonInput, _extends59({
    "aria-label": a11yTitle
  }, rest, {
    ref,
    type: "radio"
  }, removeUndefined({
    id,
    name,
    checked,
    disabled,
    onChange
  }))), children2 ? children2({
    checked,
    focus: focus && focusIndicator,
    hover
  }) : import_react65.default.createElement(StyledRadioButtonBox, {
    focus: focus && focusIndicator,
    as: Box,
    align: "center",
    justify: "center",
    width: theme.radioButton.size,
    height: theme.radioButton.size,
    border: {
      size: theme.radioButton.border.width,
      color: borderColor
    },
    round: theme.radioButton.check.radius
  }, checked && (Icon ? import_react65.default.createElement(Icon, {
    theme,
    as: StyledRadioButtonIcon
  }) : import_react65.default.createElement(StyledRadioButtonIcon, {
    viewBox: "0 0 24 24",
    preserveAspectRatio: "xMidYMid meet"
  }, import_react65.default.createElement("circle", {
    cx: 12,
    cy: 12,
    r: 6
  }))))), normalizedLabel);
});
RadioButton.displayName = "RadioButton";
RadioButton.propTypes = RadioButtonPropTypes;

// node_modules/grommet/es6/components/RadioButtonGroup/propTypes.js
var import_prop_types33 = __toESM(require_prop_types());
var PropType30 = {};
if (true) {
  PropType30 = {
    children: import_prop_types33.default.func,
    disabled: import_prop_types33.default.bool,
    name: import_prop_types33.default.string.isRequired,
    onChange: import_prop_types33.default.func,
    options: import_prop_types33.default.oneOfType([import_prop_types33.default.arrayOf(import_prop_types33.default.string), import_prop_types33.default.arrayOf(import_prop_types33.default.number), import_prop_types33.default.arrayOf(import_prop_types33.default.bool), import_prop_types33.default.arrayOf(import_prop_types33.default.shape({
      disabled: import_prop_types33.default.bool,
      id: import_prop_types33.default.string,
      label: import_prop_types33.default.oneOfType([import_prop_types33.default.string, import_prop_types33.default.element]),
      value: import_prop_types33.default.oneOfType([import_prop_types33.default.string, import_prop_types33.default.number, import_prop_types33.default.bool]).isRequired
    }))]).isRequired,
    value: import_prop_types33.default.oneOfType([import_prop_types33.default.string, import_prop_types33.default.number, import_prop_types33.default.bool, import_prop_types33.default.object])
  };
}
var RadioButtonGroupPropTypes = PropType30;

// node_modules/grommet/es6/components/RadioButtonGroup/RadioButtonGroup.js
var _excluded37 = ["children", "defaultValue", "disabled", "focusIndicator", "name", "onChange", "options", "value", "gap"];
var _excluded211 = ["disabled", "id", "label", "value"];
function _extends60() {
  _extends60 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends60.apply(this, arguments);
}
function _objectWithoutPropertiesLoose34(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var RadioButtonGroup = (0, import_react66.forwardRef)(function(_ref, ref) {
  var children2 = _ref.children, defaultValue3 = _ref.defaultValue, disabled = _ref.disabled, _ref$focusIndicator = _ref.focusIndicator, focusIndicator = _ref$focusIndicator === void 0 ? true : _ref$focusIndicator, name = _ref.name, onChange = _ref.onChange, optionsProp = _ref.options, valueProp = _ref.value, gap = _ref.gap, rest = _objectWithoutPropertiesLoose34(_ref, _excluded37);
  var formContext = (0, import_react66.useContext)(FormContext);
  var theme = (0, import_react66.useContext)(Me) || defaultProps2.theme;
  var options = optionsProp.map(function(o3) {
    return typeof o3 !== "object" ? {
      disabled,
      id: rest.id ? rest.id + "-" + o3 : "" + o3,
      // force string
      label: typeof o3 !== "string" ? JSON.stringify(o3) : o3,
      value: o3
    } : _extends60({
      disabled
    }, o3);
  });
  var _formContext$useFormI = formContext.useFormInput({
    name,
    value: valueProp,
    initialValue: defaultValue3 != null ? defaultValue3 : ""
  }), value = _formContext$useFormI[0], setValue = _formContext$useFormI[1];
  var _useState = (0, import_react66.useState)(), focus = _useState[0], setFocus = _useState[1];
  var optionRefs = (0, import_react66.useRef)([]);
  var valueIndex = import_react66.default.useMemo(function() {
    var result;
    options.some(function(option, index) {
      if (option.value === value) {
        result = index;
        return true;
      }
      return false;
    });
    return result;
  }, [options, value]);
  (0, import_react66.useEffect)(function() {
    if (focus && !valueIndex) {
      optionRefs.current[0].focus();
    }
  }, [focus, valueIndex]);
  var onNext = function onNext2() {
    if (valueIndex !== void 0 && valueIndex < options.length - 1) {
      var nextIndex = valueIndex + 1;
      optionRefs.current[nextIndex].click();
    }
  };
  var onPrevious = function onPrevious2() {
    if (valueIndex > 0) {
      var nextIndex = valueIndex - 1;
      optionRefs.current[nextIndex].click();
    }
  };
  var onFocus = function onFocus2() {
    setTimeout(function() {
      setFocus(true);
    }, 1);
  };
  var onRadioButtonChange = function onRadioButtonChange2(event, optionValue) {
    setValue(optionValue);
    if (onChange) {
      event.persist();
      var adjustedEvent = event;
      adjustedEvent.value = optionValue;
      onChange(adjustedEvent);
    }
  };
  var onBlur = function onBlur2() {
    return setFocus(false);
  };
  return import_react66.default.createElement(Keyboard, {
    target: "document",
    onUp: focus ? onPrevious : void 0,
    onDown: focus ? onNext : void 0,
    onLeft: focus ? onPrevious : void 0,
    onRight: focus ? onNext : void 0
  }, import_react66.default.createElement(Box, _extends60({
    ref,
    role: "radiogroup"
  }, theme.radioButtonGroup.container, {
    gap: gap || (theme.radioButtonGroup.container && theme.radioButtonGroup.container.gap ? theme.radioButtonGroup.container.gap : "small")
  }, rest), options.map(function(_ref2, index) {
    var optionDisabled = _ref2.disabled, id = _ref2.id, label = _ref2.label, optionValue = _ref2.value, optionRest = _objectWithoutPropertiesLoose34(_ref2, _excluded211);
    var focusable = optionValue === value || value === void 0 && !index || // when nothing has been selected, show focus
    // on the first radiobutton
    value === "" && index === 0;
    if (optionRest.checked) {
      console.warn(
        // eslint-disable-next-line max-len
        "'checked' prop of an individual RadioButton shouldn't be used in a RadioButtonGroup component. Use the RadioButtonGroup 'value' prop instead."
      );
    }
    return import_react66.default.createElement(RadioButton, _extends60({
      ref: function ref2(aRef) {
        optionRefs.current[index] = aRef;
      },
      key: optionValue,
      name,
      label: !children2 ? label : void 0,
      disabled: optionDisabled,
      checked: optionValue === value,
      focus: focus && focusable,
      focusIndicator,
      id,
      value: optionValue,
      onFocus,
      onBlur,
      onChange: function onChange2(event) {
        return onRadioButtonChange(event, optionValue);
      },
      tabIndex: focusable ? "0" : "-1"
      // necessary for Firefox
    }, optionRest), children2 ? function(state) {
      return children2(optionsProp[index], state);
    } : null);
  })));
});
RadioButtonGroup.displayName = "RadioButtonGroup";
RadioButtonGroup.propTypes = RadioButtonGroupPropTypes;

// node_modules/grommet/es6/components/TextInput/TextInput.js
var import_react67 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/TextInput/StyledTextInput.js
init_styled_components_browser_esm();
var getPlainStyle = function getPlainStyle2(plain) {
  if (plain === "full") {
    return Ae(["", " padding:0;"], plainInputStyle);
  }
  return plain && plainInputStyle;
};
var StyledTextInput = styled_components_browser_esm_default.input.withConfig({
  displayName: "StyledTextInput",
  componentId: "sc-1x30a0s-0"
})(["", " ", " ", " ", " ", " ", " ", ";"], inputStyle, function(props) {
  return getPlainStyle(props.plain);
}, function(props) {
  return props.icon && inputPadForIcon;
}, function(props) {
  return props.disabled && disabledStyle(props.theme.textInput.disabled && props.theme.textInput.disabled.opacity);
}, function(props) {
  return props.textAlign && textAlignStyle;
}, function(props) {
  return props.widthProp && widthStyle(props.widthProp, props.theme);
}, function(props) {
  return props.theme.textInput && props.theme.textInput.extend;
});
StyledTextInput.defaultProps = {};
Object.setPrototypeOf(StyledTextInput.defaultProps, defaultProps2);
var StyledTextInputContainer = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledTextInput__StyledTextInputContainer",
  componentId: "sc-1x30a0s-1"
})(["position:relative;width:100%;", ";"], function(props) {
  return props.theme.textInput && props.theme.textInput.container && props.theme.textInput.container.extend;
});
StyledTextInputContainer.defaultProps = {};
Object.setPrototypeOf(StyledTextInputContainer.defaultProps, defaultProps2);
var StyledPlaceholder = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledTextInput__StyledPlaceholder",
  componentId: "sc-1x30a0s-2"
})(["position:absolute;left:", "px;top:50%;transform:translateY(-50%);display:flex;justify-content:center;pointer-events:none;", ";"], function(props) {
  return parseMetricToNum(getInputPadBySide(props, "left")) - parseMetricToNum(props.theme.global.control.border.width);
}, function(props) {
  return props.theme.textInput && props.theme.textInput.placeholder && props.theme.textInput.placeholder.extend;
});
StyledPlaceholder.defaultProps = {};
Object.setPrototypeOf(StyledPlaceholder.defaultProps, defaultProps2);
var StyledIcon = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledTextInput__StyledIcon",
  componentId: "sc-1x30a0s-3"
})(["position:absolute;display:flex;justify:center;top:50%;transform:translateY(-50%);pointer-events:none;", ""], function(props) {
  return props.reverse ? "right: " + getInputPadBySide(props, "right") + ";" : "left: " + getInputPadBySide(props, "left") + ";";
});
var StyledSuggestions = styled_components_browser_esm_default.ol.withConfig({
  displayName: "StyledTextInput__StyledSuggestions",
  componentId: "sc-1x30a0s-4"
})(["border-top-left-radius:0;border-top-right-radius:0;margin:0;padding:0;list-style-type:none;", ";"], function(props) {
  return props.theme.textInput && props.theme.textInput.suggestions && props.theme.textInput.suggestions.extend;
});
StyledSuggestions.defaultProps = {};
Object.setPrototypeOf(StyledSuggestions.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/TextInput/propTypes.js
var import_prop_types34 = __toESM(require_prop_types());
var PropType31 = {};
if (true) {
  PropType31 = {
    a11yTitle: import_prop_types34.default.string,
    defaultSuggestion: import_prop_types34.default.number,
    dropAlign: import_prop_types34.default.shape({
      top: import_prop_types34.default.oneOf(["top", "bottom"]),
      bottom: import_prop_types34.default.oneOf(["top", "bottom"]),
      right: import_prop_types34.default.oneOf(["left", "right"]),
      left: import_prop_types34.default.oneOf(["left", "right"])
    }),
    dropHeight: import_prop_types34.default.oneOfType([import_prop_types34.default.oneOf(["xsmall", "small", "medium", "large", "xlarge"]), import_prop_types34.default.string]),
    dropTarget: import_prop_types34.default.object,
    dropProps: import_prop_types34.default.object,
    icon: import_prop_types34.default.element,
    id: import_prop_types34.default.string,
    focusIndicator: import_prop_types34.default.bool,
    messages: import_prop_types34.default.shape({
      enterSelect: import_prop_types34.default.string,
      suggestionsCount: import_prop_types34.default.string,
      suggestionsExist: import_prop_types34.default.string,
      suggestionIsOpen: import_prop_types34.default.string
    }),
    name: import_prop_types34.default.string,
    onChange: import_prop_types34.default.func,
    onSelect: import_prop_types34.default.func,
    onSuggestionSelect: import_prop_types34.default.func,
    onSuggestionsOpen: import_prop_types34.default.func,
    onSuggestionsClose: import_prop_types34.default.func,
    placeholder: import_prop_types34.default.node,
    plain: import_prop_types34.default.oneOfType([import_prop_types34.default.bool, import_prop_types34.default.oneOf(["full"])]),
    reverse: import_prop_types34.default.bool,
    size: import_prop_types34.default.oneOfType([import_prop_types34.default.oneOf(["xsmall", "small", "medium", "large", "xlarge", "xxlarge", "2xl", "3xl", "4xl", "5xl", "6xl"]), import_prop_types34.default.string]),
    suggestions: import_prop_types34.default.arrayOf(import_prop_types34.default.oneOfType([import_prop_types34.default.shape({
      label: import_prop_types34.default.node,
      // eslint-disable-next-line
      value: import_prop_types34.default.any
      // this is intentional any
    }), import_prop_types34.default.string])),
    textAlign: import_prop_types34.default.oneOf(["start", "center", "end"]),
    value: import_prop_types34.default.oneOfType([import_prop_types34.default.string, import_prop_types34.default.number]),
    width: widthPropType
  };
}
var TextInputPropTypes = PropType31;

// node_modules/grommet/es6/components/TextInput/TextInput.js
var _excluded38 = ["a11yTitle", "defaultSuggestion", "defaultValue", "dropAlign", "dropHeight", "dropTarget", "dropProps", "focusIndicator", "icon", "id", "messages", "name", "onBlur", "onChange", "onFocus", "onKeyDown", "onSelect", "onSuggestionSelect", "onSuggestionsClose", "onSuggestionsOpen", "placeholder", "plain", "readOnly", "reverse", "suggestions", "textAlign", "value", "width"];
function _extends61() {
  _extends61 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends61.apply(this, arguments);
}
function _objectWithoutPropertiesLoose35(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var renderLabel = function renderLabel2(suggestion) {
  if (suggestion && typeof suggestion === "object") {
    return suggestion.label || suggestion.value;
  }
  return suggestion;
};
var stringLabel = function stringLabel2(suggestion) {
  if (suggestion && typeof suggestion === "object") {
    if (suggestion.label && typeof suggestion.label === "string") {
      return suggestion.label;
    }
    return suggestion.value;
  }
  return suggestion;
};
var ContainerBox = styled_components_browser_esm_default(Box).withConfig({
  displayName: "TextInput__ContainerBox",
  componentId: "sc-1ai0c08-0"
})(["", ";@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none){width:100%;}"], function(props) {
  return props.dropHeight ? sizeStyle("max-height", props.dropHeight, props.theme) : "max-height: inherit;";
});
var defaultDropAlign = {
  top: "bottom",
  left: "left"
};
var TextInput = (0, import_react67.forwardRef)(function(_ref, ref) {
  var _inputRef$current;
  var a11yTitle = _ref.a11yTitle, defaultSuggestion = _ref.defaultSuggestion, defaultValue3 = _ref.defaultValue, _ref$dropAlign = _ref.dropAlign, dropAlign2 = _ref$dropAlign === void 0 ? defaultDropAlign : _ref$dropAlign, dropHeight = _ref.dropHeight, dropTarget = _ref.dropTarget, dropProps5 = _ref.dropProps, _ref$focusIndicator = _ref.focusIndicator, focusIndicator = _ref$focusIndicator === void 0 ? true : _ref$focusIndicator, icon = _ref.icon, id = _ref.id, messages = _ref.messages, name = _ref.name, _onBlur = _ref.onBlur, onChange = _ref.onChange, _onFocus = _ref.onFocus, onKeyDown = _ref.onKeyDown, onSelect = _ref.onSelect, onSuggestionSelect = _ref.onSuggestionSelect, onSuggestionsClose = _ref.onSuggestionsClose, onSuggestionsOpen = _ref.onSuggestionsOpen, placeholder = _ref.placeholder, plain = _ref.plain, readOnly = _ref.readOnly, reverse = _ref.reverse, suggestions = _ref.suggestions, textAlign = _ref.textAlign, valueProp = _ref.value, widthProp = _ref.width, rest = _objectWithoutPropertiesLoose35(_ref, _excluded38);
  var theme = (0, import_react67.useContext)(Me) || defaultProps2.theme;
  var _useContext = (0, import_react67.useContext)(MessageContext), format3 = _useContext.format;
  var announce = (0, import_react67.useContext)(AnnounceContext);
  var formContext = (0, import_react67.useContext)(FormContext);
  var inputRef = useForwardedRef(ref);
  var dropRef = (0, import_react67.useRef)();
  var suggestionsRef = (0, import_react67.useRef)();
  var _formContext$useFormI = formContext.useFormInput({
    name: readOnly ? void 0 : name,
    value: valueProp
  }), value = _formContext$useFormI[0], setValue = _formContext$useFormI[1];
  var _useState = (0, import_react67.useState)(), focus = _useState[0], setFocus = _useState[1];
  var _useState2 = (0, import_react67.useState)(false), showDrop = _useState2[0], setShowDrop = _useState2[1];
  var handleSuggestionSelect = (0, import_react67.useMemo)(function() {
    return onSelect && !onSuggestionSelect ? onSelect : onSuggestionSelect;
  }, [onSelect, onSuggestionSelect]);
  var handleTextSelect = (0, import_react67.useMemo)(function() {
    return onSelect && onSuggestionSelect ? onSelect : void 0;
  }, [onSelect, onSuggestionSelect]);
  var _useState3 = (0, import_react67.useState)(), suggestionsAtClose = _useState3[0], setSuggestionsAtClose = _useState3[1];
  var openDrop = (0, import_react67.useCallback)(function() {
    setShowDrop(true);
    announce(format3({
      id: "textInput.suggestionIsOpen",
      messages
    }));
    announce(suggestions.length + " " + format3({
      id: "textInput.suggestionsCount",
      messages
    }));
    if (onSuggestionsOpen)
      onSuggestionsOpen();
  }, [announce, messages, format3, onSuggestionsOpen, suggestions]);
  var closeDrop = (0, import_react67.useCallback)(function() {
    setSuggestionsAtClose(suggestions);
    setShowDrop(false);
    if (onSuggestionsClose)
      onSuggestionsClose();
  }, [onSuggestionsClose, suggestions]);
  var clickOutside = (0, import_react67.useCallback)(function(event) {
    if (event.target !== inputRef.current)
      closeDrop();
  }, [inputRef, closeDrop]);
  (0, import_react67.useEffect)(function() {
    if (focus && !showDrop && suggestions && suggestions.length && (!suggestionsAtClose || suggestionsAtClose.length !== suggestions.length)) {
      openDrop();
    }
  }, [focus, openDrop, showDrop, suggestions, suggestionsAtClose]);
  (0, import_react67.useEffect)(function() {
    if (showDrop && (!suggestions || !suggestions.length)) {
      closeDrop();
    }
  }, [closeDrop, showDrop, suggestions]);
  var valueSuggestionIndex = (0, import_react67.useMemo)(function() {
    return suggestions ? suggestions.map(function(suggestion) {
      return typeof suggestion === "object" ? suggestion.value : suggestion;
    }).indexOf(value) : -1;
  }, [suggestions, value]);
  var resetSuggestionIndex = (0, import_react67.useMemo)(function() {
    if (valueSuggestionIndex === -1 && typeof defaultSuggestion === "number") {
      return defaultSuggestion;
    }
    return valueSuggestionIndex;
  }, [defaultSuggestion, valueSuggestionIndex]);
  var _useState4 = (0, import_react67.useState)(resetSuggestionIndex), activeSuggestionIndex = _useState4[0], setActiveSuggestionIndex = _useState4[1];
  var _useState5 = (0, import_react67.useState)(), mouseMovedSinceLastKey = _useState5[0], setMouseMovedSinceLastKey = _useState5[1];
  (0, import_react67.useEffect)(function() {
    return setActiveSuggestionIndex(valueSuggestionIndex);
  }, [valueSuggestionIndex]);
  (0, import_react67.useEffect)(function() {
    if (!showDrop)
      setActiveSuggestionIndex(resetSuggestionIndex);
  }, [resetSuggestionIndex, showDrop]);
  (0, import_react67.useEffect)(function() {
    if (activeSuggestionIndex >= 0) {
      var label = stringLabel(suggestions[activeSuggestionIndex]);
      announce(label + " " + format3({
        id: "textInput.enterSelect",
        messages
      }));
    }
  }, [activeSuggestionIndex, announce, messages, format3, suggestions]);
  (0, import_react67.useEffect)(function() {
    var timer = setTimeout(function() {
      var list = suggestionsRef.current;
      if (showDrop && activeSuggestionIndex !== -1 && list) {
        var container = list.parentNode;
        var item = list.children[activeSuggestionIndex];
        if (container.scrollTo) {
          if (isNodeAfterScroll(item, container))
            container.scrollTo(0, item.offsetTop - (container.getBoundingClientRect().height - item.getBoundingClientRect().height));
          else if (isNodeBeforeScroll(item, container))
            container.scrollTo(0, item.offsetTop);
        }
      }
    }, 50);
    return function() {
      return clearTimeout(timer);
    };
  }, [activeSuggestionIndex, showDrop]);
  var setValueFromSuggestion = function setValueFromSuggestion2(event, suggestion) {
    inputRef.current.focus();
    inputRef.current.value = suggestion;
    closeDrop();
    if (handleSuggestionSelect) {
      if (event.persist)
        event.persist();
      var adjustedEvent = event;
      adjustedEvent.suggestion = suggestion;
      handleSuggestionSelect(adjustedEvent);
    }
    setValue(suggestion);
  };
  var onNextSuggestion = (0, import_react67.useCallback)(function(event) {
    event.preventDefault();
    var nextActiveIndex = Math.min(activeSuggestionIndex + 1, suggestions.length - 1);
    setActiveSuggestionIndex(nextActiveIndex);
    setMouseMovedSinceLastKey(false);
  }, [activeSuggestionIndex, suggestions]);
  var onPreviousSuggestion = (0, import_react67.useCallback)(function(event) {
    event.preventDefault();
    var nextActiveIndex = Math.max(activeSuggestionIndex - 1, 0);
    setActiveSuggestionIndex(nextActiveIndex);
    setMouseMovedSinceLastKey(false);
  }, [activeSuggestionIndex]);
  var hasValue = value || ((_inputRef$current = inputRef.current) == null ? void 0 : _inputRef$current.value);
  var showStyledPlaceholder = (0, import_react67.useMemo)(function() {
    return placeholder && typeof placeholder !== "string" && !hasValue;
  }, [hasValue, placeholder]);
  var drop;
  var extraProps = {
    onSelect: handleTextSelect
  };
  if (showDrop) {
    drop = import_react67.default.createElement(Drop, _extends61({
      ref: dropRef,
      id: id ? "text-input-drop__" + id : void 0,
      align: dropAlign2,
      responsive: false,
      target: dropTarget || inputRef.current,
      onClickOutside: clickOutside,
      onEsc: closeDrop
    }, dropProps5), import_react67.default.createElement(ContainerBox, {
      id: id ? "listbox__" + id : void 0,
      role: "listbox",
      overflow: "auto",
      dropHeight,
      onMouseMove: function onMouseMove() {
        return setMouseMovedSinceLastKey(true);
      }
    }, import_react67.default.createElement(StyledSuggestions, {
      ref: suggestionsRef
    }, import_react67.default.createElement(InfiniteScroll, {
      items: suggestions,
      step: theme.select.step,
      show: activeSuggestionIndex !== -1 ? activeSuggestionIndex : void 0
    }, function(suggestion, index, itemRef) {
      var active = activeSuggestionIndex === index;
      var selected = suggestion === value;
      var renderedLabel = renderLabel(suggestion);
      var child;
      if (typeof renderedLabel !== "string")
        child = renderedLabel;
      else if (!theme.button.option)
        child = import_react67.default.createElement(Box, {
          align: "start",
          pad: "small"
        }, renderedLabel);
      return import_react67.default.createElement("li", {
        key: stringLabel(suggestion) + "-" + index,
        ref: itemRef
      }, import_react67.default.createElement(Button, {
        id: id ? "listbox-option-" + index + "__" + id : void 0,
        role: "option",
        "aria-selected": selected ? "true" : "false",
        active,
        fill: "horizontal",
        plain: !child ? void 0 : true,
        align: "start",
        kind: !child ? "option" : void 0,
        label: !child ? renderedLabel : void 0,
        onClick: function onClick(event) {
          return setValueFromSuggestion(event, suggestion);
        },
        onMouseMove: mouseMovedSinceLastKey && activeSuggestionIndex !== index ? function() {
          return setActiveSuggestionIndex(index);
        } : void 0
      }, child));
    }))));
  }
  var keyboardProps = {
    onKeyDown
  };
  if (showDrop) {
    keyboardProps.onEnter = function(event) {
      event.preventDefault();
      if (activeSuggestionIndex >= 0)
        setValueFromSuggestion(event, suggestions[activeSuggestionIndex]);
      else
        closeDrop();
    };
    if (activeSuggestionIndex > 0)
      keyboardProps.onUp = onPreviousSuggestion;
    if (activeSuggestionIndex < suggestions.length - 1)
      keyboardProps.onDown = onNextSuggestion;
    keyboardProps.onTab = closeDrop;
  } else if (suggestions && suggestions.length > 0) {
    keyboardProps.onDown = openDrop;
  }
  var comboboxProps = {};
  var activeOptionID;
  if (id && (suggestions == null ? void 0 : suggestions.length) > -1) {
    if (showDrop && activeSuggestionIndex > -1) {
      activeOptionID = "listbox-option-" + activeSuggestionIndex + "__" + id;
    }
    comboboxProps = {
      "aria-activedescendant": activeOptionID,
      "aria-autocomplete": "list",
      "aria-expanded": showDrop ? "true" : "false",
      "aria-controls": showDrop ? "listbox__" + id : void 0,
      role: "combobox"
    };
  }
  var textInputIcon = useSizedIcon(icon, rest.size, theme);
  return import_react67.default.createElement(StyledTextInputContainer, {
    plain
  }, showStyledPlaceholder && import_react67.default.createElement(StyledPlaceholder, null, placeholder), textInputIcon && import_react67.default.createElement(StyledIcon, {
    reverse,
    theme
  }, textInputIcon), import_react67.default.createElement(Keyboard, _extends61({
    target: focus ? "document" : void 0
  }, keyboardProps), import_react67.default.createElement(StyledTextInput, _extends61({
    "aria-label": a11yTitle,
    ref: inputRef,
    id,
    name,
    autoComplete: "off",
    plain,
    placeholder: typeof placeholder === "string" ? placeholder : void 0,
    icon,
    reverse,
    focus,
    focusIndicator,
    textAlign,
    widthProp
  }, rest, extraProps, comboboxProps, {
    defaultValue: renderLabel(defaultValue3),
    value: renderLabel(value),
    readOnly,
    onFocus: function onFocus(event) {
      if (!focus) {
        setFocus(true);
        if (suggestions && suggestions.length > 0) {
          announce(format3({
            id: "textInput.suggestionsExist",
            messages
          }));
          openDrop();
        }
        if (_onFocus)
          _onFocus(event);
      }
    },
    onBlur: function onBlur(event) {
      if (!event.relatedTarget || event.relatedTarget !== dropRef.current) {
        setFocus(false);
        if (_onBlur)
          _onBlur(event);
      }
    },
    onChange: readOnly ? void 0 : function(event) {
      if (suggestions && focus && !showDrop) {
        openDrop();
      }
      setValue(event.target.value);
      setActiveSuggestionIndex(resetSuggestionIndex);
      if (onChange)
        onChange(event);
    }
  }))), drop);
});
TextInput.displayName = "TextInput";
TextInput.propTypes = TextInputPropTypes;

// node_modules/grommet/es6/components/FormField/propTypes.js
var import_prop_types35 = __toESM(require_prop_types());
var PropType32 = {};
if (true) {
  PropType32 = {
    a11yTitle: import_prop_types35.default.string,
    component: import_prop_types35.default.oneOfType([import_prop_types35.default.func, import_prop_types35.default.object]),
    contentProps: import_prop_types35.default.object,
    disabled: import_prop_types35.default.bool,
    error: import_prop_types35.default.oneOfType([import_prop_types35.default.string, import_prop_types35.default.node]),
    help: import_prop_types35.default.oneOfType([import_prop_types35.default.string, import_prop_types35.default.node]),
    htmlFor: import_prop_types35.default.string,
    info: import_prop_types35.default.oneOfType([import_prop_types35.default.string, import_prop_types35.default.node]),
    label: import_prop_types35.default.oneOfType([import_prop_types35.default.string, import_prop_types35.default.node]),
    name: import_prop_types35.default.string,
    margin: marginProp,
    pad: import_prop_types35.default.bool,
    required: import_prop_types35.default.oneOfType([import_prop_types35.default.bool, import_prop_types35.default.shape({
      indicator: import_prop_types35.default.bool
    })]),
    validate: import_prop_types35.default.oneOfType([import_prop_types35.default.shape({
      regexp: import_prop_types35.default.instanceOf(RegExp),
      // regular expression
      message: import_prop_types35.default.oneOfType([import_prop_types35.default.string, import_prop_types35.default.node]),
      status: import_prop_types35.default.oneOf(["error", "info"])
    }), import_prop_types35.default.func, import_prop_types35.default.arrayOf(import_prop_types35.default.oneOfType([import_prop_types35.default.shape({
      regexp: import_prop_types35.default.instanceOf(RegExp),
      // regular expression
      message: import_prop_types35.default.oneOfType([import_prop_types35.default.string, import_prop_types35.default.node]),
      status: import_prop_types35.default.oneOf(["error", "info"])
    }), import_prop_types35.default.func]))]),
    validateOn: import_prop_types35.default.oneOf(["blur", "submit", "change"])
  };
}
var FormFieldPropTypes = PropType32;

// node_modules/grommet/es6/components/FormField/FormField.js
var _excluded39 = ["error", "info", "message", "type"];
var _excluded212 = ["component", "disabled", "invalid", "name", "onChange"];
var _excluded310 = ["children", "className", "component", "contentProps", "disabled", "error", "help", "htmlFor", "info", "label", "margin", "name", "onBlur", "onChange", "onFocus", "pad", "required", "style", "validate", "validateOn"];
function _extends62() {
  _extends62 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends62.apply(this, arguments);
}
function _objectWithoutPropertiesLoose36(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var grommetInputNames = ["CheckBox", "CheckBoxGroup", "TextInput", "Select", "MaskedInput", "SelectMultiple", "TextArea", "DateInput", "FileInput", "RadioButtonGroup", "RangeInput", "RangeSelector", "StarRating", "ThumbsRating"];
var grommetInputPadNames = ["CheckBox", "CheckBoxGroup", "RadioButtonGroup", "RangeInput", "RangeSelector"];
var isGrommetInput = function isGrommetInput2(comp) {
  return comp && (grommetInputNames.indexOf(comp.displayName) !== -1 || grommetInputPadNames.indexOf(comp.displayName) !== -1);
};
var FormFieldBox = styled_components_browser_esm_default(Box).withConfig({
  displayName: "FormField__FormFieldBox",
  componentId: "sc-m9hood-0"
})(["", " ", ""], function(props) {
  return props.focus && focusStyle({
    justBorder: true
  });
}, function(props) {
  return props.theme.formField && props.theme.formField.extend;
});
var FormFieldContentBox = styled_components_browser_esm_default(Box).withConfig({
  displayName: "FormField__FormFieldContentBox",
  componentId: "sc-m9hood-1"
})(["", ""], function(props) {
  return props.focus && focusStyle({
    justBorder: true
  });
});
var StyledMessageContainer = styled_components_browser_esm_default(Box).withConfig({
  displayName: "FormField__StyledMessageContainer",
  componentId: "sc-m9hood-2"
})(["", ""], function(props) {
  return props.messageType && props.theme.formField[props.messageType].container && props.theme.formField[props.messageType].container.extend;
});
var RequiredText = styled_components_browser_esm_default(Text).withConfig({
  displayName: "FormField__RequiredText",
  componentId: "sc-m9hood-3"
})(["color:inherit;font-weight:inherit;line-height:inherit;"]);
var ScreenReaderOnly = styled_components_browser_esm_default(Text).withConfig({
  displayName: "FormField__ScreenReaderOnly",
  componentId: "sc-m9hood-4"
})(["position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);border:0;"]);
var Message = function Message2(_ref) {
  var error = _ref.error, info = _ref.info, message = _ref.message, type = _ref.type, rest = _objectWithoutPropertiesLoose36(_ref, _excluded39);
  var theme = (0, import_react68.useContext)(Me) || defaultProps2.theme;
  if (message) {
    var icon;
    var containerProps;
    if (type) {
      icon = theme.formField[type] && theme.formField[type].icon;
      containerProps = theme.formField[type] && theme.formField[type].container;
    }
    var messageContent;
    if (typeof message === "string")
      messageContent = import_react68.default.createElement(Text, rest, message);
    else
      messageContent = import_react68.default.createElement(Box, rest, message);
    return icon || containerProps ? import_react68.default.createElement(StyledMessageContainer, _extends62({
      direction: "row",
      messageType: type
    }, containerProps), icon && import_react68.default.createElement(Box, {
      flex: false
    }, icon), messageContent) : messageContent;
  }
  return null;
};
var Input = function Input2(_ref2) {
  var component = _ref2.component, disabled = _ref2.disabled, invalid = _ref2.invalid, name = _ref2.name, _onChange = _ref2.onChange, rest = _objectWithoutPropertiesLoose36(_ref2, _excluded212);
  var formContext = (0, import_react68.useContext)(FormContext);
  var _formContext$useFormI = formContext.useFormInput({
    name,
    value: rest.value
  }), value = _formContext$useFormI[0], setValue = _formContext$useFormI[1];
  var InputComponent = component || TextInput;
  var extraProps = isGrommetInput(InputComponent) ? {
    focusIndicator: false,
    onChange: _onChange,
    plain: true
  } : {
    value,
    onChange: function onChange(event) {
      setValue(event.value !== void 0 ? event.value : event.target.value);
      if (_onChange)
        _onChange(event);
    }
  };
  return import_react68.default.createElement(InputComponent, _extends62({
    name,
    disabled,
    "aria-invalid": invalid || void 0
  }, rest, extraProps));
};
var useDebounce = function useDebounce2() {
  var _useState = (0, import_react68.useState)(), func = _useState[0], setFunc = _useState[1];
  var theme = (0, import_react68.useContext)(Me) || defaultProps2.theme;
  (0, import_react68.useEffect)(function() {
    var timer;
    if (func)
      timer = setTimeout(function() {
        return func();
      }, theme.global.debounceDelay);
    return function() {
      return clearTimeout(timer);
    };
  }, [func, theme.global.debounceDelay]);
  return setFunc;
};
var FormField = (0, import_react68.forwardRef)(function(_ref3, ref) {
  var children2 = _ref3.children, className = _ref3.className, component = _ref3.component, contentProps = _ref3.contentProps, disabled = _ref3.disabled, errorProp = _ref3.error, help = _ref3.help, htmlFor = _ref3.htmlFor, infoProp = _ref3.info, label = _ref3.label, margin = _ref3.margin, name = _ref3.name, _onBlur = _ref3.onBlur, onChange = _ref3.onChange, _onFocus = _ref3.onFocus, pad = _ref3.pad, required = _ref3.required, style = _ref3.style, validate3 = _ref3.validate, validateOn = _ref3.validateOn, rest = _objectWithoutPropertiesLoose36(_ref3, _excluded310);
  var theme = (0, import_react68.useContext)(Me) || defaultProps2.theme;
  var formContext = (0, import_react68.useContext)(FormContext);
  var _formContext$useFormF = formContext.useFormField({
    disabled,
    error: errorProp,
    info: infoProp,
    name,
    required,
    validate: validate3,
    validateOn
  }), error = _formContext$useFormF.error, info = _formContext$useFormF.info, inForm = _formContext$useFormF.inForm, contextOnBlur = _formContext$useFormF.onBlur, contextOnChange = _formContext$useFormF.onChange;
  var formKind = formContext.kind;
  var _useState2 = (0, import_react68.useState)(), focus = _useState2[0], setFocus = _useState2[1];
  var formFieldRef = useForwardedRef(ref);
  var formFieldTheme = theme.formField;
  var themeBorder = formFieldTheme.border;
  var debounce = useDebounce();
  var portalContext = (0, import_react68.useContext)(PortalContext);
  var wantContentPad = component && (component === CheckBox || component === CheckBoxGroup || component === RadioButtonGroup);
  var contents = themeBorder && children2 && import_react68.Children.map(children2, function(child) {
    if (child && child.type && grommetInputPadNames.indexOf(child.type.displayName) !== -1) {
      wantContentPad = true;
    }
    if (child && child.type && grommetInputNames.indexOf(child.type.displayName) !== -1 && child.props.plain === void 0 && child.props.focusIndicator === void 0) {
      var _formFieldTheme$check;
      return (0, import_react68.cloneElement)(child, {
        plain: true,
        focusIndicator: false,
        pad: "CheckBox".indexOf(child.type.displayName) !== -1 ? formFieldTheme == null ? void 0 : (_formFieldTheme$check = formFieldTheme.checkBox) == null ? void 0 : _formFieldTheme$check.pad : void 0
      });
    }
    return child;
  }) || children2;
  var containerRest = rest;
  if (inForm) {
    if (!contents)
      containerRest = {};
    contents = contents || import_react68.default.createElement(Input, _extends62({
      component,
      disabled,
      invalid: !!error,
      name,
      label: component === CheckBox ? label : void 0
    }, rest));
  }
  var themeContentProps = _extends62({}, formFieldTheme.content);
  if (!pad && !wantContentPad) {
    themeContentProps.pad = void 0;
  }
  if (themeBorder && themeBorder.position === "inner") {
    if (error && formFieldTheme.error) {
      themeContentProps.background = formFieldTheme.error.background;
    } else if (disabled && formFieldTheme.disabled) {
      themeContentProps.background = formFieldTheme.disabled.background;
    }
  }
  var isFileInputComponent;
  if (children2 && import_react68.Children.forEach(children2, function(child) {
    if (child && child.type && "FileInput".indexOf(child.type.displayName) !== -1)
      isFileInputComponent = true;
  }))
    ;
  if (component && component.displayName === "FileInput" && !isFileInputComponent) {
    isFileInputComponent = true;
  }
  if (!themeBorder) {
    contents = import_react68.default.createElement(Box, _extends62({}, themeContentProps, contentProps), contents);
  }
  var borderColor;
  if (disabled && formFieldTheme.disabled.border && formFieldTheme.disabled.border.color) {
    borderColor = formFieldTheme.disabled.border.color;
  } else if (
    // backward compatibility check
    error && themeBorder && themeBorder.error.color || error && formFieldTheme.error && formFieldTheme.error.border
  ) {
    if (themeBorder.error.color && formFieldTheme.error.border === void 0) {
      borderColor = themeBorder.error.color || "status-critical";
    } else if (formFieldTheme.error.border && formFieldTheme.error.border.color) {
      borderColor = formFieldTheme.error.border.color || "status-critical";
    }
  } else if (focus && formFieldTheme.focus && formFieldTheme.focus.border && formFieldTheme.focus.border.color) {
    borderColor = formFieldTheme.focus.border.color;
  } else {
    borderColor = themeBorder && themeBorder.color || "border";
  }
  var labelStyle;
  if (formKind) {
    labelStyle = _extends62({}, formFieldTheme[formKind].label);
  } else
    labelStyle = _extends62({}, formFieldTheme.label);
  if (disabled) {
    labelStyle.color = formFieldTheme.disabled && formFieldTheme.disabled.label ? formFieldTheme.disabled.label.color : labelStyle.color;
  }
  var abut;
  var abutMargin;
  var outerStyle = style;
  if (themeBorder) {
    var innerProps = themeBorder.position === "inner" ? {
      border: _extends62({}, themeBorder, {
        size: isFileInputComponent ? theme.fileInput.border.size : void 0,
        style: isFileInputComponent ? theme.fileInput.border.style : void 0,
        side: isFileInputComponent ? theme.fileInput.border.side : themeBorder.side || "bottom",
        color: borderColor
      }),
      round: formFieldTheme.round,
      focus: isFileInputComponent ? void 0 : focus
    } : {};
    contents = import_react68.default.createElement(FormFieldContentBox, _extends62({}, themeContentProps, innerProps, contentProps), contents);
    var mergedMargin = margin || formFieldTheme.margin;
    abut = themeBorder.position === "outer" && (themeBorder.side === "all" || themeBorder.side === "horizontal" || !themeBorder.side) && !(mergedMargin && (typeof mergedMargin === "string" && mergedMargin !== "none" || mergedMargin.bottom && mergedMargin.bottom !== "none" || mergedMargin.horizontal && mergedMargin.horizontal !== "none"));
    if (abut) {
      abutMargin = {
        bottom: "-1px"
      };
      if (margin) {
        abutMargin = margin;
      } else if (themeBorder.size) {
        abutMargin = {
          bottom: "-" + parseMetricToNum(theme.global.borderSize[themeBorder.size] || themeBorder.size) + "px"
        };
      }
      outerStyle = _extends62({
        position: focus ? "relative" : void 0,
        zIndex: focus ? 10 : void 0
      }, style);
    }
  }
  var outerBackground;
  if (themeBorder && themeBorder.position === "outer") {
    if (error && formFieldTheme.error && formFieldTheme.error.background) {
      outerBackground = formFieldTheme.error.background;
    } else if (focus && formFieldTheme.focus && formFieldTheme.focus.background && formFieldTheme.focus.background.color) {
      outerBackground = formFieldTheme.focus.background.color;
    } else if (disabled && formFieldTheme.disabled && formFieldTheme.disabled.background) {
      outerBackground = formFieldTheme.disabled.background;
    }
  }
  var outerProps = themeBorder && themeBorder.position === "outer" ? {
    border: _extends62({}, themeBorder, {
      color: borderColor
    }),
    round: formFieldTheme.round,
    focus
  } : {};
  var requiredIndicator = theme.formField.label.requiredIndicator;
  if (requiredIndicator === true)
    requiredIndicator = import_react68.default.createElement(import_react68.default.Fragment, null, import_react68.default.createElement(RequiredText, {
      "aria-hidden": "true"
    }, "*"), import_react68.default.createElement(ScreenReaderOnly, null, "required"));
  var showRequiredIndicator = required && requiredIndicator;
  if (typeof required === "object" && required.indicator === false)
    showRequiredIndicator = false;
  return import_react68.default.createElement(FormFieldBox, _extends62({
    ref: formFieldRef,
    className,
    background: outerBackground,
    margin: abut ? abutMargin : margin || _extends62({}, formFieldTheme.margin)
  }, outerProps, {
    style: outerStyle,
    onFocus: function onFocus(event) {
      var _formFieldRef$current;
      var root = (_formFieldRef$current = formFieldRef.current) == null ? void 0 : _formFieldRef$current.getRootNode();
      if (root) {
        setFocus(containsFocus(formFieldRef.current) && shouldKeepFocus(root));
      }
      if (_onFocus)
        _onFocus(event);
    },
    onBlur: function onBlur(event) {
      setFocus(false);
      if (contextOnBlur && !formFieldRef.current.contains(event.relatedTarget) && !withinDropPortal(event.relatedTarget, portalContext)) {
        contextOnBlur(event);
      }
      if (_onBlur)
        _onBlur(event);
    },
    onChange: contextOnChange || onChange ? function(event) {
      event.persist();
      if (onChange)
        onChange(event);
      if (contextOnChange)
        debounce(function() {
          return function() {
            return contextOnChange(event);
          };
        });
    } : void 0
  }, containerRest), label && component !== CheckBox || help ? import_react68.default.createElement(import_react68.default.Fragment, null, label && component !== CheckBox && import_react68.default.createElement(Text, _extends62({
    as: "label",
    htmlFor
  }, labelStyle), label, showRequiredIndicator ? requiredIndicator : void 0), import_react68.default.createElement(Message, _extends62({
    message: help
  }, formFieldTheme.help))) : void 0, contents, import_react68.default.createElement(Message, _extends62({
    type: "error",
    message: error
  }, formFieldTheme.error)), import_react68.default.createElement(Message, _extends62({
    type: "info",
    message: info
  }, formFieldTheme.info)));
});
FormField.displayName = "FormField";
FormField.propTypes = FormFieldPropTypes;

// node_modules/grommet/es6/components/RangeSelector/RangeSelector.js
var import_react70 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/RangeSelector/EdgeControl.js
var import_react69 = __toESM(require_react());
init_styled_components_browser_esm();
var _excluded40 = ["color", "direction", "edge", "onDecrease", "onIncrease", "thickness"];
function _extends63() {
  _extends63 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends63.apply(this, arguments);
}
function _objectWithoutPropertiesLoose37(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var DIRECTION_PROPS = {
  horizontal: {
    cursor: "col-resize",
    fill: "vertical"
  },
  vertical: {
    cursor: "row-resize",
    fill: "horizontal"
  }
};
var StyledBox2 = styled_components_browser_esm_default(Box).withConfig({
  displayName: "EdgeControl__StyledBox",
  componentId: "sc-1xo2yt9-0"
})(["", ""], function(props) {
  return props.focus && focusStyle();
});
var EdgeControl = (0, import_react69.forwardRef)(function(_ref, ref) {
  var color = _ref.color, direction = _ref.direction, edge = _ref.edge, onDecrease = _ref.onDecrease, onIncrease = _ref.onIncrease, thickness = _ref.thickness, rest = _objectWithoutPropertiesLoose37(_ref, _excluded40);
  var theme = (0, import_react69.useContext)(Me);
  var _useState = (0, import_react69.useState)(false), focus = _useState[0], setFocus = _useState[1];
  var _DIRECTION_PROPS$dire = DIRECTION_PROPS[direction], cursor = _DIRECTION_PROPS$dire.cursor, fill = _DIRECTION_PROPS$dire.fill;
  var size = parseMetricToNum(theme.global.spacing) / 2;
  var keyboardProps = direction === "vertical" ? {
    onUp: onDecrease,
    onDown: onIncrease
  } : {
    onLeft: onDecrease,
    onRight: onIncrease
  };
  var boxDirection = direction === "vertical" ? "row" : "column";
  var type = theme.rangeSelector && theme.rangeSelector.edge && theme.rangeSelector.edge.type || "disc";
  var node;
  var backgroundColor2 = normalizeColor(color || "control", theme);
  if (type === "bar") {
    node = import_react69.default.createElement(StyledBox2, {
      flex: !thickness,
      justifySelf: "stretch",
      width: direction === "vertical" ? thickness : size + "px",
      height: direction === "vertical" ? size + "px" : thickness,
      background: backgroundColor2,
      focus
    });
  } else if (type === "disc") {
    node = import_react69.default.createElement(StyledBox2, {
      width: size + "px",
      height: size + "px",
      round: "full",
      background: backgroundColor2,
      focus
    });
  } else {
    node = type;
  }
  return import_react69.default.createElement(Keyboard, keyboardProps, import_react69.default.createElement(Box, {
    direction: boxDirection,
    style: {
      flex: "0 0 1px"
    },
    overflow: "visible",
    align: "center",
    justify: "center",
    alignSelf: "stretch"
  }, import_react69.default.createElement(Box, _extends63({
    ref,
    direction: boxDirection,
    justify: "center",
    align: "center",
    basis: "full",
    fill,
    style: {
      cursor,
      outline: "none",
      minWidth: size,
      minHeight: size,
      zIndex: 1
    },
    tabIndex: 0,
    onFocus: function onFocus() {
      return setFocus(true);
    },
    onBlur: function onBlur() {
      return setFocus(false);
    }
  }, rest), node)));
});
EdgeControl.displayName = "EdgeControl";
EdgeControl.defaultProps = {};
Object.setPrototypeOf(EdgeControl.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/RangeSelector/propTypes.js
var import_prop_types36 = __toESM(require_prop_types());
var PropType33 = {};
if (true) {
  PropType33 = {
    color: colorPropType,
    defaultValues: import_prop_types36.default.arrayOf(import_prop_types36.default.number),
    direction: import_prop_types36.default.oneOf(["horizontal", "vertical"]),
    invert: import_prop_types36.default.bool,
    label: import_prop_types36.default.oneOfType([import_prop_types36.default.bool, import_prop_types36.default.func]),
    max: import_prop_types36.default.number,
    messages: import_prop_types36.default.shape({
      lower: import_prop_types36.default.string,
      upper: import_prop_types36.default.string
    }),
    min: import_prop_types36.default.number,
    onChange: import_prop_types36.default.func,
    opacity: import_prop_types36.default.oneOfType([import_prop_types36.default.oneOf(["weak", "medium", "strong"]), import_prop_types36.default.string, import_prop_types36.default.bool]),
    round: import_prop_types36.default.oneOfType([import_prop_types36.default.oneOf(["xsmall", "small", "medium", "large", "full"]), import_prop_types36.default.string]),
    size: import_prop_types36.default.oneOfType([import_prop_types36.default.oneOf(["xxsmall", "xsmall", "small", "medium", "large", "xlarge", "full"]), import_prop_types36.default.string]),
    step: import_prop_types36.default.number,
    values: import_prop_types36.default.arrayOf(import_prop_types36.default.number)
  };
}
var RangeSelectorPropTypes = PropType33;

// node_modules/grommet/es6/components/RangeSelector/RangeSelector.js
var _excluded41 = ["color", "defaultValues", "direction", "invert", "label", "max", "messages", "min", "name", "onChange", "opacity", "round", "size", "step", "values"];
function _extends64() {
  _extends64 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends64.apply(this, arguments);
}
function _objectWithoutPropertiesLoose38(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var Container = styled_components_browser_esm_default(Box).withConfig({
  displayName: "RangeSelector__Container",
  componentId: "sc-siof5p-0"
})(["user-select:none;"]);
var RangeSelector = (0, import_react70.forwardRef)(function(_ref, ref) {
  var color = _ref.color, _ref$defaultValues = _ref.defaultValues, defaultValues2 = _ref$defaultValues === void 0 ? [] : _ref$defaultValues, _ref$direction = _ref.direction, direction = _ref$direction === void 0 ? "horizontal" : _ref$direction, invert = _ref.invert, label = _ref.label, _ref$max = _ref.max, max = _ref$max === void 0 ? 100 : _ref$max, messages = _ref.messages, _ref$min = _ref.min, min = _ref$min === void 0 ? 0 : _ref$min, name = _ref.name, onChange = _ref.onChange, _ref$opacity = _ref.opacity, opacity = _ref$opacity === void 0 ? "medium" : _ref$opacity, round3 = _ref.round, _ref$size = _ref.size, size = _ref$size === void 0 ? "medium" : _ref$size, _ref$step = _ref.step, step = _ref$step === void 0 ? 1 : _ref$step, valuesProp = _ref.values, rest = _objectWithoutPropertiesLoose38(_ref, _excluded41);
  var theme = (0, import_react70.useContext)(Me) || defaultProps.theme;
  var _useContext = (0, import_react70.useContext)(MessageContext), format3 = _useContext.format;
  var formContext = (0, import_react70.useContext)(FormContext);
  var _useState = (0, import_react70.useState)(), changing = _useState[0], setChanging = _useState[1];
  var _useState2 = (0, import_react70.useState)(), lastChange = _useState2[0], setLastChange = _useState2[1];
  var _useState3 = (0, import_react70.useState)(), moveValue = _useState3[0], setMoveValue = _useState3[1];
  var containerRef = (0, import_react70.useRef)();
  var maxRef = (0, import_react70.useRef)();
  var minRef = (0, import_react70.useRef)();
  var labelWidthRef = (0, import_react70.useRef)(0);
  var _formContext$useFormI = formContext.useFormInput({
    name,
    // ensure values are within min/max
    value: valuesProp == null ? void 0 : valuesProp.map(function(n3) {
      return Math.min(max, Math.max(min, n3));
    }),
    initialValue: defaultValues2
  }), values = _formContext$useFormI[0], setValues = _formContext$useFormI[1];
  var change = (0, import_react70.useCallback)(function(nextValues) {
    setValues(nextValues);
    if (onChange)
      onChange(nextValues);
  }, [onChange, setValues]);
  var valueForMouseCoord = (0, import_react70.useCallback)(function(event) {
    var rect = containerRef.current.getBoundingClientRect();
    var value;
    if (direction === "vertical") {
      var y3 = event.clientY - (rect.top || 0);
      var scaleY = rect.height / (max - min + 1) || 1;
      value = Math.floor(y3 / scaleY) + min;
    } else {
      var x3 = event.clientX - (rect.left || 0);
      var scaleX = rect.width / (max - min + 1) || 1;
      value = Math.floor(x3 / scaleX) + min;
    }
    var result = Math.ceil(value / step) * step;
    if (result < min) {
      return min;
    }
    if (result > max) {
      return max;
    }
    return result;
  }, [direction, max, min, step]);
  var onMouseMove = (0, import_react70.useCallback)(function(event) {
    var value = valueForMouseCoord(event);
    var nextValues;
    if (changing === "lower" && value <= values[1] && value !== moveValue) {
      nextValues = [value, values[1]];
    } else if (changing === "upper" && value >= values[0] && value !== moveValue) {
      nextValues = [values[0], value];
    } else if (changing === "selection" && value !== moveValue) {
      if (value === max) {
        nextValues = [max - (values[1] - values[0]), max];
      } else if (value === min) {
        nextValues = [min, min + (values[1] - values[0])];
      } else {
        var delta = value - moveValue;
        if (values[0] + delta >= min && values[1] + delta <= max) {
          nextValues = [values[0] + delta, values[1] + delta];
        }
      }
    }
    if (nextValues) {
      setMoveValue(value);
      change(nextValues);
    }
  }, [values, change, changing, moveValue, max, min, setMoveValue, valueForMouseCoord]);
  (0, import_react70.useEffect)(function() {
    var onMouseUp = function onMouseUp2() {
      return setChanging(void 0);
    };
    if (changing) {
      window.addEventListener("mousemove", onMouseMove);
      window.addEventListener("mouseup", onMouseUp);
      return function() {
        window.removeEventListener("mousemove", onMouseMove);
        window.removeEventListener("mouseup", onMouseUp);
      };
    }
    return void 0;
  }, [changing, onMouseMove]);
  var onClick = (0, import_react70.useCallback)(function(event) {
    var value = valueForMouseCoord(event);
    if (value <= values[0] || value < values[1] && lastChange === "lower") {
      setLastChange("lower");
      change([value, values[1]]);
    } else if (value >= values[1] || value > values[0] && lastChange === "upper") {
      setLastChange("upper");
      change([values[0], value]);
    }
  }, [change, lastChange, valueForMouseCoord, values]);
  var onTouchMove = (0, import_react70.useCallback)(function(event) {
    var touchEvent = event.changedTouches[0];
    onMouseMove(touchEvent);
  }, [onMouseMove]);
  useLayoutEffect(function() {
    if (maxRef.current && minRef.current) {
      maxRef.current.style.width = "";
      minRef.current.style.width = "";
      var width = Math.max(labelWidthRef.current, maxRef.current.getBoundingClientRect().width, minRef.current.getBoundingClientRect().width);
      maxRef.current.style.width = width + "px";
      minRef.current.style.width = width + "px";
      labelWidthRef.current = width;
    }
  });
  var lower = values[0], upper = values[1];
  var thickness = size === "full" ? void 0 : parseMetricToNum(theme.global.edgeSize[size] || size) + "px";
  var layoutProps = {
    fill: direction,
    round: round3
  };
  if (direction === "vertical")
    layoutProps.width = thickness;
  else
    layoutProps.height = thickness;
  if (size === "full")
    layoutProps.alignSelf = "stretch";
  var content = import_react70.default.createElement(Container, _extends64({
    ref: containerRef,
    direction: direction === "vertical" ? "column" : "row",
    align: "center",
    fill: true
  }, label ? {} : rest, {
    tabIndex: "-1",
    onClick,
    onTouchMove
  }), import_react70.default.createElement(Box, _extends64({
    style: {
      flex: lower - min + " 0 0"
    },
    background: invert ? (
      // preserve existing dark, instead of using darknes
      // of this color
      {
        color: color || theme.rangeSelector.background.invert.color,
        opacity,
        dark: theme.dark
      }
    ) : void 0
  }, layoutProps)), import_react70.default.createElement(EdgeControl, {
    a11yTitle: format3({
      id: "rangeSelector.lower",
      messages
    }),
    role: "slider",
    "aria-valuenow": lower,
    "aria-valuemin": min,
    "aria-valuemax": max,
    tabIndex: 0,
    ref,
    color,
    direction,
    thickness,
    edge: "lower",
    onMouseDown: function onMouseDown() {
      return setChanging("lower");
    },
    onTouchStart: function onTouchStart() {
      return setChanging("lower");
    },
    onDecrease: lower - step >= min ? function() {
      return change([lower - step, upper]);
    } : void 0,
    onIncrease: lower + step <= upper ? function() {
      return change([lower + step, upper]);
    } : void 0
  }), import_react70.default.createElement(Box, _extends64({
    style: {
      flex: upper - lower + 1 + " 0 0",
      cursor: direction === "vertical" ? "ns-resize" : "ew-resize"
    },
    background: invert ? void 0 : (
      // preserve existing dark, instead of using darknes of
      // this color
      {
        color: color || "control",
        opacity,
        dark: theme.dark
      }
    )
  }, layoutProps, {
    onMouseDown: function onMouseDown(event) {
      var nextMoveValue = valueForMouseCoord(event);
      setChanging("selection");
      setMoveValue(nextMoveValue);
    }
  })), import_react70.default.createElement(EdgeControl, {
    a11yTitle: format3({
      id: "rangeSelector.upper",
      messages
    }),
    role: "slider",
    "aria-valuenow": upper,
    "aria-valuemin": min,
    "aria-valuemax": max,
    tabIndex: 0,
    color,
    direction,
    thickness,
    edge: "upper",
    onMouseDown: function onMouseDown() {
      return setChanging("upper");
    },
    onTouchStart: function onTouchStart() {
      return setChanging("upper");
    },
    onDecrease: upper - step >= lower ? function() {
      return change([lower, upper - step]);
    } : void 0,
    onIncrease: upper + step <= max ? function() {
      return change([lower, upper + step]);
    } : void 0
  }), import_react70.default.createElement(Box, _extends64({
    style: {
      flex: max - upper + " 0 0"
    },
    background: invert ? (
      // preserve existing dark, instead of using darknes of this
      // color
      {
        color: color || theme.rangeSelector.background.invert.color,
        opacity,
        dark: theme.dark
      }
    ) : void 0
  }, layoutProps, {
    round: round3
  })));
  if (label) {
    content = import_react70.default.createElement(Box, _extends64({
      direction: direction === "vertical" ? "column" : "row",
      align: "center",
      fill: true
    }, rest), import_react70.default.createElement(Text, {
      ref: minRef,
      textAlign: "end",
      size: "small",
      margin: {
        horizontal: "small"
      }
    }, typeof label === "function" ? label(lower) : lower), content, import_react70.default.createElement(Text, {
      ref: maxRef,
      size: "small",
      margin: {
        horizontal: "small"
      }
    }, typeof label === "function" ? label(upper) : upper));
  }
  return content;
});
RangeSelector.displayName = "RangeSelector";
RangeSelector.propTypes = RangeSelectorPropTypes;

// node_modules/grommet/es6/components/SelectMultiple/SelectMultiple.js
var import_react78 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/DropButton/DropButton.js
var import_react71 = __toESM(require_react());

// node_modules/grommet/es6/components/DropButton/propTypes.js
var import_prop_types37 = __toESM(require_prop_types());
function _extends65() {
  _extends65 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends65.apply(this, arguments);
}
var PropType34 = {};
if (true) {
  PropType34 = _extends65({}, genericProps, {
    disabled: import_prop_types37.default.bool,
    dropAlign: import_prop_types37.default.shape({
      top: import_prop_types37.default.oneOf(["top", "bottom"]),
      bottom: import_prop_types37.default.oneOf(["top", "bottom"]),
      right: import_prop_types37.default.oneOf(["left", "right"]),
      left: import_prop_types37.default.oneOf(["left", "right"])
    }),
    dropContent: import_prop_types37.default.element.isRequired,
    dropTarget: import_prop_types37.default.object,
    dropProps: import_prop_types37.default.object,
    onClose: import_prop_types37.default.func,
    onOpen: import_prop_types37.default.func,
    open: import_prop_types37.default.bool
  });
}
var DropButtonPropTypes = PropType34;

// node_modules/grommet/es6/components/DropButton/DropButton.js
var _excluded42 = ["a11yTitle", "onAlign", "disabled", "dropAlign", "dropProps", "dropContent", "dropTarget", "id", "open", "onClick", "onClose", "onOpen"];
function _extends66() {
  _extends66 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends66.apply(this, arguments);
}
function _objectWithoutPropertiesLoose39(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var defaultDropAlign2 = {
  top: "top",
  left: "left"
};
var DropButton = (0, import_react71.forwardRef)(function(_ref, ref) {
  var _ref$a11yTitle = _ref.a11yTitle, a11yTitle = _ref$a11yTitle === void 0 ? "Open Drop" : _ref$a11yTitle, onAlign = _ref.onAlign, disabled = _ref.disabled, _ref$dropAlign = _ref.dropAlign, dropAlign2 = _ref$dropAlign === void 0 ? defaultDropAlign2 : _ref$dropAlign, dropProps5 = _ref.dropProps, dropContent = _ref.dropContent, dropTarget = _ref.dropTarget, id = _ref.id, open = _ref.open, onClick = _ref.onClick, onClose = _ref.onClose, onOpen = _ref.onOpen, rest = _objectWithoutPropertiesLoose39(_ref, _excluded42);
  var buttonRef = useForwardedRef(ref);
  var _useState = (0, import_react71.useState)(), show = _useState[0], setShow = _useState[1];
  (0, import_react71.useEffect)(function() {
    if (open !== void 0 && open !== show) {
      setShow(open);
    }
  }, [open, show]);
  var onDropClose = (0, import_react71.useCallback)(function(event) {
    var node = event.composed && event.composedPath()[0] || event.target;
    while (node && node !== document && !(node instanceof ShadowRoot) && node !== buttonRef.current) {
      node = node.parentNode;
    }
    if (node !== buttonRef.current) {
      if (open === void 0)
        setShow(false);
      if (onClose)
        onClose(event);
    }
  }, [buttonRef, onClose, open]);
  var onClickInternal = (0, import_react71.useCallback)(function(event) {
    if (!show) {
      setShow(true);
      if (onOpen)
        onOpen(event);
    } else {
      setShow(false);
      if (onClose)
        onClose(event);
    }
    if (onClick)
      onClick(event);
  }, [onClick, onClose, onOpen, show]);
  return import_react71.default.createElement(import_react71.default.Fragment, null, import_react71.default.createElement(Button, _extends66({
    id,
    ref: buttonRef,
    a11yTitle,
    disabled
  }, rest, {
    onClick: onClickInternal
  })), show && buttonRef.current && import_react71.default.createElement(Drop, _extends66({
    id: id ? id + "__drop" : void 0,
    onAlign,
    restrictFocus: true,
    align: dropAlign2,
    target: dropTarget || buttonRef,
    onClickOutside: onDropClose,
    onEsc: onDropClose
  }, dropProps5), dropContent));
});
DropButton.displayName = "DropButton";
DropButton.propTypes = DropButtonPropTypes;

// node_modules/grommet/es6/components/SelectMultiple/SelectMultipleValue.js
var import_react73 = __toESM(require_react());

// node_modules/grommet/es6/components/Select/StyledSelect.js
init_styled_components_browser_esm();
var StyledContainer2 = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledSelect__StyledContainer",
  componentId: "sc-znp66n-0"
})(["@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none){width:100%;}", ";", ";"], function(props) {
  return props.dropHeight ? sizeStyle("max-height", props.dropHeight, props.theme) : "max-height: inherit;";
}, function(props) {
  return props.theme.select.container && props.theme.select.container.extend;
});
var OptionsContainer = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledSelect__OptionsContainer",
  componentId: "sc-znp66n-1"
})(["position:relative;scroll-behavior:smooth;overflow:auto;outline:none;"]);
var HiddenInput = styled_components_browser_esm_default.input.withConfig({
  displayName: "StyledSelect__HiddenInput",
  componentId: "sc-znp66n-2"
})(["display:none;"]);
var SelectOption = styled_components_browser_esm_default(Button).withConfig({
  displayName: "StyledSelect__SelectOption",
  componentId: "sc-znp66n-3"
})(["", " ", " &:focus{", "}display:block;width:100%;", ";"], function(props) {
  return props.selected && props.textComponent && selectedStyle;
}, function(props) {
  return props.active && getHoverIndicatorStyle(!props.children && !props.theme.select.options ? void 0 : "background", props.theme);
}, function(props) {
  return props.active && getHoverIndicatorStyle(!props.children && !props.theme.select.options ? void 0 : "background", props.theme);
}, function(props) {
  return props["aria-disabled"] && "cursor: default";
});
var SelectTextInput = styled_components_browser_esm_default(TextInput).withConfig({
  displayName: "StyledSelect__SelectTextInput",
  componentId: "sc-znp66n-4"
})(["cursor:", ";"], function(props) {
  return props.defaultCursor ? "default" : "pointer";
});
var StyledSelectDropButton = styled_components_browser_esm_default(DropButton).withConfig({
  displayName: "StyledSelect__StyledSelectDropButton",
  componentId: "sc-znp66n-5"
})(["", ";", ";", ";"], function(props) {
  return !props.plainSelect && controlBorderStyle;
}, function(props) {
  var _props$theme$select, _props$theme$select$c;
  return (_props$theme$select = props.theme.select) == null ? void 0 : (_props$theme$select$c = _props$theme$select.control) == null ? void 0 : _props$theme$select$c.extend;
}, function(props) {
  var _props$theme$select2, _props$theme$select2$;
  return props.open && ((_props$theme$select2 = props.theme.select) == null ? void 0 : (_props$theme$select2$ = _props$theme$select2.control) == null ? void 0 : _props$theme$select2$.open);
});

// node_modules/grommet/es6/components/Select/utils.js
var import_react72 = __toESM(require_react());
var applyKey = function applyKey2(option, key) {
  if (option === void 0 || option === null)
    return void 0;
  if (typeof key === "object")
    return applyKey2(option, key.key);
  if (typeof key === "function")
    return key(option);
  if (key !== void 0 && typeof option === "object")
    return option[key];
  if (typeof option === "object" && Object.keys(option))
    return option[Object.keys(option)[0]];
  return option;
};
var getOptionLabel = function getOptionLabel2(index, options, labelKey) {
  return applyKey(options[index], labelKey);
};
var getOptionValue = function getOptionValue2(index, options, valueKey) {
  return applyKey(options[index], valueKey);
};
var getOptionIndex = function getOptionIndex2(options, i3, valueKey) {
  if (options) {
    if (typeof i3 === "object")
      return options.findIndex(function(x3) {
        return applyKey(x3, valueKey) === applyKey(i3, valueKey);
      });
    return options.indexOf(i3);
  }
  return void 0;
};
var arrayIncludes = function arrayIncludes2(arr, i3, valueKey) {
  if (arr) {
    if (typeof i3 === "object")
      return arr.some(function(x3) {
        return applyKey(x3, valueKey) === applyKey(i3, valueKey);
      });
    return arr.includes(i3);
  }
  return void 0;
};
var useDisabled = function useDisabled2(disabled, disabledKey, options, valueKey) {
  return (0, import_react72.useCallback)(function(index) {
    var option = options[index];
    var result;
    if (disabledKey) {
      result = applyKey(option, disabledKey);
    } else if (Array.isArray(disabled)) {
      if (typeof disabled[0] === "number") {
        result = disabled.indexOf(index) !== -1;
      } else {
        var optionVal = getOptionValue(index, options, valueKey);
        result = getOptionIndex(disabled, options[index], valueKey) !== -1 || getOptionIndex(disabled, optionVal, valueKey) !== -1;
      }
    }
    return result;
  }, [disabled, disabledKey, options, valueKey]);
};
var getNormalizedValue = function getNormalizedValue2(value, valueKey) {
  if (Array.isArray(value))
    return value.map(function(v3) {
      return valueKey && valueKey.reduce ? v3 : applyKey(v3, valueKey);
    });
  return valueKey && valueKey.reduce ? value : applyKey(value, valueKey);
};
var changeEvent = function changeEvent2(inputRef, nextValue) {
  var nativeInputValueSetter = Object.getOwnPropertyDescriptor(window.HTMLInputElement.prototype, "value").set;
  nativeInputValueSetter.call(inputRef.current, nextValue);
  var event = new Event("input", {
    bubbles: true
  });
  inputRef.current.dispatchEvent(event);
};
var getSelectIcon = function getSelectIcon2(icon, theme, open) {
  var SelectIcon;
  switch (icon) {
    case false:
      break;
    case true:
    case void 0:
      SelectIcon = open && theme.select.icons.up ? theme.select.icons.up : theme.select.icons.down;
      break;
    default:
      SelectIcon = icon;
  }
  return SelectIcon;
};
var getDisplayLabelKey = function getDisplayLabelKey2(labelKey, allOptions, optionIndexesInValue, selectValue) {
  var optionLabelKey = applyKey(allOptions[optionIndexesInValue[0]], labelKey);
  if (!selectValue && optionIndexesInValue.length === 1 && typeof optionLabelKey === "object")
    return optionLabelKey;
  return void 0;
};
var getIconColor3 = function getIconColor4(theme) {
  return normalizeColor(theme.select.icons.color || "control", theme);
};

// node_modules/grommet/es6/components/SelectMultiple/SelectMultipleValue.js
var SelectMultipleValue = function SelectMultipleValue2(_ref) {
  var allOptions = _ref.allOptions, children2 = _ref.children, disabled = _ref.disabled, disabledKey = _ref.disabledKey, dropButtonRef = _ref.dropButtonRef, labelKey = _ref.labelKey, onRequestOpen = _ref.onRequestOpen, onSelectChange = _ref.onSelectChange, theme = _ref.theme, value = _ref.value, valueKey = _ref.valueKey;
  var _useState = (0, import_react73.useState)(false), showA11yDiv = _useState[0], setShowA11yDiv = _useState[1];
  var isDisabled = useDisabled(disabled, disabledKey, allOptions, valueKey || labelKey);
  var visibleValue = (0, import_react73.useCallback)(function(i3) {
    var optionValue = valueKey && valueKey.reduce ? applyKey(i3, valueKey) : i3;
    var optionSelected = arrayIncludes(value, optionValue, valueKey || labelKey);
    var indexOptions = getOptionIndex(allOptions, i3, valueKey || labelKey);
    var optionLabel = getOptionLabel(indexOptions, allOptions, labelKey || valueKey);
    var optionDisabled = isDisabled(indexOptions);
    var valueIndex = getOptionIndex(value, optionValue, valueKey || labelKey);
    if (valueIndex < theme.selectMultiple.maxInline) {
      var child;
      if (children2) {
        child = children2(i3, indexOptions, allOptions, {
          active: false,
          disabled: optionDisabled,
          selected: true
        });
      }
      return import_react73.default.createElement(SelectOption, {
        role: "option",
        a11yTitle: optionSelected ? optionLabel + " selected" : optionLabel + " not selected",
        "aria-setsize": value.length,
        "aria-posinset": valueIndex + 1,
        "aria-selected": optionSelected,
        "aria-disabled": optionDisabled,
        plain: true,
        hoverIndicator: !optionDisabled,
        fill: "horizontal",
        tabIndex: "0",
        onClick: function onClick(event) {
          if (!optionDisabled) {
            var intermediate = [].concat(value);
            if (arrayIncludes(intermediate, optionValue, valueKey || labelKey)) {
              onSelectChange(event, {
                option: optionValue,
                value: intermediate.filter(function(v3) {
                  return typeof v3 === "object" ? applyKey(v3, valueKey || labelKey) !== applyKey(optionValue, valueKey || labelKey) : v3 !== optionValue;
                })
              });
              if (valueIndex !== intermediate.length - 1) {
                setTimeout(function() {
                  var nextFocus = document.getElementById("selected-" + intermediate[valueIndex + 1]);
                  if (nextFocus)
                    nextFocus.focus();
                  var result = intermediate[valueIndex + 1];
                  setShowA11yDiv("Unselected " + optionLabel + ". \n                        Focus moved to " + getOptionLabel(getOptionIndex(allOptions, result, valueKey || labelKey), allOptions, labelKey || valueKey));
                }, 200);
              } else if (intermediate.length !== 1) {
                setTimeout(function() {
                  var nextFocus = document.getElementById("selected-" + intermediate[valueIndex - 1]);
                  if (nextFocus)
                    nextFocus.focus();
                  var result = intermediate[valueIndex - 1];
                  setShowA11yDiv("Unselected " + optionLabel + ". Focus moved to \n                          " + getOptionLabel(getOptionIndex(allOptions, result, valueKey || labelKey), allOptions, labelKey || valueKey));
                }, 200);
              } else if (dropButtonRef.current)
                dropButtonRef.current.focus();
            }
          }
        },
        key: optionLabel,
        id: "selected-" + optionValue
      }, child || import_react73.default.createElement(CheckBox, {
        disabled: optionDisabled,
        label: import_react73.default.createElement(Box, {
          alignSelf: "center",
          align: "start"
        }, optionLabel),
        key: optionLabel,
        pad: "xsmall",
        tabIndex: "-1",
        checked: optionSelected
      }));
    }
    return void 0;
  }, [valueKey, allOptions, children2, dropButtonRef, isDisabled, labelKey, onSelectChange, value, theme.selectMultiple.maxInline]);
  (0, import_react73.useEffect)(function() {
    if (showA11yDiv !== void 0) {
      setTimeout(function() {
        setShowA11yDiv(void 0);
      }, 1e3);
    }
  }, [showA11yDiv]);
  return import_react73.default.createElement(import_react73.default.Fragment, null, import_react73.default.createElement(Box, {
    width: "100%",
    role: "listbox",
    "aria-multiselectable": true,
    a11yTitle: "Selected Options"
  }, value && allOptions.filter(function(i3) {
    return arrayIncludes(value, valueKey && valueKey.reduce ? applyKey(i3, valueKey) : i3, valueKey || labelKey);
  }).map(function(i3) {
    return visibleValue(i3);
  }), showA11yDiv && import_react73.default.createElement(Box, {
    height: "0px",
    width: "0px",
    overflow: "hidden",
    "aria-live": "assertive",
    role: "alert"
  }, showA11yDiv)), value && value.length > theme.selectMultiple.maxInline && import_react73.default.createElement(Box, {
    pad: {
      horizontal: "small",
      bottom: "small",
      top: "xsmall"
    },
    alignSelf: "start"
  }, import_react73.default.createElement(Button, {
    onClick: onRequestOpen,
    size: "small",
    label: "+ " + (value.length - theme.selectMultiple.maxInline) + " more"
  })));
};

// node_modules/grommet/es6/components/SelectMultiple/SelectMultipleContainer.js
var import_react76 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/SelectMultiple/SelectionSummary.js
var import_react74 = __toESM(require_react());
var SelectionSummary = function SelectionSummary2(_ref) {
  var allOptions = _ref.allOptions, clearRef = _ref.clearRef, disabled = _ref.disabled, disabledKey = _ref.disabledKey, isSelected = _ref.isSelected, labelKey = _ref.labelKey, limit = _ref.limit, onChange = _ref.onChange, onMore = _ref.onMore, options = _ref.options, search = _ref.search, setActiveIndex = _ref.setActiveIndex, showSelectedInline = _ref.showSelectedInline, value = _ref.value, valueKey = _ref.valueKey;
  var isDisabled = useDisabled(disabled, disabledKey, options, valueKey || labelKey);
  var selectedValuesDisabled = (0, import_react74.useCallback)(function() {
    var disabledSelected = 0;
    if (value) {
      for (var i3 = 0; i3 < allOptions.length; i3 += 1) {
        if (arrayIncludes(value, getOptionValue(i3, options, valueKey || labelKey), valueKey || labelKey) && isDisabled(i3))
          disabledSelected += 1;
      }
      if (value.length === disabledSelected)
        return true;
    }
    return false;
  }, [value, allOptions, options, valueKey, labelKey, isDisabled]);
  var selectedInSearch = (0, import_react74.useCallback)(function() {
    return options == null ? void 0 : options.filter(function(option) {
      return arrayIncludes(value, option, valueKey || labelKey);
    });
  }, [options, value, valueKey, labelKey]);
  var showSelectAll = !!((value == null ? void 0 : value.length) === 0 || selectedValuesDisabled() || !value || selectedInSearch().length === 0);
  var summaryText = (value == null ? void 0 : value.length) === 0 || onMore || !value || search !== "" && search !== void 0 ? ((value == null ? void 0 : value.length) || 0) + " selected" : ((value == null ? void 0 : value.length) || 0) + " selected of " + options.length;
  var summaryButtonClick = function summaryButtonClick2(event) {
    if (onChange) {
      var nextSelected = options.filter(function(i3, index) {
        return showSelectAll ? !isDisabled(index) || isSelected(index) : isDisabled(index) && isSelected(index);
      });
      if (search !== "" && search !== void 0 && value) {
        if (showSelectAll) {
          nextSelected = nextSelected.concat(value);
        } else {
          value.forEach(function(item) {
            if (!arrayIncludes(options, item, valueKey || labelKey)) {
              nextSelected.push(item);
            }
          });
        }
      }
      var nextValue = nextSelected.map(function(i3) {
        return valueKey && valueKey.reduce ? applyKey(i3, valueKey) : i3;
      });
      onChange(event, {
        option: options,
        value: nextValue,
        selected: nextSelected
      });
    }
    if (limit && !showSelectAll)
      setActiveIndex(0);
  };
  return import_react74.default.createElement(Box, {
    pad: showSelectedInline ? {
      left: "xsmall",
      vertical: "xsmall"
    } : "xsmall",
    direction: "row",
    justify: "between",
    gap: "small",
    fill: "horizontal",
    flex: showSelectedInline,
    align: "center",
    height: {
      min: "xxsmall"
    }
  }, import_react74.default.createElement(Text, {
    size: "small"
  }, summaryText), (options.length && (!limit || !(!value || (value == null ? void 0 : value.length) === 0 && selectedValuesDisabled()))) > 0 && (!onMore || onMore && (value == null ? void 0 : value.length) !== 0) && import_react74.default.createElement(Button, {
    a11yTitle: showSelectAll ? "Select all " + options.length + " options" : (value == null ? void 0 : value.length) + " options selected. Clear all?",
    label: showSelectAll ? "Select All" : "Clear All",
    onClick: function onClick(event) {
      return summaryButtonClick(event);
    },
    onFocus: function onFocus() {
      return setActiveIndex(-1);
    },
    ref: clearRef
  }));
};

// node_modules/grommet/es6/components/Select/EmptySearchOption.js
var import_react75 = __toESM(require_react());
function _extends67() {
  _extends67 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends67.apply(this, arguments);
}
var EmptySearchOption = function EmptySearchOption2(_ref) {
  var _theme$select, _theme$select$emptySe, _theme$select2, _theme$select2$emptyS, _theme$select3, _theme$select3$option;
  var emptySearchMessage = _ref.emptySearchMessage, selectOptionsStyle = _ref.selectOptionsStyle, theme = _ref.theme;
  return import_react75.default.createElement(Box, (theme == null ? void 0 : (_theme$select = theme.select) == null ? void 0 : (_theme$select$emptySe = _theme$select.emptySearchMessage) == null ? void 0 : _theme$select$emptySe.container) || selectOptionsStyle, import_react75.default.createElement(Text, _extends67({
    "aria-live": "polite",
    role: "alert"
  }, (theme == null ? void 0 : (_theme$select2 = theme.select) == null ? void 0 : (_theme$select2$emptyS = _theme$select2.emptySearchMessage) == null ? void 0 : _theme$select2$emptyS.text) || ((_theme$select3 = theme.select) == null ? void 0 : (_theme$select3$option = _theme$select3.options) == null ? void 0 : _theme$select3$option.text)), emptySearchMessage));
};

// node_modules/grommet/es6/components/SelectMultiple/SelectMultipleContainer.js
function _extends68() {
  _extends68 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends68.apply(this, arguments);
}
var SelectMultipleContainer = (0, import_react76.forwardRef)(function(_ref, ref) {
  var _optionsRef$current;
  var allOptions = _ref.allOptions, _ref$children = _ref.children, children2 = _ref$children === void 0 ? null : _ref$children, disabledProp = _ref.disabled, disabledKey = _ref.disabledKey, dropHeight = _ref.dropHeight, _ref$emptySearchMessa = _ref.emptySearchMessage, emptySearchMessage = _ref$emptySearchMessa === void 0 ? "No matches found" : _ref$emptySearchMessa, help = _ref.help, icon = _ref.icon, id = _ref.id, labelKey = _ref.labelKey, limit = _ref.limit, onChange = _ref.onChange, onClose = _ref.onClose, onKeyDown = _ref.onKeyDown, onMore = _ref.onMore, onSearch = _ref.onSearch, optionIndexesInValue = _ref.optionIndexesInValue, options = _ref.options, _ref$replace = _ref.replace, replace = _ref$replace === void 0 ? true : _ref$replace, searchPlaceholder = _ref.searchPlaceholder, search = _ref.search, setSearch = _ref.setSearch, usingKeyboard = _ref.usingKeyboard, _ref$value = _ref.value, value = _ref$value === void 0 ? [] : _ref$value, valueKey = _ref.valueKey, showSelectedInline = _ref.showSelectedInline;
  var theme = (0, import_react76.useContext)(Me) || defaultProps2.theme;
  var _useState = (0, import_react76.useState)(-1), activeIndex = _useState[0], setActiveIndex = _useState[1];
  var _useState2 = (0, import_react76.useState)(usingKeyboard), keyboardNavigation = _useState2[0], setKeyboardNavigation = _useState2[1];
  var searchRef = (0, import_react76.useRef)();
  var optionsRef = (0, import_react76.useRef)();
  var _useState3 = (0, import_react76.useState)(disabledProp), disabled = _useState3[0], setDisabled = _useState3[1];
  var activeRef = (0, import_react76.useRef)();
  var _useState4 = (0, import_react76.useState)(), showA11yLimit = _useState4[0], setShowA11yLimit = _useState4[1];
  var clearRef = (0, import_react76.useRef)();
  var isDisabled = useDisabled(disabled, disabledKey, options, valueKey || labelKey);
  (0, import_react76.useEffect)(function() {
    var _activeRef$current;
    if (activeIndex)
      (_activeRef$current = activeRef.current) == null ? void 0 : _activeRef$current.focus();
  }, [activeIndex]);
  (0, import_react76.useEffect)(function() {
    var timer = setTimeout(function() {
      var clearButton = clearRef.current;
      if (clearButton && clearButton.focus) {
        setFocusWithoutScroll(clearButton);
      } else if (searchRef && searchRef.current) {
        var searchInput = searchRef.current;
        if (searchInput && searchInput.focus) {
          setFocusWithoutScroll(searchInput);
        }
      } else if (activeRef.current) {
        setFocusWithoutScroll(activeRef.current);
      } else if (optionsRef.current) {
        setActiveIndex(0);
      }
    }, 100);
    return function() {
      return clearTimeout(timer);
    };
  }, []);
  (0, import_react76.useEffect)(function() {
    var optionsNode = optionsRef.current;
    if (optionsNode.children) {
      var optionNode = optionsNode.children[activeIndex];
      if (optionNode)
        optionNode.focus();
    }
  }, [activeIndex]);
  var isSelected = (0, import_react76.useCallback)(function(index) {
    var result;
    var optionVal = getOptionValue(index, options, valueKey || labelKey);
    if (value) {
      if (value.length === 0) {
        result = false;
      } else if (typeof value[0] !== "object") {
        result = value.indexOf(optionVal) !== -1;
      } else if (valueKey) {
        result = value.some(function(valueItem) {
          var valueValue = typeof valueKey === "function" ? valueKey(valueItem) : valueItem[valueKey];
          return valueValue === optionVal;
        });
      }
    }
    return result;
  }, [value, valueKey, options, labelKey]);
  var selectOption = (0, import_react76.useCallback)(function(index) {
    return function(event) {
      if (onChange) {
        var nextOptionIndexesInValue = optionIndexesInValue.slice(0);
        var allOptionsIndex = getOptionIndex(allOptions, options[index], valueKey || labelKey);
        var valueIndex = optionIndexesInValue.indexOf(allOptionsIndex);
        if (valueIndex === -1 && (!limit || (value == null ? void 0 : value.length) < limit)) {
          nextOptionIndexesInValue.push(allOptionsIndex);
        } else {
          nextOptionIndexesInValue.splice(valueIndex, 1);
        }
        var nextValue = nextOptionIndexesInValue.map(function(i3) {
          return valueKey && valueKey.reduce ? applyKey(allOptions[i3], valueKey) : allOptions[i3];
        });
        var nextSelected = nextOptionIndexesInValue;
        onChange(event, {
          option: options[index],
          value: nextValue,
          selected: nextSelected
        });
      }
    };
  }, [labelKey, limit, onChange, optionIndexesInValue, options, allOptions, valueKey, value]);
  var onNextOption = (0, import_react76.useCallback)(function(event) {
    event.preventDefault();
    var nextActiveIndex = activeIndex + 1;
    if (nextActiveIndex !== options.length) {
      setActiveIndex(nextActiveIndex);
      setKeyboardNavigation(true);
    }
  }, [activeIndex, options]);
  var onPreviousOption = (0, import_react76.useCallback)(function(event) {
    event.preventDefault();
    var nextActiveIndex = activeIndex - 1;
    if (nextActiveIndex === -1) {
      var searchInput = searchRef.current;
      if (searchInput && searchInput.focus) {
        setActiveIndex(nextActiveIndex);
        setFocusWithoutScroll(searchInput);
      }
    }
    if (nextActiveIndex >= 0) {
      setActiveIndex(nextActiveIndex);
      setKeyboardNavigation(true);
    }
  }, [activeIndex]);
  var onKeyDownOption = (0, import_react76.useCallback)(function(event) {
    if (!onSearch) {
      var nextActiveIndex = options.findIndex(function(e3) {
        var label;
        if (typeof e3 === "object") {
          label = e3.label || applyKey(e3, labelKey);
        } else {
          label = e3;
        }
        return typeof label === "string" && label.charAt(0).toLowerCase() === event.key.toLowerCase();
      });
      if (nextActiveIndex >= 0) {
        event.preventDefault();
        setActiveIndex(nextActiveIndex);
        setKeyboardNavigation(true);
      }
    }
    if (onKeyDown) {
      onKeyDown(event);
    }
  }, [onKeyDown, options, onSearch, labelKey]);
  var onActiveOption = (0, import_react76.useCallback)(function(index) {
    return function() {
      if (!keyboardNavigation)
        setActiveIndex(index);
    };
  }, [keyboardNavigation]);
  var onSelectOption = (0, import_react76.useCallback)(function(event) {
    if (!isDisabled(activeIndex) && activeIndex >= 0 && activeIndex < options.length) {
      event.preventDefault();
      selectOption(activeIndex)(event);
    }
  }, [activeIndex, selectOption, options, isDisabled]);
  var customSearchInput = theme.select.searchInput;
  var SelectTextInput2 = customSearchInput || TextInput;
  var selectOptionsStyle = theme.select.options ? _extends68({}, theme.select.options.box, theme.select.options.container) : {};
  (0, import_react76.useEffect)(function() {
    var originallyDisabled = function originallyDisabled2(index) {
      var option = allOptions[index];
      var result;
      if (disabledKey) {
        result = applyKey(option, disabledKey);
      } else if (Array.isArray(disabledProp)) {
        if (typeof disabledProp[0] === "number") {
          result = disabledProp.indexOf(index) !== -1;
        } else {
          result = getOptionIndex(disabledProp, getOptionValue(index, options, valueKey || labelKey), valueKey || labelKey) !== -1;
        }
      }
      return result;
    };
    if (value && limit) {
      if (value.length === limit) {
        var newDisabled = [].concat(disabledProp);
        for (var i3 = 0; i3 < options.length; i3 += 1) {
          if (!isSelected(i3) && !originallyDisabled(i3)) {
            newDisabled.push(options[i3]);
          }
        }
        if (usingKeyboard)
          setShowA11yLimit("Selected. Maximum selection limit reached.");
        setDisabled(newDisabled);
      } else {
        if (usingKeyboard)
          setShowA11yLimit(void 0);
        setDisabled(disabledProp);
      }
    }
  }, [isSelected, value, limit, disabledProp, allOptions, disabledKey, labelKey, options, usingKeyboard, valueKey]);
  (0, import_react76.useEffect)(function() {
    if (showA11yLimit !== void 0) {
      setTimeout(function() {
        setShowA11yLimit(void 0);
      }, 2e3);
    }
  }, [showA11yLimit]);
  var summaryContent = import_react76.default.createElement(SelectionSummary, {
    allOptions,
    clearRef,
    disabled,
    disabledKey,
    isSelected,
    labelKey,
    limit,
    onChange,
    onMore,
    options,
    search,
    setActiveIndex,
    showSelectedInline,
    value,
    valueKey
  });
  var helpContent;
  if (help) {
    if (typeof help === "string")
      helpContent = import_react76.default.createElement(Box, {
        flex: false,
        pad: "xsmall"
      }, import_react76.default.createElement(Text, {
        size: "small"
      }, help));
    else
      helpContent = import_react76.default.createElement(Box, {
        flex: false
      }, help);
  }
  if (showSelectedInline)
    summaryContent = import_react76.default.createElement(Box, {
      direction: "row",
      justify: "between",
      flex: false
    }, summaryContent, import_react76.default.createElement(Box, null, import_react76.default.createElement(Button, {
      fill: "vertical",
      onClick: onClose,
      a11yTitle: "Close Select"
    }, icon)));
  return import_react76.default.createElement(Keyboard, {
    onEnter: onSelectOption,
    onSpace: onSelectOption,
    onUp: onPreviousOption,
    onDown: onNextOption,
    onKeyDown: onKeyDownOption,
    onEsc: onClose
  }, import_react76.default.createElement(StyledContainer2, {
    ref,
    as: Box,
    id: id ? id + "__select-drop" : void 0,
    dropHeight,
    a11yTitle: "Select dropdown"
  }, summaryContent, onSearch && import_react76.default.createElement(Box, {
    pad: !customSearchInput ? "xsmall" : void 0,
    flex: false
  }, import_react76.default.createElement(Keyboard, {
    onEnter: function onEnter(event) {
      onNextOption(event);
    }
  }, import_react76.default.createElement(SelectTextInput2, {
    a11yTitle: "Search to filter options.",
    focusIndicator: !customSearchInput,
    size: "small",
    ref: searchRef,
    type: "search",
    value: search || "",
    placeholder: searchPlaceholder,
    onChange: function onChange2(event) {
      var nextSearch = event.target.value;
      setSearch(nextSearch);
      setActiveIndex(-1);
      onSearch(nextSearch);
    }
  }))), helpContent, options.length > 0 ? import_react76.default.createElement(OptionsContainer, {
    role: "listbox",
    tabIndex: "0",
    ref: optionsRef,
    "aria-multiselectable": true,
    onMouseMove: function onMouseMove() {
      return setKeyboardNavigation(false);
    },
    "aria-activedescendant": optionsRef == null ? void 0 : (_optionsRef$current = optionsRef.current) == null ? void 0 : _optionsRef$current.children[activeIndex]
  }, import_react76.default.createElement(InfiniteScroll, {
    items: options,
    step: theme.select.step,
    onMore,
    replace,
    show: activeIndex !== -1 ? activeIndex : void 0
  }, function(option, index, optionRef) {
    var optionDisabled = isDisabled(index);
    var optionSelected = value ? arrayIncludes(value, valueKey && valueKey.reduce ? applyKey(option, valueKey) : option, valueKey || labelKey) : false;
    var optionActive = activeIndex === index;
    var optionLabel = getOptionLabel(index, options, labelKey || valueKey);
    var child;
    var textComponent = false;
    if (children2) {
      child = children2(option, index, options, {
        active: optionActive,
        disabled: optionDisabled,
        selected: optionSelected
      });
      if (typeof child === "string" || child.props && child.props.children && typeof child.props.children === "string")
        textComponent = true;
    } else {
      child = import_react76.default.createElement(CheckBox, {
        label: import_react76.default.createElement(Box, {
          alignSelf: "center",
          width: "100%",
          align: "start"
        }, optionLabel),
        pad: "xsmall",
        tabIndex: "-1",
        checked: optionSelected,
        disabled: optionDisabled
      });
    }
    if (!children2 && search) {
      var searchText = search.toLowerCase();
      if (typeof optionLabel === "string" && optionLabel.toLowerCase().indexOf(searchText) >= 0) {
        var boldIndex = optionLabel.toLowerCase().indexOf(searchText);
        var childBeginning = optionLabel.substring(0, boldIndex);
        var childBold = optionLabel.substring(boldIndex, boldIndex + searchText.length);
        childBold = import_react76.default.createElement("b", null, childBold);
        var childEnd = optionLabel.substring(boldIndex + searchText.length);
        child = import_react76.default.createElement(CheckBox, {
          label: import_react76.default.createElement(Box, {
            alignSelf: "center",
            width: "100%",
            align: "start",
            direction: "row"
          }, import_react76.default.createElement(Text, null, childBeginning, childBold, childEnd)),
          pad: "xsmall",
          tabIndex: "-1",
          checked: optionSelected,
          disabled: optionDisabled
        });
      }
    }
    return import_react76.default.createElement(SelectOption, {
      a11yTitle: optionSelected ? optionLabel + " selected" : optionLabel + " not selected",
      key: index,
      ref: function ref2(node) {
        if (optionRef)
          optionRef.current = node;
        if (optionActive)
          activeRef.current = node;
      },
      tabIndex: optionSelected ? "0" : "-1",
      role: "option",
      id: "option" + index,
      "aria-setsize": options.length,
      "aria-posinset": index + 1,
      "aria-selected": optionSelected,
      focusIndicator: false,
      "aria-disabled": optionDisabled || void 0,
      plain: !child ? void 0 : true,
      align: "start",
      kind: !child ? "option" : void 0,
      active: optionActive,
      selected: optionSelected,
      onMouseOver: !optionDisabled ? onActiveOption(index) : void 0,
      onClick: !optionDisabled ? selectOption(index) : void 0,
      onFocus: function onFocus() {
        return setActiveIndex(index);
      },
      textComponent
    }, child);
  })) : import_react76.default.createElement(EmptySearchOption, {
    emptySearchMessage,
    selectOptionsStyle,
    theme
  }), usingKeyboard && showA11yLimit && import_react76.default.createElement(Box, {
    height: "0px",
    width: "0px",
    overflow: "hidden",
    "aria-live": "assertive",
    role: "alert"
  }, showA11yLimit)));
});

// node_modules/grommet/es6/components/Select/DefaultSelectTextInput.js
var import_react77 = __toESM(require_react());
var _excluded43 = ["disabled", "id"];
function _extends69() {
  _extends69 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends69.apply(this, arguments);
}
function _objectWithoutPropertiesLoose40(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var DefaultSelectTextInput = (0, import_react77.forwardRef)(function(_ref, ref) {
  var disabled = _ref.disabled, id = _ref.id, rest = _objectWithoutPropertiesLoose40(_ref, _excluded43);
  return import_react77.default.createElement(
    SelectTextInput,
    _extends69({
      defaultCursor: disabled === true || void 0,
      focusIndicator: false,
      id: id ? id + "__input" : void 0,
      ref
    }, rest, {
      tabIndex: "-1",
      type: "text",
      plain: true,
      readOnly: true
    })
  );
});

// node_modules/grommet/es6/components/SelectMultiple/propTypes.js
var import_prop_types39 = __toESM(require_prop_types());

// node_modules/grommet/es6/components/Select/propTypes.js
var import_prop_types38 = __toESM(require_prop_types());
function _extends70() {
  _extends70 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends70.apply(this, arguments);
}
var genericSelectProps = _extends70({}, genericProps, {
  children: import_prop_types38.default.func,
  disabled: import_prop_types38.default.oneOfType([import_prop_types38.default.bool, import_prop_types38.default.arrayOf(import_prop_types38.default.oneOfType([import_prop_types38.default.number, import_prop_types38.default.string, import_prop_types38.default.object]))]),
  disabledKey: import_prop_types38.default.oneOfType([import_prop_types38.default.string, import_prop_types38.default.func]),
  dropAlign: import_prop_types38.default.shape({
    top: import_prop_types38.default.oneOf(["top", "bottom"]),
    bottom: import_prop_types38.default.oneOf(["top", "bottom"]),
    right: import_prop_types38.default.oneOf(["left", "right"]),
    left: import_prop_types38.default.oneOf(["left", "right"])
  }),
  dropHeight: import_prop_types38.default.oneOfType([import_prop_types38.default.oneOf(["xsmall", "small", "medium", "large", "xlarge"]), import_prop_types38.default.string]),
  dropTarget: import_prop_types38.default.object,
  dropProps: import_prop_types38.default.object,
  emptySearchMessage: import_prop_types38.default.oneOfType([import_prop_types38.default.string, import_prop_types38.default.node]),
  focusIndicator: import_prop_types38.default.bool,
  icon: import_prop_types38.default.oneOfType([import_prop_types38.default.bool, import_prop_types38.default.func, import_prop_types38.default.node, import_prop_types38.default.elementType]),
  labelKey: import_prop_types38.default.oneOfType([import_prop_types38.default.string, import_prop_types38.default.func]),
  messages: import_prop_types38.default.shape({
    multiple: import_prop_types38.default.string
  }),
  name: import_prop_types38.default.string,
  onChange: import_prop_types38.default.func,
  onClose: import_prop_types38.default.func,
  onOpen: import_prop_types38.default.func,
  onSearch: import_prop_types38.default.func,
  onMore: import_prop_types38.default.func,
  options: import_prop_types38.default.arrayOf(import_prop_types38.default.oneOfType([import_prop_types38.default.string, import_prop_types38.default.number, import_prop_types38.default.bool, import_prop_types38.default.element, import_prop_types38.default.object])).isRequired,
  open: import_prop_types38.default.bool,
  placeholder: import_prop_types38.default.oneOfType([import_prop_types38.default.string, import_prop_types38.default.element, import_prop_types38.default.node]),
  plain: import_prop_types38.default.bool,
  replace: import_prop_types38.default.bool,
  searchPlaceholder: import_prop_types38.default.oneOfType([import_prop_types38.default.string, import_prop_types38.default.element, import_prop_types38.default.node]),
  size: import_prop_types38.default.oneOfType([import_prop_types38.default.oneOf(["small", "medium", "large", "xlarge"]), import_prop_types38.default.string]),
  valueLabel: import_prop_types38.default.oneOfType([import_prop_types38.default.node, import_prop_types38.default.func]),
  valueKey: import_prop_types38.default.oneOfType([import_prop_types38.default.string, import_prop_types38.default.func, import_prop_types38.default.shape({
    key: import_prop_types38.default.string,
    reduce: import_prop_types38.default.bool
  })])
});
var PropType35 = {};
if (true) {
  PropType35 = _extends70({}, genericSelectProps, {
    clear: import_prop_types38.default.oneOfType([import_prop_types38.default.bool, import_prop_types38.default.shape({
      position: import_prop_types38.default.oneOf(["top", "bottom"]),
      label: import_prop_types38.default.string
    })]),
    closeOnChange: import_prop_types38.default.bool,
    defaultValue: import_prop_types38.default.oneOfType([import_prop_types38.default.string, import_prop_types38.default.object, import_prop_types38.default.number, import_prop_types38.default.arrayOf(import_prop_types38.default.oneOfType([import_prop_types38.default.string, import_prop_types38.default.object, import_prop_types38.default.number]))]),
    multiple: import_prop_types38.default.bool,
    selected: import_prop_types38.default.oneOfType([import_prop_types38.default.number, import_prop_types38.default.arrayOf(import_prop_types38.default.number)]),
    value: import_prop_types38.default.oneOfType([
      import_prop_types38.default.string,
      import_prop_types38.default.element,
      // deprecated, use valueLabel
      import_prop_types38.default.object,
      import_prop_types38.default.number,
      import_prop_types38.default.arrayOf(import_prop_types38.default.oneOfType([import_prop_types38.default.string, import_prop_types38.default.object, import_prop_types38.default.number]))
    ])
  });
}
var SelectPropTypes = PropType35;

// node_modules/grommet/es6/components/SelectMultiple/propTypes.js
function _extends71() {
  _extends71 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends71.apply(this, arguments);
}
var PropType36 = {};
if (true) {
  PropType36 = _extends71({}, genericSelectProps, {
    defaultValue: import_prop_types39.default.arrayOf(import_prop_types39.default.oneOfType([import_prop_types39.default.string, import_prop_types39.default.object, import_prop_types39.default.number])),
    help: import_prop_types39.default.node,
    limit: import_prop_types39.default.number,
    value: import_prop_types39.default.arrayOf(import_prop_types39.default.oneOfType([import_prop_types39.default.string, import_prop_types39.default.object, import_prop_types39.default.number])),
    showSelectedInline: import_prop_types39.default.bool,
    sortSelectedOnClose: import_prop_types39.default.bool
  });
}
var SelectMultiplePropTypes = PropType36;

// node_modules/grommet/es6/components/SelectMultiple/SelectMultiple.js
var _excluded44 = ["a11yTitle", "aria-label", "alignSelf", "children", "defaultValue", "disabled", "disabledKey", "dropAlign", "dropHeight", "dropProps", "dropTarget", "emptySearchMessage", "focusIndicator", "gridArea", "help", "id", "icon", "labelKey", "limit", "margin", "messages", "name", "onBlur", "onChange", "onClick", "onClose", "onFocus", "onKeyDown", "onMore", "onOpen", "onSearch", "open", "options", "placeholder", "plain", "replace", "searchPlaceholder", "size", "sortSelectedOnClose", "value", "valueKey", "valueLabel", "showSelectedInline", "width"];
function _extends72() {
  _extends72 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends72.apply(this, arguments);
}
function _objectWithoutPropertiesLoose41(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var StyledSelectBox = styled_components_browser_esm_default(Box).withConfig({
  displayName: "SelectMultiple__StyledSelectBox",
  componentId: "sc-18zwyth-0"
})(["", ";", ";", ";"], function(props) {
  return !props.plainSelect && controlBorderStyle;
}, function(props) {
  var _props$theme$select, _props$theme$select$c;
  return (_props$theme$select = props.theme.select) == null ? void 0 : (_props$theme$select$c = _props$theme$select.control) == null ? void 0 : _props$theme$select$c.extend;
}, function(props) {
  var _props$theme$select$c2;
  return props.open && ((_props$theme$select$c2 = props.theme.select.control) == null ? void 0 : _props$theme$select$c2.open);
});
StyledSelectDropButton.defaultProps = {};
Object.setPrototypeOf(StyledSelectDropButton.defaultProps, defaultProps2);
var SelectMultiple = (0, import_react78.forwardRef)(function(_ref, ref) {
  var a11yTitle = _ref.a11yTitle, ariaLabel = _ref["aria-label"], alignSelf = _ref.alignSelf, children2 = _ref.children, defaultValue3 = _ref.defaultValue, disabled = _ref.disabled, disabledKey = _ref.disabledKey, dropAlignProp = _ref.dropAlign, dropHeight = _ref.dropHeight, dropProps5 = _ref.dropProps, dropTarget = _ref.dropTarget, emptySearchMessage = _ref.emptySearchMessage, focusIndicator = _ref.focusIndicator, gridArea = _ref.gridArea, help = _ref.help, id = _ref.id, icon = _ref.icon, labelKey = _ref.labelKey, limit = _ref.limit, margin = _ref.margin, messages = _ref.messages, name = _ref.name, onBlur = _ref.onBlur, onChange = _ref.onChange, onClick = _ref.onClick, onClose = _ref.onClose, onFocus = _ref.onFocus, onKeyDown = _ref.onKeyDown, onMore = _ref.onMore, onOpen = _ref.onOpen, onSearch = _ref.onSearch, openProp = _ref.open, optionsProp = _ref.options, placeholder = _ref.placeholder, plain = _ref.plain, replace = _ref.replace, searchPlaceholder = _ref.searchPlaceholder, size = _ref.size, _ref$sortSelectedOnCl = _ref.sortSelectedOnClose, sortSelectedOnClose = _ref$sortSelectedOnCl === void 0 ? true : _ref$sortSelectedOnCl, valueProp = _ref.value, valueKey = _ref.valueKey, valueLabel = _ref.valueLabel, _ref$showSelectedInli = _ref.showSelectedInline, showSelectedInline = _ref$showSelectedInli === void 0 ? false : _ref$showSelectedInli, width = _ref.width, rest = _objectWithoutPropertiesLoose41(_ref, _excluded44);
  var theme = (0, import_react78.useContext)(Me) || defaultProps2.theme;
  var inputRef = (0, import_react78.useRef)();
  var formContext = (0, import_react78.useContext)(FormContext);
  var _useContext = (0, import_react78.useContext)(MessageContext), format3 = _useContext.format;
  var selectBoxRef = (0, import_react78.useRef)();
  var dropButtonRef = useForwardedRef(ref);
  var usingKeyboard = useKeyboard();
  var dropAlign2 = (0, import_react78.useMemo)(function() {
    return dropAlignProp || (showSelectedInline ? {
      top: "top",
      right: "right",
      left: "left"
    } : {
      top: "bottom",
      left: "left"
    });
  }, [dropAlignProp, showSelectedInline]);
  var _formContext$useFormI = formContext.useFormInput({
    name,
    value: valueProp,
    initialValue: defaultValue3 || ""
  }), value = _formContext$useFormI[0], setValue = _formContext$useFormI[1];
  var normalizedValue = (0, import_react78.useMemo)(function() {
    return getNormalizedValue(value, valueKey);
  }, [value, valueKey]);
  var _useState = (0, import_react78.useState)(), search = _useState[0], setSearch = _useState[1];
  var _useState2 = (0, import_react78.useState)(optionsProp), allOptions = _useState2[0], setAllOptions = _useState2[1];
  var _useState3 = (0, import_react78.useState)(), orderedOptions = _useState3[0], setOrderedOptions = _useState3[1];
  (0, import_react78.useEffect)(function() {
    if (!search)
      setAllOptions(optionsProp);
  }, [optionsProp, search]);
  (0, import_react78.useEffect)(function() {
    if (sortSelectedOnClose)
      setOrderedOptions(optionsProp);
  }, [optionsProp, sortSelectedOnClose]);
  var optionIndexesInValue = (0, import_react78.useMemo)(function() {
    var result = [];
    allOptions.forEach(function(option, index) {
      if (normalizedValue != null && normalizedValue.some != null && normalizedValue.some(function(v3) {
        return v3 === applyKey(option, valueKey);
      })) {
        result.push(index);
      }
    });
    return result;
  }, [allOptions, valueKey, normalizedValue]);
  var _useState4 = (0, import_react78.useState)(openProp), open = _useState4[0], setOpen = _useState4[1];
  (0, import_react78.useEffect)(function() {
    return setOpen(openProp);
  }, [openProp]);
  var onRequestOpen = (0, import_react78.useCallback)(function() {
    if (open)
      return;
    setOpen(true);
    if (onOpen)
      onOpen();
  }, [onOpen, open]);
  (0, import_react78.useEffect)(function() {
    if (sortSelectedOnClose && value && !open) {
      var selectedOptions = optionsProp.filter(function(option) {
        return arrayIncludes(value, valueKey && valueKey.reduce ? applyKey(option, valueKey) : option, valueKey || labelKey);
      });
      var unselectedOptions = optionsProp.filter(function(i3) {
        return !arrayIncludes(selectedOptions, i3, valueKey || labelKey);
      });
      var nextOrderedOptions = selectedOptions.concat(unselectedOptions);
      setOrderedOptions(nextOrderedOptions);
    }
  }, [labelKey, open, sortSelectedOnClose, optionsProp, value, valueKey]);
  var onRequestClose = (0, import_react78.useCallback)(function() {
    setOpen(false);
    if (onClose)
      onClose();
    setSearch();
  }, [onClose]);
  var triggerChangeEvent = (0, import_react78.useCallback)(function(nextValue) {
    return changeEvent(inputRef, nextValue);
  }, []);
  var onSelectChange = (0, import_react78.useCallback)(function(event, _ref2) {
    var option = _ref2.option, nextValue = _ref2.value;
    if (typeof nextValue !== "object" && nextValue !== event.target.value && inputRef.current) {
      triggerChangeEvent(nextValue);
    }
    setValue(nextValue);
    if (onChange) {
      event.persist();
      var adjustedEvent;
      if (event instanceof Event) {
        adjustedEvent = new event.constructor(event.type, event);
        Object.defineProperties(adjustedEvent, {
          target: {
            value: inputRef.current
          },
          value: {
            value: nextValue
          },
          option: {
            value: option
          }
        });
      } else {
        adjustedEvent = event;
        adjustedEvent.target = inputRef.current;
        adjustedEvent.value = nextValue;
        adjustedEvent.option = option;
      }
      onChange(adjustedEvent);
    }
  }, [onChange, setValue, triggerChangeEvent]);
  var SelectIcon = getSelectIcon(icon, theme, open);
  var selectValue = (0, import_react78.useMemo)(function() {
    var result;
    if (valueLabel) {
      result = value && valueLabel instanceof Function ? valueLabel(value) : valueLabel;
    } else if ((value == null ? void 0 : value.length) > 0 && showSelectedInline) {
      result = import_react78.default.createElement(SelectMultipleValue, {
        allOptions,
        disabled,
        disabledKey,
        dropButtonRef,
        labelKey,
        onRequestOpen,
        onSelectChange,
        theme,
        value,
        valueKey
      }, children2);
    }
    return result;
  }, [valueKey, value, valueLabel, showSelectedInline, onRequestOpen, allOptions, children2, labelKey, onSelectChange, disabled, disabledKey, dropButtonRef, theme]);
  var displayLabelKey = (0, import_react78.useMemo)(function() {
    return getDisplayLabelKey(labelKey, allOptions, optionIndexesInValue, selectValue);
  }, [labelKey, allOptions, optionIndexesInValue, selectValue]);
  var inputValue = (0, import_react78.useMemo)(function() {
    if (!selectValue) {
      if (optionIndexesInValue.length === 0)
        return "";
      if (optionIndexesInValue.length === 1)
        return applyKey(allOptions[optionIndexesInValue[0]], labelKey);
      if (messages)
        return format3({
          id: "select.multiple",
          messages
        });
      return optionIndexesInValue.length + " selected";
    }
    return void 0;
  }, [labelKey, messages, format3, optionIndexesInValue, allOptions, selectValue]);
  var iconColor = getIconColor3(theme);
  var displaySelectIcon = SelectIcon && import_react78.default.createElement(Box, {
    alignSelf: "center",
    margin: theme.select.icons.margin,
    width: {
      min: "auto"
    }
  }, (0, import_react78.isValidElement)(SelectIcon) ? SelectIcon : import_react78.default.createElement(SelectIcon, {
    color: iconColor,
    size
  }));
  var dropContent = import_react78.default.createElement(SelectMultipleContainer, {
    allOptions,
    disabled,
    disabledKey,
    dropHeight,
    emptySearchMessage,
    help,
    icon: displaySelectIcon,
    id,
    labelKey,
    limit,
    onChange: onSelectChange,
    onClose: onRequestClose,
    onKeyDown,
    onMore,
    onSearch,
    options: orderedOptions || optionsProp,
    optionIndexesInValue,
    replace,
    searchPlaceholder,
    search,
    setSearch,
    usingKeyboard,
    value,
    valueKey,
    showSelectedInline
  }, children2);
  var dropButtonProps = {
    ref: dropButtonRef,
    a11yTitle: (ariaLabel || a11yTitle || placeholder || "Open Drop") + ". " + ((value == null ? void 0 : value.length) || 0) + " selected.",
    "aria-expanded": Boolean(open),
    "aria-haspopup": "listbox",
    id,
    disabled: disabled === true || void 0,
    open,
    focusIndicator,
    onFocus,
    onBlur,
    gridArea,
    margin,
    onOpen: onRequestOpen,
    onClose: onRequestClose,
    onClick,
    plainSelect: plain,
    plain,
    // Button should be plain
    dropProps: dropProps5,
    dropContent,
    theme
  };
  return import_react78.default.createElement(Keyboard, {
    onDown: onRequestOpen,
    onUp: onRequestOpen
  }, showSelectedInline ? import_react78.default.createElement(StyledSelectBox, {
    disabled: disabled === true || void 0,
    alignSelf,
    direction: "row",
    alignContent: "start",
    background: theme.select.background,
    ref: selectBoxRef,
    flex: false,
    plainSelect: plain,
    width
  }, import_react78.default.createElement(Box, {
    width: "100%"
  }, import_react78.default.createElement(DropButton, _extends72({
    fill: "horizontal",
    alignSelf: "start"
  }, dropButtonProps, {
    dropAlign: dropAlign2,
    dropTarget: dropTarget || selectBoxRef.current
  }), selectValue || displayLabelKey ? import_react78.default.createElement(import_react78.default.Fragment, null, import_react78.default.createElement(Box, {
    direction: "row"
  }, import_react78.default.createElement(SelectTextInput, _extends72({
    a11yTitle: ariaLabel || a11yTitle,
    defaultCursor: disabled === true || void 0,
    focusIndicator: false,
    id: id ? id + "__input" : void 0,
    name,
    width: "100%"
  }, rest, {
    tabIndex: "-1",
    type: "text",
    placeholder: (
      // eslint-disable-next-line no-nested-ternary
      !value || (value == null ? void 0 : value.length) === 0 ? placeholder || selectValue || displayLabelKey : onMore ? ((value == null ? void 0 : value.length) || "0") + " selected" : ((value == null ? void 0 : value.length) || "0") + " selected of " + allOptions.length
    ),
    plain: true,
    readOnly: true,
    value: "",
    theme
  })), displaySelectIcon), import_react78.default.createElement(HiddenInput, {
    type: "text",
    name,
    id: id ? id + "__input" : void 0,
    value: inputValue,
    ref: inputRef,
    readOnly: true
  })) : import_react78.default.createElement(Box, {
    direction: "row"
  }, import_react78.default.createElement(DefaultSelectTextInput, _extends72({
    a11yTitle: ariaLabel || a11yTitle,
    disabled,
    id,
    name,
    ref: inputRef,
    placeholder: placeholder || "Select",
    value: inputValue,
    size,
    theme
  }, rest)), displaySelectIcon)), !open && (value == null ? void 0 : value.length) > 0 && (selectValue || displayLabelKey))) : import_react78.default.createElement(Box, {
    width
  }, import_react78.default.createElement(StyledSelectDropButton, _extends72({}, dropButtonProps, {
    dropAlign: dropAlign2,
    dropTarget,
    alignSelf,
    tabIndex: "0"
  }), import_react78.default.createElement(Box, {
    align: "center",
    direction: "row",
    justify: "between",
    background: theme.select.background
  }, import_react78.default.createElement(Box, {
    direction: "row",
    flex: true,
    basis: "auto"
  }, selectValue || displayLabelKey ? import_react78.default.createElement(import_react78.default.Fragment, null, selectValue || displayLabelKey, import_react78.default.createElement(HiddenInput, {
    type: "text",
    name,
    id: id ? id + "__input" : void 0,
    value: inputValue,
    ref: inputRef,
    readOnly: true
  })) : import_react78.default.createElement(DefaultSelectTextInput, _extends72({
    a11yTitle: ariaLabel || a11yTitle,
    disabled,
    id,
    name,
    ref: inputRef,
    placeholder,
    value: inputValue,
    size,
    theme
  }, rest))), displaySelectIcon))));
});
SelectMultiple.defaultProps = _extends72({}, defaultProps2);
SelectMultiple.displayName = "SelectMultiple";
SelectMultiple.propTypes = SelectMultiplePropTypes;

// node_modules/grommet/es6/components/DataFilter/propTypes.js
var import_prop_types40 = __toESM(require_prop_types());
var PropType37 = {};
if (true) {
  PropType37 = {
    options: import_prop_types40.default.arrayOf(import_prop_types40.default.oneOfType([import_prop_types40.default.string, import_prop_types40.default.number, import_prop_types40.default.shape({
      label: import_prop_types40.default.string,
      value: import_prop_types40.default.oneOfType([import_prop_types40.default.string, import_prop_types40.default.number, import_prop_types40.default.bool])
    })])),
    property: import_prop_types40.default.string
  };
}
var DataFilterPropTypes = PropType37;

// node_modules/grommet/es6/components/DataFilter/DataFilter.js
var _excluded45 = ["children", "options", "property", "range"];
function _extends73() {
  _extends73 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends73.apply(this, arguments);
}
function _objectWithoutPropertiesLoose42(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var getValueAt3 = function getValueAt4(valueObject, pathArg) {
  if (valueObject === void 0)
    return void 0;
  var path = Array.isArray(pathArg) ? pathArg : pathArg.split(".");
  if (path.length === 1)
    return valueObject[path];
  return getValueAt4(valueObject[path.shift()], path);
};
var generateOptions = function generateOptions2(data, property) {
  return Array.from(new Set(data.map(function(d3) {
    return getValueAt3(d3, property);
  }))).filter(function(v3) {
    return v3 !== void 0 && v3 !== "";
  }).sort();
};
var alignMax3 = function alignMax4(value, interval) {
  if (value > 0)
    return value - value % interval + interval;
  if (value < 0)
    return value + value % interval;
  return value;
};
var alignMin3 = function alignMin4(value, interval) {
  if (value > 0)
    return value - value % interval;
  if (value < 0)
    return value - value % interval - interval;
  return value;
};
var booleanOptions = [{
  label: "true",
  value: true
}, {
  label: "false",
  value: false
}];
var DataFilter = function DataFilter2(_ref) {
  var _properties$property3;
  var children2 = _ref.children, optionsProp = _ref.options, property = _ref.property, rangeProp = _ref.range, rest = _objectWithoutPropertiesLoose42(_ref, _excluded45);
  var _useContext = (0, import_react79.useContext)(DataContext), data = _useContext.data, dataId = _useContext.id, properties = _useContext.properties, unfilteredData = _useContext.unfilteredData;
  var _useContext2 = (0, import_react79.useContext)(FormContext), noForm = _useContext2.noForm;
  var _useMemo = (0, import_react79.useMemo)(function() {
    var _properties$property, _properties$property2;
    if (children2)
      return [void 0, void 0];
    var optionsIn = optionsProp || (properties == null ? void 0 : (_properties$property = properties[property]) == null ? void 0 : _properties$property.options);
    var rangeIn = rangeProp || (properties == null ? void 0 : (_properties$property2 = properties[property]) == null ? void 0 : _properties$property2.range);
    if (optionsIn)
      return [optionsIn, void 0];
    if (rangeIn)
      return [void 0, [rangeIn.min, rangeIn.max]];
    var uniqueValues = generateOptions(unfilteredData || data, property);
    if (uniqueValues.length < 2)
      return [void 0, void 0];
    if (uniqueValues.some(function(v3) {
      return v3 !== void 0 && typeof v3 !== "number";
    }))
      return [uniqueValues, void 0];
    var delta = uniqueValues[uniqueValues.length - 1] - uniqueValues[0];
    var interval = Number.parseFloat((delta / 3).toPrecision(1));
    var min = alignMin3(uniqueValues[0], interval);
    var max = alignMax3(uniqueValues[uniqueValues.length - 1], interval);
    return [void 0, [min, max]];
  }, [children2, data, optionsProp, properties, property, rangeProp, unfilteredData]), options = _useMemo[0], range = _useMemo[1];
  var id = dataId + "-" + property;
  var content = children2;
  if (!content) {
    if (range) {
      content = import_react79.default.createElement(RangeSelector, {
        id,
        name: property + "._range",
        defaultValues: range,
        label: true,
        min: range[0],
        max: range[1],
        step: (range[1] - range[0]) / 20,
        size: "full",
        round: "small"
      });
    } else if (options) {
      if (options.length === 2 && options[1] === true && options[0] === false) {
        content = import_react79.default.createElement(CheckBoxGroup, {
          id,
          name: property,
          options: booleanOptions
        });
      } else if (options.length < 7) {
        content = import_react79.default.createElement(CheckBoxGroup, {
          id,
          name: property,
          options
        });
      } else {
        content = import_react79.default.createElement(SelectMultiple, {
          id,
          name: property,
          showSelectedInline: true,
          options
        });
      }
    }
  }
  if (!content)
    return null;
  if (noForm)
    content = import_react79.default.createElement(DataForm, {
      footer: false,
      updateOn: "change"
    }, content);
  else
    content = import_react79.default.createElement(FormField, _extends73({
      htmlFor: id,
      name: property,
      label: (properties == null ? void 0 : (_properties$property3 = properties[property]) == null ? void 0 : _properties$property3.label) || property
    }, rest), content);
  return content;
};
DataFilter.propTypes = DataFilterPropTypes;

// node_modules/grommet/es6/components/DataSort/DataSort.js
var import_react82 = __toESM(require_react());
var import_Descend = __toESM(require_Descend());

// node_modules/grommet/es6/components/Select/Select.js
var import_react81 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/Select/SelectContainer.js
var import_react80 = __toESM(require_react());
init_styled_components_browser_esm();
var _excluded46 = ["clear", "onClear", "name", "theme"];
function _extends74() {
  _extends74 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends74.apply(this, arguments);
}
function _objectWithoutPropertiesLoose43(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var StyledButton2 = styled_components_browser_esm_default(Button).withConfig({
  displayName: "SelectContainer__StyledButton",
  componentId: "sc-1wi0ul8-0"
})(["&:focus{", "}"], function(props) {
  return getHoverIndicatorStyle("background", props.theme);
});
var ClearButton = (0, import_react80.forwardRef)(function(_ref, ref) {
  var clear = _ref.clear, onClear = _ref.onClear, name = _ref.name, theme = _ref.theme, rest = _objectWithoutPropertiesLoose43(_ref, _excluded46);
  var label = clear.label, position = clear.position;
  var align = position !== "bottom" ? "start" : "center";
  var buttonLabel = label || "Clear " + (name || "selection");
  return import_react80.default.createElement(StyledButton2, _extends74({
    a11yTitle: buttonLabel + ". Or, press " + (position === "bottom" ? "shift tab" : "down arrow") + " to move to select options",
    fill: "horizontal",
    ref,
    onClick: onClear,
    focusIndicator: false
  }, rest), import_react80.default.createElement(Box, _extends74({}, theme.select.clear.container, {
    align
  }), import_react80.default.createElement(Text, theme.select.clear.text, buttonLabel)));
});
var SelectContainer = (0, import_react80.forwardRef)(function(_ref2, ref) {
  var clear = _ref2.clear, _ref2$children = _ref2.children, children2 = _ref2$children === void 0 ? null : _ref2$children, disabled = _ref2.disabled, disabledKey = _ref2.disabledKey, dropHeight = _ref2.dropHeight, _ref2$emptySearchMess = _ref2.emptySearchMessage, emptySearchMessage = _ref2$emptySearchMess === void 0 ? "No matches found" : _ref2$emptySearchMess, id = _ref2.id, labelKey = _ref2.labelKey, multiple = _ref2.multiple, name = _ref2.name, onChange = _ref2.onChange, onKeyDown = _ref2.onKeyDown, onMore = _ref2.onMore, onSearch = _ref2.onSearch, optionIndexesInValue = _ref2.optionIndexesInValue, options = _ref2.options, allOptions = _ref2.allOptions, searchPlaceholder = _ref2.searchPlaceholder, search = _ref2.search, setSearch = _ref2.setSearch, selected = _ref2.selected, usingKeyboard = _ref2.usingKeyboard, _ref2$value = _ref2.value, value = _ref2$value === void 0 ? "" : _ref2$value, valueKey = _ref2.valueKey, _ref2$replace = _ref2.replace, replace = _ref2$replace === void 0 ? true : _ref2$replace;
  var theme = (0, import_react80.useContext)(Me) || defaultProps2.theme;
  var shouldShowClearButton = (0, import_react80.useCallback)(function(position) {
    var hasValue = Boolean(multiple && value ? value.length : value);
    var showAtPosition = position === "bottom" ? (clear == null ? void 0 : clear.position) === "bottom" : (clear == null ? void 0 : clear.position) !== "bottom";
    return clear && hasValue && showAtPosition;
  }, [clear, multiple, value]);
  var isDisabled = useDisabled(disabled, disabledKey, options, valueKey || labelKey);
  var _useState = (0, import_react80.useState)(usingKeyboard && !shouldShowClearButton("top") ? 0 : -1), activeIndex = _useState[0], setActiveIndex = _useState[1];
  var _useState2 = (0, import_react80.useState)(usingKeyboard), keyboardNavigation = _useState2[0], setKeyboardNavigation = _useState2[1];
  var searchRef = (0, import_react80.useRef)();
  var optionsRef = (0, import_react80.useRef)();
  var clearRef = (0, import_react80.useRef)();
  var activeRef = (0, import_react80.useRef)();
  (0, import_react80.useEffect)(function() {
    var _activeRef$current;
    if (activeIndex >= 0)
      (_activeRef$current = activeRef.current) == null ? void 0 : _activeRef$current.focus();
  }, [activeIndex]);
  (0, import_react80.useEffect)(function() {
    var timer = setTimeout(function() {
      var optionsNode = optionsRef.current;
      var clearButton = clearRef.current;
      if (onSearch) {
        var searchInput = searchRef.current;
        if (searchInput && searchInput.focus) {
          setFocusWithoutScroll(searchInput);
        }
      } else if (clear && clearButton && clearButton.focus && clear.position !== "bottom") {
        setFocusWithoutScroll(clearButton);
      } else if (usingKeyboard && activeRef.current) {
        setFocusWithoutScroll(activeRef.current);
      } else if (optionsNode) {
        setFocusWithoutScroll(optionsNode);
      }
    }, 100);
    return function() {
      return clearTimeout(timer);
    };
  }, [onSearch, usingKeyboard, clear]);
  var isSelected = (0, import_react80.useCallback)(function(index) {
    var result;
    if (selected) {
      result = selected.indexOf(index) !== -1;
    } else {
      var optionVal = getOptionValue(index, options, valueKey);
      if (Array.isArray(value)) {
        if (value.length === 0) {
          result = false;
        } else if (typeof value[0] !== "object") {
          result = value.indexOf(optionVal) !== -1;
        } else if (valueKey) {
          result = value.some(function(valueItem) {
            var valueValue2 = typeof valueKey === "function" ? valueKey(valueItem) : valueItem[valueKey] || valueItem[valueKey.key];
            return valueValue2 === optionVal;
          });
        }
      } else if (valueKey && value !== null && typeof value === "object") {
        var valueValue = typeof valueKey === "function" ? valueKey(value) : value[valueKey];
        result = valueValue === optionVal;
      } else {
        result = value === optionVal;
      }
    }
    return result;
  }, [selected, value, valueKey, options]);
  var selectOption = (0, import_react80.useCallback)(function(index) {
    return function(event) {
      if (onChange) {
        var nextValue;
        var nextSelected;
        if (multiple) {
          var nextOptionIndexesInValue = optionIndexesInValue.slice(0);
          var allOptionsIndex = allOptions.indexOf(options[index]);
          var valueIndex = optionIndexesInValue.indexOf(allOptionsIndex);
          if (valueIndex === -1) {
            nextOptionIndexesInValue.push(allOptionsIndex);
          } else {
            nextOptionIndexesInValue.splice(valueIndex, 1);
          }
          nextValue = nextOptionIndexesInValue.map(function(i3) {
            return valueKey && valueKey.reduce ? applyKey(allOptions[i3], valueKey) : allOptions[i3];
          });
          nextSelected = nextOptionIndexesInValue;
        } else {
          nextValue = valueKey && valueKey.reduce ? applyKey(options[index], valueKey) : options[index];
          nextSelected = index;
        }
        onChange(event, {
          option: options[index],
          value: nextValue,
          selected: nextSelected
        });
      }
    };
  }, [multiple, onChange, optionIndexesInValue, options, allOptions, valueKey]);
  var onClear = (0, import_react80.useCallback)(function(event) {
    onChange(event, {
      option: void 0,
      value: "",
      selected: ""
    });
  }, [onChange]);
  var onNextOption = (0, import_react80.useCallback)(function(event) {
    event.preventDefault();
    var nextActiveIndex = activeIndex + 1;
    while (nextActiveIndex < options.length && isDisabled(nextActiveIndex)) {
      nextActiveIndex += 1;
    }
    if (nextActiveIndex !== options.length) {
      setActiveIndex(nextActiveIndex);
      setKeyboardNavigation(true);
    }
  }, [activeIndex, options, isDisabled]);
  var onPreviousOption = (0, import_react80.useCallback)(function(event) {
    event.preventDefault();
    var nextActiveIndex = activeIndex - 1;
    if (nextActiveIndex === -1) {
      var searchInput = searchRef.current;
      var clearButton = clearRef.current;
      if (clearButton && clearButton.focus && shouldShowClearButton("top")) {
        setActiveIndex(nextActiveIndex);
        setFocusWithoutScroll(clearButton);
      } else if (searchInput && searchInput.focus) {
        setActiveIndex(nextActiveIndex);
        setFocusWithoutScroll(searchInput);
      }
    }
    while (nextActiveIndex >= 0 && isDisabled(nextActiveIndex)) {
      nextActiveIndex -= 1;
    }
    if (nextActiveIndex >= 0) {
      setActiveIndex(nextActiveIndex);
      setKeyboardNavigation(true);
    }
  }, [activeIndex, isDisabled, shouldShowClearButton]);
  var onKeyDownOption = (0, import_react80.useCallback)(function(event) {
    if (!onSearch) {
      var nextActiveIndex = options.findIndex(function(e3, index) {
        var label;
        if (typeof e3 === "object") {
          label = e3.label || applyKey(e3, labelKey);
        } else {
          label = e3;
        }
        return typeof label === "string" && label.charAt(0).toLowerCase() === event.key.toLowerCase() && !isDisabled(index);
      });
      if (nextActiveIndex >= 0) {
        event.preventDefault();
        setActiveIndex(nextActiveIndex);
        setKeyboardNavigation(true);
      }
    }
    if (onKeyDown) {
      onKeyDown(event);
    }
  }, [isDisabled, labelKey, onKeyDown, options, onSearch]);
  var onActiveOption = (0, import_react80.useCallback)(function(index) {
    return function() {
      if (!keyboardNavigation)
        setActiveIndex(index);
    };
  }, [keyboardNavigation]);
  var onSelectOption = (0, import_react80.useCallback)(function(event) {
    if ((shouldShowClearButton("bottom") || shouldShowClearButton("top")) && containsFocus(clearRef.current)) {
      onChange(event, {
        option: void 0,
        value: "",
        selected: ""
      });
    } else if (activeIndex >= 0 && activeIndex < options.length) {
      event.preventDefault();
      selectOption(activeIndex)(event);
    }
  }, [activeIndex, selectOption, options, onChange, shouldShowClearButton]);
  var customSearchInput = theme.select.searchInput;
  var SelectTextInput2 = customSearchInput || TextInput;
  var selectOptionsStyle = theme.select.options ? _extends74({}, theme.select.options.box, theme.select.options.container) : {};
  return import_react80.default.createElement(Keyboard, {
    onEnter: onSelectOption,
    onSpace: onSelectOption,
    onUp: onPreviousOption,
    onDown: onNextOption,
    onKeyDown: onKeyDownOption
  }, import_react80.default.createElement(StyledContainer2, {
    ref,
    as: Box,
    id: id ? id + "__select-drop" : void 0,
    dropHeight
  }, onSearch && import_react80.default.createElement(Box, {
    pad: !customSearchInput ? "xsmall" : void 0,
    flex: false
  }, import_react80.default.createElement(SelectTextInput2, {
    focusIndicator: !customSearchInput,
    size: "small",
    ref: searchRef,
    type: "search",
    value: search || "",
    placeholder: searchPlaceholder,
    onChange: function onChange2(event) {
      var nextSearch = event.target.value;
      setSearch(nextSearch);
      setActiveIndex(-1);
      onSearch(nextSearch);
    }
  })), shouldShowClearButton("top") && import_react80.default.createElement(ClearButton, {
    ref: clearRef,
    clear,
    name,
    onClear,
    onFocus: function onFocus() {
      return setActiveIndex(-1);
    },
    onMouseOver: function onMouseOver() {
      return setActiveIndex(-1);
    },
    theme
  }), options.length > 0 ? import_react80.default.createElement(OptionsContainer, {
    role: "listbox",
    tabIndex: "-1",
    ref: optionsRef,
    "aria-multiselectable": multiple,
    onMouseMove: function onMouseMove() {
      return setKeyboardNavigation(false);
    }
  }, import_react80.default.createElement(InfiniteScroll, {
    items: options,
    step: theme.select.step,
    onMore,
    replace,
    show: activeIndex !== -1 ? activeIndex : void 0
  }, function(option, index, optionRef) {
    var optionDisabled = isDisabled(index);
    var optionSelected = isSelected(index);
    var optionActive = activeIndex === index;
    var child;
    var textComponent = false;
    if (children2) {
      child = children2(option, index, options, {
        active: optionActive,
        disabled: optionDisabled,
        selected: optionSelected
      });
      if (typeof child === "string" || child.props && child.props.children && typeof child.props.children === "string")
        textComponent = true;
    } else if (theme.select.options) {
      child = import_react80.default.createElement(Box, selectOptionsStyle, import_react80.default.createElement(Text, theme.select.options.text, getOptionLabel(index, options, labelKey)));
      textComponent = true;
    }
    return import_react80.default.createElement(
      SelectOption,
      {
        key: index,
        ref: function ref2(node) {
          if (optionRef)
            optionRef.current = node;
          if (optionActive)
            activeRef.current = node;
        },
        tabIndex: optionSelected ? "0" : "-1",
        role: "option",
        "aria-setsize": options.length,
        "aria-posinset": index + 1,
        "aria-selected": optionSelected,
        focusIndicator: false,
        "aria-disabled": optionDisabled || void 0,
        plain: !child ? void 0 : true,
        align: "start",
        kind: !child ? "option" : void 0,
        label: !child ? getOptionLabel(index, options, labelKey || valueKey) : void 0,
        disabled: optionDisabled || void 0,
        active: optionActive,
        selected: optionSelected,
        onFocus: function onFocus() {
          return setActiveIndex(index);
        },
        onMouseOver: !optionDisabled ? onActiveOption(index) : void 0,
        onClick: !optionDisabled ? selectOption(index) : void 0,
        textComponent
      },
      child
    );
  })) : import_react80.default.createElement(EmptySearchOption, {
    emptySearchMessage,
    selectOptionsStyle,
    theme
  }), shouldShowClearButton("bottom") && import_react80.default.createElement(ClearButton, {
    ref: clearRef,
    clear,
    name,
    onClear,
    onFocus: function onFocus() {
      return setActiveIndex(-1);
    },
    onMouseOver: function onMouseOver() {
      return setActiveIndex(-1);
    },
    theme
  })));
});

// node_modules/grommet/es6/components/Select/Select.js
var _excluded47 = ["a11yTitle", "aria-label", "alignSelf", "children", "clear", "closeOnChange", "defaultValue", "disabled", "disabledKey", "dropAlign", "dropHeight", "dropProps", "dropTarget", "emptySearchMessage", "focusIndicator", "gridArea", "id", "icon", "labelKey", "margin", "messages", "multiple", "name", "onBlur", "onChange", "onClick", "onClose", "onFocus", "onKeyDown", "onMore", "onOpen", "onSearch", "open", "options", "placeholder", "plain", "replace", "searchPlaceholder", "selected", "size", "value", "valueKey", "valueLabel"];
function _extends75() {
  _extends75 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends75.apply(this, arguments);
}
function _objectWithoutPropertiesLoose44(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
StyledSelectDropButton.defaultProps = {};
Object.setPrototypeOf(StyledSelectDropButton.defaultProps, defaultProps2);
var defaultDropAlign3 = {
  top: "bottom",
  left: "left"
};
var Select = (0, import_react81.forwardRef)(function(_ref, ref) {
  var a11yTitle = _ref.a11yTitle, ariaLabel = _ref["aria-label"], alignSelf = _ref.alignSelf, children2 = _ref.children, _ref$clear = _ref.clear, clear = _ref$clear === void 0 ? false : _ref$clear, _ref$closeOnChange = _ref.closeOnChange, closeOnChange = _ref$closeOnChange === void 0 ? true : _ref$closeOnChange, defaultValue3 = _ref.defaultValue, disabled = _ref.disabled, disabledKey = _ref.disabledKey, _ref$dropAlign = _ref.dropAlign, dropAlign2 = _ref$dropAlign === void 0 ? defaultDropAlign3 : _ref$dropAlign, dropHeight = _ref.dropHeight, dropProps5 = _ref.dropProps, dropTarget = _ref.dropTarget, emptySearchMessage = _ref.emptySearchMessage, focusIndicator = _ref.focusIndicator, gridArea = _ref.gridArea, id = _ref.id, icon = _ref.icon, labelKeyProp = _ref.labelKey, margin = _ref.margin, messages = _ref.messages, multiple = _ref.multiple, name = _ref.name, onBlur = _ref.onBlur, onChange = _ref.onChange, onClick = _ref.onClick, onClose = _ref.onClose, onFocus = _ref.onFocus, onKeyDown = _ref.onKeyDown, onMore = _ref.onMore, onOpen = _ref.onOpen, onSearch = _ref.onSearch, propOpen = _ref.open, optionsProp = _ref.options, placeholder = _ref.placeholder, plain = _ref.plain, replace = _ref.replace, searchPlaceholder = _ref.searchPlaceholder, selected = _ref.selected, size = _ref.size, valueProp = _ref.value, valueKeyProp = _ref.valueKey, valueLabel = _ref.valueLabel, rest = _objectWithoutPropertiesLoose44(_ref, _excluded47);
  var theme = (0, import_react81.useContext)(Me) || defaultProps2.theme;
  var inputRef = (0, import_react81.useRef)();
  var formContext = (0, import_react81.useContext)(FormContext);
  var _useContext = (0, import_react81.useContext)(MessageContext), format3 = _useContext.format;
  var valueKey = valueKeyProp || labelKeyProp;
  var labelKey = labelKeyProp || valueKeyProp;
  var usingKeyboard = useKeyboard();
  var _formContext$useFormI = formContext.useFormInput({
    name,
    value: valueProp,
    initialValue: defaultValue3 || ""
  }), value = _formContext$useFormI[0], setValue = _formContext$useFormI[1];
  var normalizedValue = (0, import_react81.useMemo)(function() {
    return getNormalizedValue(value, valueKey);
  }, [value, valueKey]);
  var _useState = (0, import_react81.useState)(), search = _useState[0], setSearch = _useState[1];
  var _useState2 = (0, import_react81.useState)(optionsProp), allOptions = _useState2[0], setAllOptions = _useState2[1];
  (0, import_react81.useEffect)(function() {
    if (!search)
      setAllOptions(optionsProp);
  }, [optionsProp, search]);
  var optionIndexesInValue = (0, import_react81.useMemo)(function() {
    var result = [];
    allOptions.forEach(function(option, index) {
      if (selected !== void 0) {
        if (Array.isArray(selected)) {
          if (selected.indexOf(index) !== -1)
            result.push(index);
        } else if (index === selected) {
          result.push(index);
        }
      } else if (Array.isArray(normalizedValue)) {
        if (normalizedValue.some(function(v3) {
          return v3 === applyKey(option, valueKey);
        })) {
          result.push(index);
        }
      } else if (normalizedValue === applyKey(option, valueKey)) {
        result.push(index);
      }
    });
    return result;
  }, [allOptions, selected, valueKey, normalizedValue]);
  var _useState3 = (0, import_react81.useState)(propOpen), open = _useState3[0], setOpen = _useState3[1];
  (0, import_react81.useEffect)(function() {
    return setOpen(propOpen);
  }, [propOpen]);
  var onRequestOpen = (0, import_react81.useCallback)(function() {
    if (open)
      return;
    setOpen(true);
    if (onOpen)
      onOpen();
  }, [onOpen, open]);
  var onRequestClose = (0, import_react81.useCallback)(function() {
    setOpen(false);
    if (onClose)
      onClose();
    setSearch();
  }, [onClose]);
  var triggerChangeEvent = (0, import_react81.useCallback)(function(nextValue) {
    return changeEvent(inputRef, nextValue);
  }, []);
  var onSelectChange = (0, import_react81.useCallback)(function(event, _ref2) {
    var option = _ref2.option, nextValue = _ref2.value, nextSelected = _ref2.selected;
    if (closeOnChange)
      onRequestClose();
    if ((typeof nextValue !== "object" || multiple) && nextValue !== event.target.value && inputRef.current) {
      triggerChangeEvent(nextValue);
    }
    setValue(nextValue);
    if (onChange) {
      event.persist();
      var adjustedEvent;
      if (event instanceof Event) {
        adjustedEvent = new event.constructor(event.type, event);
        Object.defineProperties(adjustedEvent, {
          target: {
            value: inputRef.current
          },
          value: {
            value: nextValue
          },
          option: {
            value: option
          },
          selected: {
            value: nextSelected
          }
        });
      } else {
        adjustedEvent = event;
        adjustedEvent.target = inputRef.current;
        adjustedEvent.value = nextValue;
        adjustedEvent.option = option;
        adjustedEvent.selected = nextSelected;
      }
      onChange(adjustedEvent);
    }
  }, [closeOnChange, multiple, onChange, onRequestClose, setValue, triggerChangeEvent]);
  var SelectIcon = getSelectIcon(icon, theme, open);
  var selectValue = (0, import_react81.useMemo)(function() {
    if (valueLabel instanceof Function) {
      if (value)
        return valueLabel(value);
    } else if (valueLabel)
      return valueLabel;
    else if (import_react81.default.isValidElement(value))
      return value;
    return void 0;
  }, [value, valueLabel]);
  var displayLabelKey = (0, import_react81.useMemo)(function() {
    return getDisplayLabelKey(labelKey, allOptions, optionIndexesInValue, selectValue);
  }, [labelKey, allOptions, optionIndexesInValue, selectValue]);
  var inputValue = (0, import_react81.useMemo)(function() {
    if (!selectValue) {
      if (optionIndexesInValue.length === 0)
        return "";
      if (optionIndexesInValue.length === 1)
        return applyKey(allOptions[optionIndexesInValue[0]], labelKey);
      return format3({
        id: "select.multiple",
        messages
      });
    }
    return void 0;
  }, [labelKey, messages, format3, optionIndexesInValue, allOptions, selectValue]);
  var iconColor = getIconColor3(theme);
  return import_react81.default.createElement(Keyboard, {
    onDown: onRequestOpen,
    onUp: onRequestOpen
  }, import_react81.default.createElement(StyledSelectDropButton, {
    ref,
    a11yTitle: "" + (ariaLabel || a11yTitle || placeholder || "Open Drop") + (value ? format3({
      id: "select.selected",
      messages,
      values: {
        currentSelectedValue: value
      }
    }) : ""),
    "aria-expanded": Boolean(open),
    "aria-haspopup": "listbox",
    id,
    disabled: disabled === true || void 0,
    dropAlign: dropAlign2,
    dropTarget,
    open,
    alignSelf,
    focusIndicator,
    onFocus,
    onBlur,
    gridArea,
    margin,
    onOpen: onRequestOpen,
    onClose: onRequestClose,
    onClick,
    dropContent: import_react81.default.createElement(SelectContainer, {
      clear,
      disabled,
      disabledKey,
      dropHeight,
      emptySearchMessage,
      id,
      labelKey,
      multiple,
      name,
      onChange: onSelectChange,
      onKeyDown,
      onMore,
      onSearch,
      options: optionsProp,
      allOptions,
      optionIndexesInValue,
      replace,
      searchPlaceholder,
      search,
      setSearch,
      selected,
      usingKeyboard,
      value,
      valueKey
    }, children2),
    plainSelect: plain,
    plain: true,
    dropProps: dropProps5,
    theme
  }, import_react81.default.createElement(Box, {
    align: "center",
    direction: "row",
    justify: "between",
    background: theme.select.background
  }, import_react81.default.createElement(Box, {
    direction: "row",
    flex: true,
    basis: "auto"
  }, selectValue || displayLabelKey ? import_react81.default.createElement(import_react81.default.Fragment, null, selectValue || displayLabelKey, import_react81.default.createElement(HiddenInput, {
    type: "text",
    name,
    id: id ? id + "__input" : void 0,
    value: inputValue,
    ref: inputRef,
    readOnly: true
  })) : import_react81.default.createElement(DefaultSelectTextInput, _extends75({
    a11yTitle: (ariaLabel || a11yTitle) && "" + (ariaLabel || a11yTitle) + (value && typeof value === "string" ? ", " + value : ""),
    disabled,
    id,
    name,
    ref: inputRef,
    placeholder,
    value: inputValue,
    size,
    theme
  }, rest))), SelectIcon && import_react81.default.createElement(Box, {
    margin: theme.select.icons.margin,
    flex: false,
    style: {
      minWidth: "auto"
    }
  }, (0, import_react81.isValidElement)(SelectIcon) ? SelectIcon : import_react81.default.createElement(SelectIcon, {
    color: iconColor,
    size
  })))));
});
Select.defaultProps = _extends75({}, defaultProps2);
Select.displayName = "Select";
Select.propTypes = SelectPropTypes;

// node_modules/grommet/es6/components/DataSort/propTypes.js
var import_prop_types41 = __toESM(require_prop_types());
var PropType38 = {};
if (true) {
  PropType38 = {
    drop: import_prop_types41.default.bool
  };
}
var DataSortPropTypes = PropType38;

// node_modules/grommet/es6/components/DataSort/DataSort.js
var _excluded48 = ["drop", "options"];
function _extends76() {
  _extends76 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends76.apply(this, arguments);
}
function _objectWithoutPropertiesLoose45(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var dropProps = {
  align: {
    top: "bottom",
    left: "left"
  }
};
var Content = function Content2(_ref) {
  var optionsArg = _ref.options;
  var _useContext = (0, import_react82.useContext)(DataContext), data = _useContext.data, dataId = _useContext.id, messages = _useContext.messages, properties = _useContext.properties;
  var _useContext2 = (0, import_react82.useContext)(MessageContext), format3 = _useContext2.format;
  var options = (0, import_react82.useMemo)(function() {
    return optionsArg || properties && Object.keys(properties).sort() || Object.keys(data[0]).sort();
  }, [data, optionsArg, properties]);
  var directionOptions = [{
    label: format3({
      id: "dataSort.ascending",
      messages: messages == null ? void 0 : messages.dataSort
    }),
    value: "asc"
  }, {
    label: format3({
      id: "dataSort.descending",
      messages: messages == null ? void 0 : messages.dataSort
    }),
    value: "desc"
  }];
  var sortPropertyId = dataId + "--sort-property";
  var sortDirectionId = dataId + "--sort-direction";
  return [import_react82.default.createElement(FormField, {
    key: "by",
    htmlFor: sortPropertyId,
    label: format3({
      id: "dataSort.by",
      messages: messages == null ? void 0 : messages.dataSort
    })
  }, import_react82.default.createElement(Select, {
    id: sortPropertyId,
    name: "_sort.property",
    options
  })), import_react82.default.createElement(FormField, {
    key: "dir",
    htmlFor: sortDirectionId,
    label: format3({
      id: "dataSort.direction",
      messages: messages == null ? void 0 : messages.dataSort
    })
  }, import_react82.default.createElement(RadioButtonGroup, {
    id: sortDirectionId,
    name: "_sort.direction",
    options: directionOptions
  }))];
};
var DataSort = function DataSort2(_ref2) {
  var drop = _ref2.drop, options = _ref2.options, rest = _objectWithoutPropertiesLoose45(_ref2, _excluded48);
  var _useContext3 = (0, import_react82.useContext)(DataContext), dataId = _useContext3.id, messages = _useContext3.messages;
  var _useContext4 = (0, import_react82.useContext)(FormContext), noForm = _useContext4.noForm;
  var _useContext5 = (0, import_react82.useContext)(MessageContext), format3 = _useContext5.format;
  var _useState = (0, import_react82.useState)(), showContent = _useState[0], setShowContent = _useState[1];
  var content = import_react82.default.createElement(Content, {
    options
  });
  if (noForm)
    content = import_react82.default.createElement(DataForm, {
      footer: false
    }, content);
  if (!drop)
    return content;
  var control = import_react82.default.createElement(DropButton, _extends76({
    id: dataId + "--sort-control",
    "aria-label": format3({
      id: "dataSort.open",
      messages: messages == null ? void 0 : messages.dataSort
    }),
    kind: "toolbar",
    icon: import_react82.default.createElement(import_Descend.Descend, null),
    dropProps,
    dropContent: import_react82.default.createElement(Box, {
      pad: "small"
    }, content),
    open: showContent,
    onOpen: function onOpen() {
      return setShowContent(void 0);
    },
    onClose: function onClose() {
      return setShowContent(void 0);
    }
  }, rest));
  return control;
};
DataSort.propTypes = DataSortPropTypes;

// node_modules/grommet/es6/components/Layer/Layer.js
var import_react84 = __toESM(require_react());
var import_react_dom2 = __toESM(require_react_dom());

// node_modules/grommet/es6/components/Layer/LayerContainer.js
var import_react83 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/Layer/StyledLayer.js
init_styled_components_browser_esm();
var hiddenPositionStyle = Ae(["left:-100%;right:100%;z-index:-1;position:fixed;"]);
var desktopLayerStyle = "\n  position: fixed;\n  top: 0px;\n  left: 0px;\n  right: 0px;\n  bottom: 0px;\n";
var responsiveLayerStyle = "\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  min-height: 100vh;\n";
var StyledLayer = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledLayer",
  componentId: "sc-rmtehz-0"
})(["", " background:transparent;position:relative;z-index:", ";pointer-events:none;outline:none;", " ", ";"], baseStyle, function(props) {
  return props.theme.layer.zIndex;
}, function(props) {
  if (props.position === "hidden") {
    return hiddenPositionStyle;
  }
  var styles = [];
  styles.push(desktopLayerStyle);
  if (props.responsive && props.theme.layer.responsiveBreakpoint && !props.layerTarget) {
    var breakpoint = props.theme.global.breakpoints[props.theme.layer.responsiveBreakpoint];
    styles.push(breakpointStyle(breakpoint, responsiveLayerStyle));
  }
  return styles;
}, function(props) {
  return props.theme.layer && props.theme.layer.extend;
});
StyledLayer.defaultProps = {};
Object.setPrototypeOf(StyledLayer.defaultProps, defaultProps2);
var StyledOverlay = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledLayer__StyledOverlay",
  componentId: "sc-rmtehz-1"
})(["position:absolute;", " top:0px;left:0px;right:0px;bottom:0px;", " ", " pointer-events:all;will-change:transform;"], function(props) {
  if (props.responsive && props.theme.layer.responsiveBreakpoint) {
    var breakpoint = props.theme.global.breakpoints[props.theme.layer.responsiveBreakpoint];
    return breakpointStyle(breakpoint, "position: relative;");
  }
  return "";
}, function(props) {
  return props.theme.layer.overlay.backdropFilter && "backdrop-filter: " + props.theme.layer.overlay.backdropFilter + ";";
}, function(props) {
  return !props.plain && props.theme.layer.overlay.background && backgroundStyle(props.theme.layer.overlay.background, props.theme);
});
var getMargin = function getMargin2(margin, theme, position) {
  var axis = position.indexOf("top") !== -1 || position.indexOf("bottom") !== -1 ? "vertical" : "horizontal";
  var marginValue = margin[position] || margin[axis] || margin;
  var marginApplied = theme.global.edgeSize[marginValue] || marginValue;
  var marginInTheme = !!theme.global.edgeSize[marginValue];
  return !marginInTheme && typeof marginValue !== "string" ? 0 : parseMetricToNum(marginApplied);
};
var getBounds = function getBounds2(bounds2, margin, theme, position) {
  if (position === void 0) {
    position = void 0;
  }
  if (position) {
    return bounds2[position] + getMargin(margin, theme, position);
  }
  return {
    bottom: bounds2.bottom + getMargin(margin, theme, "bottom"),
    // 'bottom-left': getMargin(margin, theme, 'bottom-left'),
    // 'bottom-right': getMargin(margin, theme, 'bottom-right'),
    end: bounds2.right + getMargin(margin, theme, "end"),
    left: bounds2.left + getMargin(margin, theme, "left"),
    right: bounds2.right + getMargin(margin, theme, "right"),
    start: bounds2.left + getMargin(margin, theme, "start"),
    top: bounds2.top + getMargin(margin, theme, "top")
    // 'top-right': getMargin(margin, theme, 'top-right'),
    // 'top-left': getMargin(margin, theme, 'top-left'),
  };
};
var KEYFRAMES = {
  center: {
    vertical: We(["0%{transform:translateX(-50%) scale(0.8);}100%{transform:translateX(-50%) scale(1);}"]),
    horizontal: We(["0%{transform:translateY(-50%) scale(0.8);}100%{transform:translateY(-50) scale(1);}"]),
    "true": We(["0%{transform:scale(0.8);}100%{transform:scale(1);}"]),
    "false": We(["0%{transform:translate(-50%,-50%) scale(0.8);}100%{transform:translate(-50%,-50%) scale(1);}"])
  },
  top: {
    vertical: We(["0%{transform:translate(-50%,-100%);}100%{transform:translate(-50%,0);}"]),
    horizontal: We(["0%{transform:translateY(-100%);}100%{transform:translateY(0);}"]),
    "true": We(["0%{transform:translateY(-100%);}100%{transform:translateY(0);}"]),
    "false": We(["0%{transform:translate(-50%,-100%);}100%{transform:translate(-50%,0);}"])
  },
  bottom: {
    vertical: We(["0%{transform:translate(-50%,100%);}100%{transform:translate(-50%,0);}"]),
    horizontal: We(["0%{transform:translateY(100%);}100%{transform:translateY(0);}"]),
    "true": We(["0%{transform:translateY(100%);}100%{transform:translateY(0);}"]),
    "false": We(["0%{transform:translate(-50%,100%);}100%{transform:translate(-50%,0);}"])
  },
  left: {
    vertical: We(["0%{transform:translateX(-100%);}100%{transform:translateX(0);}"]),
    horizontal: We(["0%{transform:translate(-100%,-50%);}100%{transform:translate(0,-50%);}"]),
    "true": We(["0%{transform:translateX(-100%);}100%{transform:translateX(0);}"]),
    "false": We(["0%{transform:translate(-100%,-50%);}100%{transform:translate(0,-50%);}"])
  },
  right: {
    vertical: We(["0%{transform:translateX(100%);}100%{transform:translateX(0);}"]),
    horizontal: We(["0%{transform:translate(100%,-50%);}100%{transform:translate(0,-50%);}"]),
    "true": We(["0%{transform:translateX(100%);}100%{transform:translateX(0);}"]),
    "false": We(["0%{transform:translate(100%,-50%);}100%{transform:translate(0,-50%);}"])
  },
  start: {
    vertical: We(["0%{transform:translateX(-100%);}100%{transform:translateX(0);}"]),
    horizontal: We(["0%{transform:translate(-100%,-50%);}100%{transform:translate(0,-50%);}"]),
    "true": We(["0%{transform:translateX(-100%);}100%{transform:translateX(0);}"]),
    "false": We(["0%{transform:translate(-100%,-50%);}100%{transform:translate(0,-50%);}"])
  },
  end: {
    vertical: We(["0%{transform:translateX(100%);}100%{transform:translateX(0);}"]),
    horizontal: We(["0%{transform:translate(100%,-50%);}100%{transform:translate(0,-50%);}"]),
    "true": We(["0%{transform:translateX(100%);}100%{transform:translateX(0);}"]),
    "false": We(["0%{transform:translate(100%,-50%);}100%{transform:translate(0,-50%);}"])
  }
};
var animationDuration = 200;
var getAnimationStyle = function getAnimationStyle2(props, position, full) {
  var animation = props.animation !== void 0 ? props.animation : props.animate;
  if (animation === void 0)
    animation = "slide";
  var keys;
  if (animation === "slide" || animation === true) {
    keys = KEYFRAMES[position][full];
  } else if (animation === "fadeIn") {
    keys = We(["0%{opacity:0}100%{opacity:1}"]);
  }
  return keys ? Ae(["animation:", " ", "s ease-in-out forwards;"], keys, animationDuration / 1e3) : "";
};
var POSITIONS = {
  center: {
    vertical: function vertical(bounds2) {
      return Ae(["top:", "px;bottom:", "px;left:50%;transform:translateX(-50%);", ""], bounds2.top, bounds2.bottom, function(props) {
        return getAnimationStyle(props, "center", "vertical");
      });
    },
    horizontal: function horizontal(bounds2) {
      return Ae(["left:", "px;right:", "px;top:50%;transform:translateY(-50%);", ""], bounds2.left, bounds2.right, function(props) {
        return getAnimationStyle(props, "center", "horizontal");
      });
    },
    "true": function _true(bounds2) {
      return Ae(["top:", "px;bottom:", "px;left:", "px;right:", "px;", ""], bounds2.top, bounds2.bottom, bounds2.left, bounds2.right, function(props) {
        return getAnimationStyle(props, "center", "true");
      });
    },
    "false": function _false() {
      return Ae(["top:50%;left:50%;transform:translate(-50%,-50%);", ""], function(props) {
        return getAnimationStyle(props, "center", "false");
      });
    }
  },
  top: {
    vertical: function vertical2(bounds2) {
      return Ae(["top:", "px;bottom:", "px;left:50%;transform:translate(-50%,0%);", ""], bounds2.top, bounds2.bottom, function(props) {
        return getAnimationStyle(props, "top", "vertical");
      });
    },
    horizontal: function horizontal2(bounds2) {
      return Ae(["left:", "px;right:", "px;top:", "px;transform:translateY(0);", ""], bounds2.left, bounds2.right, bounds2.top, function(props) {
        return getAnimationStyle(props, "top", "horizontal");
      });
    },
    "true": function _true2(bounds2) {
      return Ae(["top:", "px;bottom:", "px;left:", "px;right:", "px;transform:translateY(0);", ""], bounds2.top, bounds2.bottom, bounds2.left, bounds2.right, function(props) {
        return getAnimationStyle(props, "top", "true");
      });
    },
    "false": function _false2(bounds2) {
      return Ae(["top:", "px;left:50%;transform:translate(-50%,0);", ""], bounds2.top, function(props) {
        return getAnimationStyle(props, "top", "false");
      });
    }
  },
  bottom: {
    vertical: function vertical3(bounds2) {
      return Ae(["top:", "px;bottom:", "px;left:50%;transform:translate(-50%,0);", ""], bounds2.top, bounds2.bottom, function(props) {
        return getAnimationStyle(props, "bottom", "vertical");
      });
    },
    horizontal: function horizontal3(bounds2) {
      return Ae(["left:", "px;right:", "px;bottom:", "px;transform:translateY(0);", ""], bounds2.left, bounds2.top, bounds2.bottom, function(props) {
        return getAnimationStyle(props, "bottom", "horizontal");
      });
    },
    "true": function _true3(bounds2) {
      return Ae(["top:", "px;bottom:", "px;left:", "px;right:", "px;transform:translateY(0);", ""], bounds2.top, bounds2.bottom, bounds2.left, bounds2.right, function(props) {
        return getAnimationStyle(props, "bottom", "true");
      });
    },
    "false": function _false3(bounds2) {
      return Ae(["bottom:", "px;left:50%;transform:translate(-50%,0);", ""], bounds2.bottom, function(props) {
        return getAnimationStyle(props, "bottom", "false");
      });
    }
  },
  left: {
    vertical: function vertical4(bounds2) {
      return Ae(["top:", "px;bottom:", "px;left:", "px;transform:translateX(0);", ""], bounds2.top, bounds2.bottom, bounds2.left, function(props) {
        return getAnimationStyle(props, "left", "vertical");
      });
    },
    horizontal: function horizontal4(bounds2) {
      return Ae(["left:", "px;right:", "px;top:50%;transform:translate(0,-50%);", ""], bounds2.left, bounds2.right, function(props) {
        return getAnimationStyle(props, "left", "horizontal");
      });
    },
    "true": function _true4(bounds2) {
      return Ae(["top:", "px;bottom:", "px;left:", "px;right:", "px;transform:translateX(0);", ""], bounds2.top, bounds2.bottom, bounds2.left, bounds2.right, function(props) {
        return getAnimationStyle(props, "left", "true");
      });
    },
    "false": function _false4(bounds2) {
      return Ae(["left:", "px;top:50%;transform:translate(0,-50%);", ""], bounds2.left, function(props) {
        return getAnimationStyle(props, "left", "false");
      });
    }
  },
  right: {
    vertical: function vertical5(bounds2) {
      return Ae(["top:", "px;bottom:", "px;right:", "px;transform:translateX(0);", ""], bounds2.top, bounds2.bottom, bounds2.right, function(props) {
        return getAnimationStyle(props, "right", "vertical");
      });
    },
    horizontal: function horizontal5(bounds2) {
      return Ae(["left:", "px;right:", "px;top:50%;transform:translate(0,-50%);", ""], bounds2.left, bounds2.right, function(props) {
        return getAnimationStyle(props, "right", "horizontal");
      });
    },
    "true": function _true5(bounds2) {
      return Ae(["top:", "px;bottom:", "px;left:", "px;right:", "px;transform:translateX(0);", ""], bounds2.top, bounds2.bottom, bounds2.left, bounds2.right, function(props) {
        return getAnimationStyle(props, "right", "true");
      });
    },
    "false": function _false5(bounds2) {
      return Ae(["right:", "px;top:50%;transform:translate(0,-50%);", ""], bounds2.right, function(props) {
        return getAnimationStyle(props, "right", "false");
      });
    }
  },
  start: {
    vertical: function vertical6(bounds2) {
      return Ae(["top:", "px;bottom:", "px;inset-inline-start:", "px;transform:translateX(0);", ""], bounds2.top, bounds2.bottom, bounds2.start, function(props) {
        return getAnimationStyle(props, "start", "vertical");
      });
    },
    horizontal: function horizontal6(bounds2) {
      return Ae(["inset-inline-start:", "px;inset-inline-end:", "px;top:50%;transform:translate(0,-50%);", ""], bounds2.start, bounds2.end, function(props) {
        return getAnimationStyle(props, "start", "horizontal");
      });
    },
    "true": function _true6(bounds2) {
      return Ae(["top:", "px;bottom:", "px;inset-inline-start:", "px;inset-inline-end:", "px;transform:translateX(0);", ""], bounds2.top, bounds2.bottom, bounds2.start, bounds2.end, function(props) {
        return getAnimationStyle(props, "start", "true");
      });
    },
    "false": function _false6(bounds2) {
      return Ae(["inset-inline-start:", "px;top:50%;transform:translate(0,-50%);", ""], bounds2.start, function(props) {
        return getAnimationStyle(props, "start", "false");
      });
    }
  },
  end: {
    vertical: function vertical7(bounds2) {
      return Ae(["top:", "px;bottom:", "px;inset-inline-end:", "px;transform:translateX(0);", ""], bounds2.top, bounds2.bottom, bounds2.end, function(props) {
        return getAnimationStyle(props, "end", "vertical");
      });
    },
    horizontal: function horizontal7(bounds2) {
      return Ae(["inset-inline-start:", "px;inset-inline-end:", "px;top:50%;transform:translate(0,-50%);", ""], bounds2.start, bounds2.end, function(props) {
        return getAnimationStyle(props, "end", "horizontal");
      });
    },
    "true": function _true7(bounds2) {
      return Ae(["top:", "px;bottom:", "px;inset-inline-start:", "px;inset-inline-end:", "px;transform:translateX(0);", ""], bounds2.top, bounds2.bottom, bounds2.start, bounds2.end, function(props) {
        return getAnimationStyle(props, "end", "true");
      });
    },
    "false": function _false7(bounds2) {
      return Ae(["inset-inline-end:", "px;top:50%;transform:translate(0,-50%);", ""], bounds2.end, function(props) {
        return getAnimationStyle(props, "end", "false");
      });
    }
  },
  "top-right": {
    vertical: function vertical8(bounds2) {
      return Ae(["top:", "px;bottom:", "px;right:", "px;transform:translateX(0);", ";"], bounds2.top, bounds2.bottom, bounds2.right, function(props) {
        return getAnimationStyle(props, "top", "true");
      });
    },
    horizontal: function horizontal8(bounds2) {
      return Ae(["left:", "px;right:", "px;top:0;transform:translateX(0);", ";"], bounds2.left, bounds2.right, function(props) {
        return getAnimationStyle(props, "top", "true");
      });
    },
    "true": function _true8(bounds2) {
      return Ae(["top:", "px;bottom:", "px;left:", "px;right:", "px;transform:translateX(0);", ";"], bounds2.top, bounds2.bottom, bounds2.left, bounds2.right, function(props) {
        return getAnimationStyle(props, "top", "true");
      });
    },
    "false": function _false8(bounds2) {
      return Ae(["top:", "px;right:", "px;transform:translateY(0);", ";"], bounds2.top, bounds2.right, function(props) {
        return getAnimationStyle(props, "top", "true");
      });
    }
  },
  "top-left": {
    vertical: function vertical9(bounds2) {
      return Ae(["top:", "px;bottom:", "px;left:", "px;transform:translateX(0);", ""], bounds2.top, bounds2.bottom, bounds2.left, function(props) {
        return getAnimationStyle(props, "top", "true");
      });
    },
    horizontal: function horizontal9(bounds2) {
      return Ae(["left:", "px;right:", "px;top:0;transform:translateX(0);", ""], bounds2.left, bounds2.right, function(props) {
        return getAnimationStyle(props, "top", "true");
      });
    },
    "true": function _true9(bounds2) {
      return Ae(["top:", "px;bottom:", "px;left:", "px;right:", "px;transform:translateX(0);", ""], bounds2.top, bounds2.bottom, bounds2.left, bounds2.right, function(props) {
        return getAnimationStyle(props, "top", "true");
      });
    },
    "false": function _false9(bounds2) {
      return Ae(["top:", "px;left:", "px;transform:translateY(0);", ""], bounds2.top, bounds2.left, function(props) {
        return getAnimationStyle(props, "top", "true");
      });
    }
  },
  "bottom-right": {
    vertical: function vertical10(bounds2) {
      return Ae(["top:", "px;bottom:", "px;right:", "px;transform:translateX(0);", ""], bounds2.top, bounds2.bottom, bounds2.right, function(props) {
        return getAnimationStyle(props, "bottom", "true");
      });
    },
    horizontal: function horizontal10(bounds2) {
      return Ae(["left:", "px;right:", "px;bottom:", "px;transform:translateY(0);", ""], bounds2.left, bounds2.right, bounds2.bottom, function(props) {
        return getAnimationStyle(props, "bottom", "true");
      });
    },
    "true": function _true10(bounds2) {
      return Ae(["top:", "px;bottom:", "px;left:", "px;right:", "px;transform:translateX(0);", ""], bounds2.top, bounds2.bottom, bounds2.left, bounds2.right, function(props) {
        return getAnimationStyle(props, "bottom", "true");
      });
    },
    "false": function _false10(bounds2) {
      return Ae(["bottom:", "px;right:", "px;transform:translateY(0);", ""], bounds2.bottom, bounds2.right, function(props) {
        return getAnimationStyle(props, "bottom", "true");
      });
    }
  },
  "bottom-left": {
    vertical: function vertical11(bounds2) {
      return Ae(["top:", "px;bottom:", "px;left:", "px;transform:translateX(0);", ""], bounds2.top, bounds2.bottom, bounds2.left, function(props) {
        return getAnimationStyle(props, "bottom", "true");
      });
    },
    horizontal: function horizontal11(bounds2) {
      return Ae(["left:", "px;right:", "px;bottom:", "px;transform:translateY(0);", ""], bounds2.left, bounds2.right, bounds2.bottom, function(props) {
        return getAnimationStyle(props, "bottom", "true");
      });
    },
    "true": function _true11(bounds2) {
      return Ae(["top:", "px;bottom:", "px;left:", "px;right:", "px;transform:translateX(0);", ""], bounds2.top, bounds2.bottom, bounds2.left, bounds2.right, function(props) {
        return getAnimationStyle(props, "bottom", "true");
      });
    },
    "false": function _false11(bounds2) {
      return Ae(["bottom:", "px;left:", "px;transform:translateY(0);", ""], bounds2.bottom, bounds2.left, function(props) {
        return getAnimationStyle(props, "bottom", "true");
      });
    }
  }
};
var roundStyle3 = function roundStyle4(data, theme, position, margin) {
  var styles = [];
  var size = data === true ? "medium" : data;
  var round3 = theme.global.edgeSize[size] || size;
  var customCSS = round3.split(" ").length > 1;
  if (margin === "none" && !customCSS && theme.layer.border.intelligentRounding === true) {
    if (position === "bottom") {
      styles.push(Ae(["border-radius:", " ", " 0 0;"], round3, round3));
    } else if (position === "bottom-left") {
      styles.push(Ae(["border-radius:0 ", " 0 0;"], round3));
    } else if (position === "bottom-right") {
      styles.push(Ae(["border-radius:", " 0 0 0;"], round3));
    } else if (position === "end") {
      styles.push(Ae(["border-start-start-radius:", ";border-end-start-radius:", ";"], round3, round3));
    } else if (position === "left") {
      styles.push(Ae(["border-radius:0 ", " ", " 0;"], round3, round3));
    } else if (position === "right") {
      styles.push(Ae(["border-radius:", " 0 0 ", ";"], round3, round3));
    } else if (position === "start") {
      styles.push(Ae(["border-end-end-radius:", ";border-start-end-radius:", ";"], round3, round3));
    } else if (position === "top") {
      styles.push(Ae(["border-radius:0 0 ", " ", ";"], round3, round3));
    } else if (position === "top-left") {
      styles.push(Ae(["border-radius:0 0 ", " 0;"], round3));
    } else if (position === "top-right") {
      styles.push(Ae(["border-radius:0 0 0 ", ";"], round3));
    } else {
      styles.push(Ae(["border-radius:", ";"], round3));
    }
  } else {
    styles.push(Ae(["border-radius:", ";"], round3));
  }
  return styles;
};
var bounds = {
  left: 0,
  right: 0,
  top: 0,
  bottom: 0
};
var desktopContainerStyle = Ae(["", " max-height:", ";max-width:", ";", ";", ";"], function(props) {
  if (!props.modal && props.position === "hidden") {
    return hiddenPositionStyle;
  }
  return Ae(["position:", ";"], props.modal || props.layerTarget ? "absolute" : "fixed");
}, function(props) {
  return "calc(100% - " + getBounds(bounds, props.margin, props.theme, "top") + "px - " + getBounds(bounds, props.margin, props.theme, "bottom") + "px)";
}, function(props) {
  return "calc(100% - " + getBounds(bounds, props.margin, props.theme, "left") + "px - " + getBounds(bounds, props.margin, props.theme, "right") + "px)";
}, function(props) {
  return props.plain || props.full && props.margin === "none" ? "border-radius: 0;" : roundStyle3(props.theme.layer.border.radius, props.theme, props.position, props.margin);
}, function(props) {
  return props.position !== "hidden" && POSITIONS[props.position][props.full](getBounds(bounds, props.margin, props.theme), bounds) || "";
});
var responsiveContainerStyle = function responsiveContainerStyle2(props) {
  return Ae(["position:relative;max-height:none;max-width:none;border-radius:0;height:", ";width:", ";"], !props.layerTarget ? "100vh" : "100%", !props.layerTarget ? "100vw" : "100%");
};
var elevationStyle3 = Ae(["box-shadow:", ";"], function(props) {
  return props.theme.global.elevation[props.theme.dark ? "dark" : "light"][props.theme.layer.container.elevation];
});
var StyledContainer3 = styled_components_browser_esm_default.div.withConfig({
  // don't let elevation leak to DOM
  // https://styled-components.com/docs/api#shouldforwardprop
  shouldForwardProp: function shouldForwardProp4(prop, defaultValidatorFn) {
    return !["elevation"].includes(prop) && defaultValidatorFn(prop);
  }
}).withConfig({
  displayName: "StyledLayer__StyledContainer",
  componentId: "sc-rmtehz-2"
})(["", " display:flex;flex-direction:column;min-height:", ";", " outline:none;pointer-events:all;z-index:", ";", " ", " ", ";", ";"], function(props) {
  return !props.modal ? baseStyle : "";
}, function(props) {
  return props.theme.global.size.xxsmall;
}, function(props) {
  return !props.plain && (props.background || props.theme.layer.background) && backgroundStyle(props.background || props.theme.layer.background, props.theme);
}, function(props) {
  return props.theme.layer.container.zIndex;
}, function(props) {
  return !props.plain && props.theme.layer.container.elevation && elevationStyle3;
}, desktopContainerStyle, function(props) {
  if (props.responsive && props.theme.layer.responsiveBreakpoint) {
    var breakpoint = props.theme.global.breakpoints[props.theme.layer.responsiveBreakpoint];
    if (breakpoint) {
      return breakpointStyle(breakpoint, responsiveContainerStyle);
    }
  }
  return "";
}, function(props) {
  return props.theme.layer.container && props.theme.layer.container.extend;
});
StyledContainer3.defaultProps = {};
Object.setPrototypeOf(StyledContainer3.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/Layer/LayerContainer.js
var _excluded49 = ["background", "children", "full", "id", "margin", "modal", "onClickOutside", "onEsc", "plain", "position", "responsive", "target"];
function _extends77() {
  _extends77 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends77.apply(this, arguments);
}
function _objectWithoutPropertiesLoose46(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var HiddenAnchor = styled_components_browser_esm_default.a.withConfig({
  displayName: "LayerContainer__HiddenAnchor",
  componentId: "sc-1srj14c-0"
})(["width:0;height:0;overflow:hidden;position:absolute;"]);
var LayerContainer = (0, import_react83.forwardRef)(function(_ref, ref) {
  var background = _ref.background, children2 = _ref.children, _ref$full = _ref.full, full = _ref$full === void 0 ? false : _ref$full, id = _ref.id, _ref$margin = _ref.margin, margin = _ref$margin === void 0 ? "none" : _ref$margin, _ref$modal = _ref.modal, modal = _ref$modal === void 0 ? true : _ref$modal, onClickOutside = _ref.onClickOutside, onEsc = _ref.onEsc, plain = _ref.plain, _ref$position = _ref.position, position = _ref$position === void 0 ? "center" : _ref$position, _ref$responsive = _ref.responsive, responsive = _ref$responsive === void 0 ? true : _ref$responsive, layerTarget = _ref.target, rest = _objectWithoutPropertiesLoose46(_ref, _excluded49);
  var containerTarget = (0, import_react83.useContext)(ContainerTargetContext);
  var theme = (0, import_react83.useContext)(Me) || defaultProps2.theme;
  var size = (0, import_react83.useContext)(ResponsiveContext);
  var _useContext = (0, import_react83.useContext)(OptionsContext), layerOptions = _useContext.layer;
  var anchorRef = (0, import_react83.useRef)();
  var containerRef = (0, import_react83.useRef)();
  var layerRef = (0, import_react83.useRef)();
  var portalContext = (0, import_react83.useContext)(PortalContext);
  var portalId = (0, import_react83.useMemo)(function() {
    return portalContext.length;
  }, [portalContext]);
  var nextPortalContext = (0, import_react83.useMemo)(function() {
    return [].concat(portalContext, [portalId]);
  }, [portalContext, portalId]);
  var sendAnalytics = useAnalytics();
  (0, import_react83.useEffect)(function() {
    var start = /* @__PURE__ */ new Date();
    var element = layerRef.current;
    var isHidden = position === "hidden";
    if (!isHidden) {
      sendAnalytics({
        type: "layerOpen",
        element
      });
    }
    return function() {
      if (!isHidden) {
        sendAnalytics({
          type: "layerClose",
          element,
          elapsed: (/* @__PURE__ */ new Date()).getTime() - start.getTime()
        });
      }
    };
  }, [sendAnalytics, layerRef, position]);
  (0, import_react83.useEffect)(function() {
    if (position !== "hidden") {
      var node = layerRef.current || containerRef.current || ref.current;
      if (node && node.scrollIntoView)
        node.scrollIntoView();
      var element = document.activeElement;
      while (element) {
        if (element === containerRef.current) {
          break;
        }
        element = element.parentElement;
      }
      if (modal && !element && anchorRef.current) {
        anchorRef.current.focus();
      }
    }
  }, [modal, position, ref]);
  (0, import_react83.useEffect)(function() {
    if (position !== "hidden") {
      var node = layerRef.current || containerRef.current || ref.current;
      if (node && node.scrollIntoView)
        node.scrollIntoView();
    }
  }, [position, ref]);
  (0, import_react83.useEffect)(function() {
    var onClickDocument = function onClickDocument2(event) {
      var clickedPortalId = null;
      var node = event.composed && event.composedPath()[0] || event.target;
      while (clickedPortalId === null && node && node !== document && !(node instanceof ShadowRoot)) {
        var attr = node.getAttribute("data-g-portal-id");
        if (attr !== null && attr !== "")
          clickedPortalId = parseInt(attr, 10);
        else
          node = node.parentNode;
      }
      if ((clickedPortalId === null || portalContext.indexOf(clickedPortalId) !== -1) && node !== null) {
        onClickOutside(event);
      }
    };
    if (onClickOutside) {
      document.addEventListener("mousedown", onClickDocument);
    }
    if (layerTarget) {
      var updateBounds = function updateBounds2() {
        var windowWidth = window.innerWidth;
        var windowHeight = window.innerHeight;
        var target = findVisibleParent(layerTarget);
        var layer = layerRef.current;
        if (layer && target) {
          layer.style.left = "";
          layer.style.top = "";
          layer.style.bottom = "";
          layer.style.width = "";
          var targetRect = target.getBoundingClientRect();
          var layerRect = layer.getBoundingClientRect();
          layer.style.left = targetRect.left + "px";
          layer.style.right = windowWidth - targetRect.right + "px";
          layer.style.top = targetRect.top + "px";
          layer.style.bottom = windowHeight - targetRect.bottom + "px";
          layer.style.maxHeight = targetRect.height;
          layer.style.maxWidth = Math.min(layerRect.width, windowWidth);
        }
      };
      updateBounds();
      window.addEventListener("resize", updateBounds);
      window.addEventListener("scroll", updateBounds, true);
      return function() {
        window.removeEventListener("resize", updateBounds);
        window.removeEventListener("scroll", updateBounds, true);
        if (onClickOutside) {
          document.removeEventListener("mousedown", onClickDocument);
        }
      };
    }
    return function() {
      if (onClickOutside) {
        document.removeEventListener("mousedown", onClickDocument);
      }
    };
  }, [containerTarget, layerTarget, onClickOutside, portalContext, portalId]);
  var content = import_react83.default.createElement(StyledContainer3, _extends77({
    ref: ref || containerRef,
    background,
    elevation: theme.layer.container.elevation,
    id: layerOptions && layerOptions.singleId ? id + "__container" : id,
    full,
    margin,
    modal
  }, rest, {
    position,
    plain,
    responsive,
    layerTarget,
    dir: theme.dir,
    "data-g-portal-id": portalId
  }), import_react83.default.createElement(HiddenAnchor, {
    ref: anchorRef,
    tabIndex: "-1",
    "aria-hidden": "true"
  }), children2);
  content = import_react83.default.createElement(StyledLayer, {
    ref: layerRef,
    id,
    plain,
    position,
    responsive,
    layerTarget,
    tabIndex: "-1",
    dir: theme.dir
  }, modal && import_react83.default.createElement(StyledOverlay, {
    plain,
    responsive,
    onMouseDown: onClickOutside
  }), content);
  if (onEsc) {
    content = import_react83.default.createElement(Keyboard, {
      onEsc: onEsc ? function(event) {
        event.stopPropagation();
        onEsc(event);
      } : void 0,
      target: modal === false ? "document" : void 0
    }, content);
  }
  var themeContextValue = (0, import_react83.useMemo)(function() {
    var dark3 = backgroundIsDark(theme.layer.background, theme);
    return _extends77({}, theme, {
      dark: dark3
    });
  }, [theme]);
  if (theme.layer.background) {
    var dark2 = themeContextValue.dark;
    if (dark2 !== void 0 && dark2 !== theme.dark) {
      content = import_react83.default.createElement(Me.Provider, {
        value: themeContextValue
      }, content);
    }
  }
  content = import_react83.default.createElement(PortalContext.Provider, {
    value: nextPortalContext
  }, content);
  var hitResponsiveBreakpoint = responsive && size === theme.layer.responsiveBreakpoint;
  if (modal || hitResponsiveBreakpoint) {
    content = import_react83.default.createElement(FocusedContainer, {
      hidden: position === "hidden",
      restrictScroll: !layerTarget && (modal || hitResponsiveBreakpoint) ? true : void 0,
      trapFocus: true
    }, content);
  }
  return content;
});

// node_modules/grommet/es6/components/Layer/propTypes.js
var import_prop_types42 = __toESM(require_prop_types());
var PAD_SIZES2 = ["xxsmall", "xsmall", "small", "medium", "large"];
var PropType39 = {};
if (true) {
  PropType39 = {
    animate: import_prop_types42.default.bool,
    animation: import_prop_types42.default.oneOfType([import_prop_types42.default.oneOf(["slide", "fadeIn", "none"]), import_prop_types42.default.bool]),
    background: backgroundDoc,
    full: import_prop_types42.default.oneOfType([import_prop_types42.default.bool, import_prop_types42.default.oneOf(["vertical", "horizontal"])]),
    margin: import_prop_types42.default.oneOfType([import_prop_types42.default.oneOf(["none"].concat(PAD_SIZES2)), import_prop_types42.default.shape({
      bottom: import_prop_types42.default.oneOfType([import_prop_types42.default.oneOf(PAD_SIZES2), import_prop_types42.default.string]),
      end: import_prop_types42.default.oneOfType([import_prop_types42.default.oneOf(PAD_SIZES2), import_prop_types42.default.string]),
      horizontal: import_prop_types42.default.oneOfType([import_prop_types42.default.oneOf(PAD_SIZES2), import_prop_types42.default.string]),
      left: import_prop_types42.default.oneOfType([import_prop_types42.default.oneOf(PAD_SIZES2), import_prop_types42.default.string]),
      right: import_prop_types42.default.oneOfType([import_prop_types42.default.oneOf(PAD_SIZES2), import_prop_types42.default.string]),
      start: import_prop_types42.default.oneOfType([import_prop_types42.default.oneOf(PAD_SIZES2), import_prop_types42.default.string]),
      top: import_prop_types42.default.oneOfType([import_prop_types42.default.oneOf(PAD_SIZES2), import_prop_types42.default.string]),
      vertical: import_prop_types42.default.oneOfType([import_prop_types42.default.oneOf(PAD_SIZES2), import_prop_types42.default.string])
    }), import_prop_types42.default.string]),
    modal: import_prop_types42.default.bool,
    onClickOutside: import_prop_types42.default.func,
    onEsc: import_prop_types42.default.func,
    plain: import_prop_types42.default.bool,
    position: import_prop_types42.default.oneOf(["bottom", "bottom-left", "bottom-right", "center", "end", "hidden", "left", "right", "start", "top", "top-left", "top-right"]),
    responsive: import_prop_types42.default.bool,
    target: import_prop_types42.default.object
  };
}
var LayerPropTypes = PropType39;

// node_modules/grommet/es6/components/Layer/Layer.js
function _extends78() {
  _extends78 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends78.apply(this, arguments);
}
var Layer = (0, import_react84.forwardRef)(function(props, ref) {
  var animate = props.animate, animation = props.animation, targetChildPosition = props.targetChildPosition;
  var _useState = (0, import_react84.useState)(), originalFocusedElement = _useState[0], setOriginalFocusedElement = _useState[1];
  (0, import_react84.useEffect)(function() {
    return setOriginalFocusedElement(document.activeElement);
  }, []);
  var _useState2 = (0, import_react84.useState)(), layerContainer = _useState2[0], setLayerContainer = _useState2[1];
  var containerTarget = (0, import_react84.useContext)(ContainerTargetContext);
  (0, import_react84.useEffect)(function() {
    return setLayerContainer(getNewContainer(containerTarget, targetChildPosition));
  }, [containerTarget, targetChildPosition]);
  useLayoutEffect(function() {
    return function() {
      if (originalFocusedElement) {
        if (originalFocusedElement.focus) {
          setTimeout(function() {
            return originalFocusedElement.focus();
          }, 0);
        } else if (originalFocusedElement.parentNode && originalFocusedElement.parentNode.focus) {
          originalFocusedElement.parentNode.focus();
        }
      }
      if (layerContainer) {
        var activeAnimation = animation !== void 0 ? animation : animate;
        if (activeAnimation !== false) {
          var layerClone = layerContainer.cloneNode(true);
          layerClone.id = "layerClone";
          containerTarget.appendChild(layerClone);
          var clonedContainer = layerClone.querySelector('[class*="StyledLayer__StyledContainer"]');
          if (clonedContainer && clonedContainer.style) {
            clonedContainer.style.animationDirection = "reverse";
          }
          setTimeout(function() {
            var clone = containerTarget.getRootNode().getElementById("layerClone");
            if (clone) {
              containerTarget.removeChild(clone);
              layerContainer.remove();
            }
          }, animationDuration);
        } else {
          containerTarget.removeChild(layerContainer);
        }
      }
    };
  }, [animate, animation, containerTarget, layerContainer, originalFocusedElement]);
  return layerContainer ? (0, import_react_dom2.createPortal)(import_react84.default.createElement(LayerContainer, _extends78({
    ref
  }, props)), layerContainer) : null;
});
Layer.displayName = "Layer";
Layer.propTypes = LayerPropTypes;

// node_modules/grommet/es6/components/DataFilters/propTypes.js
var import_prop_types43 = __toESM(require_prop_types());
var PropType40 = {};
if (true) {
  PropType40 = {
    drop: import_prop_types43.default.bool,
    heading: import_prop_types43.default.string,
    layer: import_prop_types43.default.bool
  };
}
var DataFiltersPropTypes = PropType40;

// node_modules/grommet/es6/components/DataFilters/DataFilters.js
var _excluded50 = ["drop", "children", "heading", "layer"];
function _extends79() {
  _extends79 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends79.apply(this, arguments);
}
function _objectWithoutPropertiesLoose47(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var dropProps2 = {
  align: {
    top: "bottom",
    right: "right"
  }
};
var layerProps = {
  full: "vertical",
  position: "right"
};
var DataFilters = function DataFilters2(_ref) {
  var drop = _ref.drop, children2 = _ref.children, heading = _ref.heading, layer = _ref.layer, rest = _objectWithoutPropertiesLoose47(_ref, _excluded50);
  var _useContext = (0, import_react85.useContext)(DataContext), clearFilters = _useContext.clearFilters, data = _useContext.data, dataId = _useContext.id, messages = _useContext.messages, properties = _useContext.properties, view = _useContext.view;
  var _useContext2 = (0, import_react85.useContext)(MessageContext), format3 = _useContext2.format;
  var _useState = (0, import_react85.useState)(), showContent = _useState[0], setShowContent = _useState[1];
  var _useState2 = (0, import_react85.useState)({}), touched = _useState2[0], setTouched = _useState2[1];
  var controlled = (0, import_react85.useMemo)(function() {
    return drop || layer;
  }, [drop, layer]);
  var badge = (0, import_react85.useMemo)(function() {
    return controlled && Object.keys(touched).filter(function(k3) {
      return touched[k3];
    }).length || void 0;
  }, [controlled, touched]);
  var clearControl = badge && import_react85.default.createElement(Box, {
    flex: false,
    margin: {
      start: "small"
    }
  }, import_react85.default.createElement(Button, {
    label: format3({
      id: "dataFilters.clear",
      messages: messages == null ? void 0 : messages.dataFilters
    }),
    onClick: function onClick() {
      setTouched({});
      clearFilters();
    }
  }));
  var content = children2;
  if (import_react85.Children.count(children2) === 0) {
    var filtersFor;
    if (!properties && data && data.length)
      filtersFor = Object.keys(data[0]).filter(function(k3) {
        return typeof data[0][k3] !== "object";
      });
    else if (Array.isArray(properties))
      filtersFor = properties;
    else if (typeof properties === "object")
      filtersFor = Object.keys(properties);
    else
      filtersFor = [];
    content = filtersFor.map(function(property) {
      return import_react85.default.createElement(DataFilter, {
        key: property,
        property
      });
    });
    if (view != null && view.sort) {
      content.push(import_react85.default.createElement(DataSort, {
        key: "_sort"
      }));
    }
  }
  content = import_react85.default.createElement(DataForm, _extends79({
    pad: controlled ? "medium" : void 0,
    onDone: function onDone() {
      return setShowContent(false);
    },
    onTouched: controlled ? function(currentTouched) {
      return (
        // we merge this with our prior state to handle the case where the
        // user opens and closes the drop multiple times and we want to
        // track both new changes and prior changes.
        setTouched(function(prevTouched) {
          return _extends79({}, prevTouched, currentTouched);
        })
      );
    } : void 0
  }, !controlled ? rest : {
    fill: "vertical"
  }), layer && import_react85.default.createElement(Header, null, import_react85.default.createElement(Heading, {
    margin: "none",
    level: 2,
    size: "small"
  }, heading || format3({
    id: "dataFilters.heading",
    messages: messages == null ? void 0 : messages.dataFilters
  })), !controlled && clearControl, import_react85.default.createElement(Button, {
    icon: import_react85.default.createElement(import_FormClose2.FormClose, null),
    hoverIndicator: true,
    onClick: function onClick() {
      return setShowContent(void 0);
    }
  })), content);
  if (!controlled)
    return content;
  var tip = format3({
    id: badge ? "dataFilters.openSet." + (badge === 1 ? "singular" : "plural") : "dataFilters.open",
    messages: messages == null ? void 0 : messages.dataFilters,
    values: {
      number: badge
    }
  });
  var control;
  if (drop) {
    control = import_react85.default.createElement(DropButton, {
      id: dataId + "--filters-control",
      tip,
      "aria-label": tip,
      kind: "toolbar",
      icon: import_react85.default.createElement(import_Filter.Filter, null),
      hoverIndicator: true,
      dropProps: dropProps2,
      dropContent: content,
      badge,
      open: showContent,
      onOpen: function onOpen() {
        return setShowContent(void 0);
      },
      onClose: function onClose() {
        return setShowContent(void 0);
      }
    });
  } else if (layer) {
    control = import_react85.default.createElement(Button, {
      id: dataId + "--filters-control",
      tip,
      "aria-label": tip,
      kind: "toolbar",
      hoverIndicator: true,
      icon: import_react85.default.createElement(import_Filter.Filter, null),
      badge,
      onClick: function onClick() {
        return setShowContent(true);
      }
    });
  }
  return import_react85.default.createElement(Box, _extends79({
    flex: false,
    direction: "row"
  }, rest), control, clearControl, layer && showContent && import_react85.default.createElement(Layer, _extends79({
    id: dataId + "--filters-layer"
  }, typeof layer === "object" ? layer : layerProps, {
    onClickOutside: function onClickOutside() {
      return setShowContent(void 0);
    },
    onEsc: function onEsc() {
      return setShowContent(void 0);
    }
  }), content));
};
DataFilters.propTypes = DataFiltersPropTypes;

// node_modules/grommet/es6/components/DataSearch/DataSearch.js
var import_react86 = __toESM(require_react());
var import_Search = __toESM(require_Search());

// node_modules/grommet/es6/components/DataSearch/propTypes.js
var import_prop_types44 = __toESM(require_prop_types());
var PropType41 = {};
if (true) {
  PropType41 = {
    drop: import_prop_types44.default.bool,
    responsive: import_prop_types44.default.bool
  };
}
var DataSearchPropTypes = PropType41;

// node_modules/grommet/es6/components/DataSearch/DataSearch.js
var _excluded51 = ["drop", "id", "responsive"];
function _extends80() {
  _extends80 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends80.apply(this, arguments);
}
function _objectWithoutPropertiesLoose48(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var dropProps3 = {
  align: {
    top: "bottom",
    left: "left"
  }
};
var DataSearch = function DataSearch2(_ref) {
  var drop = _ref.drop, idProp = _ref.id, responsive = _ref.responsive, rest = _objectWithoutPropertiesLoose48(_ref, _excluded51);
  var _useContext = (0, import_react86.useContext)(DataContext), dataId = _useContext.id, messages = _useContext.messages, addToolbarKey2 = _useContext.addToolbarKey;
  var _useContext2 = (0, import_react86.useContext)(FormContext), noForm = _useContext2.noForm;
  var _useContext3 = (0, import_react86.useContext)(MessageContext), format3 = _useContext3.format;
  var size = (0, import_react86.useContext)(ResponsiveContext);
  var skeleton = useSkeleton();
  var _useState = (0, import_react86.useState)(), showContent = _useState[0], setShowContent = _useState[1];
  var id = idProp || dataId + "--search";
  (0, import_react86.useEffect)(function() {
    if (noForm)
      addToolbarKey2("_search");
  }, [addToolbarKey2, noForm]);
  var content = skeleton ? null : import_react86.default.createElement(TextInput, _extends80({
    "aria-label": format3({
      id: "dataSearch.label",
      messages: messages == null ? void 0 : messages.dataSearch
    }),
    id,
    name: "_search",
    icon: import_react86.default.createElement(import_Search.Search, null),
    type: "search"
  }, rest));
  if (noForm)
    content = import_react86.default.createElement(DataForm, {
      footer: false,
      updateOn: "change"
    }, content);
  else
    content = import_react86.default.createElement(FormField, {
      htmlFor: id,
      label: format3({
        id: "dataSearch.label",
        messages: messages == null ? void 0 : messages.dataSearch
      })
    }, content);
  if (!drop && (!responsive || size !== "small" && size !== "xsmall"))
    return content;
  var control = import_react86.default.createElement(DropButton, _extends80({
    id: dataId + "--search-control",
    "aria-label": format3({
      id: "dataSearch.open",
      messages: messages == null ? void 0 : messages.dataSort
    }),
    kind: "toolbar",
    icon: import_react86.default.createElement(import_Search.Search, null),
    dropProps: dropProps3,
    dropContent: import_react86.default.createElement(Box, {
      pad: "small"
    }, content),
    open: showContent,
    onOpen: function onOpen() {
      return setShowContent(void 0);
    },
    onClose: function onClose() {
      return setShowContent(void 0);
    }
  }, rest));
  return control;
};
DataSearch.propTypes = DataSearchPropTypes;

// node_modules/grommet/es6/components/DataSummary/DataSummary.js
var import_react87 = __toESM(require_react());

// node_modules/grommet/es6/components/DataSummary/propTypes.js
var import_prop_types45 = __toESM(require_prop_types());
var PropType42 = {};
if (true) {
  PropType42 = {
    messages: import_prop_types45.default.shape({
      filteredTotal: import_prop_types45.default.number,
      total: import_prop_types45.default.number
    })
  };
}
var DataSummaryPropTypes = PropType42;

// node_modules/grommet/es6/components/DataSummary/DataSummary.js
var _excluded52 = ["messages"];
function _extends81() {
  _extends81 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends81.apply(this, arguments);
}
function _objectWithoutPropertiesLoose49(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var DataSummary = function DataSummary2(_ref) {
  var messages = _ref.messages, rest = _objectWithoutPropertiesLoose49(_ref, _excluded52);
  var _useContext = (0, import_react87.useContext)(MessageContext), format3 = _useContext.format;
  var _useContext2 = (0, import_react87.useContext)(DataContext), filteredTotal = _useContext2.filteredTotal, dataMessages = _useContext2.messages, total = _useContext2.total;
  var messageId;
  if (total !== filteredTotal) {
    if (filteredTotal === 1)
      messageId = "dataSummary.filteredSingle";
    else
      messageId = "dataSummary.filtered";
  } else
    messageId = "dataSummary.total";
  return import_react87.default.createElement(Text, _extends81({
    margin: {
      vertical: "xsmall"
    }
  }, rest), format3({
    id: messageId,
    messages: messages || (dataMessages == null ? void 0 : dataMessages.dataSummary),
    values: {
      filteredTotal,
      total
    }
  }));
};
DataSummary.propTypes = DataSummaryPropTypes;

// node_modules/grommet/es6/components/DataView/DataView.js
var import_react88 = __toESM(require_react());

// node_modules/grommet/es6/components/DataView/propTypes.js
var PropType43 = {};
if (true) {
  PropType43 = {};
}
var DataViewPropTypes = PropType43;

// node_modules/grommet/es6/components/DataView/DataView.js
var _excluded53 = ["id"];
function _extends82() {
  _extends82 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends82.apply(this, arguments);
}
function _objectWithoutPropertiesLoose50(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var DataView = function DataView2(_ref) {
  var idProp = _ref.id, rest = _objectWithoutPropertiesLoose50(_ref, _excluded53);
  var _useContext = (0, import_react88.useContext)(DataContext), dataId = _useContext.id, messages = _useContext.messages, view = _useContext.view, views = _useContext.views, addToolbarKey2 = _useContext.addToolbarKey;
  var _useContext2 = (0, import_react88.useContext)(FormContext), noForm = _useContext2.noForm;
  var _useContext3 = (0, import_react88.useContext)(MessageContext), format3 = _useContext3.format;
  var id = idProp || dataId + "--view";
  (0, import_react88.useEffect)(function() {
    if (noForm)
      addToolbarKey2("_view");
  }, [addToolbarKey2, noForm]);
  if (!views)
    return null;
  var names = views.map(function(v3) {
    return v3.name;
  });
  var content;
  if (!noForm && names.length < 7) {
    content = import_react88.default.createElement(RadioButtonGroup, _extends82({
      id,
      name: "_view",
      options: names,
      value: view == null ? void 0 : view.name
    }, rest));
  } else {
    content = import_react88.default.createElement(Select, _extends82({
      id,
      name: "_view",
      showSelectedInline: true,
      placeholder: noForm ? "Select view" : void 0,
      options: names,
      value: view == null ? void 0 : view.name
    }, rest));
  }
  if (noForm)
    content = import_react88.default.createElement(DataForm, {
      footer: false,
      updateOn: "change"
    }, content);
  else
    content = import_react88.default.createElement(FormField, {
      htmlFor: id,
      label: format3({
        id: "dataView.label",
        messages: messages == null ? void 0 : messages.dataView
      })
    }, content);
  return content;
};
DataView.propTypes = DataViewPropTypes;

// node_modules/grommet/es6/components/Toolbar/Toolbar.js
var import_react89 = __toESM(require_react());

// node_modules/grommet/es6/components/Toolbar/propTypes.js
var PropType44 = {};
if (true) {
  PropType44 = {};
}
var ToolbarPropTypes = PropType44;

// node_modules/grommet/es6/components/Toolbar/Toolbar.js
var _excluded54 = ["children"];
function _extends83() {
  _extends83 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends83.apply(this, arguments);
}
function _objectWithoutPropertiesLoose51(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var defaultLayoutProps = {
  direction: "row",
  align: "start",
  gap: "small"
};
var smallLayoutProps = {
  direction: "row",
  wrap: true,
  align: "start",
  gap: "small"
};
var Toolbar = function Toolbar2(_ref) {
  var children2 = _ref.children, rest = _objectWithoutPropertiesLoose51(_ref, _excluded54);
  var size = (0, import_react89.useContext)(ResponsiveContext);
  var layoutProps = size === "small" || size === "xsmall" ? smallLayoutProps : defaultLayoutProps;
  return import_react89.default.createElement(Box, _extends83({
    flex: false,
    cssGap: true
  }, layoutProps, rest), children2);
};
Toolbar.propTypes = ToolbarPropTypes;
Toolbar.defaultProps = {};

// node_modules/grommet/es6/components/Data/propTypes.js
var import_prop_types46 = __toESM(require_prop_types());
var viewType = import_prop_types46.default.shape({
  properties: import_prop_types46.default.oneOfType([import_prop_types46.default.arrayOf(import_prop_types46.default.string), import_prop_types46.default.shape({})]),
  search: import_prop_types46.default.string,
  sort: import_prop_types46.default.shape({
    direction: import_prop_types46.default.oneOf(["asc", "desc"]),
    property: import_prop_types46.default.string
  })
});
var PropType45 = {};
if (true) {
  PropType45 = {
    data: import_prop_types46.default.arrayOf(import_prop_types46.default.shape({})),
    defaultView: viewType,
    onView: import_prop_types46.default.func,
    properties: import_prop_types46.default.oneOfType([import_prop_types46.default.arrayOf(import_prop_types46.default.string), import_prop_types46.default.shape({})]),
    toolbar: import_prop_types46.default.oneOfType([import_prop_types46.default.bool, import_prop_types46.default.oneOf(["search", "filters"])]),
    total: import_prop_types46.default.number,
    updateOn: import_prop_types46.default.oneOf(["change", "submit"]),
    view: import_prop_types46.default.oneOfType([import_prop_types46.default.string, viewType])
  };
}
var DataPropTypes = PropType45;

// node_modules/grommet/es6/components/Data/filter.js
var datumValue = function datumValue2(datum, property) {
  if (!property)
    return void 0;
  var parts2 = property.split(".");
  if (parts2.length === 1)
    return datum[property];
  if (!datum[parts2[0]])
    return void 0;
  return datumValue2(datum[parts2[0]], parts2.slice(1).join("."));
};
var filter = function filter2(data, view, properties) {
  var _view$sort, _view$sort2;
  var searchExp = view != null && view.search ? new RegExp(view.search.replace(/[#-.]|[[-^]|[?|{}]/g, "\\$&"), "i") : void 0;
  var searchProperties;
  if (searchExp && properties) {
    searchProperties = Object.keys(properties).filter(function(k3) {
      return properties[k3].search;
    });
    if (searchProperties.length === 0)
      searchProperties = Object.keys(properties);
  }
  var filteredData = data.filter(function(datum) {
    var matched = true;
    if (searchExp) {
      var searchWith = function searchWith2(property2) {
        var value = datumValue(datum, property2);
        if (value === void 0)
          return false;
        return searchExp.test(value);
      };
      if (searchProperties)
        matched = searchProperties.some(searchWith);
      else
        matched = Object.keys(datum).some(searchWith);
    }
    if (matched && view != null && view.properties) {
      matched = !Object.keys(view.properties).some(function(property2) {
        var filterValue = view.properties[property2];
        var value = datumValue(datum, property2);
        if (typeof (filterValue == null ? void 0 : filterValue.min) === "number" || typeof (filterValue == null ? void 0 : filterValue.max) === "number")
          return typeof value !== "number" || value <= filterValue.min || value >= filterValue.max;
        if (Array.isArray(filterValue)) {
          return !filterValue.some(function(f2) {
            var isObject3 = typeof f2 === "object";
            if (Array.isArray(value)) {
              return isObject3 ? value.includes(f2 == null ? void 0 : f2.value) : value.includes(f2);
            }
            return isObject3 ? (f2 == null ? void 0 : f2.value) === value : f2 === value;
          });
        }
        if (typeof filterValue === "boolean")
          return filterValue === !value;
        return false;
      });
    }
    return matched;
  });
  if (view != null && (_view$sort = view.sort) != null && _view$sort.property || view != null && (_view$sort2 = view.sort) != null && _view$sort2.direction) {
    var _view$sort3 = view.sort, property = _view$sort3.property, direction = _view$sort3.direction;
    var prop = property || filteredData.length && Object.keys(filteredData[0])[0];
    var sortDesc = direction === "desc";
    var before = sortDesc ? -1 : 1;
    var after = sortDesc ? 1 : -1;
    filteredData.sort(function(d1, d22) {
      var d1Val = datumValue(d1, prop);
      var d2Val = datumValue(d22, prop);
      if (typeof d1Val === "string" && typeof d2Val === "string" || typeof d1Val === "string" && !d2Val || typeof d2Val === "string" && !d1Val) {
        var sortResult = (d1Val || "").localeCompare(d2Val || "", void 0, {
          sensitivity: "base"
        });
        return sortDesc ? -sortResult : sortResult;
      }
      if (d1Val > d2Val)
        return before;
      if (d1Val < d2Val)
        return after;
      return 0;
    });
  }
  var pagedData;
  if (view != null && view.step) {
    var _view$page;
    var start = view.step * (((_view$page = view == null ? void 0 : view.page) != null ? _view$page : 1) - 1);
    pagedData = filteredData.slice(start, start + view.step);
  }
  return {
    unfilteredData: data,
    data: pagedData || filteredData,
    total: data.length,
    filteredTotal: filteredData.length
  };
};

// node_modules/grommet/es6/components/Data/Data.js
var _excluded55 = ["children", "data", "defaultView", "filteredTotal", "id", "messages", "onView", "properties", "toolbar", "total", "updateOn", "view", "views"];
function _extends84() {
  _extends84 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends84.apply(this, arguments);
}
function _objectWithoutPropertiesLoose52(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var defaultDefaultView = {
  search: ""
};
var normalizeView = function normalizeView2(viewProp, views) {
  return typeof viewProp === "string" && (views == null ? void 0 : views.find(function(v3) {
    return v3.name === viewProp;
  })) || typeof viewProp === "object" && viewProp;
};
var Data = function Data2(_ref) {
  var children2 = _ref.children, _ref$data = _ref.data, dataProp = _ref$data === void 0 ? [] : _ref$data, _ref$defaultView = _ref.defaultView, defaultView = _ref$defaultView === void 0 ? defaultDefaultView : _ref$defaultView, filteredTotal = _ref.filteredTotal, _ref$id = _ref.id, id = _ref$id === void 0 ? "data" : _ref$id, messages = _ref.messages, onView = _ref.onView, properties = _ref.properties, toolbar = _ref.toolbar, total = _ref.total, _ref$updateOn = _ref.updateOn, updateOn = _ref$updateOn === void 0 ? "submit" : _ref$updateOn, viewProp = _ref.view, views = _ref.views, rest = _objectWithoutPropertiesLoose52(_ref, _excluded55);
  var _useState = (0, import_react90.useState)(normalizeView(viewProp || defaultView, views)), view = _useState[0], setView = _useState[1];
  (0, import_react90.useEffect)(function() {
    return setView(normalizeView(viewProp || defaultView, views));
  }, [defaultView, viewProp, views]);
  var _useState2 = (0, import_react90.useState)([]), toolbarKeys = _useState2[0], setToolbarKeys = _useState2[1];
  var result = (0, import_react90.useMemo)(function() {
    var _ref2;
    if (onView)
      return {
        data: dataProp,
        total,
        filteredTotal: (_ref2 = filteredTotal != null ? filteredTotal : dataProp == null ? void 0 : dataProp.length) != null ? _ref2 : 0
      };
    return filter(dataProp, view, properties);
  }, [dataProp, filteredTotal, onView, properties, total, view]);
  var contextValue = (0, import_react90.useMemo)(function() {
    var value = _extends84({
      id,
      messages,
      properties,
      updateOn,
      view,
      views
    }, result);
    value.clearFilters = function() {
      var nextView = defaultView;
      setView(nextView);
      if (onView)
        onView(nextView);
    };
    value.onView = function(nextView) {
      setView(nextView);
      if (onView)
        onView(nextView);
    };
    value.addToolbarKey = function(key) {
      setToolbarKeys(function(prevKeys) {
        if (prevKeys.includes(key))
          return prevKeys;
        return [].concat(prevKeys, [key]);
      });
    };
    value.toolbarKeys = toolbarKeys;
    return value;
  }, [defaultView, id, messages, onView, properties, result, toolbarKeys, updateOn, view, views]);
  var toolbarContent;
  if (toolbar) {
    toolbarContent = [import_react90.default.createElement(Toolbar, {
      key: "toolbar"
    }, (toolbar === true || toolbar === "search") && import_react90.default.createElement(DataSearch, null), (toolbar === true || toolbar === "view") && import_react90.default.createElement(DataView, null), (toolbar === true || toolbar === "filters") && import_react90.default.createElement(DataFilters, {
      drop: true
    })), import_react90.default.createElement(DataSummary, {
      key: "summary"
    })];
  }
  return import_react90.default.createElement(DataContext.Provider, {
    value: contextValue
  }, import_react90.default.createElement(Box, _extends84({
    id,
    flex: false
  }, rest), toolbarContent, children2));
};
Data.propTypes = DataPropTypes;

// node_modules/grommet/es6/components/DataChart/DataChart.js
var import_react98 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/DataChart/Detail.js
var import_react92 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/DataChart/Swatch.js
var import_react91 = __toESM(require_react());
init_styled_components_browser_esm();
function _extends85() {
  _extends85 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends85.apply(this, arguments);
}
var Swatch = function Swatch2(_ref) {
  var aspect = _ref.aspect, color = _ref.color, dash = _ref.dash, opacityProp = _ref.opacity, point = _ref.point, round3 = _ref.round, thickness = _ref.thickness, type = _ref.type;
  var theme = (0, import_react91.useContext)(Me);
  var dim = parseInt(theme.global.spacing, 10) / 2;
  var half = dim / 2;
  var height = dim;
  var width = dim;
  var normalizedColor = color ? normalizeColor(color.color || color, theme) : void 0;
  var fill = normalizedColor;
  var stroke = "none";
  var content;
  if (aspect === "x")
    content = import_react91.default.createElement("path", {
      d: "M 0 " + half + " L " + dim + " " + half,
      stroke: "#000"
    });
  else if (aspect === "y")
    content = import_react91.default.createElement("path", {
      d: "M " + half + " 0 L " + half + " " + dim,
      stroke: "#000"
    });
  else if (aspect === "thickness")
    content = import_react91.default.createElement("g", {
      stroke: "#000",
      fill: "none"
    }, import_react91.default.createElement("circle", {
      cx: half,
      cy: half,
      r: half / 4
    }), import_react91.default.createElement("circle", {
      cx: half,
      cy: half,
      r: half - 1
    }));
  else if (aspect === "color")
    content = import_react91.default.createElement("g", null, import_react91.default.createElement("rect", {
      x: 0,
      y: 0,
      width: half,
      height: dim,
      fill: "#000",
      opacity: 0.4
    }), import_react91.default.createElement("rect", {
      x: half,
      y: 0,
      width: half,
      height: dim,
      fill: "#000",
      opacity: 0.8
    }));
  else if (point) {
    if (point === "circle")
      content = import_react91.default.createElement("circle", {
        cx: half,
        cy: half,
        r: half
      });
    else {
      var d3;
      if (point === "diamond")
        d3 = "M " + half + " 0 L " + dim + " " + half + " L " + half + " " + dim + " L 0 " + half + " Z";
      else if (point === "star") {
        var off1 = half / 3;
        var off2 = off1 * 2;
        d3 = "M " + half + " 0 L " + (half - off2) + " " + dim + " L " + dim + " " + (half - off1) + " L 0 " + (half - off1) + " L " + (half + off2) + " " + dim + " Z";
      } else if (point === "triangle")
        d3 = "M " + half + " 0 L " + dim + " " + dim + " L 0 " + dim + " Z";
      else if (point === "triangleDown")
        d3 = "M 0 0 L " + dim + " 0 L " + half + " " + dim + " Z";
      else if (point === "square")
        d3 = "M 0 0 L " + dim + " 0 L " + dim + " " + dim + " L 0 " + dim + " Z";
      if (d3)
        content = import_react91.default.createElement("path", {
          d: d3
        });
    }
  } else if (type === "area") {
    if (round3)
      content = import_react91.default.createElement("circle", {
        cx: half,
        cy: half,
        r: half
      });
    else
      content = import_react91.default.createElement("rect", {
        x: 0,
        y: 0,
        width,
        height
      });
  } else {
    var strokeWidth = parseMetricToNum(theme.global.edgeSize[thickness]) || dim;
    var _d;
    if (type === "line" || type === "area") {
      width = Math.max(width, strokeWidth * 4);
      height = strokeWidth;
      _d = "M 0 " + height / 2 + " L " + width + " " + height / 2;
    } else {
      width = strokeWidth;
      _d = "M " + width / 2 + " 0 L " + width / 2 + " " + dim;
    }
    fill = "none";
    stroke = normalizedColor;
    var strokeProps3 = {};
    if (round3)
      strokeProps3.strokeLinecap = "round";
    if (dash)
      strokeProps3.strokeDasharray = round3 ? strokeWidth + " " + strokeWidth * 1.5 : strokeWidth * 2 + " " + strokeWidth / 2;
    content = import_react91.default.createElement("path", _extends85({
      d: _d,
      strokeWidth
    }, strokeProps3));
  }
  var opacity = theme.global.opacity[(color == null ? void 0 : color.opacity) || opacityProp] || void 0;
  return import_react91.default.createElement("svg", {
    width,
    height,
    viewBox: "0 0 " + width + " " + height,
    fill,
    opacity,
    stroke
  }, content);
};

// node_modules/grommet/es6/components/DataChart/Detail.js
var DetailControl = styled_components_browser_esm_default(Box).withConfig({
  displayName: "Detail__DetailControl",
  componentId: "sc-huiwg9-0"
})(["&:focus{", "}&:focus:not(:focus-visible){", "}"], focusStyle(), unfocusStyle());
var Detail = function Detail2(_ref) {
  var activeProperty = _ref.activeProperty, axis = _ref.axis, data = _ref.data, padProp = _ref.pad, series = _ref.series, seriesStyles = _ref.seriesStyles, renderValue = _ref.renderValue, thickness = _ref.thickness;
  var theme = (0, import_react92.useContext)(Me) || defaultProps.theme;
  var _useState = (0, import_react92.useState)(), detailIndex = _useState[0], setDetailIndex = _useState[1];
  var activeIndex = (0, import_react92.useRef)();
  var detailRefs = (0, import_react92.useMemo)(function() {
    return [];
  }, []);
  var pad = (0, import_react92.useMemo)(function() {
    var horizontal12 = (padProp == null ? void 0 : padProp.horizontal) || typeof padProp === "string" && padProp || 0;
    horizontal12 = theme.global.edgeSize[horizontal12] || horizontal12;
    horizontal12 = parseMetricToNum(horizontal12);
    var vertical12 = (padProp == null ? void 0 : padProp.vertical) || typeof padProp === "string" && padProp || 0;
    vertical12 = theme.global.edgeSize[vertical12] || vertical12;
    vertical12 = parseMetricToNum(vertical12);
    return {
      horizontal: horizontal12 - parseMetricToNum(thickness) / 2 + "px",
      vertical: vertical12 + "px"
    };
  }, [padProp, theme.global.edgeSize, thickness]);
  var onMouseLeave = (0, import_react92.useCallback)(function(event) {
    var rect = activeIndex.current.getBoundingClientRect();
    if (event.pageX < rect.left || event.pageX > rect.right || event.pageY < rect.top || event.pageY > rect.bottom) {
      activeIndex.current = void 0;
      setDetailIndex(void 0);
    }
  }, []);
  return import_react92.default.createElement(import_react92.default.Fragment, null, import_react92.default.createElement(Keyboard, {
    onLeft: function onLeft() {
      if (detailIndex === void 0)
        setDetailIndex(data.length - 1);
      else if (detailIndex > 0)
        setDetailIndex(detailIndex - 1);
    },
    onRight: function onRight() {
      if (detailIndex === void 0)
        setDetailIndex(0);
      else if (detailIndex < data.length - 1)
        setDetailIndex(detailIndex + 1);
    }
  }, import_react92.default.createElement(DetailControl, {
    key: "band",
    tabIndex: 0,
    direction: "row",
    fill: true,
    pad,
    justify: "between",
    responsive: false,
    onFocus: function onFocus() {
    },
    onBlur: function onBlur() {
      return setDetailIndex(void 0);
    }
  }, data.map(function(_3, i3) {
    return import_react92.default.createElement(
      Box,
      {
        key: i3,
        align: "center",
        responsive: false,
        width: thickness,
        onMouseOver: function onMouseOver(event) {
          activeIndex.current = event.currentTarget;
          setDetailIndex(i3);
        },
        onMouseLeave,
        onFocus: function onFocus() {
        },
        onBlur: function onBlur() {
        }
      },
      import_react92.default.createElement(Box, {
        ref: function ref(c3) {
          detailRefs[i3] = c3;
        },
        fill: "vertical",
        border: detailIndex === i3 ? true : void 0
      })
    );
  }))), detailIndex !== void 0 && detailRefs[detailIndex] && import_react92.default.createElement(Drop, {
    key: "drop",
    target: detailRefs[detailIndex],
    align: detailIndex > data.length / 2 ? {
      right: "left"
    } : {
      left: "right"
    },
    plain: true,
    onMouseLeave
  }, import_react92.default.createElement(Box, {
    pad: "small",
    background: {
      color: "background-back"
    }
  }, import_react92.default.createElement(Grid, {
    columns: ["auto", "auto", "auto"],
    gap: "xsmall",
    align: "center"
  }, series.filter(function(_ref2) {
    var _data$detailIndex;
    var property = _ref2.property;
    return (!activeProperty || activeProperty === property) && (data == null ? void 0 : (_data$detailIndex = data[detailIndex]) == null ? void 0 : _data$detailIndex[property]) !== void 0 || axis && axis.x && axis.x.property === property;
  }).map(function(serie) {
    var propertyStyle = seriesStyles[serie.property];
    return import_react92.default.createElement(import_react92.Fragment, {
      key: serie.property
    }, propertyStyle ? import_react92.default.createElement(Swatch, propertyStyle) : import_react92.default.createElement("span", null), import_react92.default.createElement(Text, {
      size: "small"
    }, serie.label || serie.property), import_react92.default.createElement(Text, {
      size: "small",
      weight: "bold"
    }, renderValue(serie, detailIndex)));
  })))));
};

// node_modules/grommet/es6/components/DataChart/Legend.js
var import_react93 = __toESM(require_react());
function _extends86() {
  _extends86 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends86.apply(this, arguments);
}
var Legend = function Legend2(_ref) {
  var activeProperty = _ref.activeProperty, seriesProp = _ref.series, seriesStyles = _ref.seriesStyles, setActiveProperty = _ref.setActiveProperty;
  var series = (0, import_react93.useMemo)(function() {
    return seriesProp.filter(function(s3) {
      return seriesStyles[s3.property];
    });
  }, [seriesProp, seriesStyles]);
  var interactive = (0, import_react93.useMemo)(
    // filter out properties that are used in point chart aspects
    function() {
      return series.filter(function(_ref2) {
        var property = _ref2.property;
        return !seriesStyles[property].aspect;
      }).length > 1;
    },
    [series, seriesStyles]
  );
  return import_react93.default.createElement(Box, {
    margin: {
      top: "small"
    },
    direction: "row",
    wrap: true,
    gap: "small"
  }, series.map(function(_ref3) {
    var property = _ref3.property, label = _ref3.label;
    var isActive = property === activeProperty;
    var swatchProps = {};
    var textProps = {};
    if (activeProperty !== void 0) {
      if (!isActive) {
        textProps.color = "text-xweak";
      } else {
        textProps.color = "text-strong";
      }
    }
    var content = import_react93.default.createElement(Box, {
      key: property,
      direction: "row",
      align: "center",
      pad: {
        horizontal: "small",
        vertical: "xsmall"
      },
      gap: "xsmall"
    }, import_react93.default.createElement(Swatch, _extends86({}, seriesStyles[property], swatchProps)), import_react93.default.createElement(Text, textProps, label || property));
    if (interactive) {
      content = import_react93.default.createElement(Button, {
        key: property,
        active: isActive,
        onClick: function onClick() {
          return setActiveProperty(isActive ? void 0 : property);
        },
        hoverIndicator: true
      }, content);
    }
    return content;
  }));
};

// node_modules/grommet/es6/components/DataChart/XAxis.js
var import_react94 = __toESM(require_react());
var _excluded56 = ["values", "pad", "renderValue", "serie", "theme", "thickness"];
function _extends87() {
  _extends87 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends87.apply(this, arguments);
}
function _objectWithoutPropertiesLoose53(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var XAxis = (0, import_react94.forwardRef)(function(_ref, ref) {
  var values = _ref.values, padProp = _ref.pad, renderValue = _ref.renderValue, serie = _ref.serie, theme = _ref.theme, thickness = _ref.thickness, rest = _objectWithoutPropertiesLoose53(_ref, _excluded56);
  var pad = (0, import_react94.useMemo)(function() {
    return {
      start: edgeToNum(padProp.start || padProp.horizontal, theme) - edgeToNum(thickness, theme) / 2 + "px",
      end: edgeToNum(padProp.end || padProp.horizontal, theme) - edgeToNum(thickness, theme) / 2 + "px"
    };
  }, [padProp, theme, thickness]);
  var labelContainerProps = (0, import_react94.useMemo)(function() {
    var centered = values.length !== 2 || edgeToNum(padProp.start || padProp.horizontal, theme) >= 24;
    if (centered)
      return {
        width: thickness,
        overflow: "visible",
        align: "center"
      };
    return {};
  }, [padProp, theme, thickness, values]);
  return import_react94.default.createElement(Box, _extends87({
    ref,
    gridArea: "xAxis",
    direction: "row",
    justify: "between",
    pad
  }, rest), values.map(function(dataIndex, i3) {
    return (
      // eslint-disable-next-line react/no-array-index-key
      import_react94.default.createElement(Box, _extends87({
        key: i3
      }, labelContainerProps), serie ? renderValue(serie, dataIndex) : dataIndex)
    );
  }));
});

// node_modules/grommet/es6/components/DataChart/YAxis.js
var import_react95 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/DataChart/utils.js
var points = ["circle", "diamond", "square", "star", "triangle", "triangleDown"];
var heightYGranularity = {
  xxsmall: {
    fine: 2,
    medium: 2
  },
  xsmall: {
    fine: 3,
    medium: 2
  },
  small: {
    fine: 5,
    medium: 3
  },
  medium: {
    fine: 7,
    medium: 5
  },
  large: {
    fine: 9,
    medium: 5
  },
  xlarge: {
    fine: 11,
    medium: 5
  }
};
var halfPad = {
  xlarge: "large",
  large: "medium",
  medium: "small",
  small: "xsmall",
  xsmall: "xxsmall"
};
var doublePad = {
  large: "xlarge",
  medium: "large",
  small: "medium",
  xsmall: "small",
  xxsmall: "xsmall"
};
var orderedSizes = ["xlarge", "large", "medium", "small", "xsmall", "xxsmall", "hair"];
var largestSize = function largestSize2(size1, size2) {
  if (size1 && !size2)
    return size1;
  if (size2 && !size1)
    return size2;
  if (orderedSizes.indexOf(size1) < orderedSizes.indexOf(size2))
    return size1;
  return size2;
};
var createDateFormat = function createDateFormat2(firstValue, lastValue, full) {
  var dateFormat;
  var startDate = new Date(firstValue);
  var endDate = new Date(lastValue);
  if (
    // check for valid dates, this is the fastest way
    !Number.isNaN(startDate.getTime()) && !Number.isNaN(endDate.getTime())
  ) {
    var delta = Math.abs(endDate - startDate);
    var options;
    if (delta < 6e4)
      options = full ? {
        hour: "2-digit",
        minute: "2-digit",
        second: "2-digit",
        day: void 0
      } : {
        second: "2-digit",
        day: void 0
      };
    else if (delta < 36e5)
      options = full ? {
        hour: "numeric",
        minute: "2-digit",
        day: void 0
      } : {
        minute: "2-digit",
        day: void 0
      };
    else if (delta < 864e5)
      options = {
        hour: "numeric"
      };
    else if (delta < 2592e6)
      options = {
        month: full ? "short" : "numeric",
        day: "numeric"
      };
    else if (delta < 315576e5)
      options = {
        month: full ? "long" : "short"
      };
    else
      options = {
        year: "numeric"
      };
    if (options)
      dateFormat = new Intl.DateTimeFormat(void 0, options).format;
  }
  return dateFormat;
};

// node_modules/grommet/es6/components/DataChart/YAxis.js
var YAxis = (0, import_react95.forwardRef)(function(_ref, ref) {
  var values = _ref.values, pad = _ref.pad, renderValue = _ref.renderValue, _ref$serie = _ref.serie, serie = _ref$serie === void 0 ? {} : _ref$serie;
  var theme = (0, import_react95.useContext)(Me);
  var render = serie.render, suffix = serie.suffix;
  var divideBy;
  var unit;
  if (!render && !suffix) {
    var maxValue = Math.max.apply(Math, values.map(function(v3) {
      return Math.abs(v3);
    }));
    if (maxValue > 1e7) {
      divideBy = 1e6;
      unit = "M";
    } else if (maxValue > 1e4) {
      divideBy = 1e3;
      unit = "K";
    }
  }
  var edgeSize = doublePad[pad.vertical || pad];
  var basis = theme.global.edgeSize[edgeSize] || edgeSize;
  return import_react95.default.createElement(Box, {
    ref,
    gridArea: "yAxis",
    justify: "between",
    flex: true
  }, values.map(function(axisValue, i3) {
    var content = renderValue(serie, void 0, axisValue);
    if (content === axisValue) {
      if (divideBy)
        content = round(content / divideBy, 0);
      if (unit)
        content = "" + content + unit;
    }
    return import_react95.default.createElement(
      Box,
      {
        key: i3,
        align: "end",
        basis,
        flex: "shrink",
        justify: basis ? "center" : void 0
      },
      content
    );
  }));
});

// node_modules/grommet/es6/components/DataChart/XGuide.js
var import_react96 = __toESM(require_react());
var XGuide = (0, import_react96.forwardRef)(function(_ref, ref) {
  var guide = _ref.guide, pad = _ref.pad;
  return import_react96.default.createElement(Box, {
    ref,
    fill: true,
    direction: "row",
    justify: "between",
    pad,
    responsive: false
  }, Array.from({
    length: guide.x.count
  }).map(function(_3, i3) {
    return (
      // eslint-disable-next-line react/no-array-index-key
      import_react96.default.createElement(Box, {
        key: i3,
        border: "left"
      })
    );
  }));
});

// node_modules/grommet/es6/components/DataChart/YGuide.js
var import_react97 = __toESM(require_react());
function _extends88() {
  _extends88 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends88.apply(this, arguments);
}
var YGuide = (0, import_react97.forwardRef)(function(_ref, ref) {
  var guide = _ref.guide, padArg = _ref.pad;
  var pad;
  if (typeof padArg === "object")
    pad = _extends88({}, padArg, {
      start: "none",
      end: "none"
    });
  else if (typeof padArg === "string")
    pad = {
      vertical: padArg
    };
  return import_react97.default.createElement(Box, {
    ref,
    fill: true,
    justify: "between",
    pad,
    responsive: false
  }, Array.from({
    length: guide.y.count
  }).map(function(_3, i3) {
    return (
      // eslint-disable-next-line react/no-array-index-key
      import_react97.default.createElement(Box, {
        key: i3,
        border: "top"
      })
    );
  }));
});

// node_modules/grommet/es6/components/DataChart/propTypes.js
var import_prop_types47 = __toESM(require_prop_types());
function _extends89() {
  _extends89 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends89.apply(this, arguments);
}
var colorType = import_prop_types47.default.oneOfType([import_prop_types47.default.string, import_prop_types47.default.arrayOf(import_prop_types47.default.shape({
  color: import_prop_types47.default.string,
  value: import_prop_types47.default.number
}))]);
var thicknessType2 = import_prop_types47.default.oneOfType([import_prop_types47.default.oneOf(["hair", "xsmall", "small", "medium", "large", "xlarge", "none"]), import_prop_types47.default.string]);
var chartType = import_prop_types47.default.oneOfType([import_prop_types47.default.string, import_prop_types47.default.shape({
  property: import_prop_types47.default.oneOfType([import_prop_types47.default.string, import_prop_types47.default.arrayOf(import_prop_types47.default.oneOfType([import_prop_types47.default.string, import_prop_types47.default.shape({
    property: import_prop_types47.default.string,
    color: colorType
  })])), import_prop_types47.default.shape({
    color: import_prop_types47.default.oneOfType([import_prop_types47.default.string, import_prop_types47.default.shape({
      property: import_prop_types47.default.string,
      transform: import_prop_types47.default.func
    })]),
    thickness: import_prop_types47.default.oneOfType([import_prop_types47.default.string, import_prop_types47.default.shape({
      property: import_prop_types47.default.string,
      transform: import_prop_types47.default.func
    })]),
    x: import_prop_types47.default.string,
    y: import_prop_types47.default.string
  })]),
  color: colorType,
  dash: import_prop_types47.default.bool,
  opacity: import_prop_types47.default.oneOfType([import_prop_types47.default.oneOf(["weak", "medium", "strong"]), import_prop_types47.default.number, import_prop_types47.default.bool]),
  point: pointPropType,
  round: import_prop_types47.default.bool,
  thickness: thicknessType2,
  type: import_prop_types47.default.oneOf(["bar", "bars", "line", "area", "areas", "lines", "point"])
})]);
var seriesType = import_prop_types47.default.oneOfType([
  import_prop_types47.default.string,
  // property
  import_prop_types47.default.shape({
    label: import_prop_types47.default.oneOfType([import_prop_types47.default.string]),
    prefix: import_prop_types47.default.string,
    property: import_prop_types47.default.string,
    render: import_prop_types47.default.func,
    suffix: import_prop_types47.default.string
  })
]);
var granularityType = import_prop_types47.default.oneOf(["coarse", "medium", "fine"]);
var PropType46 = {};
if (true) {
  PropType46 = _extends89({}, genericProps, {
    axis: import_prop_types47.default.oneOfType([import_prop_types47.default.bool, import_prop_types47.default.shape({
      x: import_prop_types47.default.oneOfType([import_prop_types47.default.bool, import_prop_types47.default.string, import_prop_types47.default.shape({
        property: import_prop_types47.default.string,
        granularity: granularityType
      })]),
      y: import_prop_types47.default.oneOfType([import_prop_types47.default.bool, import_prop_types47.default.string, import_prop_types47.default.shape({
        property: import_prop_types47.default.string,
        granularity: granularityType
      })])
    })]),
    bounds: import_prop_types47.default.oneOfType([import_prop_types47.default.oneOf(["align"]), import_prop_types47.default.shape({
      y: import_prop_types47.default.arrayOf(import_prop_types47.default.number)
    })]),
    chart: import_prop_types47.default.oneOfType([chartType, import_prop_types47.default.arrayOf(chartType)]),
    data: import_prop_types47.default.arrayOf(import_prop_types47.default.shape({})),
    detail: import_prop_types47.default.bool,
    gap: import_prop_types47.default.oneOfType([import_prop_types47.default.oneOf(["none", "xxsmall", "xsmall", "small", "medium", "large", "xlarge"]), import_prop_types47.default.string]),
    guide: import_prop_types47.default.oneOfType([import_prop_types47.default.bool, import_prop_types47.default.shape({
      x: import_prop_types47.default.oneOfType([import_prop_types47.default.bool, import_prop_types47.default.shape({
        granularity: granularityType
      })]),
      y: import_prop_types47.default.oneOfType([import_prop_types47.default.bool, import_prop_types47.default.shape({
        granularity: granularityType
      })])
    })]),
    legend: import_prop_types47.default.bool,
    offset: import_prop_types47.default.oneOfType([import_prop_types47.default.bool, import_prop_types47.default.shape({
      gap: thicknessType2
    })]),
    pad: padPropType,
    placeholder: import_prop_types47.default.oneOfType([import_prop_types47.default.string, import_prop_types47.default.node]),
    series: import_prop_types47.default.oneOfType([seriesType, import_prop_types47.default.arrayOf(seriesType)]),
    size: import_prop_types47.default.oneOfType([import_prop_types47.default.oneOf(["fill"]), import_prop_types47.default.shape({
      height: import_prop_types47.default.oneOfType([import_prop_types47.default.oneOf(["xxsmall", "xsmall", "small", "medium", "large", "xlarge", "fill"]), import_prop_types47.default.string]),
      width: import_prop_types47.default.oneOfType([import_prop_types47.default.oneOf(["xxsmall", "xsmall", "small", "medium", "large", "xlarge", "fill", "auto"]), import_prop_types47.default.string])
    })])
  });
}
var DataChartPropTypes = PropType46;

// node_modules/grommet/es6/components/DataChart/DataChart.js
var _excluded57 = ["a11yTitle", "axis", "bounds", "chart", "data", "detail", "gap", "guide", "legend", "offset", "placeholder", "pad", "series", "size"];
var _excluded213 = ["property"];
var _excluded311 = ["property", "type", "x", "y"];
var _excluded410 = ["property"];
function _extends90() {
  _extends90 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends90.apply(this, arguments);
}
function _objectWithoutPropertiesLoose54(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var stackedChartType = {
  areas: "area",
  bars: "bar",
  lines: "line"
};
var DataChart = (0, import_react98.forwardRef)(function(_ref, ref) {
  var _boundsProp$y;
  var a11yTitle = _ref.a11yTitle, _ref$axis = _ref.axis, axisProp = _ref$axis === void 0 ? true : _ref$axis, _ref$bounds = _ref.bounds, boundsProp = _ref$bounds === void 0 ? "align" : _ref$bounds, chartProp = _ref.chart, _ref$data = _ref.data, data = _ref$data === void 0 ? [] : _ref$data, detail = _ref.detail, _ref$gap = _ref.gap, gap = _ref$gap === void 0 ? "small" : _ref$gap, guideProp = _ref.guide, legend = _ref.legend, offset = _ref.offset, placeholder = _ref.placeholder, padProp = _ref.pad, seriesProp = _ref.series, size = _ref.size, rest = _objectWithoutPropertiesLoose54(_ref, _excluded57);
  var theme = (0, import_react98.useContext)(Me) || defaultProps.theme;
  var _useState = (0, import_react98.useState)(), activeProperty = _useState[0], setActiveProperty = _useState[1];
  var series = (0, import_react98.useMemo)(function() {
    if (Array.isArray(seriesProp))
      return seriesProp.filter(function(s3) {
        return s3.property || typeof s3 === "string";
      }).map(function(s3) {
        return typeof s3 === "string" ? {
          property: s3
        } : s3;
      });
    if (typeof seriesProp === "string")
      return [{
        property: seriesProp
      }];
    if (seriesProp)
      return [seriesProp];
    return [];
  }, [seriesProp]);
  var getPropertySeries = function getPropertySeries2(prop) {
    return series.find(function(_ref2) {
      var property = _ref2.property;
      return prop === property;
    });
  };
  var charts = (0, import_react98.useMemo)(function() {
    if (!chartProp) {
      if (series.length === 1)
        return series.filter(function(s3) {
          return s3.property;
        }).map(function(s3) {
          return {
            property: s3.property
          };
        });
      return series.slice(1).map(function(s3) {
        return {
          property: s3.property
        };
      });
    }
    if (Array.isArray(chartProp))
      return chartProp.map(function(c3) {
        return typeof c3 === "string" ? {
          property: c3
        } : c3;
      }).filter(function(_ref3) {
        var property = _ref3.property;
        return property;
      });
    if (typeof chartProp === "string")
      return [{
        property: chartProp
      }];
    if (chartProp)
      return [chartProp];
    return [];
  }, [chartProp, series]);
  var seriesValues = (0, import_react98.useMemo)(function() {
    var result = {};
    series.forEach(function(_ref4) {
      var property = _ref4.property;
      result[property] = data.map(function(d3) {
        return d3[property];
      });
    });
    return result;
  }, [data, series]);
  var chartValues = (0, import_react98.useMemo)(function() {
    return charts.map(function(_ref5) {
      var opacity = _ref5.opacity, property = _ref5.property, type = _ref5.type;
      if (property) {
        if (Array.isArray(property)) {
          if (stackedChartType[type]) {
            var totals = [];
            return property.map(function(cp) {
              var aProperty = cp.property || cp;
              var values = seriesValues[aProperty];
              if (!values)
                return void 0;
              return values.map(function(v3, i3) {
                var base2 = totals[i3] || 0;
                totals[i3] = base2 + v3;
                if (type === "lines")
                  return [i3, base2 + v3];
                return [i3, base2, base2 + v3];
              });
            });
          }
          return data.map(function(_3, index) {
            return [index].concat(property.map(function(p2) {
              return seriesValues[p2] ? seriesValues[p2][index] : data[index][p2];
            }));
          });
        }
        if (typeof property === "object") {
          var color = property.color, thickness = property.thickness, x3 = property.x, y3 = property.y, y22 = property.y2;
          return seriesValues[x3].map(function(value, index) {
            var aValue = {
              value: [value]
            };
            aValue.value.push(seriesValues[y3][index]);
            if (y22)
              aValue.value.push(seriesValues[y22][index]);
            if (thickness) {
              var t3 = seriesValues[thickness.property || thickness][index];
              aValue.thickness = thickness.transform ? thickness.transform(t3) : t3;
            }
            if (color) {
              var c3 = seriesValues[color.property || color][index];
              aValue.color = color.transform ? color.transform(c3) : c3;
            }
            if (opacity)
              aValue.opacity = opacity;
            return aValue;
          });
        }
        return seriesValues[property];
      }
      return void 0;
    });
  }, [charts, data, seriesValues]);
  var granularities = (0, import_react98.useMemo)(function() {
    var medium;
    var steps = data.length - 1;
    if (charts[0] && typeof charts[0].property === "object")
      medium = 3;
    else if (steps < 4)
      medium = data.length;
    else if (steps === 4)
      medium = 3;
    else if (steps % 4 === 0)
      medium = 5;
    else if (steps % 3 === 0)
      medium = 4;
    else if (steps % 2 === 0)
      medium = 3;
    else
      medium = 2;
    return {
      x: {
        coarse: Math.min(data.length, 2),
        fine: data.length,
        medium
      },
      y: _extends90({}, heightYGranularity[size && size.height || "small"] || {
        fine: 5,
        medium: 3
      }, {
        coarse: 2
      })
    };
  }, [charts, data.length, size]);
  var axis = (0, import_react98.useMemo)(function() {
    if (!axisProp)
      return void 0;
    var result = {};
    if (axisProp === true || axisProp.x === true)
      result.x = {};
    if (axisProp === true || axisProp.y === true)
      result.y = {};
    if (!result.x && axisProp.x)
      result.x = typeof axisProp.x === "string" ? {
        property: axisProp.x
      } : _extends90({}, axisProp.x);
    if (!result.y && axisProp.y)
      result.y = typeof axisProp.y === "string" ? {
        property: axisProp.y
      } : _extends90({}, axisProp.y);
    if (result.x) {
      if (!result.x.property) {
        if (data && data[0]) {
          if (data[0].date)
            result.x.property = "date";
          else if (data[0].time)
            result.x.property = "time";
        }
      }
      if (!result.x.granularity)
        result.x.granularity = "coarse";
    }
    if (result.y) {
      if (!result.y.property && charts[0])
        result.y.property = charts[0].property.y || charts[0].property;
      if (!result.y.granularity)
        result.y.granularity = "coarse";
    }
    if (result.x) {
      var _result$x$granularity = result.x.granularity, granularity = _result$x$granularity === void 0 ? "coarse" : _result$x$granularity;
      result.x.count = granularities.x[granularity];
    }
    if (result.y) {
      var _result$y$granularity = result.y.granularity, _granularity = _result$y$granularity === void 0 ? "coarse" : _result$y$granularity;
      result.y.count = granularities.y[_granularity];
    }
    return result;
  }, [axisProp, data, charts, granularities]);
  var chartProps = (0, import_react98.useMemo)(function() {
    var steps = [];
    var coarseness = [void 0, 5];
    if (axis && axis.x) {
      var _axis$x$granularity = axis.x.granularity, granularity = _axis$x$granularity === void 0 ? "coarse" : _axis$x$granularity;
      steps[0] = granularities.x[granularity] - 1;
    } else
      steps[0] = data.length - 1;
    if (axis && axis.y) {
      var _axis$y$granularity = axis.y.granularity, _granularity2 = _axis$y$granularity === void 0 ? "coarse" : _axis$y$granularity;
      steps[1] = granularities.y[_granularity2] - 1;
    } else
      steps[1] = 1;
    var chartBounds = chartValues.map(function(_3, index) {
      var type = charts[index].type;
      if (stackedChartType[type]) {
        var _chartValues$index, _chartValues$index$;
        var mergedValues = ((_chartValues$index = chartValues[index]) == null ? void 0 : (_chartValues$index$ = _chartValues$index[0]) == null ? void 0 : _chartValues$index$.slice(0)) || [];
        chartValues[index].slice(1).filter(function(values) {
          return values;
        }).forEach(function(values) {
          mergedValues = mergedValues.map(function(__, i3) {
            return type === "lines" ? [i3, Math.min(mergedValues[i3][1], values[i3][1]), Math.max(mergedValues[i3][1], values[i3][1])] : [i3, Math.min(mergedValues[i3][1], values[i3][1]), Math.max(mergedValues[i3][2], values[i3][2])];
          });
        });
        return calcBounds(mergedValues, {
          coarseness,
          steps
        });
      }
      return calcBounds(chartValues[index], {
        coarseness: charts[index].property.x ? [5, 5] : coarseness,
        steps
      });
    });
    if (boundsProp === "align" && chartBounds.length) {
      var alignedBounds = [].concat(chartBounds[0]);
      chartBounds.forEach(function(bounds2) {
        alignedBounds[0][0] = Math.min(alignedBounds[0][0], bounds2[0][0]);
        alignedBounds[0][1] = Math.max(alignedBounds[0][1], bounds2[0][1]);
        alignedBounds[1][0] = Math.min(alignedBounds[1][0], bounds2[1][0]);
        alignedBounds[1][1] = Math.max(alignedBounds[1][1], bounds2[1][1]);
      });
      chartBounds = chartBounds.map(function() {
        return alignedBounds;
      });
    }
    if (typeof boundsProp === "object") {
      if (boundsProp.y)
        chartBounds = chartBounds.map(function(b3) {
          return [b3[0], [].concat(boundsProp.y)];
        });
    }
    return chartValues.map(function(values, index) {
      var _charts$index = charts[index], thickness = _charts$index.thickness, type = _charts$index.type;
      var calcValues = stackedChartType[type] ? values[0] : values;
      return calcs(calcValues, {
        bounds: chartBounds[index],
        steps,
        thickness
      });
    });
  }, [axis, boundsProp, charts, chartValues, data, granularities]);
  var seriesStyles = (0, import_react98.useMemo)(function() {
    var result = {};
    charts.forEach(function(chart, index) {
      var calcThickness = chartProps[index].thickness;
      if (typeof chart.property === "object" && !Array.isArray(chart.property)) {
        Object.keys(chart.property).forEach(function(aspect) {
          var prop = chart.property[aspect];
          if (!result[prop.property || prop])
            result[prop.property || prop] = {
              aspect
            };
        });
      } else {
        var setPropertyStyle = function setPropertyStyle2(_ref6) {
          var property = _ref6.property, styles = _objectWithoutPropertiesLoose54(_ref6, _excluded213);
          result[property] = _extends90({}, styles, result[property] || {});
          if (!styles.opacity)
            delete result[property].opacity;
          if (styles.type === "point")
            result[property].point = false;
          if (calcThickness && !result[property].thickness)
            result[property].thickness = calcThickness;
        };
        if (Array.isArray(chart.property))
          chart.property.forEach(function(prop) {
            if (typeof prop === "string")
              setPropertyStyle(_extends90({}, chart, {
                property: prop
              }));
            else if (typeof prop === "object")
              setPropertyStyle(_extends90({}, chart, prop));
          });
        else if (typeof chart === "object")
          setPropertyStyle(chart);
        else if (typeof chart === "string")
          setPropertyStyle({
            property: chart
          });
      }
    });
    var colorIndex = 0;
    var pointIndex = 0;
    Object.keys(result).forEach(function(key) {
      var seriesStyle = result[key];
      if (!seriesStyle.aspect && !seriesStyle.color) {
        seriesStyle.color = "graph-" + colorIndex;
        colorIndex += 1;
      }
      if (activeProperty !== void 0 && activeProperty !== key) {
        seriesStyle.opacity = "medium";
      }
      if (seriesStyle.point === false) {
        seriesStyle.point = points[pointIndex];
        pointIndex += 1;
      }
    });
    return result;
  }, [activeProperty, charts, chartProps]);
  var guide = (0, import_react98.useMemo)(function() {
    if (!guideProp)
      return void 0;
    var result;
    if (guideProp === true) {
      result = {
        x: {},
        y: {}
      };
    } else {
      result = {};
      if (guideProp.x)
        result.x = _extends90({}, guideProp.x);
      if (guideProp.y)
        result.y = _extends90({}, guideProp.y);
    }
    if (result.x) {
      if (!result.x.granularity && axis && axis.x)
        result.x.count = axis.x.count;
      if (!result.x.count)
        result.x.count = granularities.x[result.x.granularity || "coarse"];
    }
    if (result.y) {
      if (!result.y.granularity && axis && axis.y)
        result.y.count = axis.y.count;
      if (!result.y.count)
        result.y.count = granularities.y[result.y.granularity || "coarse"];
    }
    return result;
  }, [axis, granularities, guideProp]);
  var pad = (0, import_react98.useMemo)(function() {
    if (padProp !== void 0)
      return padProp;
    var result = {};
    charts.forEach(function(_ref7, index) {
      var type = _ref7.type;
      var thickness = chartProps[index].thickness;
      result.horizontal = largestSize(result.horizontal, halfPad[thickness]);
      if (type && type !== "bar")
        result.vertical = largestSize(result.vertical, halfPad[thickness]);
    });
    return result;
  }, [chartProps, charts, padProp]);
  var thicknesses = (0, import_react98.useMemo)(function() {
    return offset ? charts.map(function(_3, index) {
      var thickness = chartProps[index].thickness;
      return parseMetricToNum(theme.global.edgeSize[thickness] || thickness);
    }) : void 0;
  }, [charts, chartProps, offset, theme]);
  var offsetGap = (0, import_react98.useMemo)(function() {
    return (offset == null ? void 0 : offset.gap) && parseMetricToNum(theme.global.edgeSize[offset.gap] || offset.gap) || 0;
  }, [offset, theme]);
  var offsets = (0, import_react98.useMemo)(function() {
    if (offset) {
      return thicknesses.map(function(t3, i3) {
        return thicknesses.slice(0, i3).reduce(function(a3, b3) {
          return a3 + b3 + offsetGap;
        }, 0);
      });
    }
    return void 0;
  }, [offset, offsetGap, thicknesses]);
  var offsetPad = (0, import_react98.useMemo)(function() {
    return offsets ? offsets[offsets.length - 1] + thicknesses[thicknesses.length - 1] + "px" : void 0;
  }, [offsets, thicknesses]);
  var segmentThickness = (0, import_react98.useMemo)(function() {
    var result = 0;
    charts.forEach(function(_3, index) {
      var thickness = chartProps[index].thickness;
      result = Math.max(result, parseMetricToNum(theme.global.edgeSize[thickness] || thickness));
    });
    return result + "px";
  }, [charts, chartProps, theme]);
  var dateFormats = (0, import_react98.useMemo)(function() {
    var result = {};
    var full = axis && axis.x && axis.x.granularity === "coarse";
    series.forEach(function(_ref8) {
      var property = _ref8.property, render = _ref8.render;
      if (!render && data.length > 1 && typeof data[0][property] === "string") {
        result[property] = createDateFormat(data[0][property], data[data.length - 1][property], full);
      }
    });
    return result;
  }, [axis, data, series]);
  var renderValue = function renderValue2(serie, dataIndex, valueArg) {
    var value;
    if (valueArg !== void 0) {
      if (serie && serie.render)
        return serie.render(valueArg);
      value = valueArg;
    } else {
      var datum = data[dataIndex];
      value = datum[serie.property];
      if (serie && serie.render)
        return serie.render(value, datum, serie.property);
    }
    if (serie) {
      var dateFormat = dateFormats[serie.property];
      if (dateFormat)
        return dateFormat(new Date(value));
      if (serie.prefix)
        value = "" + serie.prefix + value;
      if (serie.suffix)
        value = "" + value + serie.suffix;
    }
    return value;
  };
  var xAxisElement = axis && axis.x && chartProps.length ? import_react98.default.createElement(XAxis, {
    axis,
    values: (Array.isArray(chartProps[0]) ? chartProps[0][0] : chartProps[0]).axis[0],
    pad: offsetPad ? _extends90({}, pad, {
      end: offsetPad
    }) : pad,
    renderValue,
    thickness: segmentThickness,
    serie: axis.x.property && getPropertySeries(axis.x.property),
    style: offsetPad ? {
      transform: "translate(" + offsets[Math.floor(offsets.length / 2)] + "px, 0px)"
    } : {},
    theme
  }) : null;
  var yAxisElement = axis && axis.y && (chartProps.length || boundsProp != null && boundsProp.y) ? import_react98.default.createElement(YAxis, {
    axis,
    values: (boundsProp == null ? void 0 : (_boundsProp$y = boundsProp.y) == null ? void 0 : _boundsProp$y.slice(0).reverse()) || (Array.isArray(chartProps[0]) ? chartProps[0][0] : chartProps[0]).axis[1],
    pad,
    renderValue,
    serie: axis.y.property && getPropertySeries(axis.y.property)
  }) : null;
  var stackFill = (0, import_react98.useMemo)(function() {
    if (size === "fill" || size && size.width === "fill" && size.height === "fill")
      return true;
    if (size && size.width === "fill")
      return "horizontal";
    if (size && size.height === "fill")
      return "vertical";
    return void 0;
  }, [size]);
  var guidingChild = (0, import_react98.useMemo)(function() {
    var result = 0;
    if (guide && guide.x)
      result += 1;
    if (guide && guide.y)
      result += 1;
    return result;
  }, [guide]);
  var stackElement = import_react98.default.createElement(Stack, {
    gridArea: "charts",
    guidingChild,
    fill: stackFill
  }, guide && guide.x && import_react98.default.createElement(XGuide, {
    guide,
    pad
  }), guide && guide.y && import_react98.default.createElement(YGuide, {
    guide,
    pad
  }), charts.map(function(_ref9, i3) {
    var prop = _ref9.property, type = _ref9.type, x3 = _ref9.x, y3 = _ref9.y, chartRest = _objectWithoutPropertiesLoose54(_ref9, _excluded311);
    var chartPad = offsetPad ? _extends90({}, pad, {
      end: offsetPad
    }) : pad;
    var offsetProps = offsetPad ? {
      style: {
        transform: "translate(" + offsets[i3] + "px, 0px)"
      }
    } : {};
    if (stackedChartType[type]) {
      return prop.map(function(cProp, j3) {
        var pProp = cProp.property || cProp;
        var _ref10 = typeof cProp === "object" ? cProp : {}, property = _ref10.property, propRest = _objectWithoutPropertiesLoose54(_ref10, _excluded410);
        return import_react98.default.createElement(
          Chart,
          _extends90({
            key: j3,
            values: chartValues[i3][j3] || [],
            overflow: true
          }, seriesStyles[pProp], chartProps[i3], chartRest, propRest, offsetProps, {
            type: stackedChartType[type] || type,
            size,
            pad: chartPad
          })
        );
      }).reverse();
    }
    return import_react98.default.createElement(
      Chart,
      _extends90({
        key: i3,
        values: chartValues[i3],
        overflow: true
      }, seriesStyles[prop], chartProps[i3], chartRest, offsetProps, {
        type,
        size,
        pad: chartPad
      })
    );
  }), placeholder && (typeof placeholder === "string" && import_react98.default.createElement(Box, {
    fill: "vertical",
    align: "center",
    justify: "center",
    background: {
      color: "background-front",
      opacity: "strong"
    },
    margin: pad
  }, import_react98.default.createElement(Text, {
    color: "text-weak"
  }, placeholder)) || placeholder), detail && import_react98.default.createElement(Detail, {
    activeProperty,
    axis,
    data,
    pad,
    series,
    seriesStyles,
    renderValue,
    thickness: segmentThickness
  }));
  var legendElement = legend ? import_react98.default.createElement(Legend, {
    series,
    seriesStyles,
    activeProperty,
    setActiveProperty
  }) : null;
  var content = import_react98.default.createElement(Grid, _extends90({
    ref,
    "aria-label": a11yTitle,
    fill: stackFill,
    columns: ["auto", stackFill === true || stackFill === "horizontal" ? "flex" : "auto"],
    rows: [stackFill === true || stackFill === "vertical" ? "flex" : "auto", "auto"],
    areas: [{
      name: "yAxis",
      start: [0, 0],
      end: [0, 0]
    }, {
      name: "xAxis",
      start: [1, 1],
      end: [1, 1]
    }, {
      name: "charts",
      start: [1, 0],
      end: [1, 0]
    }],
    gap
  }, rest), xAxisElement, yAxisElement, stackElement);
  if (legendElement) {
    content = import_react98.default.createElement(Box, {
      align: "start"
    }, content, legendElement);
  }
  return content;
});
DataChart.displayName = "DataChart";
DataChart.propTypes = DataChartPropTypes;

// node_modules/grommet/es6/components/DataTable/DataTable.js
var import_react115 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/DataTable/Header.js
var import_react109 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/TableCell/TableCell.js
var import_react100 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/Table/TableContext.js
var import_react99 = __toESM(require_react());
var TableContext = import_react99.default.createContext(void 0);

// node_modules/grommet/es6/components/Table/StyledTable.js
init_styled_components_browser_esm();
var SIZE_MAP2 = {
  "1/2": "50%",
  "1/4": "25%",
  "2/4": "50%",
  "3/4": "75%",
  "1/3": "33.33%",
  "2/3": "66.66%"
};
var sizeStyle15 = Ae(["width:", ";max-width:", ";overflow:hidden;"], function(props) {
  return props.size === "auto" ? (
    // setting width to a small value will allow
    // the cell to fit width of its content. this
    // is a commonly implemented CSS pattern to
    // allow an auto-width behavior on fixed table
    // layouts (which is what DataTable applies)
    // https://stackoverflow.com/questions/4757844/css-table-column-autowidth?noredirect=1&lq=1
    "1px"
  ) : SIZE_MAP2[props.size] || props.theme.global.size[props.size] || props.size;
}, function(props) {
  return props.size !== "auto" ? SIZE_MAP2[props.size] || props.theme.global.size[props.size] || props.size : void 0;
});
var StyledTableCell = styled_components_browser_esm_default.td.withConfig({
  displayName: "StyledTable__StyledTableCell",
  componentId: "sc-1m3u5g-0"
})(["margin:0;padding:0;font-weight:inherit;text-align:inherit;", " ", " ", " ", " ", " ", " ", ""], function(props) {
  return props.size && sizeStyle15;
}, function(props) {
  return props.verticalAlign && "vertical-align: " + props.verticalAlign + ";";
}, function(props) {
  return props.align && "text-align: " + props.align + ";";
}, function(props) {
  return props.background && backgroundStyle(props.background, props.theme);
}, function(props) {
  return props.border && borderStyle(props.border, props.responsive, props.theme);
}, function(props) {
  return props.pad && edgeStyle("padding", props.pad, props.responsive, props.theme.box.responsiveBreakpoint, props.theme);
}, function(props) {
  return props.tableContextTheme && props.tableContextTheme.extend;
});
StyledTableCell.defaultProps = {};
Object.setPrototypeOf(StyledTableCell.defaultProps, defaultProps2);
var StyledTableDataCaption = styled_components_browser_esm_default.caption.withConfig({
  displayName: "StyledTable__StyledTableDataCaption",
  componentId: "sc-1m3u5g-1"
})(["margin-bottom:", ";"], function(props) {
  return props.theme.global.edgeSize.xxsmall;
});
StyledTableDataCaption.defaultProps = {};
Object.setPrototypeOf(StyledTableDataCaption.defaultProps, defaultProps2);
var StyledTableRow = styled_components_browser_esm_default.tr.withConfig({
  displayName: "StyledTable__StyledTableRow",
  componentId: "sc-1m3u5g-2"
})([""]);
StyledTableRow.defaultProps = {};
Object.setPrototypeOf(StyledTableRow.defaultProps, defaultProps2);
var StyledTableBody = styled_components_browser_esm_default.tbody.withConfig({
  displayName: "StyledTable__StyledTableBody",
  componentId: "sc-1m3u5g-3"
})([""]);
StyledTableBody.defaultProps = {};
Object.setPrototypeOf(StyledTableBody.defaultProps, defaultProps2);
var StyledTableHeader = styled_components_browser_esm_default.thead.withConfig({
  displayName: "StyledTable__StyledTableHeader",
  componentId: "sc-1m3u5g-4"
})([""]);
StyledTableHeader.defaultProps = {};
Object.setPrototypeOf(StyledTableHeader.defaultProps, defaultProps2);
var StyledTableFooter = styled_components_browser_esm_default.tfoot.withConfig({
  displayName: "StyledTable__StyledTableFooter",
  componentId: "sc-1m3u5g-5"
})([""]);
StyledTableFooter.defaultProps = {};
Object.setPrototypeOf(StyledTableFooter.defaultProps, defaultProps2);
var StyledTable = styled_components_browser_esm_default.table.withConfig({
  displayName: "StyledTable",
  componentId: "sc-1m3u5g-6"
})(["border-spacing:0;border-collapse:collapse;width:inherit;", " ", ";"], genericStyles, function(props) {
  return props.theme.table && props.theme.table.extend;
});
StyledTable.defaultProps = {};
Object.setPrototypeOf(StyledTable.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/TableCell/propTypes.js
var import_prop_types48 = __toESM(require_prop_types());
var BORDER_SHAPE3 = import_prop_types48.default.shape({
  color: import_prop_types48.default.oneOfType([import_prop_types48.default.string, import_prop_types48.default.shape({
    dark: import_prop_types48.default.string,
    light: import_prop_types48.default.string
  })]),
  side: import_prop_types48.default.oneOf(["top", "left", "bottom", "right", "start", "end", "horizontal", "vertical", "all", "between"]),
  size: import_prop_types48.default.oneOfType([import_prop_types48.default.oneOf(["xsmall", "small", "medium", "large", "xlarge"]), import_prop_types48.default.string]),
  style: import_prop_types48.default.oneOf(["solid", "dashed", "dotted", "double", "groove", "ridge", "inset", "outset", "hidden"])
});
var PropType47 = {};
if (true) {
  PropType47 = {
    border: import_prop_types48.default.oneOfType([import_prop_types48.default.bool, import_prop_types48.default.oneOf(["top", "left", "bottom", "right", "start", "end", "horizontal", "vertical", "all"]), BORDER_SHAPE3, import_prop_types48.default.arrayOf(BORDER_SHAPE3)]),
    plain: import_prop_types48.default.oneOfType([import_prop_types48.default.bool, import_prop_types48.default.oneOf(["noPad"])]),
    scope: import_prop_types48.default.oneOf(["col", "row"]),
    size: import_prop_types48.default.oneOfType([import_prop_types48.default.oneOf(["xxsmall", "xsmall", "small", "medium", "large", "xlarge", "1/2", "1/3", "2/3", "1/4", "2/4", "3/4"]), import_prop_types48.default.string]),
    verticalAlign: import_prop_types48.default.oneOf(["top", "middle", "bottom"]),
    align: import_prop_types48.default.oneOfType([import_prop_types48.default.oneOf(["left", "right", "center", "justify", "inherit", "start", "end"]), import_prop_types48.default.string])
  };
}
var TableCellPropTypes = PropType47;

// node_modules/grommet/es6/components/TableCell/TableCell.js
var _excluded58 = ["align", "aria-disabled", "background", "border", "children", "className", "colSpan", "onWidth", "pad", "plain", "rowSpan", "scope", "size", "verticalAlign"];
function _extends91() {
  _extends91 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends91.apply(this, arguments);
}
function _objectWithoutPropertiesLoose55(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var verticalAlignToJustify = {
  middle: "center",
  top: "start",
  bottom: "end"
};
var TableCell = (0, import_react100.forwardRef)(function(_ref, ref) {
  var align = _ref.align, ariaDisabled = _ref["aria-disabled"], background = _ref.background, border = _ref.border, children2 = _ref.children, className = _ref.className, colSpan = _ref.colSpan, onWidth = _ref.onWidth, pad = _ref.pad, plain = _ref.plain, rowSpan = _ref.rowSpan, scope = _ref.scope, size = _ref.size, verticalAlign2 = _ref.verticalAlign, rest = _objectWithoutPropertiesLoose55(_ref, _excluded58);
  var theme = (0, import_react100.useContext)(Me) || defaultProps2.theme;
  var tableContext = (0, import_react100.useContext)(TableContext);
  var cellRef = useForwardedRef(ref);
  var containerRef = (0, import_react100.useRef)();
  useLayoutEffect(function() {
    if (onWidth) {
      var _cellRef$current$getB = cellRef.current.getBoundingClientRect(), width = _cellRef$current$getB.width;
      onWidth(width);
    }
  }, [cellRef, onWidth]);
  (0, import_react100.useEffect)(function() {
    var updateHeight = function updateHeight2() {
      if (plain === "noPad") {
        var cell = cellRef.current;
        var container = containerRef.current;
        if (cell && container) {
          container.style.height = "";
          var cellRect = cell.getBoundingClientRect();
          container.style.height = Math.max(cellRect.height - (border || theme.table[tableContext].border ? theme.global.borderSize.xsmall.replace("px", "") : 0), 0) + "px";
        }
      }
    };
    window.addEventListener("resize", updateHeight);
    updateHeight();
    return function() {
      window.removeEventListener("resize", updateHeight);
    };
  }, [border, cellRef, plain, tableContext, theme.global.borderSize, theme.table]);
  var tableContextTheme;
  if (tableContext === "header") {
    tableContextTheme = theme.table && theme.table.header;
  } else if (tableContext === "footer") {
    tableContextTheme = theme.table && theme.table.footer;
  } else {
    tableContextTheme = theme.table && theme.table.body;
  }
  var mergedProps = _extends91({}, tableContextTheme, rest);
  Object.keys(mergedProps).forEach(function(key) {
    if (rest[key] === void 0)
      mergedProps[key] = tableContextTheme[key];
  });
  var cellProps = {
    align: align || mergedProps.align || void 0,
    "aria-disabled": ariaDisabled || void 0,
    background: background || mergedProps.background || void 0,
    border: border || mergedProps.border || void 0,
    pad: plain !== "noPad" ? pad || mergedProps.pad || void 0 : void 0,
    verticalAlign: verticalAlign2 || mergedProps.verticalAlign || void 0
  };
  delete mergedProps.align;
  delete mergedProps.ariaDisabled;
  delete mergedProps.background;
  delete mergedProps.border;
  delete mergedProps.pad;
  delete mergedProps.verticalAlign;
  var content = children2;
  if (plain === "noPad" && children2) {
    content = import_react100.default.createElement(Box, {
      ref: containerRef,
      justify: verticalAlign2 ? verticalAlignToJustify[verticalAlign2] : "center"
    }, children2);
  }
  var nextTheme = (0, import_react100.useMemo)(function() {
    var result;
    if (cellProps.background || theme.darkChanged) {
      var dark2 = backgroundIsDark(cellProps.background, theme);
      var darkChanged = dark2 !== void 0 && dark2 !== theme.dark;
      if (darkChanged || theme.darkChanged) {
        result = _extends91({}, theme);
        result.dark = dark2 === void 0 ? theme.dark : dark2;
        result.background = cellProps.background;
      } else if (cellProps.background) {
        result = _extends91({}, theme);
        result.background = cellProps.background;
      }
    }
    return result || theme;
  }, [cellProps.background, theme]);
  return import_react100.default.createElement(Me.Provider, {
    value: nextTheme
  }, import_react100.default.createElement(StyledTableCell, _extends91({
    ref: cellRef,
    as: scope ? "th" : void 0,
    scope,
    size,
    colSpan,
    rowSpan,
    tableContext,
    tableContextTheme
  }, plain === true ? mergedProps : {}, cellProps, {
    className
  }), plain || !Object.keys(mergedProps).length ? content : import_react100.default.createElement(Box, _extends91({}, mergedProps, {
    align,
    justify: verticalAlignToJustify[verticalAlign2]
  }), children2)));
});
TableCell.displayName = "TableCell";
TableCell.propTypes = TableCellPropTypes;

// node_modules/grommet/es6/components/DataTable/Resizer.js
var import_react101 = __toESM(require_react());
init_styled_components_browser_esm();
function _extends92() {
  _extends92 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends92.apply(this, arguments);
}
var InteractionBox = styled_components_browser_esm_default(Box).withConfig({
  displayName: "Resizer__InteractionBox",
  componentId: "sc-8l808w-0"
})(["cursor:col-resize;> *{opacity:0;}", " &:hover{> *{opacity:1;}}"], function(props) {
  return props.active && "> * { opacity: 1; }";
});
var Resizer = function Resizer2(_ref) {
  var onResize = _ref.onResize, property = _ref.property;
  var theme = (0, import_react101.useContext)(Me) || defaultProps2.theme;
  var _useState = (0, import_react101.useState)(false), active = _useState[0], setActive = _useState[1];
  var _useState2 = (0, import_react101.useState)(), start = _useState2[0], setStart = _useState2[1];
  var _useState3 = (0, import_react101.useState)(), width = _useState3[0], setWidth = _useState3[1];
  var ref = (0, import_react101.useRef)();
  var onMouseDown = (0, import_react101.useCallback)(function(event) {
    if (ref.current) {
      var element = ref.current;
      while (element && element.nodeName !== "TH")
        element = element.parentNode;
      var rect = element.getBoundingClientRect();
      setStart(event.clientX);
      setWidth(rect.width);
      setActive(true);
    }
  }, []);
  var onMouseMove = (0, import_react101.useCallback)(function(event) {
    var nextWidth = Math.max(12, width + (event.clientX - start));
    onResize(property, nextWidth);
  }, [onResize, property, start, width]);
  var onMouseUp = (0, import_react101.useCallback)(function() {
    setActive(false);
    setStart(void 0);
    setWidth(void 0);
  }, []);
  (0, import_react101.useEffect)(function() {
    var remove = function remove2() {
      document.removeEventListener("mouseup", onMouseUp);
      document.removeEventListener("mousemove", onMouseMove);
    };
    if (active) {
      document.addEventListener("mouseup", onMouseUp);
      document.addEventListener("mousemove", onMouseMove);
      return remove;
    }
    remove();
    return void 0;
  }, [active, onMouseMove, onMouseUp]);
  var border;
  if (theme.dataTable.resize.hover && theme.dataTable.resize.hover.border) {
    var _theme$dataTable$resi = theme.dataTable.resize.hover.border, color = _theme$dataTable$resi.color, _theme$dataTable$resi2 = _theme$dataTable$resi.side, side = _theme$dataTable$resi2 === void 0 ? "end" : _theme$dataTable$resi2, size = _theme$dataTable$resi.size;
    border = {
      color,
      side,
      size
    };
  }
  return import_react101.default.createElement(Stack, {
    anchor: "right"
  }, import_react101.default.createElement(Box, _extends92({
    flex: false,
    responsive: false,
    pad: {
      vertical: "small"
    }
  }, theme.dataTable.resize)), import_react101.default.createElement(InteractionBox, {
    active,
    flex: false,
    pad: {
      left: "xsmall"
    },
    ref,
    responsive: false,
    onMouseDown,
    onMouseMove: start !== void 0 ? onMouseMove : void 0,
    onMouseUp: start !== void 0 ? onMouseUp : void 0
  }, import_react101.default.createElement(Box, {
    pad: {
      vertical: "small"
    },
    border
  })));
};
Resizer.displayName = "Resizer";
Resizer.defaultProps = {};
Object.setPrototypeOf(Resizer.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/DataTable/Searcher.js
var import_react102 = __toESM(require_react());
init_styled_components_browser_esm();
var import_FormSearch = __toESM(require_FormSearch());
var Searcher = function Searcher2(_ref) {
  var filtering = _ref.filtering, filters = _ref.filters, onFilter = _ref.onFilter, onFiltering = _ref.onFiltering, property = _ref.property;
  var theme = (0, import_react102.useContext)(Me) || defaultProps2.theme;
  var inputRef = (0, import_react102.useRef)();
  var needsFocus = filtering === property;
  (0, import_react102.useEffect)(function() {
    if (inputRef && needsFocus) {
      inputRef.current.focus();
    }
  }, [needsFocus, inputRef]);
  return filtering === property ? import_react102.default.createElement(Keyboard, {
    onEsc: function onEsc() {
      return onFiltering(void 0);
    }
  }, import_react102.default.createElement(Box, {
    width: {
      min: "xsmall"
    },
    flex: true,
    pad: {
      horizontal: "small"
    }
  }, import_react102.default.createElement(TextInput, {
    name: "search-" + property,
    a11yTitle: "Search by " + property,
    ref: inputRef,
    value: filters[property],
    onChange: function onChange(event) {
      return onFilter(property, event.target.value);
    },
    onBlur: function onBlur() {
      return onFiltering(void 0);
    }
  }))) : import_react102.default.createElement(import_react102.default.Fragment, null, filters[property] ? import_react102.default.createElement(Box, {
    flex: false,
    pad: {
      horizontal: "small"
    },
    direction: "row",
    align: "center"
  }, import_react102.default.createElement(Text, null, filters[property])) : null, import_react102.default.createElement(Button, {
    a11yTitle: "Open search by " + property,
    icon: import_react102.default.createElement(import_FormSearch.FormSearch, {
      color: normalizeColor(filtering === property ? "brand" : "border", theme)
    }),
    hoverIndicator: true,
    onClick: function onClick() {
      return onFiltering(filtering === property ? void 0 : property);
    }
  }));
};
Searcher.displayName = "Searcher";
Searcher.defaultProps = {};
Object.setPrototypeOf(Searcher.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/DataTable/ExpanderCell.js
var import_react103 = __toESM(require_react());
init_styled_components_browser_esm();
var import_Blank = __toESM(require_Blank());
var _excluded59 = ["context", "expanded", "onToggle", "pad"];
var _excluded214 = ["background", "border", "context"];
function _extends93() {
  _extends93 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends93.apply(this, arguments);
}
function _objectWithoutPropertiesLoose56(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var ExpanderControl = function ExpanderControl2(_ref) {
  var context = _ref.context, expanded = _ref.expanded, onToggle = _ref.onToggle, pad = _ref.pad, rest = _objectWithoutPropertiesLoose56(_ref, _excluded59);
  var theme = (0, import_react103.useContext)(Me) || defaultProps2.theme;
  var content;
  if (onToggle) {
    var ExpandIcon = theme.dataTable.icons[expanded ? "contract" : "expand"];
    content = import_react103.default.createElement(ExpandIcon, {
      color: normalizeColor("border", theme)
    });
  } else {
    content = import_react103.default.createElement(import_Blank.Blank, null);
  }
  var normalizedThemeProps = _extends93({}, theme.table[context], theme.dataTable[context]);
  delete normalizedThemeProps.background;
  delete normalizedThemeProps.border;
  delete normalizedThemeProps.pad;
  content = import_react103.default.createElement(Box, _extends93({}, normalizedThemeProps, rest, {
    align: "center",
    fill: true,
    pad
  }), content);
  if (onToggle) {
    content = import_react103.default.createElement(Button, {
      fill: true,
      a11yTitle: expanded ? "collapse" : "expand",
      hoverIndicator: true,
      onClick: onToggle,
      plain: true
    }, content);
  }
  return content;
};
var ExpanderCell = function ExpanderCell2(_ref2) {
  var background = _ref2.background, border = _ref2.border, context = _ref2.context, rest = _objectWithoutPropertiesLoose56(_ref2, _excluded214);
  return import_react103.default.createElement(TableCell, {
    background,
    border,
    size: "xxsmall",
    plain: "noPad",
    verticalAlign: context === "groupEnd" ? "bottom" : "top"
  }, import_react103.default.createElement(ExpanderControl, _extends93({
    context
  }, rest)));
};
ExpanderCell.displayName = "ExpanderCell";
ExpanderCell.defaultProps = {};
Object.setPrototypeOf(ExpanderCell.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/DataTable/StyledDataTable.js
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/TableRow/TableRow.js
var import_react104 = __toESM(require_react());
function _extends94() {
  _extends94 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends94.apply(this, arguments);
}
var TableRow = (0, import_react104.forwardRef)(function(props, ref) {
  return import_react104.default.createElement(StyledTableRow, _extends94({
    ref
  }, props));
});
TableRow.displayName = "TableRow";

// node_modules/grommet/es6/components/Table/Table.js
var import_react105 = __toESM(require_react());

// node_modules/grommet/es6/components/Table/propTypes.js
var import_prop_types49 = __toESM(require_prop_types());
function _extends95() {
  _extends95 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends95.apply(this, arguments);
}
var PropType48 = {};
if (true) {
  PropType48 = _extends95({}, genericProps, {
    caption: import_prop_types49.default.string
  });
}
var TablePropTypes = PropType48;

// node_modules/grommet/es6/components/Table/Table.js
var _excluded60 = ["caption", "children"];
function _extends96() {
  _extends96 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends96.apply(this, arguments);
}
function _objectWithoutPropertiesLoose57(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var Table = (0, import_react105.forwardRef)(function(_ref, ref) {
  var caption = _ref.caption, children2 = _ref.children, rest = _objectWithoutPropertiesLoose57(_ref, _excluded60);
  return import_react105.default.createElement(StyledTable, _extends96({
    ref
  }, rest), caption ? import_react105.default.createElement(StyledTableDataCaption, null, caption) : null, children2);
});
Table.propTypes = TablePropTypes;

// node_modules/grommet/es6/components/TableBody/TableBody.js
var import_react106 = __toESM(require_react());
function _extends97() {
  _extends97 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends97.apply(this, arguments);
}
var TableBody = (0, import_react106.forwardRef)(function(props, ref) {
  return import_react106.default.createElement(TableContext.Provider, {
    value: "body"
  }, import_react106.default.createElement(StyledTableBody, _extends97({
    ref
  }, props)));
});
TableBody.displayName = "TableBody";

// node_modules/grommet/es6/components/TableHeader/TableHeader.js
var import_react107 = __toESM(require_react());
function _extends98() {
  _extends98 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends98.apply(this, arguments);
}
var TableHeader = (0, import_react107.forwardRef)(function(props, ref) {
  return import_react107.default.createElement(TableContext.Provider, {
    value: "header"
  }, import_react107.default.createElement(StyledTableHeader, _extends98({
    ref
  }, props)));
});
TableHeader.displayName = "TableHeader";

// node_modules/grommet/es6/components/TableFooter/TableFooter.js
var import_react108 = __toESM(require_react());
function _extends99() {
  _extends99 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends99.apply(this, arguments);
}
var TableFooter = (0, import_react108.forwardRef)(function(props, ref) {
  return import_react108.default.createElement(TableContext.Provider, {
    value: "footer"
  }, import_react108.default.createElement(StyledTableFooter, _extends99({
    ref
  }, props)));
});
TableFooter.displayName = "TableFooter";

// node_modules/grommet/es6/components/DataTable/StyledDataTable.js
var StyledDataTable = styled_components_browser_esm_default(Table).withConfig({
  displayName: "StyledDataTable",
  componentId: "sc-xrlyjm-0"
})(["position:relative;border-spacing:0;border-collapse:separate;", " ", " ", ";"], genericStyles, function(props) {
  return props.fillProp && fillStyle(props.fillProp);
}, function(props) {
  return props.theme.dataTable && props.theme.dataTable.body && props.theme.dataTable.body.extend;
});
StyledDataTable.defaultProps = {};
Object.setPrototypeOf(StyledDataTable.defaultProps, defaultProps2);
var StyledContainer4 = styled_components_browser_esm_default(Box).withConfig({
  displayName: "StyledDataTable__StyledContainer",
  componentId: "sc-xrlyjm-1"
})(["", ";"], function(props) {
  return props.theme.dataTable && props.theme.dataTable.container && props.theme.dataTable.container.extend;
});
StyledContainer4.defaultProps = {};
Object.setPrototypeOf(StyledContainer4.defaultProps, defaultProps2);
var hoverStyle3 = Ae(["", " color:", ";"], function(props) {
  return backgroundStyle(normalizeColor(props.theme.table && props.theme.table.row && props.theme.table.row.hover && props.theme.table.row.hover.background || props.theme.global.hover.background, props.theme), props.theme);
}, function(props) {
  return normalizeColor(props.theme.table && props.theme.table.row && props.theme.table.row.hover && props.theme.table.row.hover.color || props.theme.global.hover.color, props.theme);
});
var StyledDataTableRow = styled_components_browser_esm_default(TableRow).withConfig({
  displayName: "StyledDataTable__StyledDataTableRow",
  componentId: "sc-xrlyjm-2"
})(["", " ", " ", ""], function(props) {
  return props.size && "\n    display: table;\n    width: 100%;\n    table-layout: fixed;\n  ";
}, function(props) {
  return props.onClick && "\n    cursor: pointer;\n  ";
}, function(props) {
  return props.active && hoverStyle3;
});
StyledDataTableRow.defaultProps = {};
Object.setPrototypeOf(StyledDataTableRow.defaultProps, defaultProps2);
var StyledDataTableBody = styled_components_browser_esm_default(TableBody).withConfig({
  displayName: "StyledDataTable__StyledDataTableBody",
  componentId: "sc-xrlyjm-3"
})(["", " &:focus{", "}&:focus:not(:focus-visible){", "}"], function(props) {
  return props.size && "\n    display: block;\n    width: 100%;\n    max-height: " + (props.theme.global.size[props.size] || props.size) + ";\n    overflow: auto;\n  ";
}, focusStyle({
  skipSvgChildren: true,
  forceOutline: true
}), unfocusStyle({
  skipSvgChildren: true,
  forceOutline: true
}));
StyledDataTableBody.defaultProps = {};
Object.setPrototypeOf(StyledDataTableBody.defaultProps, defaultProps2);
var StyledDataTableHeader = styled_components_browser_esm_default(TableHeader).withConfig({
  displayName: "StyledDataTable__StyledDataTableHeader",
  componentId: "sc-xrlyjm-4"
})(["", ""], function(props) {
  return props.size && "\n    height: fit-content;\n    display: table;\n    width: calc(100% - " + props.scrollOffset + "px);\n    table-layout: fixed;\n  ";
});
StyledDataTableHeader.defaultProps = {};
Object.setPrototypeOf(StyledDataTableHeader.defaultProps, defaultProps2);
var StyledDataTableFooter = styled_components_browser_esm_default(TableFooter).withConfig({
  displayName: "StyledDataTable__StyledDataTableFooter",
  componentId: "sc-xrlyjm-5"
})(["", " ", ""], function(props) {
  return props.size && "\n    display: table;\n    width: calc(100% - " + props.scrollOffset + "px);\n    table-layout: fixed;\n  ";
}, function(props) {
  return props.pin && "\n      /* Safari needs the relative positioning of tfoot specified */\n      position: sticky;\n      bottom: 0;\n      z-index: 1;\n  ";
});
StyledDataTableFooter.defaultProps = {};
Object.setPrototypeOf(StyledDataTableFooter.defaultProps, defaultProps2);
var StyledDataTableCell = styled_components_browser_esm_default(TableCell).withConfig({
  displayName: "StyledDataTable__StyledDataTableCell",
  componentId: "sc-xrlyjm-6"
})(["", ";", " ", ""], function(props) {
  return props.context === "header" && props.theme.dataTable && props.theme.dataTable.header && props.theme.dataTable.header.extend;
}, function(props) {
  return props.pin && props.pin.length > 0 && "position: sticky;\n    " + props.pin.map(function(p2) {
    return p2 + ": " + (props.pinnedOffset && props.pinnedOffset[p2] && props.pinnedOffset[p2] + "px" || 0) + ";";
  }).join(" ") + "\n    z-index: " + Object.keys(props.pin).length + ";\n  ";
}, function(props) {
  return props.pin && props.pin.length > 0 && props.theme.dataTable.pinned && props.theme.dataTable.pinned[props.context] && props.theme.dataTable.pinned[props.context].extend ? props.theme.dataTable.pinned[props.context].extend : "";
});
StyledDataTableCell.defaultProps = {};
Object.setPrototypeOf(StyledDataTableCell.defaultProps, defaultProps2);
var StyledPlaceholder2 = styled_components_browser_esm_default("caption").withConfig({
  displayName: "StyledDataTable__StyledPlaceholder",
  componentId: "sc-xrlyjm-7"
})(["position:absolute;", " ", " left:0;right:0;"], function(props) {
  return "top: " + (props.top || 0) + "px;";
}, function(props) {
  return "bottom: " + (props.bottom || 0) + "px;";
});

// node_modules/grommet/es6/components/DataTable/buildState.js
var set = function set2(obj, path, value) {
  var parts2 = path;
  if (Object(obj) !== obj)
    return obj;
  if (!Array.isArray(path))
    parts2 = path.toString().match(/[^.[\]]+/g) || [];
  parts2.slice(0, -1).reduce(function(acc, item, index) {
    if (Object(acc[item]) === acc[item]) {
      return acc[item];
    }
    acc[item] = Math.abs(parts2[index + 1]) > 0 === +parts2[index + 1] ? [] : {};
    return acc[item];
  }, obj)[parts2[parts2.length - 1]] = value;
  return obj;
};
var datumValue3 = function datumValue4(datum, property) {
  if (!property || !datum)
    return void 0;
  var parts2 = property.split(".");
  if (parts2.length === 1)
    return datum[property];
  if (!datum[parts2[0]])
    return void 0;
  return datumValue4(datum[parts2[0]], parts2.slice(1).join("."));
};
var normalizePrimaryProperty = function normalizePrimaryProperty2(columns, primaryKey) {
  var result = primaryKey;
  if (result === void 0) {
    columns.forEach(function(column) {
      if (column.primary && !result) {
        result = column.property;
      }
    });
  }
  if (result === void 0 && columns.length > 0) {
    result = columns[0].property;
  }
  return result;
};
var initializeFilters = function initializeFilters2(columns) {
  var result = {};
  columns.forEach(function(column) {
    if (column.search) {
      result[column.property] = "";
    }
  });
  return result;
};
var escapeRegExp = function escapeRegExp2(input) {
  return input.replace(/[.*+?^${}()|[\]\\]/g, "\\$&");
};
var filterAndSortData = function filterAndSortData2(data, filters, onSearch, sort) {
  var result = data;
  if (!onSearch) {
    var regexps = {};
    Object.keys(filters).filter(function(n3) {
      return filters[n3];
    }).forEach(function(n3) {
      regexps[n3] = new RegExp(escapeRegExp(filters[n3]), "i");
    });
    if (Object.keys(regexps).length > 0) {
      result = data.filter(function(datum) {
        return !Object.keys(regexps).some(function(property2) {
          return !regexps[property2].test(datumValue3(datum, property2));
        });
      });
    }
  }
  if (sort && !sort.external) {
    var property = sort.property, direction = sort.direction;
    result = result === data ? [].concat(data) : result;
    var sortAsc = direction === "asc";
    var before = sortAsc ? 1 : -1;
    var after = sortAsc ? -1 : 1;
    result.sort(function(d1, d22) {
      var d1Val = datumValue3(d1, property);
      var d2Val = datumValue3(d22, property);
      if (typeof d1Val === "string" && typeof d2Val === "string" || typeof d1Val === "string" && !d2Val || typeof d2Val === "string" && !d1Val) {
        var sortResult = (d1Val || "").localeCompare(d2Val || "", void 0, {
          sensitivity: "base"
        });
        return sortAsc ? sortResult : -sortResult;
      }
      if (d1Val > d2Val)
        return before;
      if (d1Val < d2Val)
        return after;
      return 0;
    });
  }
  return result;
};
var sumReducer = function sumReducer2(accumulated, next) {
  return accumulated + next;
};
var minReducer = function minReducer2(accumulated, next) {
  return accumulated === void 0 ? next : Math.min(accumulated, next);
};
var maxReducer = function maxReducer2(accumulated, next) {
  return accumulated === void 0 ? next : Math.max(accumulated, next);
};
var reducers = {
  max: maxReducer,
  min: minReducer,
  sum: sumReducer
};
var reducersInitValues = {
  min: Number.MAX_VALUE,
  max: Number.MIN_VALUE,
  sum: 0
};
var aggregateColumn = function aggregateColumn2(column, data) {
  var value;
  if (column.aggregate === "avg") {
    value = data.map(function(d3) {
      return datumValue3(d3, column.property);
    }).reduce(sumReducer);
    value /= data.length;
  } else {
    value = data.map(function(d3) {
      return datumValue3(d3, column.property);
    }).reduce(reducers[column.aggregate], reducersInitValues[column.aggregate]);
  }
  return value;
};
var aggregate = function aggregate2(columns, data) {
  var result = {};
  columns.forEach(function(column) {
    if (column.aggregate) {
      var value = aggregateColumn(column, data);
      result = set(result, column.property, value);
    }
  });
  return result;
};
var buildFooterValues = function buildFooterValues2(columns, data) {
  var aggregateValues = aggregate(columns, data);
  var result = {};
  columns.forEach(function(column) {
    if (column.footer) {
      if (column.footer.aggregate) {
        var value = datumValue3(aggregateValues, column.property);
        result = set(result, column.property, value);
      } else {
        result = set(result, column.property, column.footer);
      }
    }
  });
  return result;
};
var buildGroups = function buildGroups2(columns, data, groupBy, primaryProperty) {
  var result;
  if (groupBy != null && groupBy.property || typeof groupBy === "string") {
    result = [];
    var groupMap = {};
    data.forEach(function(datum) {
      var _groupBy$expandable;
      var key = datumValue3(datum, primaryProperty);
      var isGroup = key && ((_groupBy$expandable = groupBy.expandable) == null ? void 0 : _groupBy$expandable.includes(key));
      var groupByProperty = groupBy.property ? groupBy.property : groupBy;
      var groupValue = isGroup ? key : datumValue3(datum, groupByProperty);
      if (!groupMap[groupValue]) {
        var group = {
          data: [],
          datum: isGroup ? datum : {},
          key: groupValue
        };
        group.datum[groupByProperty] = groupValue;
        result.push(group);
        groupMap[groupValue] = group;
      }
      if (!isGroup)
        groupMap[groupValue].data.push(datum);
    });
    if (!groupBy.expandable) {
      columns.forEach(function(column) {
        if (column.aggregate) {
          result.forEach(function(group) {
            var datum = group.datum;
            datum[column.property] = aggregateColumn(column, group.data);
          });
        }
      });
    }
  } else if (groupBy != null && groupBy.expandable) {
    result = groupBy.expandable.map(function(key) {
      return {
        data: [],
        datum: {},
        key
      };
    });
  }
  return result;
};
var buildGroupState = function buildGroupState2(groups, groupBy) {
  var result = {};
  if (groups) {
    groups.forEach(function(_ref) {
      var key = _ref.key;
      if (key !== void 0)
        result[key] = {
          expanded: false
        };
    });
  }
  if (groupBy && groupBy.expand) {
    groupBy.expand.forEach(function(value) {
      result[value] = {
        expanded: true
      };
    });
  }
  return result;
};
var normalizeBackgroundColor3 = function normalizeBackgroundColor4(theme) {
  var background = theme.background;
  if (typeof background === "string")
    return background;
  if (background.light && background.dark)
    return background;
  if (background.color)
    return background.color;
  return void 0;
};
var tableContextNames = ["header", "body", "footer"];
var cellPropertyNames = ["background", "border", "pad"];
var normalizeCellProps = function normalizeCellProps2(props, theme) {
  var result = {};
  tableContextNames.forEach(function(context) {
    result[context] = {
      pinned: {}
    };
    cellPropertyNames.forEach(function(propName) {
      var _props$propName, _theme$dataTable, _theme$dataTable$cont, _theme$table, _theme$table$context, _props$propName3, _props$propName3$pinn, _props$propName5, _theme$dataTable2, _theme$dataTable2$pin, _theme$dataTable2$pin2;
      var value = (props == null ? void 0 : (_props$propName = props[propName]) == null ? void 0 : _props$propName[context]) || // if the propName is used without context, it applies to all contexts
      tableContextNames.every(function(n3) {
        var _props$propName2;
        return !(props != null && (_props$propName2 = props[propName]) != null && _props$propName2[n3]);
      }) && (props == null ? void 0 : props[propName]) || (theme == null ? void 0 : (_theme$dataTable = theme.dataTable) == null ? void 0 : (_theme$dataTable$cont = _theme$dataTable[context]) == null ? void 0 : _theme$dataTable$cont[propName]) || (theme == null ? void 0 : (_theme$table = theme.table) == null ? void 0 : (_theme$table$context = _theme$table[context]) == null ? void 0 : _theme$table$context[propName]);
      if (value !== void 0)
        result[context][propName] = value;
      value = (props == null ? void 0 : (_props$propName3 = props[propName]) == null ? void 0 : (_props$propName3$pinn = _props$propName3.pinned) == null ? void 0 : _props$propName3$pinn[context]) || context === "body" && tableContextNames.every(function(n3) {
        var _props$propName4, _props$propName4$pinn;
        return !(props != null && (_props$propName4 = props[propName]) != null && (_props$propName4$pinn = _props$propName4.pinned) != null && _props$propName4$pinn[n3]);
      }) && (props == null ? void 0 : (_props$propName5 = props[propName]) == null ? void 0 : _props$propName5.pinned) || (theme == null ? void 0 : (_theme$dataTable2 = theme.dataTable) == null ? void 0 : (_theme$dataTable2$pin = _theme$dataTable2.pinned) == null ? void 0 : (_theme$dataTable2$pin2 = _theme$dataTable2$pin[context]) == null ? void 0 : _theme$dataTable2$pin2[propName]);
      if (value !== void 0) {
        if (propName === "background" && theme.background && value.opacity && !value.color)
          value.color = normalizeBackgroundColor3(theme);
        if (context === "body")
          result[context].pinned[propName] = value;
        else if (props.pin === true || props.pin === context)
          result[context][propName] = value;
      }
    });
  });
  return result;
};
var normalizeRowCellProps = function normalizeRowCellProps2(rowProps, cellProps, primaryKey, index) {
  var result = {
    pinned: {}
  };
  ["background", "border", "pad"].forEach(function(propName) {
    var _rowProps$primaryKey;
    var row = primaryKey && rowProps && (rowProps == null ? void 0 : (_rowProps$primaryKey = rowProps[primaryKey]) == null ? void 0 : _rowProps$primaryKey[propName]);
    var cell = cellProps[propName];
    var value = row && (Array.isArray(row) ? row[index % row.length] : row) || (Array.isArray(cell) ? cell[index % cell.length] : cell);
    if (value !== void 0)
      result[propName] = value;
    var rowPin = rowProps && rowProps.pinned && rowProps.pinned[propName];
    var cellPin = cellProps.pinned[propName];
    value = rowPin && (Array.isArray(rowPin) ? rowPin[index % rowPin.length] : rowPin) || (Array.isArray(cellPin) ? cellPin[index % cellPin.length] : cellPin);
    if (value !== void 0)
      result.pinned[propName] = value;
  });
  return result;
};

// node_modules/grommet/es6/components/DataTable/Header.js
var _excluded61 = ["background", "border", "color", "font", "gap", "pad", "units"];
var _excluded215 = ["cellProps", "columns", "data", "disabled", "fill", "filtering", "filters", "groupBy", "groups", "groupState", "onFilter", "onFiltering", "onResize", "onSelect", "onSort", "onToggle", "onWidths", "pin", "pinnedOffset", "primaryProperty", "selected", "rowDetails", "sort", "widths", "verticalAlign"];
function _extends100() {
  _extends100 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends100.apply(this, arguments);
}
function _objectWithoutPropertiesLoose58(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var separateThemeProps = function separateThemeProps2(theme) {
  var _theme$dataTable$head = theme.dataTable.header, background = _theme$dataTable$head.background, border = _theme$dataTable$head.border, color = _theme$dataTable$head.color, font = _theme$dataTable$head.font, gap = _theme$dataTable$head.gap, pad = _theme$dataTable$head.pad, units = _theme$dataTable$head.units, rest = _objectWithoutPropertiesLoose58(_theme$dataTable$head, _excluded61);
  var textProps = _extends100({
    color
  }, font);
  var iconProps = {
    color
  };
  var layoutProps = _extends100({}, rest);
  return [layoutProps, textProps, iconProps];
};
var buttonStyle = function buttonStyle2(_ref) {
  var pad = _ref.pad, theme = _ref.theme, verticalAlign2 = _ref.verticalAlign;
  var styles = [];
  var _separateThemeProps = separateThemeProps(theme), layoutProps = _separateThemeProps[0], iconProps = _separateThemeProps[2];
  if (pad) {
    styles.push(kindPartStyles({
      pad
    }, theme));
  }
  if (layoutProps) {
    styles.push(kindPartStyles(layoutProps, theme));
  }
  if (layoutProps.hover) {
    var partStyles = kindPartStyles(layoutProps.hover, theme);
    if (partStyles.length > 0)
      styles.push(Ae(["&:hover{", "}"], partStyles));
  }
  if (iconProps.color) {
    styles.push(Ae(["svg{stroke:", ";fill:", ";}"], normalizeColor(iconProps.color, theme), normalizeColor(iconProps.color, theme)));
  }
  var align = "center";
  if (verticalAlign2 === "bottom")
    align = "end";
  if (verticalAlign2 === "top")
    align = "start";
  if (verticalAlign2) {
    styles.push(Ae(["display:inline-flex;align-items:", ";"], align));
  }
  return styles;
};
var StyledHeaderCellButton = styled_components_browser_esm_default(Button).withConfig({
  displayName: "Header__StyledHeaderCellButton",
  componentId: "sc-1baku5q-0"
})(["", ""], function(props) {
  return buttonStyle(props);
});
var StyledContentBox = styled_components_browser_esm_default(Box).withConfig({
  displayName: "Header__StyledContentBox",
  componentId: "sc-1baku5q-1"
})(["", ""], function(props) {
  return props.extend;
});
var Header2 = (0, import_react109.forwardRef)(function(_ref2, ref) {
  var cellProps = _ref2.cellProps, columns = _ref2.columns, data = _ref2.data, disabled = _ref2.disabled, fill = _ref2.fill, filtering = _ref2.filtering, filters = _ref2.filters, groupBy = _ref2.groupBy, groups = _ref2.groups, groupState = _ref2.groupState, onFilter = _ref2.onFilter, onFiltering = _ref2.onFiltering, onResize = _ref2.onResize, onSelect = _ref2.onSelect, onSort = _ref2.onSort, onToggle = _ref2.onToggle, onWidths = _ref2.onWidths, pinProp = _ref2.pin, pinnedOffset = _ref2.pinnedOffset, primaryProperty = _ref2.primaryProperty, selected = _ref2.selected, rowDetails = _ref2.rowDetails, sort = _ref2.sort, widths = _ref2.widths, verticalAlign2 = _ref2.verticalAlign, rest = _objectWithoutPropertiesLoose58(_ref2, _excluded215);
  var theme = (0, import_react109.useContext)(Me) || defaultProps2.theme;
  var _separateThemeProps2 = separateThemeProps(theme), layoutProps = _separateThemeProps2[0], textProps = _separateThemeProps2[1];
  var _useState = (0, import_react109.useState)([]), cellWidths = _useState[0], setCellWidths = _useState[1];
  var updateWidths = (0, import_react109.useCallback)(function(width) {
    return setCellWidths(function(values) {
      return [].concat(values, [width]);
    });
  }, []);
  (0, import_react109.useEffect)(function() {
    if (onWidths && cellWidths.length !== 0) {
      onWidths(cellWidths);
    }
  }, [cellWidths, onWidths]);
  var pin = pinProp ? ["top"] : [];
  var selectPin = pinnedOffset != null && pinnedOffset._grommetDataTableSelect ? [].concat(pin, ["left"]) : pin;
  var totalSelectedGroups = groupBy != null && groupBy.select ? Object.keys(groupBy.select).reduce(function(total, cur) {
    return cur && groupBy.select[cur] === "all" ? total + 1 : total;
  }, 0) : 0;
  var totalSelected = ((selected == null ? void 0 : selected.length) || 0) + totalSelectedGroups;
  var onChangeSelection = (0, import_react109.useCallback)(function() {
    var nextSelected;
    var nextGroupSelected = {};
    var primaryValues = data.map(function(datum) {
      return datumValue3(datum, primaryProperty);
    }) || [];
    var enabled = disabled && primaryValues.filter(function(v3) {
      return !disabled.includes(v3);
    }) || primaryValues;
    var enabledSelected = selected && enabled.filter(function(v3) {
      return selected.includes(v3);
    }) || primaryValues;
    var allSelected = groupBy != null && groupBy.select ? groupBy.select[""] === "all" : enabledSelected.length === enabled.length;
    if (allSelected) {
      nextSelected = disabled ? primaryValues.filter(function(v3) {
        return disabled.includes(v3) && selected.includes(v3);
      }) : [];
      nextGroupSelected[""] = "none";
    } else {
      var _groupBy$expandable;
      nextSelected = disabled ? primaryValues.filter(function(v3) {
        return !disabled.includes(v3) || selected.includes(v3);
      }) : primaryValues;
      nextGroupSelected[""] = "all";
      groupBy == null ? void 0 : (_groupBy$expandable = groupBy.expandable) == null ? void 0 : _groupBy$expandable.forEach(function(key) {
        nextGroupSelected[key] = "all";
      });
    }
    if (groupBy != null && groupBy.onSelect) {
      groupBy.onSelect(nextSelected, void 0, nextGroupSelected);
    } else
      onSelect(nextSelected);
  }, [data, disabled, groupBy, onSelect, primaryProperty, selected]);
  return import_react109.default.createElement(StyledDataTableHeader, _extends100({
    ref,
    fillProp: fill
  }, rest), import_react109.default.createElement(StyledDataTableRow, null, groups && import_react109.default.createElement(ExpanderCell, {
    background: cellProps.background,
    border: cellProps.border,
    context: "header",
    expanded: Object.keys(groupState).filter(function(k3) {
      return !groupState[k3].expanded;
    }).length === 0,
    onToggle,
    pad: cellProps.pad
  }), (selected || onSelect) && import_react109.default.createElement(StyledDataTableCell, {
    background: cellProps.background,
    onWidth: updateWidths,
    plain: "noPad",
    size: "auto",
    context: "header",
    scope: "col",
    pin: selectPin,
    pinnedOffset: pinnedOffset == null ? void 0 : pinnedOffset._grommetDataTableSelect,
    verticalAlign: verticalAlign2
  }, onSelect && import_react109.default.createElement(CheckBox, {
    a11yTitle: totalSelected === data.length ? "unselect all" : "select all",
    checked: groupBy != null && groupBy.select ? groupBy.select[""] === "all" : totalSelected > 0 && data.length > 0 && totalSelected === data.length,
    indeterminate: groupBy != null && groupBy.select ? groupBy.select[""] === "some" : totalSelected > 0 && totalSelected < data.length,
    onChange: onChangeSelection,
    pad: cellProps.pad
  })), rowDetails && import_react109.default.createElement(TableCell, {
    size: "xxsmall",
    plain: true,
    pad: "none"
  }), columns.map(function(_ref3) {
    var property = _ref3.property, header = _ref3.header, align = _ref3.align, columnPin = _ref3.pin, search = _ref3.search, sortable = _ref3.sortable, columnVerticalAlign = _ref3.verticalAlign, size = _ref3.size, units = _ref3.units;
    var content;
    var unitsContent = units ? import_react109.default.createElement(Text, _extends100({}, textProps, theme.dataTable.header.units), units) : void 0;
    if (typeof header === "string") {
      content = import_react109.default.createElement(Text, textProps, header);
      if (Object.keys(layoutProps).length && (sortable === false || !onSort)) {
        content = import_react109.default.createElement(StyledContentBox, layoutProps, content);
      }
    } else
      content = header;
    if (unitsContent) {
      content = import_react109.default.createElement(Box, {
        justify: align,
        direction: "row"
      }, content, unitsContent);
    }
    if (verticalAlign2 || columnVerticalAlign) {
      var vertical12 = verticalAlign2 || columnVerticalAlign;
      content = import_react109.default.createElement(Box, {
        height: "100%",
        justify: verticalAlignToJustify[vertical12]
      }, content);
    }
    if (onSort && sortable !== false) {
      var Icon;
      if (onSort && sortable !== false) {
        if (sort && sort.property === property) {
          Icon = theme.dataTable.icons[sort.direction !== "asc" ? "ascending" : "descending"];
        } else if (theme.dataTable.icons.sortable) {
          Icon = theme.dataTable.icons.sortable;
        }
      }
      content = import_react109.default.createElement(StyledHeaderCellButton, {
        plain: true,
        column: property,
        fill: "vertical",
        onClick: onSort(property),
        sort,
        pad: cellProps.pad,
        sortable: true,
        verticalAlign: verticalAlign2 || columnVerticalAlign
      }, import_react109.default.createElement(Box, {
        direction: "row",
        align: "center",
        gap: "xsmall",
        justify: align
      }, content, Icon && import_react109.default.createElement(Icon, null)));
    }
    content = import_react109.default.createElement(Box, {
      flex: "grow",
      fill: onResize || search ? "vertical" : false,
      justify: !align && "center" || align
    }, content);
    if (search || onResize) {
      var resizer = onResize ? import_react109.default.createElement(Resizer, {
        property,
        onResize
      }) : null;
      var searcher = search && filters ? import_react109.default.createElement(Searcher, {
        filtering,
        filters,
        property,
        onFilter,
        onFiltering
      }) : null;
      content = import_react109.default.createElement(Box, {
        direction: "row",
        align: "center",
        justify: !align || align === "start" ? "between" : align,
        gap: theme.dataTable.header.gap,
        fill: "vertical",
        style: onResize ? {
          position: "relative"
        } : void 0
      }, content, searcher && resizer ? import_react109.default.createElement(Box, {
        flex: "shrink",
        direction: "row",
        align: "center",
        gap: theme.dataTable.header.gap
      }, searcher, resizer) : searcher || resizer);
    }
    var cellPin = [].concat(pin);
    if (columnPin)
      cellPin.push("left");
    return import_react109.default.createElement(StyledDataTableCell, {
      key: property,
      align,
      context: "header",
      verticalAlign: verticalAlign2 || columnVerticalAlign,
      background: cellProps.background,
      border: cellProps.border,
      onWidth: updateWidths,
      pad: sortable === false || !onSort ? cellProps.pad : "none",
      pin: cellPin,
      plain: true,
      pinnedOffset: pinnedOffset && pinnedOffset[property],
      scope: "col",
      size: widths && widths[property] ? void 0 : size,
      style: widths && widths[property] ? {
        width: widths[property]
      } : void 0
    }, content);
  })));
});
Header2.displayName = "Header";
Header2.defaultProps = {};
Object.setPrototypeOf(Header2.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/DataTable/Footer.js
var import_react111 = __toESM(require_react());

// node_modules/grommet/es6/components/DataTable/Cell.js
var import_react110 = __toESM(require_react());
init_styled_components_browser_esm();
var _excluded62 = ["background", "border", "column", "datum", "pad", "pin", "pinnedOffset", "primaryProperty", "scope", "verticalAlign"];
function _extends101() {
  _extends101 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends101.apply(this, arguments);
}
function _objectWithoutPropertiesLoose59(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var Cell = (0, import_react110.memo)(function(_ref) {
  var background = _ref.background, border = _ref.border, _ref$column = _ref.column, align = _ref$column.align, columnPin = _ref$column.pin, plain = _ref$column.plain, footer = _ref$column.footer, property = _ref$column.property, render = _ref$column.render, columnVerticalAlign = _ref$column.verticalAlign, size = _ref$column.size, datum = _ref.datum, pad = _ref.pad, cellPin = _ref.pin, pinnedOffset = _ref.pinnedOffset, primaryProperty = _ref.primaryProperty, scope = _ref.scope, verticalAlign2 = _ref.verticalAlign, rest = _objectWithoutPropertiesLoose59(_ref, _excluded62);
  var theme = (0, import_react110.useContext)(Me) || defaultProps2.theme;
  var value = datumValue3(datum, property);
  var context = (0, import_react110.useContext)(TableContext);
  var renderContexts = context === "body" || context === "footer" && footer && footer.aggregate;
  var content;
  if (render && renderContexts) {
    content = render(datum);
  } else if (value !== void 0) {
    if (typeof value === "string" || typeof value === "number" || (0, import_react110.isValidElement)(value))
      content = value;
  }
  if (typeof content === "string" || typeof content === "number") {
    var textProps = property === primaryProperty ? theme.dataTable.primary : {};
    content = import_react110.default.createElement(Text, textProps, content);
  }
  var pin = [];
  if (cellPin)
    pin.push.apply(pin, cellPin);
  if (columnPin)
    pin.push("left");
  return import_react110.default.createElement(StyledDataTableCell, _extends101({
    scope
  }, theme.dataTable[context], {
    align,
    context,
    verticalAlign: verticalAlign2 || columnVerticalAlign,
    size,
    background,
    pinnedOffset,
    border,
    pad,
    pin,
    plain: plain ? "noPad" : void 0
  }, rest), content);
});
Cell.displayName = "Cell";
Cell.defaultProps = {};
Object.setPrototypeOf(Cell.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/DataTable/Footer.js
var _excluded63 = ["cellProps", "columns", "fill", "footerValues", "groups", "onSelect", "pin", "pinnedOffset", "primaryProperty", "selected", "verticalAlign"];
function _extends102() {
  _extends102 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends102.apply(this, arguments);
}
function _objectWithoutPropertiesLoose60(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var Footer3 = (0, import_react111.forwardRef)(function(_ref, ref) {
  var cellProps = _ref.cellProps, columns = _ref.columns, fill = _ref.fill, footerValues = _ref.footerValues, groups = _ref.groups, onSelect = _ref.onSelect, pinProp = _ref.pin, pinnedOffset = _ref.pinnedOffset, primaryProperty = _ref.primaryProperty, selected = _ref.selected, verticalAlign2 = _ref.verticalAlign, rest = _objectWithoutPropertiesLoose60(_ref, _excluded63);
  var pin = pinProp ? ["bottom"] : [];
  return import_react111.default.createElement(StyledDataTableFooter, _extends102({
    ref,
    fillProp: fill,
    pin: pinProp
  }, rest), import_react111.default.createElement(TableRow, null, groups && import_react111.default.createElement(TableCell, {
    plain: true,
    size: "xxsmall",
    pad: "none",
    verticalAlign: "top",
    background: cellProps.background,
    border: cellProps.border
  }), (selected || onSelect) && import_react111.default.createElement(StyledDataTableCell, {
    background: cellProps.background,
    context: "footer",
    pin,
    verticalAlign: verticalAlign2
  }), columns.map(function(column) {
    var cellPin = [].concat(pin);
    if (column.pin)
      cellPin.push("left");
    return import_react111.default.createElement(Cell, {
      key: column.property,
      background: column.pin && cellProps.pinned.background || cellProps.background,
      border: column.pin && cellProps.pinned.border || cellProps.border,
      context: "footer",
      column,
      datum: footerValues,
      pad: column.pin && cellProps.pinned.pad || cellProps.pad,
      pin: pin.length ? pin : void 0,
      pinnedOffset: pinnedOffset && pinnedOffset[column.property],
      primaryProperty,
      verticalAlign: verticalAlign2
    });
  })));
});
Footer3.displayName = "Footer";
Footer3.defaultProps = {};
Object.setPrototypeOf(Footer3.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/DataTable/Body.js
var import_react112 = __toESM(require_react());
init_styled_components_browser_esm();
var _excluded64 = ["cellProps", "columns", "data", "disabled", "onMore", "replace", "onClickRow", "onSelect", "pinnedOffset", "primaryProperty", "rowProps", "selected", "rowDetails", "show", "size", "step", "rowExpand", "setRowExpand", "verticalAlign"];
function _extends103() {
  _extends103 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends103.apply(this, arguments);
}
function _objectWithoutPropertiesLoose61(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var Row = (0, import_react112.memo)(function(_ref) {
  var cellProps = _ref.cellProps, primaryValue = _ref.primaryValue, index = _ref.index, rowRef = _ref.rowRef, size = _ref.size, active = _ref.active, onClickRow = _ref.onClickRow, datum = _ref.datum, selected = _ref.selected, onSelect = _ref.onSelect, isDisabled = _ref.isDisabled, isSelected = _ref.isSelected, rowDetails = _ref.rowDetails, isRowExpanded = _ref.isRowExpanded, setActive = _ref.setActive, setRowExpand = _ref.setRowExpand, rowExpand = _ref.rowExpand, columns = _ref.columns, pinnedOffset = _ref.pinnedOffset, primaryProperty = _ref.primaryProperty, data = _ref.data, verticalAlign2 = _ref.verticalAlign;
  return import_react112.default.createElement(import_react112.default.Fragment, null, import_react112.default.createElement(StyledDataTableRow, {
    ref: rowRef,
    size,
    active,
    "aria-disabled": onClickRow && isDisabled || void 0,
    onClick: onClickRow ? function(event) {
      if (onClickRow && !isDisabled) {
        if (typeof onClickRow === "function") {
          event.persist();
          var adjustedEvent = event;
          adjustedEvent.datum = datum;
          adjustedEvent.index = index;
          onClickRow(adjustedEvent);
        } else if (onClickRow === "select") {
          if (isSelected) {
            onSelect(selected.filter(function(s3) {
              return s3 !== primaryValue;
            }), datum);
          } else
            onSelect([].concat(selected, [primaryValue]), datum);
        }
      }
    } : void 0,
    onMouseEnter: onClickRow && !isDisabled ? function() {
      return setActive(index);
    } : void 0,
    onMouseLeave: onClickRow ? function() {
      return setActive(void 0);
    } : void 0
  }, (selected || onSelect) && import_react112.default.createElement(Cell, {
    background: (pinnedOffset == null ? void 0 : pinnedOffset._grommetDataTableSelect) && cellProps.pinned.background || cellProps.background,
    border: cellProps.pinned.border || cellProps.border,
    pinnedOffset: pinnedOffset == null ? void 0 : pinnedOffset._grommetDataTableSelect,
    "aria-disabled": isDisabled || !onSelect || void 0,
    column: {
      pin: Boolean(pinnedOffset == null ? void 0 : pinnedOffset._grommetDataTableSelect),
      plain: "noPad",
      size: "auto",
      render: function render() {
        return import_react112.default.createElement(CheckBox, {
          tabIndex: onClickRow === "select" ? -1 : void 0,
          a11yTitle: (isSelected ? "unselect" : "select") + " " + primaryValue,
          checked: isSelected,
          disabled: isDisabled || !onSelect,
          onChange: function onChange() {
            if (isSelected) {
              onSelect(selected.filter(function(s3) {
                return s3 !== primaryValue;
              }), datum);
            } else
              onSelect([].concat(selected, [primaryValue]), datum);
          },
          pad: cellProps.pad
        });
      }
    },
    verticalAlign: verticalAlign2
  }), rowDetails && import_react112.default.createElement(ExpanderCell, {
    context: isRowExpanded ? "groupHeader" : "body",
    expanded: isRowExpanded,
    onToggle: function onToggle() {
      if (isRowExpanded) {
        setRowExpand(rowExpand.filter(function(s3) {
          return s3 !== index;
        }));
      } else {
        setRowExpand([].concat(rowExpand, [index]));
      }
    },
    pad: cellProps.pad,
    verticalAlign: verticalAlign2
  }), columns.map(function(column) {
    return import_react112.default.createElement(Cell, {
      key: column.property,
      background: column.pin && cellProps.pinned.background || cellProps.background,
      border: column.pin && cellProps.pinned.border || cellProps.border,
      context: "body",
      column,
      datum,
      pad: column.pin && cellProps.pinned.pad || cellProps.pad,
      pinnedOffset: pinnedOffset && pinnedOffset[column.property],
      primaryProperty,
      scope: column.primary || column.property === primaryProperty ? "row" : void 0,
      verticalAlign: verticalAlign2
    });
  })), rowDetails && isRowExpanded && import_react112.default.createElement(StyledDataTableRow, {
    key: index.toString() + "_expand"
  }, (selected || onSelect) && import_react112.default.createElement(TableCell, null), import_react112.default.createElement(TableCell, {
    colSpan: columns.length + 1
  }, rowDetails(data[index]))));
});
var Body = (0, import_react112.forwardRef)(function(_ref2, ref) {
  var _ref3;
  var cellPropsProp = _ref2.cellProps, columns = _ref2.columns, data = _ref2.data, disabled = _ref2.disabled, onMore = _ref2.onMore, replace = _ref2.replace, onClickRow = _ref2.onClickRow, onSelect = _ref2.onSelect, pinnedOffset = _ref2.pinnedOffset, primaryProperty = _ref2.primaryProperty, rowProps = _ref2.rowProps, selected = _ref2.selected, rowDetails = _ref2.rowDetails, show = _ref2.show, size = _ref2.size, step = _ref2.step, rowExpand = _ref2.rowExpand, setRowExpand = _ref2.setRowExpand, verticalAlign2 = _ref2.verticalAlign, rest = _objectWithoutPropertiesLoose61(_ref2, _excluded64);
  var theme = (0, import_react112.useContext)(Me) || defaultProps2.theme;
  var _React$useState = import_react112.default.useState(), active = _React$useState[0], setActive = _React$useState[1];
  var _React$useState2 = import_react112.default.useState(), lastActive = _React$useState2[0], setLastActive = _React$useState2[1];
  var usingKeyboard = useKeyboard();
  var onFocusActive = (_ref3 = active != null ? active : lastActive) != null ? _ref3 : usingKeyboard ? 0 : void 0;
  var activePrimaryValue = active >= 0 ? datumValue3(data[active], primaryProperty) : void 0;
  var selectRow = function selectRow2() {
    if (activePrimaryValue !== void 0) {
      if (selected && selected.includes(activePrimaryValue)) {
        onSelect(selected.filter(function(s3) {
          return s3 !== activePrimaryValue;
        }));
      } else
        onSelect([].concat(selected, [activePrimaryValue]));
    }
  };
  var clickableRow = onClickRow && active >= 0 && (!disabled || activePrimaryValue !== void 0 && !disabled.includes(activePrimaryValue));
  return import_react112.default.createElement(Keyboard, {
    onEnter: clickableRow ? function(event) {
      if (clickableRow) {
        if (typeof onClickRow === "function") {
          event.persist();
          var adjustedEvent = event;
          adjustedEvent.datum = data[active];
          onClickRow(adjustedEvent);
        } else if (onClickRow === "select") {
          selectRow();
        }
      }
    } : void 0,
    onSpace: function onSpace() {
      if (clickableRow) {
        if (onClickRow === "select") {
          selectRow();
        }
      }
    },
    onUp: onClickRow && active ? function() {
      return setActive(active - 1);
    } : void 0,
    onDown: onClickRow && data.length && active < data.length - 1 ? function() {
      return setActive((active != null ? active : -1) + 1);
    } : void 0
  }, import_react112.default.createElement(StyledDataTableBody, _extends103({
    ref,
    size,
    tabIndex: onClickRow ? 0 : void 0,
    onFocus: function onFocus() {
      return setActive(onFocusActive);
    },
    onBlur: function onBlur() {
      setLastActive(active);
      setActive(void 0);
    }
  }, rest), import_react112.default.createElement(InfiniteScroll, {
    items: data,
    onMore,
    replace,
    renderMarker: function renderMarker(marker) {
      return import_react112.default.createElement(TableRow, null, import_react112.default.createElement(TableCell, null, marker));
    },
    show,
    step
  }, function(datum, index, rowRef) {
    var primaryValue = primaryProperty ? datumValue3(datum, primaryProperty) : void 0;
    var isSelected = selected && selected.includes(primaryValue);
    var isDisabled = disabled && disabled.includes(primaryValue);
    var isRowExpanded = rowExpand && rowExpand.includes(index);
    var cellProps = normalizeRowCellProps(rowProps, cellPropsProp, primaryValue, index);
    return import_react112.default.createElement(Row, {
      key: primaryValue != null ? primaryValue : index,
      setActive,
      rowRef,
      cellProps,
      primaryValue,
      isDisabled,
      isSelected,
      isRowExpanded,
      index,
      size,
      active: active >= 0 ? active === index : void 0,
      onClickRow,
      datum,
      selected,
      onSelect,
      rowDetails,
      setRowExpand,
      rowExpand,
      columns,
      primaryProperty,
      rowProps,
      data,
      theme,
      pinnedOffset,
      verticalAlign: verticalAlign2
    });
  })));
});

// node_modules/grommet/es6/components/DataTable/GroupedBody.js
var import_react113 = __toESM(require_react());
var _excluded65 = ["cellProps", "columns", "data", "disabled", "groupBy", "groups", "groupState", "pinnedOffset", "primaryProperty", "onMore", "onSelect", "onToggle", "onUpdate", "replace", "rowProps", "selected", "size", "step", "verticalAlign"];
function _extends104() {
  _extends104 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends104.apply(this, arguments);
}
function _objectWithoutPropertiesLoose62(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var GroupedBody = (0, import_react113.forwardRef)(function(_ref, ref) {
  var cellPropsProp = _ref.cellProps, columns = _ref.columns, data = _ref.data, disabled = _ref.disabled, groupBy = _ref.groupBy, groups = _ref.groups, groupState = _ref.groupState, pinnedOffset = _ref.pinnedOffset, primaryProperty = _ref.primaryProperty, onMore = _ref.onMore, onSelect = _ref.onSelect, onToggle = _ref.onToggle, onUpdate = _ref.onUpdate, replace = _ref.replace, rowProps = _ref.rowProps, selected = _ref.selected, size = _ref.size, step = _ref.step, verticalAlign2 = _ref.verticalAlign, rest = _objectWithoutPropertiesLoose62(_ref, _excluded65);
  var items = (0, import_react113.useMemo)(function() {
    var nextItems = [];
    groups.forEach(function(group) {
      var _ref2 = groupState[group.key] || {
        expanded: true
      }, expanded = _ref2.expanded;
      var memberCount = group.data.length;
      var groupSelected = [];
      var isGroupSelected = false;
      var groupDisabled = [];
      var isGroupDisabled = false;
      if (memberCount > 1 || onUpdate && group.key !== void 0) {
        var primaryKeys = group.data.map(function(datum) {
          return datum[primaryProperty];
        });
        groupSelected = primaryKeys && selected ? primaryKeys.filter(function(val) {
          return selected.includes(val);
        }) : [];
        isGroupSelected = groupBy.select ? groupBy.select[group.key] === "all" : groupSelected.length === group.data.length && groupSelected.length > 0;
        var indeterminate = groupBy.select ? groupBy.select[group.key] === "some" : groupSelected.length > 0 && groupSelected.length < group.data.length;
        groupDisabled = primaryKeys && disabled ? primaryKeys.filter(function(val) {
          return disabled.includes(val);
        }) : [];
        isGroupDisabled = groupBy.disable ? groupBy.disable[group.key] === "all" : groupDisabled.length === group.data.length && groupDisabled.length > 0;
        nextItems.push({
          expanded,
          key: group.key,
          primaryValue: group.key,
          datum: group.datum,
          context: "groupHeader",
          isDisabled: isGroupDisabled,
          isSelected: isGroupSelected,
          indeterminate,
          onChange: function onChange() {
            var nextSelected = isGroupSelected || indeterminate ? selected.filter(function(s3) {
              return !groupSelected.includes(s3);
            }) : [].concat(selected, primaryKeys);
            if (groupBy.onSelect) {
              groupBy.onSelect(nextSelected, group.datum, groupBy.select);
            } else {
              onSelect(nextSelected, group.datum);
            }
          }
        });
      }
      if (!onUpdate && memberCount === 1 || expanded) {
        group.data.forEach(function(datum, index) {
          var primaryValue = primaryProperty ? datumValue3(datum, primaryProperty) : void 0;
          var isSelected = selected == null ? void 0 : selected.includes(primaryValue);
          var isDisabled = disabled == null ? void 0 : disabled.includes(primaryValue);
          nextItems.push({
            key: datum[primaryProperty],
            primaryValue: primaryProperty ? datumValue3(datum, primaryProperty) : void 0,
            datum,
            context: memberCount > 1 && index === memberCount - 1 ? "groupEnd" : "body",
            isDisabled,
            isSelected,
            onChange: function onChange() {
              var nextSelected = isSelected ? selected.filter(function(s3) {
                return s3 !== primaryValue;
              }) : [].concat(selected, [primaryValue]);
              onSelect(nextSelected, datum);
            }
          });
        });
      }
    });
    return nextItems;
  }, [disabled, groups, groupBy, groupState, primaryProperty, selected, onSelect, onUpdate]);
  return import_react113.default.createElement(StyledDataTableBody, _extends104({
    ref,
    size
  }, rest), import_react113.default.createElement(InfiniteScroll, {
    items,
    onMore,
    replace,
    renderMarker: function renderMarker(marker) {
      return import_react113.default.createElement(TableRow, null, import_react113.default.createElement(TableCell, null, marker));
    },
    step
  }, function(row, index, rowRef) {
    var context = row.context, datum = row.datum, expanded = row.expanded, indeterminate = row.indeterminate, isDisabled = row.isDisabled, isSelected = row.isSelected, key = row.key, onChange = row.onChange, primaryValue = row.primaryValue;
    var cellProps = normalizeRowCellProps(rowProps, cellPropsProp, primaryValue, index);
    return import_react113.default.createElement(StyledDataTableRow, {
      ref: rowRef,
      key,
      size
    }, import_react113.default.createElement(ExpanderCell, {
      background: cellProps.background,
      border: cellProps.border,
      context,
      pad: cellProps.pad,
      onToggle: context === "groupHeader" ? onToggle(key) : void 0,
      expanded,
      verticalAlign: verticalAlign2
    }), (selected || onSelect) && import_react113.default.createElement(TableCell, {
      background: cellProps.background,
      border: cellProps.pinned.border || cellProps.border,
      plain: "noPad",
      size: "auto",
      verticalAlign: verticalAlign2,
      "aria-disabled": isDisabled || !onSelect || void 0
    }, import_react113.default.createElement(CheckBox, {
      a11yTitle: (isSelected ? "unselect" : "select") + " " + (context === "groupHeader" ? key : primaryValue),
      checked: isSelected,
      indeterminate,
      disabled: isDisabled || !onSelect,
      onChange,
      pad: cellProps.pad
    })), columns.map(function(column) {
      var scope;
      if (context === "groupHeader") {
        scope = column.property === groupBy.property ? "row" : void 0;
      } else {
        scope = column.primary ? "row" : void 0;
      }
      return import_react113.default.createElement(Cell, {
        key: column.property,
        background: cellProps.background,
        border: cellProps.border,
        context,
        column,
        datum,
        pad: cellProps.pad,
        scope,
        pinnedOffset: context === "groupHeader" && pinnedOffset && pinnedOffset[column.property],
        verticalAlign: verticalAlign2
      });
    }));
  }));
});

// node_modules/grommet/es6/components/DataTable/propTypes.js
var import_prop_types50 = __toESM(require_prop_types());
function _extends105() {
  _extends105 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends105.apply(this, arguments);
}
var sizes2 = ["xxsmall", "xsmall", "small", "medium", "large", "xlarge"];
var sides = ["horizontal", "vertical", "top", "bottom", "left", "right"];
var parts = ["header", "body", "footer"];
var verticalAlign = ["bottom", "middle", "top"];
var padShapeSides = {};
sides.forEach(function(side) {
  padShapeSides[side] = import_prop_types50.default.oneOfType([import_prop_types50.default.oneOf(sizes2), import_prop_types50.default.string]);
});
var padShapeParts = {};
parts.forEach(function(part) {
  padShapeParts[part] = {};
  sides.forEach(function(side) {
    padShapeParts[part][side] = import_prop_types50.default.oneOf(sizes2);
  });
});
var backgroundShape = {};
[].concat(parts, ["pinned"]).forEach(function(part) {
  backgroundShape[part] = import_prop_types50.default.oneOfType([import_prop_types50.default.string, import_prop_types50.default.shape({
    dark: import_prop_types50.default.string,
    light: import_prop_types50.default.string
  }), import_prop_types50.default.arrayOf(import_prop_types50.default.string)]);
});
var borderTypes = [import_prop_types50.default.bool, import_prop_types50.default.oneOf(sides), import_prop_types50.default.shape({
  color: import_prop_types50.default.oneOfType([import_prop_types50.default.string, import_prop_types50.default.shape({
    dark: import_prop_types50.default.string,
    light: import_prop_types50.default.string
  })]),
  side: import_prop_types50.default.oneOf(sides),
  size: import_prop_types50.default.oneOfType([import_prop_types50.default.oneOf(sizes2), import_prop_types50.default.string])
})];
var borderShape = {};
parts.forEach(function(part) {
  borderShape[part] = import_prop_types50.default.oneOfType(borderTypes);
});
var PropType49 = {};
if (true) {
  PropType49 = _extends105({}, genericProps, {
    background: import_prop_types50.default.oneOfType([import_prop_types50.default.string, import_prop_types50.default.arrayOf(import_prop_types50.default.string), import_prop_types50.default.shape(backgroundShape)]),
    border: import_prop_types50.default.oneOfType([].concat(borderTypes, [import_prop_types50.default.shape(borderShape)])),
    columns: import_prop_types50.default.arrayOf(import_prop_types50.default.shape({
      align: import_prop_types50.default.oneOf(["center", "start", "end"]),
      aggregate: import_prop_types50.default.oneOf(["avg", "max", "min", "sum"]),
      footer: import_prop_types50.default.oneOfType([import_prop_types50.default.node, import_prop_types50.default.shape({
        aggregate: import_prop_types50.default.bool
      })]),
      header: import_prop_types50.default.oneOfType([import_prop_types50.default.string, import_prop_types50.default.node, import_prop_types50.default.shape({
        aggregate: import_prop_types50.default.bool
      })]),
      pin: import_prop_types50.default.bool,
      plain: import_prop_types50.default.bool,
      primary: import_prop_types50.default.bool,
      property: import_prop_types50.default.string.isRequired,
      render: import_prop_types50.default.func,
      search: import_prop_types50.default.bool,
      sortable: import_prop_types50.default.bool,
      size: import_prop_types50.default.oneOfType([import_prop_types50.default.oneOf(["small", "medium", "large", "xlarge", "1/2", "1/4", "2/4", "3/4", "1/3", "2/3"]), import_prop_types50.default.string]),
      units: import_prop_types50.default.string,
      verticalAlign: import_prop_types50.default.oneOf(["middle", "top", "bottom"])
    })),
    data: import_prop_types50.default.arrayOf(import_prop_types50.default.shape({})),
    disabled: import_prop_types50.default.arrayOf(import_prop_types50.default.oneOfType([import_prop_types50.default.string, import_prop_types50.default.number])),
    fill: import_prop_types50.default.oneOfType([import_prop_types50.default.oneOf(["horizontal", "vertical"]), import_prop_types50.default.bool]),
    groupBy: import_prop_types50.default.oneOfType([import_prop_types50.default.string, import_prop_types50.default.shape({
      property: import_prop_types50.default.string,
      expand: import_prop_types50.default.arrayOf(import_prop_types50.default.string),
      expandable: import_prop_types50.default.arrayOf(import_prop_types50.default.string),
      select: import_prop_types50.default.objectOf(import_prop_types50.default.oneOf(["all", "some", "none"])),
      onExpand: import_prop_types50.default.func,
      onSelect: import_prop_types50.default.func
    })]),
    onClickRow: import_prop_types50.default.oneOfType([import_prop_types50.default.func, import_prop_types50.default.oneOf(["select"])]),
    rowDetails: import_prop_types50.default.func,
    onMore: import_prop_types50.default.func,
    onSearch: import_prop_types50.default.func,
    onSelect: import_prop_types50.default.func,
    onSort: import_prop_types50.default.func,
    onUpdate: import_prop_types50.default.func,
    pad: import_prop_types50.default.oneOfType([import_prop_types50.default.oneOf(sizes2), import_prop_types50.default.string, import_prop_types50.default.shape(padShapeSides), import_prop_types50.default.shape(padShapeParts)]),
    paginate: import_prop_types50.default.oneOfType([import_prop_types50.default.bool, import_prop_types50.default.object]),
    pin: import_prop_types50.default.oneOfType([import_prop_types50.default.bool, import_prop_types50.default.oneOf(["header", "footer"])]),
    placeholder: import_prop_types50.default.oneOfType([import_prop_types50.default.string, import_prop_types50.default.node]),
    primaryKey: import_prop_types50.default.oneOfType([import_prop_types50.default.string, import_prop_types50.default.bool]),
    replace: import_prop_types50.default.bool,
    resizeable: import_prop_types50.default.bool,
    rowProps: import_prop_types50.default.shape({}),
    select: import_prop_types50.default.arrayOf(import_prop_types50.default.oneOfType([import_prop_types50.default.string, import_prop_types50.default.number])),
    show: import_prop_types50.default.oneOfType([import_prop_types50.default.number, import_prop_types50.default.shape({
      page: import_prop_types50.default.number
    })]),
    size: import_prop_types50.default.oneOfType([import_prop_types50.default.oneOf(["small", "medium", "large", "xlarge"]), import_prop_types50.default.string]),
    sort: import_prop_types50.default.shape({
      direction: import_prop_types50.default.oneOf(["asc", "desc"]),
      external: import_prop_types50.default.bool,
      property: import_prop_types50.default.string.isRequired
    }),
    sortable: import_prop_types50.default.bool,
    step: import_prop_types50.default.number,
    verticalAlign: import_prop_types50.default.oneOfType([import_prop_types50.default.oneOf(verticalAlign), import_prop_types50.default.shape({
      header: import_prop_types50.default.oneOf(verticalAlign),
      body: import_prop_types50.default.oneOf(verticalAlign),
      footer: import_prop_types50.default.oneOf(verticalAlign)
    })])
  });
}
var DataTablePropTypes = PropType49;

// node_modules/grommet/es6/components/DataTable/PlaceholderBody.js
var import_react114 = __toESM(require_react());
var PlaceholderBody = (0, import_react114.forwardRef)(function(_ref, ref) {
  var _ref$columns = _ref.columns, columns = _ref$columns === void 0 ? [] : _ref$columns, onSelect = _ref.onSelect, children2 = _ref.children;
  var colSpan = Math.max(columns.length + (onSelect ? 1 : 0), 1);
  return import_react114.default.createElement("tbody", {
    ref
  }, import_react114.default.createElement("tr", null, import_react114.default.createElement("td", {
    colSpan
  }, children2)));
});

// node_modules/grommet/es6/components/DataTable/DataTable.js
var _excluded66 = ["background", "border", "columns", "data", "disabled", "fill", "groupBy", "onClickRow", "onMore", "onSearch", "onSelect", "onSort", "onUpdate", "replace", "pad", "paginate", "pin", "placeholder", "primaryKey", "resizeable", "rowProps", "select", "show", "size", "sort", "sortable", "rowDetails", "step", "verticalAlign"];
function _extends106() {
  _extends106 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends106.apply(this, arguments);
}
function _objectWithoutPropertiesLoose63(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var emptyData2 = [];
function useGroupState(groups, groupBy) {
  var _useState = (0, import_react115.useState)(function() {
    return buildGroupState(groups, groupBy);
  }), groupState = _useState[0], setGroupState = _useState[1];
  var _useState2 = (0, import_react115.useState)({
    groups,
    groupBy
  }), prevDeps = _useState2[0], setPrevDeps = _useState2[1];
  var prevGroups = prevDeps.groups, prevGroupBy = prevDeps.groupBy;
  if (groups !== prevGroups || groupBy !== prevGroupBy) {
    setPrevDeps({
      groups,
      groupBy
    });
    var nextGroupState = buildGroupState(groups, groupBy);
    setGroupState(nextGroupState);
    return [nextGroupState, setGroupState];
  }
  return [groupState, setGroupState];
}
var DataTable = function DataTable2(_ref) {
  var background = _ref.background, border = _ref.border, columnsProp = _ref.columns, dataProp = _ref.data, disabled = _ref.disabled, fill = _ref.fill, groupByProp = _ref.groupBy, onClickRow = _ref.onClickRow, onMore = _ref.onMore, onSearch = _ref.onSearch, onSelect = _ref.onSelect, onSortProp = _ref.onSort, onUpdate = _ref.onUpdate, replace = _ref.replace, pad = _ref.pad, paginate = _ref.paginate, pin = _ref.pin, placeholder = _ref.placeholder, primaryKey = _ref.primaryKey, resizeable = _ref.resizeable, rowProps = _ref.rowProps, select = _ref.select, showProp = _ref.show, size = _ref.size, sortProp = _ref.sort, sortable = _ref.sortable, rowDetails = _ref.rowDetails, _ref$step = _ref.step, step = _ref$step === void 0 ? 50 : _ref$step, verticalAlign2 = _ref.verticalAlign, rest = _objectWithoutPropertiesLoose63(_ref, _excluded66);
  var theme = (0, import_react115.useContext)(Me) || defaultProps2.theme;
  var _useContext = (0, import_react115.useContext)(DataContext), view = _useContext.view, contextData = _useContext.data, properties = _useContext.properties, onView = _useContext.onView;
  var data = dataProp || contextData || emptyData2;
  var columns = (0, import_react115.useMemo)(function() {
    var result = [];
    if (columnsProp)
      result = columnsProp;
    else if (properties)
      result = Object.keys(properties).map(function(p2) {
        return _extends106({
          property: p2
        }, properties[p2]);
      });
    else if (data.length)
      result = Object.keys(data[0]).map(function(p2) {
        return {
          property: p2
        };
      });
    if (view != null && view.columns)
      result = result.filter(function(c3) {
        return view.columns.includes(c3.property);
      }).sort(function(c1, c22) {
        return view.columns.indexOf(c1.property) - view.columns.indexOf(c22.property);
      });
    return result;
  }, [columnsProp, data, properties, view]);
  var primaryProperty = (0, import_react115.useMemo)(function() {
    return normalizePrimaryProperty(columns, primaryKey);
  }, [columns, primaryKey]);
  var showFooter = (0, import_react115.useMemo)(function() {
    return columns.filter(function(c3) {
      return c3.footer;
    }).length > 0;
  }, [columns]);
  var _useState3 = (0, import_react115.useState)(), filtering = _useState3[0], setFiltering = _useState3[1];
  var _useState4 = (0, import_react115.useState)(initializeFilters(columns)), filters = _useState4[0], setFilters = _useState4[1];
  var _useState5 = (0, import_react115.useState)(sortProp || {}), sort = _useState5[0], setSort = _useState5[1];
  (0, import_react115.useEffect)(function() {
    if (sortProp)
      setSort(sortProp);
    else if (view != null && view.sort)
      setSort(view.sort);
  }, [sortProp, view]);
  var groupBy = (view == null ? void 0 : view.groupBy) || groupByProp;
  var adjustedData = (0, import_react115.useMemo)(function() {
    return onUpdate ? data : filterAndSortData(data, filters, onSearch, sort);
  }, [data, filters, onSearch, onUpdate, sort]);
  var footerValues = (0, import_react115.useMemo)(function() {
    return buildFooterValues(columns, adjustedData);
  }, [adjustedData, columns]);
  var cellProps = (0, import_react115.useMemo)(function() {
    return normalizeCellProps({
      background,
      border,
      pad,
      pin
    }, theme);
  }, [background, border, pad, pin, theme]);
  var groups = (0, import_react115.useMemo)(function() {
    return buildGroups(columns, adjustedData, groupBy, primaryProperty);
  }, [adjustedData, columns, groupBy, primaryProperty]);
  var _useGroupState = useGroupState(groups, groupBy), groupState = _useGroupState[0], setGroupState = _useGroupState[1];
  var _useState6 = (0, import_react115.useState)(step), limit = _useState6[0], setLimit = _useState6[1];
  var _useState7 = (0, import_react115.useState)(select || onSelect && [] || void 0), selected = _useState7[0], setSelected = _useState7[1];
  (0, import_react115.useEffect)(function() {
    return setSelected(select || onSelect && [] || void 0);
  }, [onSelect, select]);
  var _useState8 = (0, import_react115.useState)([]), rowExpand = _useState8[0], setRowExpand = _useState8[1];
  var _useState9 = (0, import_react115.useState)({}), widths = _useState9[0], setWidths = _useState9[1];
  var headerRef = (0, import_react115.useRef)();
  var bodyRef = (0, import_react115.useRef)();
  var footerRef = (0, import_react115.useRef)();
  var _useState10 = (0, import_react115.useState)(), headerHeight = _useState10[0], setHeaderHeight = _useState10[1];
  var _useState11 = (0, import_react115.useState)(), footerHeight = _useState11[0], setFooterHeight = _useState11[1];
  var _useState12 = (0, import_react115.useState)(0), scrollOffset = _useState12[0], setScrollOffset = _useState12[1];
  var _useState13 = (0, import_react115.useState)(), pinnedOffset = _useState13[0], setPinnedOffset = _useState13[1];
  var onHeaderWidths = (0, import_react115.useCallback)(function(columnWidths) {
    var hasSelectColumn = Boolean(select || onSelect);
    var pinnedProperties = columns.map(function(pinnedColumn) {
      return pinnedColumn.pin && pinnedColumn.property;
    }).filter(function(n3) {
      return n3;
    });
    if (hasSelectColumn && pinnedProperties.length > 0) {
      pinnedProperties = ["_grommetDataTableSelect"].concat(pinnedProperties);
    }
    var nextPinnedOffset = {};
    if (columnWidths !== []) {
      pinnedProperties.forEach(function(property, index) {
        var columnIndex = property === "_grommetDataTableSelect" ? 0 : columns.findIndex(function(column) {
          return column.property === property;
        }) + hasSelectColumn;
        if (columnWidths[columnIndex]) {
          nextPinnedOffset[property] = {
            width: columnWidths[columnIndex],
            left: index === 0 ? 0 : nextPinnedOffset[pinnedProperties[index - 1]].left + nextPinnedOffset[pinnedProperties[index - 1]].width
          };
        }
      });
      setPinnedOffset(nextPinnedOffset);
    }
  }, [columns, setPinnedOffset, select, onSelect]);
  useLayoutEffect(function() {
    var _bodyRef$current$pare;
    var nextScrollOffset = (((_bodyRef$current$pare = bodyRef.current.parentElement) == null ? void 0 : _bodyRef$current$pare.clientWidth) || 0) - bodyRef.current.clientWidth;
    if (nextScrollOffset !== scrollOffset)
      setScrollOffset(nextScrollOffset);
  });
  useLayoutEffect(function() {
    if (placeholder) {
      if (headerRef.current) {
        var nextHeaderHeight = headerRef.current.getBoundingClientRect().height;
        setHeaderHeight(nextHeaderHeight);
      } else
        setHeaderHeight(0);
      if (footerRef.current) {
        var nextFooterHeight = footerRef.current.getBoundingClientRect().height;
        setFooterHeight(nextFooterHeight);
      } else
        setFooterHeight(0);
    }
  }, [footerRef, headerRef, placeholder]);
  var onFiltering = function onFiltering2(property) {
    return setFiltering(property);
  };
  var onFilter = function onFilter2(property, value) {
    var nextFilters = _extends106({}, filters);
    nextFilters[property] = value;
    setFilters(nextFilters);
    if (onSearch)
      onSearch(nextFilters);
  };
  var onSort = function onSort2(property) {
    return function() {
      var external = sort ? sort.external : false;
      var direction;
      if (!sort || property !== sort.property)
        direction = "asc";
      else if (sort.direction === "asc")
        direction = "desc";
      else
        direction = "asc";
      var nextSort = {
        property,
        direction,
        external
      };
      setSort(nextSort);
      if (onView) {
        onView(_extends106({}, view, {
          sort: {
            property,
            direction
          }
        }));
      }
      if (onUpdate) {
        var opts = {
          count: limit,
          sort: nextSort
        };
        if (groups) {
          opts.expanded = Object.keys(groupState).filter(function(k3) {
            return groupState[k3].expanded;
          });
        }
        if (showProp)
          opts.show = showProp;
        onUpdate(opts);
      }
      if (onSortProp)
        onSortProp(nextSort);
    };
  };
  var onToggleGroup = function onToggleGroup2(groupValue) {
    return function() {
      var nextGroupState = _extends106({}, groupState);
      nextGroupState[groupValue] = _extends106({}, nextGroupState[groupValue], {
        expanded: !nextGroupState[groupValue].expanded
      });
      setGroupState(nextGroupState);
      var expandedKeys = Object.keys(nextGroupState).filter(function(k3) {
        return nextGroupState[k3].expanded;
      });
      if (onUpdate) {
        var opts = {
          expanded: expandedKeys,
          count: limit
        };
        if (sort != null && sort.property)
          opts.sort = sort;
        if (showProp)
          opts.show = showProp;
        onUpdate(opts);
      }
      if (groupBy.onExpand) {
        groupBy.onExpand(expandedKeys);
      }
    };
  };
  var onToggleGroups = function onToggleGroups2() {
    var expanded = Object.keys(groupState).filter(function(k3) {
      return !groupState[k3].expanded;
    }).length === 0;
    var nextGroupState = {};
    Object.keys(groupState).forEach(function(k3) {
      nextGroupState[k3] = _extends106({}, groupState[k3], {
        expanded: !expanded
      });
    });
    setGroupState(nextGroupState);
    var expandedKeys = Object.keys(nextGroupState).filter(function(k3) {
      return nextGroupState[k3].expanded;
    });
    if (onUpdate) {
      var opts = {
        expanded: expandedKeys,
        count: limit
      };
      if (showProp)
        opts.show = showProp;
      if (sort != null && sort.property)
        opts.sort = sort;
      onUpdate(opts);
    }
    if (groupBy.onExpand) {
      groupBy.onExpand(expandedKeys);
    }
  };
  var onResize = (0, import_react115.useCallback)(function(property, width) {
    if (widths[property] !== width) {
      var nextWidths = _extends106({}, widths);
      nextWidths[property] = width;
      setWidths(nextWidths);
    }
  }, [widths]);
  if (size && resizeable) {
    console.warn('DataTable cannot combine "size" and "resizeble".');
  }
  if (onUpdate && onMore) {
    console.warn('DataTable cannot combine "onUpdate" and "onMore".');
  }
  var _usePagination = usePagination(_extends106({
    data: adjustedData,
    page: normalizeShow(showProp, step),
    step
  }, paginate)), items = _usePagination[0], paginationProps = _usePagination[1];
  var paginationStep = paginationProps.step;
  var Container2 = paginate ? StyledContainer4 : import_react115.Fragment;
  var containterProps = paginate ? _extends106({}, theme.dataTable.container, {
    fill
  }) : void 0;
  var OverflowContainer = paginate ? Box : import_react115.Fragment;
  var overflowContainerProps = paginate ? {
    overflow: {
      horizontal: "auto"
    }
  } : void 0;
  var paginatedDataTableProps = paginate && (fill === true || fill === "horizontal") ? {
    style: {
      minWidth: "100%"
    }
  } : void 0;
  var placeholderContent = placeholder;
  if (placeholder && typeof placeholder === "string") {
    placeholderContent = import_react115.default.createElement(Box, {
      background: {
        color: "background-front",
        opacity: "strong"
      },
      align: "center",
      justify: "center",
      fill: "vertical"
    }, import_react115.default.createElement(Text, null, placeholder));
  }
  var bodyContent = groups ? import_react115.default.createElement(GroupedBody, {
    ref: bodyRef,
    cellProps: cellProps.body,
    columns,
    disabled,
    groupBy: typeof groupBy === "string" ? {
      property: groupBy
    } : groupBy,
    groups,
    groupState,
    pinnedOffset,
    primaryProperty,
    onMore: onUpdate ? function() {
      if (adjustedData.length === limit) {
        var opts = {
          expanded: Object.keys(groupState).filter(function(k3) {
            return groupState[k3].expanded;
          }),
          count: limit + paginationStep
        };
        if (sort != null && sort.property)
          opts.sort = sort;
        if (showProp)
          opts.show = showProp;
        onUpdate(opts);
        setLimit(function(prev) {
          return prev + paginationStep;
        });
      }
    } : onMore,
    onSelect: onSelect ? function(nextSelected, row) {
      setSelected(nextSelected);
      if (onSelect)
        onSelect(nextSelected, row);
    } : void 0,
    onToggle: onToggleGroup,
    onUpdate,
    replace,
    rowProps,
    selected,
    size,
    step: paginationStep,
    verticalAlign: typeof verticalAlign2 === "string" ? verticalAlign2 : verticalAlign2 == null ? void 0 : verticalAlign2.body
  }) : import_react115.default.createElement(Body, {
    ref: bodyRef,
    cellProps: cellProps.body,
    columns,
    data: !paginate ? adjustedData : items,
    disabled,
    onMore: onUpdate ? function() {
      if (adjustedData.length === limit) {
        var opts = {
          count: limit + paginationStep
        };
        if (sort != null && sort.property)
          opts.sort = sort;
        if (showProp)
          opts.show = showProp;
        onUpdate(opts);
        setLimit(function(prev) {
          return prev + paginationStep;
        });
      }
    } : onMore,
    replace,
    onClickRow,
    onSelect: onSelect ? function(nextSelected, row) {
      setSelected(nextSelected);
      if (onSelect)
        onSelect(nextSelected, row);
    } : void 0,
    pinnedCellProps: cellProps.pinned,
    pinnedOffset,
    primaryProperty,
    rowProps,
    selected,
    show: !paginate ? showProp : void 0,
    size,
    step: paginationStep,
    rowDetails,
    rowExpand,
    setRowExpand,
    verticalAlign: typeof verticalAlign2 === "string" ? verticalAlign2 : verticalAlign2 == null ? void 0 : verticalAlign2.body
  });
  return import_react115.default.createElement(Container2, containterProps, import_react115.default.createElement(OverflowContainer, overflowContainerProps, import_react115.default.createElement(StyledDataTable, _extends106({
    fillProp: !paginate ? fill : void 0
  }, paginatedDataTableProps, rest), import_react115.default.createElement(Header2, {
    ref: headerRef,
    cellProps: cellProps.header,
    columns,
    data: adjustedData,
    disabled,
    fill,
    filtering,
    filters,
    groupBy,
    groups,
    groupState,
    pin: pin === true || pin === "header",
    pinnedOffset,
    selected,
    size,
    sort,
    widths,
    onFiltering,
    onFilter,
    onResize: resizeable ? onResize : void 0,
    onSelect: onSelect ? function(nextSelected) {
      setSelected(nextSelected);
      if (onSelect)
        onSelect(nextSelected);
    } : void 0,
    onSort: sortable || sortProp || onSortProp ? onSort : void 0,
    onToggle: onToggleGroups,
    onWidths: onHeaderWidths,
    primaryProperty,
    scrollOffset,
    rowDetails,
    verticalAlign: typeof verticalAlign2 === "string" ? verticalAlign2 : verticalAlign2 == null ? void 0 : verticalAlign2.header
  }), placeholder && (!items || items.length === 0) ? import_react115.default.createElement(PlaceholderBody, {
    ref: bodyRef,
    columns,
    onSelect
  }, placeholderContent) : bodyContent, showFooter && import_react115.default.createElement(Footer3, {
    ref: footerRef,
    cellProps: cellProps.footer,
    columns,
    fill,
    footerValues,
    groups,
    onSelect,
    pin: pin === true || pin === "footer",
    pinnedOffset,
    primaryProperty,
    scrollOffset,
    selected,
    size,
    verticalAlign: typeof verticalAlign2 === "string" ? verticalAlign2 : verticalAlign2 == null ? void 0 : verticalAlign2.footer
  }), placeholder && items && items.length > 0 && import_react115.default.createElement(StyledPlaceholder2, {
    top: headerHeight,
    bottom: footerHeight
  }, placeholderContent))), paginate && adjustedData.length > paginationStep && items && items.length ? import_react115.default.createElement(Pagination, _extends106({
    alignSelf: "end"
  }, paginationProps)) : null);
};
DataTable.propTypes = DataTablePropTypes;

// node_modules/grommet/es6/components/DataTableColumns/DataTableColumns.js
var import_react120 = __toESM(require_react());
var import_Search2 = __toESM(require_Search());
var import_Splits = __toESM(require_Splits());

// node_modules/grommet/es6/components/List/List.js
var import_react116 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/List/propTypes.js
var import_prop_types51 = __toESM(require_prop_types());
function _extends107() {
  _extends107 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends107.apply(this, arguments);
}
var sizes3 = ["none", "xxsmall", "xsmall", "small", "medium", "large", "xlarge"];
var sides2 = ["horizontal", "vertical", "top", "bottom", "left", "right", "start", "end"];
var padShapeSides2 = {};
sides2.forEach(function(side) {
  padShapeSides2[side] = import_prop_types51.default.oneOf(sizes3);
});
var borderTypes2 = [import_prop_types51.default.bool, import_prop_types51.default.oneOf(sides2), import_prop_types51.default.shape({
  color: import_prop_types51.default.oneOfType([import_prop_types51.default.string, import_prop_types51.default.shape({
    dark: import_prop_types51.default.string,
    light: import_prop_types51.default.string
  })]),
  side: import_prop_types51.default.oneOf(sides2),
  size: import_prop_types51.default.oneOfType([import_prop_types51.default.oneOf(sizes3), import_prop_types51.default.string])
})];
var PropType50 = {};
if (true) {
  PropType50 = _extends107({}, genericProps, {
    action: import_prop_types51.default.func,
    as: import_prop_types51.default.string,
    background: import_prop_types51.default.oneOfType([import_prop_types51.default.string, import_prop_types51.default.arrayOf(import_prop_types51.default.string)]),
    border: import_prop_types51.default.oneOfType(borderTypes2),
    data: import_prop_types51.default.arrayOf(import_prop_types51.default.oneOfType([import_prop_types51.default.string, import_prop_types51.default.shape({})])),
    children: import_prop_types51.default.func,
    defaultItemProps: import_prop_types51.default.shape(BoxPropTypes),
    disabled: import_prop_types51.default.arrayOf(import_prop_types51.default.string),
    itemKey: import_prop_types51.default.oneOfType([import_prop_types51.default.string, import_prop_types51.default.func]),
    itemProps: import_prop_types51.default.shape({}),
    onActive: import_prop_types51.default.func,
    onClickItem: import_prop_types51.default.func,
    onMore: import_prop_types51.default.func,
    onOrder: import_prop_types51.default.func,
    pad: import_prop_types51.default.oneOfType([padPropType]),
    paginate: import_prop_types51.default.oneOfType([import_prop_types51.default.bool, import_prop_types51.default.object]),
    pinned: import_prop_types51.default.arrayOf(import_prop_types51.default.string),
    primaryKey: import_prop_types51.default.oneOfType([import_prop_types51.default.string, import_prop_types51.default.func]),
    secondaryKey: import_prop_types51.default.oneOfType([import_prop_types51.default.string, import_prop_types51.default.func]),
    show: import_prop_types51.default.oneOfType([import_prop_types51.default.number, import_prop_types51.default.shape({
      page: import_prop_types51.default.number
    })]),
    step: import_prop_types51.default.number
  });
}
var ListPropTypes = PropType50;

// node_modules/grommet/es6/components/List/List.js
var _excluded67 = ["a11yTitle", "aria-label", "action", "as", "background", "border", "children", "data", "defaultItemProps", "disabled", "focus", "itemKey", "itemProps", "onActive", "onClickItem", "onKeyDown", "onMore", "onOrder", "pad", "paginate", "pinned", "primaryKey", "secondaryKey", "show", "step"];
function _extends108() {
  _extends108 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends108.apply(this, arguments);
}
function _objectWithoutPropertiesLoose64(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var emptyData3 = [];
var StyledList = styled_components_browser_esm_default.ul.withConfig({
  displayName: "List__StyledList",
  componentId: "sc-130gdqg-0"
})(["list-style:none;", " padding:0;", " &:focus{", "}", "}", "}"], function(props) {
  return !props.margin && "margin: 0;";
}, genericStyles, function(props) {
  return props.tabIndex >= 0 && focusStyle({
    forceOutline: true,
    skipSvgChildren: true
  });
}, function(props) {
  return props.itemFocus && focusStyle({
    forceOutline: true,
    skipSvgChildren: true
  });
}, function(props) {
  return props.theme.list && props.theme.list.extend;
});
var StyledItem = styled_components_browser_esm_default(Box).withConfig({
  displayName: "List__StyledItem",
  componentId: "sc-130gdqg-1"
})(["", " ", " &:focus{", "}", " &:hover{", "}", ""], function(props) {
  return props.onClick && !props.isDisabled && "cursor: pointer;";
}, function(props) {
  return props.draggable && !props.isDisabled && "cursor: move;";
}, unfocusStyle({
  forceOutline: true,
  skipSvgChildren: true
}), function(props) {
  var _props$theme$list, _props$theme$list$ite;
  var disabledStyle6;
  if (props.isDisabled && (_props$theme$list = props.theme.list) != null && (_props$theme$list$ite = _props$theme$list.item) != null && _props$theme$list$ite.disabled) {
    var _props$theme$list$ite2 = props.theme.list.item.disabled, color = _props$theme$list$ite2.color, cursor = _props$theme$list$ite2.cursor;
    disabledStyle6 = {
      color: normalizeColor(color, props.theme),
      cursor
    };
  }
  return disabledStyle6;
}, function(props) {
  return props.isDisabled && "background-color: unset;";
}, function(props) {
  return props.theme.list && props.theme.list.item && props.theme.list.item.extend;
});
var StyledContainer5 = styled_components_browser_esm_default(Box).withConfig({
  displayName: "List__StyledContainer",
  componentId: "sc-130gdqg-2"
})(["", ";"], function(props) {
  return props.theme.list && props.theme.list.container && props.theme.list.container.extend;
});
var getValue = function getValue2(item, index, key) {
  if (typeof key === "function")
    return key(item, index);
  if (typeof item === "string")
    return item;
  if (key !== void 0)
    return item == null ? void 0 : item[key];
  return void 0;
};
var reorder = function reorder2(array, pinnedArray, source, target) {
  var result = array.slice(0);
  var tmp = result[source];
  if (source < target)
    for (var i3 = source; i3 < target; i3 += 1)
      result[i3] = result[i3 + 1];
  else
    for (var _i = source; _i > target; _i -= 1)
      result[_i] = result[_i - 1];
  result[target] = tmp;
  if (pinnedArray.data.length > 0) {
    pinnedArray.data.forEach(function(pinnedItem, index) {
      result.splice(pinnedArray.indexes[index], 0, pinnedItem);
    });
  }
  return result;
};
var getItemId = function getItemId2(item, index, itemKey, primaryKey) {
  var _getValue;
  if (primaryKey)
    return getValue(item, index, primaryKey);
  if (itemKey)
    return getValue(item, index, itemKey);
  return (_getValue = getValue(item, index)) != null ? _getValue : index;
};
var List = import_react116.default.forwardRef(function(_ref, ref) {
  var a11yTitle = _ref.a11yTitle, ariaLabel = _ref["aria-label"], action = _ref.action, as = _ref.as, background = _ref.background, border = _ref.border, children2 = _ref.children, dataProp = _ref.data, defaultItemProps = _ref.defaultItemProps, disabledItems = _ref.disabled, focus = _ref.focus, defaultItemKey = _ref.itemKey, itemProps = _ref.itemProps, onActive = _ref.onActive, onClickItem = _ref.onClickItem, onKeyDown = _ref.onKeyDown, onMore = _ref.onMore, onOrder = _ref.onOrder, pad = _ref.pad, paginate = _ref.paginate, _ref$pinned = _ref.pinned, pinned = _ref$pinned === void 0 ? [] : _ref$pinned, primaryKey = _ref.primaryKey, secondaryKey = _ref.secondaryKey, showProp = _ref.show, _ref$step = _ref.step, step = _ref$step === void 0 ? paginate ? 50 : void 0 : _ref$step, rest = _objectWithoutPropertiesLoose64(_ref, _excluded67);
  var listRef = useForwardedRef(ref);
  var theme = (0, import_react116.useContext)(Me);
  var _useContext = (0, import_react116.useContext)(DataContext), contextData = _useContext.data;
  var data = dataProp || contextData || emptyData3;
  var itemKey = defaultItemKey || primaryKey || null;
  var _useState = (0, import_react116.useState)(), active = _useState[0], setActive = _useState[1];
  var _useState2 = (0, import_react116.useState)(), lastActive = _useState2[0], setLastActive = _useState2[1];
  var updateActive = function updateActive2(nextActive) {
    setActive(nextActive);
    if (onActive && onClickItem && nextActive !== active)
      onActive(nextActive);
  };
  var _useState3 = (0, import_react116.useState)(), itemFocus = _useState3[0], setItemFocus = _useState3[1];
  var _useState4 = (0, import_react116.useState)(), dragging = _useState4[0], setDragging = _useState4[1];
  var _useState5 = (0, import_react116.useState)(), orderingData = _useState5[0], setOrderingData = _useState5[1];
  var _useMemo = (0, import_react116.useMemo)(function() {
    var orderable = [];
    var pinnedData = [];
    var pinnedIndexes = [];
    var currentData = orderingData || data;
    if (pinned.length === 0)
      return [currentData, {
        data: pinnedData,
        indexes: pinnedIndexes
      }];
    currentData.forEach(function(item, index) {
      var key = getValue(item, index, itemKey);
      if (pinned.includes(key)) {
        pinnedData.push(item);
        pinnedIndexes.push(index);
      } else {
        orderable.push(item);
      }
    });
    return [orderable, {
      data: pinnedData,
      indexes: pinnedIndexes
    }];
  }, [data, orderingData, itemKey, pinned]), orderableData = _useMemo[0], pinnedInfo = _useMemo[1];
  var _usePagination = usePagination(_extends108({
    data,
    page: normalizeShow(showProp, step),
    step
  }, paginate)), items = _usePagination[0], paginationProps = _usePagination[1];
  var Container2 = paginate ? StyledContainer5 : import_react116.Fragment;
  var containterProps = paginate ? _extends108({}, theme.list.container) : void 0;
  var draggingRef = (0, import_react116.useRef)();
  var sendAnalytics = useAnalytics();
  var ariaProps = {
    role: onClickItem || onOrder ? "listbox" : "list"
  };
  if (active >= 0) {
    var activeId;
    if (onOrder) {
      var buttonId = active % 2 ? "MoveDown" : "MoveUp";
      var itemIndex = Math.trunc(active / 2);
      activeId = "" + getItemId(orderableData[itemIndex], itemIndex, itemKey, primaryKey) + buttonId;
    } else if (onClickItem) {
      activeId = getItemId(orderableData[active], active, itemKey, primaryKey);
    }
    ariaProps["aria-activedescendant"] = activeId;
  }
  return import_react116.default.createElement(Container2, containterProps, import_react116.default.createElement(Keyboard, {
    onEnter: (onClickItem || onOrder) && active >= 0 ? function(event) {
      if (onOrder) {
        var index = Math.trunc(active / 2);
        if (active % 2) {
          onOrder(reorder(orderableData, pinnedInfo, index, index + 1));
          updateActive(Math.min(active + 2, orderableData.length * 2 - 2));
        } else {
          onOrder(reorder(orderableData, pinnedInfo, index, index - 1));
          updateActive(Math.max(active - 2, 1));
        }
      } else if (disabledItems != null && disabledItems.includes(getValue(data[active], active, itemKey))) {
        event.preventDefault();
      } else if (onClickItem) {
        event.persist();
        var adjustedEvent = event;
        adjustedEvent.item = data[active];
        adjustedEvent.index = active;
        onClickItem(adjustedEvent);
        sendAnalytics({
          type: "listItemClick",
          element: listRef.current,
          event: adjustedEvent,
          item: data[active],
          index: active
        });
      }
    } : void 0,
    onUp: (onClickItem || onOrder) && active ? function() {
      var min = onOrder ? 1 : 0;
      updateActive(Math.max(active - 1, min));
    } : void 0,
    onDown: (onClickItem || onOrder) && orderableData && orderableData.length ? function() {
      var min = onOrder ? 1 : 0;
      var max = onOrder ? orderableData.length * 2 - 2 : data.length - 1;
      updateActive(active >= min ? Math.min(active + 1, max) : min);
    } : void 0,
    onKeyDown
  }, import_react116.default.createElement(StyledList, _extends108({
    "aria-label": ariaLabel || a11yTitle,
    ref: listRef,
    as: as || "ul",
    itemFocus,
    tabIndex: onClickItem || onOrder ? 0 : void 0,
    onFocus: function onFocus() {
      return (
        // Fixes zero-th index showing undefined.
        // Checks for active variable to stop bug where activeStyle
        // gets applied to lastActive instead of the item the user
        // is currently clicking on
        !active && active !== 0 ? updateActive(lastActive) : updateActive(active)
      );
    },
    onBlur: function onBlur() {
      setLastActive(active);
      updateActive(void 0);
    }
  }, ariaProps, rest), import_react116.default.createElement(InfiniteScroll, {
    items: !paginate ? orderingData || data : items,
    onMore,
    show: !paginate ? showProp : void 0,
    step,
    renderMarker: function renderMarker(marker) {
      return import_react116.default.createElement(Box, {
        as: "li",
        flex: false
      }, marker);
    }
  }, function(item, index) {
    var content;
    var boxProps = {};
    if (children2) {
      content = children2(item, index, onClickItem ? {
        active: active === index
      } : void 0);
    } else if (primaryKey) {
      var primary = getValue(item, index, primaryKey);
      content = typeof primary === "string" || typeof primary === "number" ? import_react116.default.createElement(Text, {
        key: "p",
        weight: "bold"
      }, primary) : primary;
      if (secondaryKey) {
        var secondary = getValue(item, index, secondaryKey);
        content = [content, typeof secondary === "string" || typeof secondary === "number" ? import_react116.default.createElement(Text, {
          key: "s"
        }, getValue(item, index, secondaryKey)) : secondary];
        boxProps = {
          direction: "row",
          align: "center",
          justify: "between",
          gap: "medium"
        };
      }
    } else if (typeof item === "object") {
      content = item[Object.keys(item)[0]];
    } else {
      content = item;
    }
    var key = getValue(item, index, itemKey) || index;
    var orderableIndex = orderableData.findIndex(function(ordItem, ordIndex) {
      return getValue(ordItem, ordIndex, itemKey) === key;
    });
    var isDisabled;
    if (disabledItems) {
      if (typeof item === "object" && !itemKey) {
        console.error(
          // eslint-disable-next-line max-len
          "Warning: Missing prop itemKey. Prop disabled requires itemKey to be specified when data is of type 'object'."
        );
      }
      isDisabled = disabledItems == null ? void 0 : disabledItems.includes(key);
    }
    var isPinned;
    if (pinned.length > 0) {
      if (typeof item === "object" && !itemKey) {
        console.error(
          // eslint-disable-next-line max-len
          "Warning: Missing prop itemKey. Prop pin requires itemKey to be specified when data is of type 'object'."
        );
      }
      isPinned = pinned == null ? void 0 : pinned.includes(key);
    }
    if (action) {
      content = [import_react116.default.createElement(Box, {
        align: "start",
        key: "actionContainer" + index
      }, content), action(item, index)];
      boxProps = {
        direction: "row",
        align: secondaryKey ? "start" : "center",
        justify: "between",
        gap: "medium"
      };
    }
    var adjustedBackground = background || theme.list.item.background;
    if (!onOrder && active === index || dragging === index) {
      adjustedBackground = theme.global.hover.background;
    } else if (Array.isArray(adjustedBackground)) {
      adjustedBackground = adjustedBackground[index % adjustedBackground.length];
    } else if (isPinned) {
      adjustedBackground = theme.list.item.pinned.background;
    }
    var adjustedBorder = border !== void 0 ? border : theme.list.item.border;
    if (adjustedBorder === "horizontal" && index) {
      adjustedBorder = "bottom";
    }
    var clickProps;
    if (onClickItem && !onOrder) {
      clickProps = {
        role: "option",
        tabIndex: -1,
        active: active === index,
        onClick: function onClick(event) {
          if (isDisabled) {
            event.preventDefault();
          } else {
            event.persist();
            var adjustedEvent = event;
            adjustedEvent.item = item;
            adjustedEvent.index = index;
            onClickItem(adjustedEvent);
            sendAnalytics({
              type: "listItemClick",
              element: listRef.current,
              event: adjustedEvent,
              item,
              index
            });
          }
        },
        onMouseOver: function onMouseOver() {
          return updateActive(index);
        },
        onMouseOut: function onMouseOut() {
          return updateActive(void 0);
        },
        onFocus: function onFocus() {
          updateActive(index);
          setItemFocus(true);
        },
        onBlur: function onBlur() {
          updateActive(void 0);
          setItemFocus(false);
        }
      };
    }
    var orderProps;
    var orderControls;
    if (onOrder && !isPinned) {
      orderProps = {
        draggable: true,
        onDragStart: function onDragStart(event) {
          event.dataTransfer.setData("text/plain", "");
          event.dataTransfer.effectAllowed = "move";
          setDragging(orderableIndex);
          updateActive(void 0);
        },
        onDragEnd: function onDragEnd() {
          setDragging(void 0);
          setOrderingData(void 0);
        },
        onDragOver: function onDragOver(event) {
          if (dragging !== void 0) {
            event.preventDefault();
            if (dragging !== orderableIndex) {
              event.dataTransfer.dropEffect = "move";
              setOrderingData(reorder(orderableData, pinnedInfo, dragging, orderableIndex));
              setDragging(orderableIndex);
            }
          }
        },
        onDrop: function onDrop() {
          if (orderingData) {
            onOrder(orderingData);
          }
        },
        ref: dragging === orderableIndex ? draggingRef : void 0
      };
      var Up = theme.list.icons.up;
      var Down = theme.list.icons.down;
      orderControls = !isPinned && import_react116.default.createElement(Box, {
        direction: "row",
        align: "center",
        justify: "end"
      }, import_react116.default.createElement(Button, {
        id: key + "MoveUp",
        a11yTitle: orderableIndex + 1 + " " + key + " move up",
        icon: import_react116.default.createElement(Up, null),
        hoverIndicator: true,
        focusIndicator: false,
        disabled: !orderableIndex,
        active: active === orderableIndex * 2,
        onClick: function onClick(event) {
          event.stopPropagation();
          onOrder(reorder(orderableData, pinnedInfo, orderableIndex, orderableIndex - 1));
        },
        tabIndex: -1,
        onMouseOver: function onMouseOver() {
          return updateActive(orderableIndex * 2);
        },
        onMouseOut: function onMouseOut() {
          return updateActive(void 0);
        },
        onFocus: function onFocus() {
          updateActive(orderableIndex * 2);
          setItemFocus(true);
        },
        onBlur: function onBlur() {
          updateActive(void 0);
          setItemFocus(false);
        }
      }), import_react116.default.createElement(Button, {
        id: key + "MoveDown",
        a11yTitle: orderableIndex + 1 + " " + key + " move down",
        icon: import_react116.default.createElement(Down, null),
        hoverIndicator: true,
        focusIndicator: false,
        disabled: orderableIndex >= orderableData.length - 1,
        active: active === orderableIndex * 2 + 1,
        onClick: function onClick(event) {
          event.stopPropagation();
          onOrder(reorder(orderableData, pinnedInfo, orderableIndex, orderableIndex + 1));
        },
        tabIndex: -1,
        onMouseOver: function onMouseOver() {
          return updateActive(orderableIndex * 2 + 1);
        },
        onMouseOut: function onMouseOut() {
          return updateActive(void 0);
        },
        onFocus: function onFocus() {
          updateActive(orderableIndex * 2 + 1);
          setItemFocus(true);
        },
        onBlur: function onBlur() {
          updateActive(void 0);
          setItemFocus(false);
        }
      }));
      content = import_react116.default.createElement(Box, _extends108({
        flex: true
      }, boxProps), content);
      boxProps = {
        direction: "row",
        align: defaultItemProps && defaultItemProps.align || "center",
        gap: "medium"
      };
    }
    var itemAriaProps;
    if (isDisabled) {
      itemAriaProps = {
        "aria-disabled": true
      };
      if (onClickItem) {
        itemAriaProps = _extends108({}, itemAriaProps, {
          "aria-selected": false
        });
      }
    }
    var displayPinned;
    if (isPinned) {
      var Pin = theme.list.icons.pin;
      var pinSize = theme.list.item.pinned.icon.size;
      var pinPad = theme.list.item.pinned.icon.pad;
      boxProps = {
        direction: "row",
        align: defaultItemProps && defaultItemProps.align || "center",
        gap: "medium"
      };
      displayPinned = import_react116.default.createElement(Box, {
        direction: "row",
        align: "center",
        justify: "end",
        pad: pinPad
      }, import_react116.default.createElement(Pin, {
        size: pinSize
      }));
      content = import_react116.default.createElement(Box, {
        flex: true
      }, content);
    }
    if (itemProps && itemProps[index]) {
      boxProps = _extends108({}, boxProps, itemProps[index]);
    }
    return import_react116.default.createElement(StyledItem, _extends108({
      key,
      tag: "li",
      background: adjustedBackground,
      border: adjustedBorder,
      isDisabled,
      flex: false,
      pad: pad || theme.list.item.pad
    }, defaultItemProps, boxProps, clickProps, orderProps, itemAriaProps), onOrder && import_react116.default.createElement(Text, null, index + 1), content, displayPinned, orderControls);
  }))), paginate && data.length > step && items && items.length ? import_react116.default.createElement(Pagination, _extends108({
    alignSelf: "end"
  }, paginationProps)) : null);
});
List.displayName = "List";
List.propTypes = ListPropTypes;

// node_modules/grommet/es6/components/Tab/Tab.js
var import_react118 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/Tabs/TabsContext.js
var import_react117 = __toESM(require_react());
var TabsContext = import_react117.default.createContext({});

// node_modules/grommet/es6/components/Tab/StyledTab.js
init_styled_components_browser_esm();
var tabHoverStyle = Ae(["&:hover{", " ", " ", ";}&:focus{z-index:1;}"], function(props) {
  return props.theme.tab.hover.background && Ae(["background:", ";"], normalizeColor(props.theme.tab.hover.background, props.theme));
}, function(props) {
  return props.theme.tab.hover.color && Ae(["color:", ";"], normalizeColor(props.theme.tab.hover.color, props.theme));
}, function(props) {
  return props.theme.tab.hover.extend;
});
var StyledTab = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledTab",
  componentId: "sc-1nnwnsb-0"
})(["white-space:nowrap;", " ", " ", " ", ""], genericStyles, function(props) {
  return !props.plain && !props.disabled && props.theme.tab.hover && tabHoverStyle;
}, function(props) {
  return props.disabled && props.theme.tab.disabled;
}, function(props) {
  return props.theme.tab.extend;
});
StyledTab.defaultProps = {};
Object.setPrototypeOf(StyledTab.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/Tab/propTypes.js
var import_prop_types52 = __toESM(require_prop_types());
var PropType51 = {};
if (true) {
  PropType51 = {
    disabled: import_prop_types52.default.bool,
    icon: import_prop_types52.default.element,
    plain: import_prop_types52.default.bool,
    reverse: import_prop_types52.default.bool,
    title: import_prop_types52.default.node
  };
}
var TabPropTypes = PropType51;

// node_modules/grommet/es6/components/Tab/Tab.js
var _excluded68 = ["active", "disabled", "children", "icon", "plain", "title", "onBlur", "onFocus", "onMouseOver", "onMouseOut", "reverse", "onClick"];
function _extends109() {
  _extends109 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends109.apply(this, arguments);
}
function _objectWithoutPropertiesLoose65(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var Tab = (0, import_react118.forwardRef)(function(_ref, ref) {
  var activeProp = _ref.active, disabled = _ref.disabled, children2 = _ref.children, icon = _ref.icon, plain = _ref.plain, title = _ref.title, _onBlur = _ref.onBlur, _onFocus = _ref.onFocus, onMouseOver = _ref.onMouseOver, onMouseOut = _ref.onMouseOut, reverse = _ref.reverse, onClick = _ref.onClick, rest = _objectWithoutPropertiesLoose65(_ref, _excluded68);
  var _useContext = (0, import_react118.useContext)(TabsContext), active = _useContext.active, activeIndex = _useContext.activeIndex, index = _useContext.index, tabsContextRef = _useContext.ref, onActivate = _useContext.onActivate, setActiveContent = _useContext.setActiveContent, setActiveTitle = _useContext.setActiveTitle, setFocusIndex = _useContext.setFocusIndex;
  var theme = (0, import_react118.useContext)(Me) || defaultProps2.theme;
  var _useState = (0, import_react118.useState)(void 0), over = _useState[0], setOver = _useState[1];
  var normalizedTitle = title;
  var tabStyles = {};
  var tabRef = useForwardedRef(ref);
  useLayoutEffect(function() {
    if (tabRef.current && tabsContextRef) {
      tabsContextRef.current = tabRef.current;
    }
  });
  (0, import_react118.useEffect)(function() {
    if (active) {
      setActiveContent(children2);
      var activeTitle = typeof title === "string" ? title : activeIndex + 1;
      setActiveTitle(activeTitle);
    }
  }, [active, activeIndex, children2, setActiveContent, setActiveTitle, title]);
  var onMouseOverTab = function onMouseOverTab2(event) {
    setOver(true);
    if (onMouseOver) {
      onMouseOver(event);
    }
  };
  var onMouseOutTab = function onMouseOutTab2(event) {
    setOver(void 0);
    if (onMouseOut) {
      onMouseOut(event);
    }
  };
  if (!plain) {
    if (typeof title !== "string") {
      normalizedTitle = title;
    } else if (active) {
      normalizedTitle = import_react118.default.createElement(Text, theme.tab.active, title);
    } else if (disabled && theme.tab.disabled) {
      normalizedTitle = import_react118.default.createElement(Text, theme.tab.disabled, title);
    } else {
      normalizedTitle = import_react118.default.createElement(Text, {
        color: over ? theme.tab.hover.color : theme.tab.color
      }, title);
    }
  }
  var onClickTab = function onClickTab2(event) {
    if (event) {
      event.preventDefault();
    }
    onActivate();
    if (onClick) {
      onClick(event);
    }
  };
  if (active && disabled) {
    console.warn(
      // eslint-disable-next-line max-len
      "Warning: Tab props 'active' and 'disabled' have both been set to TRUE on the same Tab resulting in an interesting Tab state. Is this your intent?"
    );
  }
  if (!plain) {
    if (typeof title !== "string") {
      normalizedTitle = title;
    } else if (active) {
      normalizedTitle = import_react118.default.createElement(Text, theme.tab.active, title);
    } else if (disabled && theme.tab.disabled) {
      normalizedTitle = import_react118.default.createElement(Text, theme.tab.disabled, title);
    } else {
      normalizedTitle = import_react118.default.createElement(Text, {
        color: over ? theme.tab.hover.color : theme.tab.color
      }, title);
    }
    if (theme.tab.border) {
      var borderColor = theme.tab.border.color || theme.global.control.border.color;
      if (active) {
        borderColor = theme.tab.border.active.color || borderColor;
      } else if (disabled && theme.tab.border.disabled) {
        borderColor = theme.tab.border.disabled.color || borderColor;
      } else if (over) {
        borderColor = theme.tab.border.hover.color || borderColor;
      }
      borderColor = normalizeColor(borderColor, theme);
      tabStyles.border = {
        side: theme.tab.border.side,
        size: theme.tab.border.size,
        color: borderColor
      };
    }
    tabStyles.background = active ? theme.tab.active.background || theme.tab.background : theme.tab.background;
    tabStyles.pad = theme.tab.pad;
    tabStyles.margin = theme.tab.margin;
  }
  var renderIcon = function renderIcon2(iconProp) {
    if (active) {
      return import_react118.default.cloneElement(iconProp, _extends109({}, theme.tab.active));
    }
    if (disabled) {
      return import_react118.default.cloneElement(iconProp, _extends109({}, theme.tab.disabled));
    }
    return import_react118.default.cloneElement(iconProp, {
      color: over ? theme.tab.hover.color : theme.tab.color
    });
  };
  var normalizedIcon;
  if (icon) {
    normalizedIcon = renderIcon(icon);
  }
  var first = reverse ? normalizedTitle : normalizedIcon;
  var second = reverse ? normalizedIcon : normalizedTitle;
  var withIconStyles;
  if (first && second) {
    withIconStyles = {
      direction: "row",
      align: "center",
      justify: "center",
      gap: "small"
    };
  }
  return import_react118.default.createElement(Button, _extends109({
    ref: tabRef,
    plain: true,
    role: "tab",
    "aria-selected": active,
    "aria-expanded": active,
    disabled
  }, rest, {
    onClick: onClickTab,
    onMouseOver: onMouseOverTab,
    onMouseOut: onMouseOutTab,
    onFocus: function onFocus() {
      if (_onFocus)
        _onFocus();
      setFocusIndex(index);
    },
    onBlur: function onBlur() {
      if (_onBlur)
        _onBlur();
      setFocusIndex(-1);
    }
  }), import_react118.default.createElement(StyledTab, _extends109({
    as: Box,
    disabled,
    plain
  }, withIconStyles, tabStyles), first, second));
});
Tab.displayName = "Tab";
Tab.defaultProps = {};
Object.setPrototypeOf(Tab.defaultProps, defaultProps2);
Tab.propTypes = TabPropTypes;

// node_modules/grommet/es6/components/Tabs/Tabs.js
var import_react119 = __toESM(require_react());
var import_Previous2 = __toESM(require_Previous());
var import_Next2 = __toESM(require_Next());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/Tabs/StyledTabs.js
init_styled_components_browser_esm();
var _FLEX_MAP2;
var StyledTabsHeader = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledTabs__StyledTabsHeader",
  componentId: "sc-a4fwxl-0"
})(["", ";"], function(props) {
  return props.theme.tabs.header.extend;
});
StyledTabsHeader.defaultProps = {};
Object.setPrototypeOf(StyledTabsHeader.defaultProps, defaultProps2);
var FLEX_MAP2 = (_FLEX_MAP2 = {}, _FLEX_MAP2[true] = "1 1", _FLEX_MAP2[false] = "0 0", _FLEX_MAP2.grow = "1 0", _FLEX_MAP2.shrink = "0 1", _FLEX_MAP2);
var flexStyle2 = Ae(["flex:", ";"], function(props) {
  return "" + FLEX_MAP2[props.flex] + (props.flex !== true ? " auto" : "");
});
var StyledTabPanel = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledTabs__StyledTabPanel",
  componentId: "sc-a4fwxl-1"
})(["min-height:0;", " ", ";"], function(props) {
  return props.flex && flexStyle2;
}, function(props) {
  return props.theme.tabs.panel.extend;
});
StyledTabPanel.defaultProps = {};
Object.setPrototypeOf(StyledTabPanel.defaultProps, defaultProps2);
var StyledTabs = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledTabs",
  componentId: "sc-a4fwxl-2"
})(["", " ", ";"], genericStyles, function(props) {
  return props.theme.tabs.extend;
});
StyledTabs.defaultProps = {};
Object.setPrototypeOf(StyledTabs.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/Tabs/propTypes.js
var import_prop_types53 = __toESM(require_prop_types());
function _extends110() {
  _extends110 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends110.apply(this, arguments);
}
var PropType52 = {};
if (true) {
  PropType52 = _extends110({}, genericProps, {
    activeIndex: import_prop_types53.default.number,
    alignControls: import_prop_types53.default.oneOf(["start", "center", "end", "stretch"]),
    children: import_prop_types53.default.node.isRequired,
    flex: import_prop_types53.default.oneOfType([import_prop_types53.default.oneOf(["grow", "shrink"]), import_prop_types53.default.bool]),
    justify: import_prop_types53.default.oneOf(["start", "center", "end"]),
    messages: import_prop_types53.default.shape({
      tabContents: import_prop_types53.default.string
    }),
    onActive: import_prop_types53.default.func
  });
}
var TabsPropTypes = PropType52;

// node_modules/grommet/es6/components/Tabs/Tabs.js
var _excluded69 = ["alignControls", "children", "flex", "justify", "messages", "responsive"];
function _extends111() {
  _extends111 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends111.apply(this, arguments);
}
function _objectWithoutPropertiesLoose66(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var Tabs = (0, import_react119.forwardRef)(function(_ref, ref) {
  var _theme$tabs$header;
  var alignControls = _ref.alignControls, children2 = _ref.children, flex = _ref.flex, _ref$justify = _ref.justify, justify = _ref$justify === void 0 ? "center" : _ref$justify, messages = _ref.messages, _ref$responsive = _ref.responsive, responsive = _ref$responsive === void 0 ? true : _ref$responsive, rest = _objectWithoutPropertiesLoose66(_ref, _excluded69);
  var theme = (0, import_react119.useContext)(Me) || defaultProps2.theme;
  var _useContext = (0, import_react119.useContext)(MessageContext), format3 = _useContext.format;
  var propsActiveIndex = rest.activeIndex, onActive = rest.onActive;
  var _useState = (0, import_react119.useState)(rest.activeIndex || 0), activeIndex = _useState[0], setActiveIndex = _useState[1];
  var _useState2 = (0, import_react119.useState)(), activeContent = _useState2[0], setActiveContent = _useState2[1];
  var _useState3 = (0, import_react119.useState)(), activeTitle = _useState3[0], setActiveTitle = _useState3[1];
  var _useState4 = (0, import_react119.useState)(), disableLeftArrow = _useState4[0], setDisableLeftArrow = _useState4[1];
  var _useState5 = (0, import_react119.useState)(), disableRightArrow = _useState5[0], setDisableRightArrow = _useState5[1];
  var _useState6 = (0, import_react119.useState)(), overflow = _useState6[0], setOverflow = _useState6[1];
  var _useState7 = (0, import_react119.useState)(-1), focusIndex = _useState7[0], setFocusIndex = _useState7[1];
  var headerRef = (0, import_react119.useRef)();
  var size = (0, import_react119.useContext)(ResponsiveContext);
  var sendAnalytics = useAnalytics();
  if (activeIndex !== propsActiveIndex && propsActiveIndex !== void 0) {
    setActiveIndex(propsActiveIndex);
  }
  var isSafari = typeof window !== "undefined" ? /^((?!chrome|android).)*safari/i.test(window.navigator.userAgent) : true;
  delete rest.activeIndex;
  delete rest.onActive;
  var tabRefs = (0, import_react119.useMemo)(function() {
    return import_react119.default.Children.map(children2, function() {
      return import_react119.default.createRef();
    });
  }, [children2]);
  var isVisible = (0, import_react119.useCallback)(function(index) {
    if (tabRefs[index].current) {
      var _headerRef$current;
      var tabRect = tabRefs[index].current.getBoundingClientRect();
      var headerRect = (_headerRef$current = headerRef.current) == null ? void 0 : _headerRef$current.getBoundingClientRect();
      if (tabRect && headerRect) {
        return tabRect.left >= headerRect.left - 1 && tabRect.right <= headerRect.right + 1;
      }
    }
    return void 0;
  }, [headerRef, tabRefs]);
  var updateArrowState = (0, import_react119.useCallback)(function() {
    setDisableLeftArrow(isVisible(0));
    setDisableRightArrow(isVisible(tabRefs.length - 1));
  }, [tabRefs, isVisible]);
  var scrollTo = (0, import_react119.useCallback)(function(index, keyboard) {
    var tabRect = tabRefs[index].current.getBoundingClientRect();
    var headerRect = headerRef.current.getBoundingClientRect();
    var amountHidden = 0;
    if (tabRect.left >= headerRect.left && tabRect.left <= headerRect.right) {
      amountHidden = tabRect.width - (headerRect.right - tabRect.left);
    } else if (tabRect.right >= headerRect.left && tabRect.right <= headerRect.right) {
      amountHidden = tabRect.width - (tabRect.right - headerRect.left);
      amountHidden = 0 - amountHidden;
    } else if (tabRect.left >= headerRect.right) {
      amountHidden = tabRect.right - headerRect.right;
    } else if (tabRect.right <= headerRect.left) {
      amountHidden = headerRect.left - tabRect.left;
      amountHidden = 0 - amountHidden;
    }
    if (keyboard) {
      if (amountHidden < 0)
        amountHidden -= 2;
      if (amountHidden > 0)
        amountHidden += 2;
    }
    if (isSafari) {
      headerRef.current.scrollBy({
        left: amountHidden
      });
    } else {
      headerRef.current.scrollBy({
        left: amountHidden,
        behavior: "smooth"
      });
    }
    if (isSafari) {
      updateArrowState();
    } else {
      var checkVisible = setInterval(function() {
        if (tabRefs[index].current && isVisible(index)) {
          updateArrowState();
          clearInterval(checkVisible);
        }
      }, 50);
      setTimeout(function() {
        updateArrowState();
        clearInterval(checkVisible);
      }, 1e3);
    }
  }, [tabRefs, headerRef, isVisible, updateArrowState, isSafari]);
  var moveByArrowKey = function moveByArrowKey2(direction) {
    var previous = direction === "previous";
    var index = direction === "previous" ? 0 : tabRefs.length - 1;
    var scrolledToIndex;
    var moveBy = theme.tabs.step[size] - 1 || 0;
    while (scrolledToIndex === void 0 && (previous && index < tabRefs.length - 1 || !previous && index > 0)) {
      if (!isVisible(index) && (previous && isVisible(index + 1) || !previous && isVisible(index - 1))) {
        if (previous) {
          if (index - moveBy >= 0) {
            scrollTo(index - moveBy, false);
            scrolledToIndex = index - moveBy;
          } else {
            scrollTo(0, false);
            scrolledToIndex = 0;
          }
        } else if (index + moveBy < tabRefs.length) {
          scrollTo(index + moveBy, false);
          scrolledToIndex = index + moveBy;
        } else {
          scrollTo(tabRefs.length - 1, false);
          scrolledToIndex = tabRefs.length - 1;
        }
      }
      index = previous ? index + 1 : index - 1;
    }
  };
  (0, import_react119.useEffect)(function() {
    if (overflow && tabRefs && tabRefs[activeIndex].current && !isVisible(activeIndex))
      scrollTo(activeIndex, true);
  }, [overflow, activeIndex, tabRefs, isVisible, scrollTo]);
  (0, import_react119.useEffect)(function() {
    if (overflow && focusIndex !== -1 && !isVisible(focusIndex))
      scrollTo(focusIndex, true);
    else if (overflow && focusIndex !== -1) {
      var tabRect = tabRefs[focusIndex].current.getBoundingClientRect();
      var headerRect = headerRef.current.getBoundingClientRect();
      var amountHidden = 0;
      if (tabRect.left >= headerRect.left && tabRect.right <= headerRect.right && tabRect.right + 2 >= headerRect.right)
        amountHidden = 2;
      else if (tabRect.right <= headerRect.right && tabRect.left >= headerRect.left && tabRect.left - 2 <= headerRect.left)
        amountHidden = -2;
      headerRef.current.scrollBy({
        left: amountHidden
      });
    }
  }, [overflow, tabRefs, focusIndex, isVisible, scrollTo]);
  useLayoutEffect(function() {
    var onResize = function onResize2() {
      if (headerRef.current.scrollWidth > headerRef.current.offsetWidth) {
        setOverflow(true);
      } else
        setOverflow(false);
      updateArrowState();
    };
    onResize();
    window.addEventListener("resize", onResize);
    return function() {
      return window.removeEventListener("resize", onResize);
    };
  }, [tabRefs, disableLeftArrow, disableRightArrow, activeIndex, headerRef, overflow, updateArrowState]);
  var getTabsContext = (0, import_react119.useCallback)(function(index) {
    var activateTab = function activateTab2(nextIndex) {
      sendAnalytics({
        type: "activateTab",
        element: tabRefs[nextIndex].current
      });
      if (propsActiveIndex === void 0) {
        setActiveIndex(nextIndex);
      }
      if (onActive) {
        onActive(nextIndex);
      }
    };
    return {
      activeIndex,
      active: activeIndex === index,
      index,
      ref: tabRefs[index],
      onActivate: function onActivate() {
        return activateTab(index);
      },
      setActiveContent,
      setActiveTitle,
      setFocusIndex
    };
  }, [activeIndex, onActive, propsActiveIndex, sendAnalytics, tabRefs]);
  var tabs = import_react119.default.Children.map(children2, function(child, index) {
    return import_react119.default.createElement(TabsContext.Provider, {
      value: getTabsContext(index)
    }, child ? (
      // cloneElement is needed for backward compatibility with custom
      // styled components that rely on props.active. We should reassess
      // if it is still necessary in our next major release.
      import_react119.default.cloneElement(child, {
        active: activeIndex === index
      })
    ) : child);
  });
  var tabsHeaderStyles = {};
  if (theme.tabs.header && theme.tabs.header.border) {
    var borderColor = theme.tabs.header.border.color || theme.global.control.border.color;
    borderColor = normalizeColor(borderColor, theme);
    tabsHeaderStyles.border = {
      side: theme.tabs.header.border.side,
      size: theme.tabs.header.border.size,
      style: theme.tabs.header.border.style,
      color: borderColor
    };
  }
  var tabContentTitle = (activeTitle || "") + " " + format3({
    id: "tabs.tabContents",
    messages
  });
  return import_react119.default.createElement(StyledTabs, _extends111({
    ref,
    as: Box,
    flex,
    responsive
  }, rest, {
    background: theme.tabs.background
  }), import_react119.default.createElement(Box, _extends111({
    alignSelf: alignControls || ((_theme$tabs$header = theme.tabs.header) == null ? void 0 : _theme$tabs$header.alignSelf),
    role: "tablist",
    flex: false,
    direction: overflow ? "row" : "column"
  }, tabsHeaderStyles), overflow && import_react119.default.createElement(Button, {
    a11yTitle: "Previous Tab",
    disabled: disableLeftArrow,
    tabIndex: -1,
    onClick: function onClick() {
      return moveByArrowKey("previous");
    }
  }, import_react119.default.createElement(Box, {
    pad: {
      vertical: "xsmall",
      horizontal: "small"
    }
  }, import_react119.default.createElement(import_Previous2.Previous, {
    color: disableLeftArrow ? theme.button.disabled.color : theme.global.colors.text
  }))), import_react119.default.createElement(StyledTabsHeader, {
    ref: headerRef,
    as: Box,
    direction: "row",
    justify: overflow ? "start" : justify,
    flex: !!overflow,
    wrap: false,
    overflow: overflow ? "hidden" : "visible",
    background: theme.tabs.header.background,
    gap: theme.tabs.gap,
    pad: overflow ? "2px" : void 0,
    margin: overflow ? "-2px" : void 0
  }, tabs), overflow && import_react119.default.createElement(Button, {
    a11yTitle: "Next Tab",
    disabled: disableRightArrow,
    tabIndex: -1,
    onClick: function onClick() {
      return moveByArrowKey("next");
    }
  }, import_react119.default.createElement(Box, {
    pad: {
      vertical: "xsmall",
      horizontal: "small"
    }
  }, import_react119.default.createElement(import_Next2.Next, {
    color: disableRightArrow ? theme.button.disabled.color : theme.global.colors.text
  })))), import_react119.default.createElement(StyledTabPanel, {
    flex,
    "aria-label": tabContentTitle,
    role: "tabpanel"
  }, activeContent));
});
Tabs.displayName = "Tabs";
Tabs.propTypes = TabsPropTypes;

// node_modules/grommet/es6/components/DataTableColumns/propTypes.js
var import_prop_types54 = __toESM(require_prop_types());
var PropType53 = {};
if (true) {
  PropType53 = {
    drop: import_prop_types54.default.bool.isRequired,
    options: import_prop_types54.default.oneOfType([import_prop_types54.default.arrayOf(import_prop_types54.default.string), import_prop_types54.default.arrayOf(import_prop_types54.default.shape({
      label: import_prop_types54.default.string,
      property: import_prop_types54.default.string
    }))]).isRequired
  };
}
var DataTableColumnsPropTypes = PropType53;

// node_modules/grommet/es6/components/DataTableColumns/DataTableColumns.js
var _excluded70 = ["drop", "options"];
var _excluded216 = ["drop", "options"];
function _extends112() {
  _extends112 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends112.apply(this, arguments);
}
function _objectWithoutPropertiesLoose67(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var dropProps4 = {
  align: {
    top: "bottom",
    left: "left"
  }
};
var tabsProps = {
  drop: {
    pad: "small"
  },
  noDrop: {
    justify: "start"
  }
};
var optionsToValue = function optionsToValue2(options) {
  return options.map(function(o3) {
    return typeof o3 === "object" && o3.property || o3;
  }) || [];
};
var optionProperty = function optionProperty2(option) {
  return typeof option === "object" ? option.property : option;
};
var alignOrder = function alignOrder2(value, prevValue, options) {
  return value.sort(function(p1, p2) {
    var i1 = prevValue.findIndex(function(n3) {
      return n3 === p1;
    });
    var i22 = prevValue.findIndex(function(n3) {
      return n3 === p2;
    });
    if (i1 !== -1 && i22 !== -1)
      return i1 - i22;
    i1 = options.findIndex(function(o3) {
      return optionProperty(o3) === p1;
    });
    i22 = options.findIndex(function(o3) {
      return optionProperty(o3) === p2;
    });
    return i1 - i22;
  });
};
var Content3 = function Content4(_ref) {
  var drop = _ref.drop, options = _ref.options, rest = _objectWithoutPropertiesLoose67(_ref, _excluded70);
  var _useContext = (0, import_react120.useContext)(DataContext), dataId = _useContext.id, messages = _useContext.messages;
  var _useContext2 = (0, import_react120.useContext)(FormContext), useFormInput3 = _useContext2.useFormInput;
  var _useContext3 = (0, import_react120.useContext)(MessageContext), format3 = _useContext3.format;
  var _useState = (0, import_react120.useState)(""), search = _useState[0], setSearch = _useState[1];
  var _useState2 = (0, import_react120.useState)(options), filteredOptions = _useState2[0], setFilteredOptions = _useState2[1];
  var objectOptions = (0, import_react120.useMemo)(function() {
    return options && options.length && typeof options[0] === "object";
  }, [options]);
  var _useFormInput = useFormInput3({
    name: formColumnsKey,
    initialValue: optionsToValue(options)
  }), value = _useFormInput[0], setValue = _useFormInput[1];
  var onSearch = (0, import_react120.useCallback)(function(nextSearch) {
    var nextFilteredOptions = options;
    if (nextSearch) {
      var lowerSearch = nextSearch.toLowerCase();
      nextFilteredOptions = options.filter(function(o3) {
        var _ref2, _ref3, _o$property;
        return (_ref2 = (_ref3 = (_o$property = o3.property) != null ? _o$property : o3.label) != null ? _ref3 : o3) == null ? void 0 : _ref2.toLowerCase().includes(lowerSearch);
      });
    }
    setSearch(nextSearch);
    setFilteredOptions(nextFilteredOptions);
  }, [options]);
  return import_react120.default.createElement(Box, null, import_react120.default.createElement(Tabs, _extends112({}, tabsProps[drop ? "drop" : "noDrop"], rest), import_react120.default.createElement(Tab, {
    id: dataId + "--select-columns-tab",
    title: format3({
      id: "dataTableColumns.select",
      messages: messages == null ? void 0 : messages.dataTableColumns
    })
  }, import_react120.default.createElement(Box, {
    pad: {
      vertical: "small"
    },
    gap: "xsmall"
  }, import_react120.default.createElement(TextInput, {
    type: "search",
    icon: import_react120.default.createElement(import_Search2.Search, null),
    placeholder: "Search",
    value: search,
    onChange: function onChange(event) {
      return onSearch(event.target.value);
    }
  }), import_react120.default.createElement(CheckBoxGroup, {
    id: dataId + "--select-columns",
    name: formColumnsKey,
    "aria-labelledby": dataId + "--select-columns-tab",
    options: filteredOptions,
    valueKey: objectOptions && "property" || void 0,
    labelKey: objectOptions && "label" || void 0,
    value,
    onChange: function onChange(_ref4) {
      var nextValue = _ref4.value;
      return setValue(alignOrder(nextValue, value, options));
    }
  }))), import_react120.default.createElement(Tab, {
    id: dataId + "--order-columns-tab",
    title: format3({
      id: "dataTableColumns.order",
      messages: messages == null ? void 0 : messages.dataTableColumns
    })
  }, import_react120.default.createElement(Box, {
    pad: {
      top: "small"
    }
  }, import_react120.default.createElement(List, {
    id: dataId + "--order-columns",
    "aria-labelledby": dataId + "--order-columns-tab",
    data: value.map(function(v3) {
      return objectOptions && options.find(function(o3) {
        return o3.property === v3;
      }) || v3;
    }),
    onOrder: function onOrder(nextData) {
      return setValue(optionsToValue(nextData));
    },
    pad: "none",
    primaryKey: objectOptions && "label" || void 0
  })))));
};
var DataTableColumns = function DataTableColumns2(_ref5) {
  var drop = _ref5.drop, options = _ref5.options, rest = _objectWithoutPropertiesLoose67(_ref5, _excluded216);
  var _useContext4 = (0, import_react120.useContext)(DataContext), dataId = _useContext4.id, messages = _useContext4.messages;
  var _useContext5 = (0, import_react120.useContext)(FormContext), noForm = _useContext5.noForm;
  var _useContext6 = (0, import_react120.useContext)(MessageContext), format3 = _useContext6.format;
  var _useState3 = (0, import_react120.useState)(), showContent = _useState3[0], setShowContent = _useState3[1];
  var tip = format3({
    id: "dataTableColumns.tip",
    messages: messages == null ? void 0 : messages.dataTableColumns
  });
  var content = import_react120.default.createElement(Content3, {
    drop,
    options
  });
  if (noForm)
    content = import_react120.default.createElement(DataForm, {
      footer: false,
      updateOn: "change"
    }, content);
  if (!drop)
    return content;
  var control = import_react120.default.createElement(DropButton, _extends112({
    id: dataId + "--columns-control",
    "aria-label": format3({
      id: "dataTableColumns.open",
      messages: messages == null ? void 0 : messages.dataTableColumns
    }),
    kind: "toolbar",
    icon: import_react120.default.createElement(import_Splits.Splits, null),
    tip,
    dropProps: dropProps4,
    dropContent: content,
    open: showContent,
    onOpen: function onOpen() {
      return setShowContent(void 0);
    },
    onClose: function onClose() {
      return setShowContent(void 0);
    }
  }, rest));
  return control;
};
DataTableColumns.propTypes = DataTableColumnsPropTypes;

// node_modules/grommet/es6/components/DataTableGroupBy/DataTableGroupBy.js
var import_react121 = __toESM(require_react());

// node_modules/grommet/es6/components/DataTableGroupBy/propTypes.js
var import_prop_types55 = __toESM(require_prop_types());
var PropType54 = {};
if (true) {
  PropType54 = {
    options: import_prop_types55.default.oneOfType([import_prop_types55.default.arrayOf(import_prop_types55.default.string), import_prop_types55.default.arrayOf(import_prop_types55.default.shape({
      label: import_prop_types55.default.string,
      property: import_prop_types55.default.string
    }))])
  };
}
var DataTableGroupByPropTypes = PropType54;

// node_modules/grommet/es6/components/DataTableGroupBy/DataTableGroupBy.js
var _excluded71 = ["id", "options"];
function _extends113() {
  _extends113 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends113.apply(this, arguments);
}
function _objectWithoutPropertiesLoose68(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var DataTableGroupBy = function DataTableGroupBy2(_ref) {
  var idProp = _ref.id, options = _ref.options, rest = _objectWithoutPropertiesLoose68(_ref, _excluded71);
  var _useContext = (0, import_react121.useContext)(DataContext), dataId = _useContext.id, messages = _useContext.messages, view = _useContext.view, addToolbarKey2 = _useContext.addToolbarKey;
  var _useContext2 = (0, import_react121.useContext)(FormContext), noForm = _useContext2.noForm;
  var _useContext3 = (0, import_react121.useContext)(MessageContext), format3 = _useContext3.format;
  var id = idProp || dataId + "--groupby";
  (0, import_react121.useEffect)(function() {
    if (noForm)
      addToolbarKey2("_groupBy");
  }, [addToolbarKey2, noForm]);
  if (!options)
    return null;
  var content = import_react121.default.createElement(Select, _extends113({
    id,
    name: "_groupBy",
    showSelectedInline: true,
    placeholder: noForm ? "Group by" : void 0,
    options,
    labelKey: "label",
    clear: view != null && view.groupBy ? {
      position: "top",
      label: format3({
        id: "dataTableGroupBy.clear",
        messages: messages == null ? void 0 : messages.dataTableGroupBy
      })
    } : void 0,
    value: view == null ? void 0 : view.groupBy
  }, rest));
  if (noForm)
    content = import_react121.default.createElement(DataForm, {
      footer: false,
      updateOn: "change"
    }, content);
  else
    content = import_react121.default.createElement(FormField, {
      htmlFor: id,
      label: format3({
        id: "dataTableGroupBy.label",
        messages: messages == null ? void 0 : messages.dataTableGroupBy
      })
    }, content);
  return content;
};
DataTableGroupBy.propTypes = DataTableGroupByPropTypes;

// node_modules/grommet/es6/components/DateInput/DateInput.js
var import_react123 = __toESM(require_react());
init_styled_components_browser_esm();
var import_Calendar2 = __toESM(require_Calendar());

// node_modules/grommet/es6/components/MaskedInput/MaskedInput.js
var import_react122 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/MaskedInput/StyledMaskedInput.js
init_styled_components_browser_esm();
var StyledMaskedInput = styled_components_browser_esm_default.input.withConfig({
  displayName: "StyledMaskedInput",
  componentId: "sc-99vkfa-0"
})(["", " ", " ", " ", " ", " ", ";"], inputStyle, function(props) {
  return props.plain && plainInputStyle;
}, function(props) {
  return props.icon && inputPadForIcon;
}, function(props) {
  return props.disabled && disabledStyle(props.theme.maskedInput.disabled && props.theme.maskedInput.disabled.opacity);
}, function(props) {
  return props.textAlign && textAlignStyle;
}, function(props) {
  return props.theme.maskedInput && props.theme.maskedInput.extend;
});
var StyledMaskedInputContainer = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledMaskedInput__StyledMaskedInputContainer",
  componentId: "sc-99vkfa-1"
})(["position:relative;width:100%;", ";"], function(props) {
  return props.theme.maskedInput && props.theme.maskedInput.container && props.theme.maskedInput.container.extend;
});
var StyledIcon2 = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledMaskedInput__StyledIcon",
  componentId: "sc-99vkfa-2"
})(["position:absolute;display:flex;justify:center;top:50%;transform:translateY(-50%);pointer-events:none;", ""], function(props) {
  return props.reverse ? "right: " + getInputPadBySide(props, "right") + ";" : "left: " + getInputPadBySide(props, "left") + ";";
});

// node_modules/grommet/es6/components/MaskedInput/propTypes.js
var import_prop_types56 = __toESM(require_prop_types());
var PropType55 = {};
if (true) {
  PropType55 = {
    a11yTitle: import_prop_types56.default.string,
    dropHeight: import_prop_types56.default.oneOfType([import_prop_types56.default.oneOf(["xsmall", "small", "medium", "large", "xlarge"]), import_prop_types56.default.string]),
    dropProps: import_prop_types56.default.object,
    icon: import_prop_types56.default.element,
    id: import_prop_types56.default.string,
    name: import_prop_types56.default.string,
    onChange: import_prop_types56.default.func,
    focusIndicator: import_prop_types56.default.bool,
    onBlur: import_prop_types56.default.func,
    mask: import_prop_types56.default.arrayOf(import_prop_types56.default.shape({
      length: import_prop_types56.default.oneOfType([import_prop_types56.default.number, import_prop_types56.default.arrayOf(import_prop_types56.default.number)]),
      fixed: import_prop_types56.default.string,
      options: import_prop_types56.default.arrayOf(import_prop_types56.default.oneOfType([import_prop_types56.default.string, import_prop_types56.default.number])),
      restrictToOptions: import_prop_types56.default.bool,
      regexp: import_prop_types56.default.shape({})
      // RegExp
    })),
    reverse: import_prop_types56.default.bool,
    size: import_prop_types56.default.oneOfType([import_prop_types56.default.oneOf(["xsmall", "small", "medium", "large", "xlarge", "xxlarge", "2xl", "3xl", "4xl", "5xl", "6xl"]), import_prop_types56.default.string]),
    textAlign: import_prop_types56.default.oneOf(["start", "center", "end"]),
    value: import_prop_types56.default.oneOfType([import_prop_types56.default.string, import_prop_types56.default.number])
  };
}
var MaskedInputPropTypes = PropType55;

// node_modules/grommet/es6/components/MaskedInput/MaskedInput.js
var _excluded72 = ["a11yTitle", "dropHeight", "dropProps", "focus", "focusIndicator", "icon", "id", "mask", "name", "onBlur", "onChange", "onFocus", "onKeyDown", "placeholder", "plain", "reverse", "textAlign", "value"];
function _extends114() {
  _extends114 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends114.apply(this, arguments);
}
function _objectWithoutPropertiesLoose69(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var parseValue = function parseValue2(mask, value) {
  var valueParts = [];
  var valueIndex = 0;
  var maskIndex = 0;
  while (value !== void 0 && valueIndex < value.length && maskIndex < mask.length) {
    var item = mask[maskIndex];
    var found = void 0;
    if (item.fixed) {
      var length = item.fixed.length;
      var matching = 0;
      while (matching < length && value[valueIndex + matching] === item.fixed[matching]) {
        matching += 1;
      }
      if (matching > 0) {
        var part = value.slice(valueIndex, valueIndex + matching);
        if (valueIndex + matching < value.length) {
          part = item.fixed;
        }
        valueParts.push({
          part,
          beginIndex: valueIndex,
          endIndex: valueIndex + matching - 1
        });
        valueIndex += matching;
      } else {
        valueParts.push({
          part: item.fixed,
          beginIndex: valueIndex,
          endIndex: valueIndex + length - 1
        });
      }
      maskIndex += 1;
      found = true;
    } else if (item.options && item.restrictToOptions !== false) {
      found = item.options.slice(0).reverse().some(function(option) {
        var length2 = option.length;
        var part2 = value.slice(valueIndex, valueIndex + length2);
        if (part2 === option) {
          valueParts.push({
            part: part2,
            beginIndex: valueIndex,
            endIndex: valueIndex + length2 - 1
          });
          valueIndex += length2;
          maskIndex += 1;
          return true;
        }
        return false;
      });
    }
    if (!found) {
      if (item.regexp) {
        var minLength = Array.isArray(item.length) && item.length[0] || item.length || 1;
        var maxLength = Array.isArray(item.length) && item.length[1] || item.length || value.length - valueIndex;
        var _length = maxLength;
        while (!found && _length >= minLength) {
          var _part = value.slice(valueIndex, valueIndex + _length);
          if (item.regexp.test(_part)) {
            valueParts.push({
              part: _part,
              beginIndex: valueIndex,
              endIndex: valueIndex + _length - 1
            });
            valueIndex += _length;
            maskIndex += 1;
            found = true;
          }
          _length -= 1;
        }
        if (!found) {
          valueIndex = value.length;
        }
      } else {
        var _length2 = Array.isArray(item.length) ? item.length[1] : item.length || value.length - valueIndex;
        var _part2 = value.slice(valueIndex, valueIndex + _length2);
        valueParts.push({
          part: _part2,
          beginIndex: valueIndex,
          endIndex: valueIndex + _length2 - 1
        });
        valueIndex += _length2;
        maskIndex += 1;
      }
    }
  }
  return valueParts;
};
var defaultMask = [{
  regexp: /[^]*/
}];
var ContainerBox2 = styled_components_browser_esm_default(Box).withConfig({
  displayName: "MaskedInput__ContainerBox",
  componentId: "sc-af8hzu-0"
})(["", ";"], function(props) {
  return props.dropHeight ? sizeStyle("max-height", props.dropHeight, props.theme) : "max-height: inherit;";
});
var dropAlign = {
  top: "bottom",
  left: "left"
};
var MaskedInput = (0, import_react122.forwardRef)(function(_ref, ref) {
  var a11yTitle = _ref.a11yTitle, dropHeight = _ref.dropHeight, dropProps5 = _ref.dropProps, focusProp = _ref.focus, _ref$focusIndicator = _ref.focusIndicator, focusIndicator = _ref$focusIndicator === void 0 ? true : _ref$focusIndicator, icon = _ref.icon, id = _ref.id, _ref$mask = _ref.mask, mask = _ref$mask === void 0 ? defaultMask : _ref$mask, name = _ref.name, _onBlur = _ref.onBlur, onChange = _ref.onChange, _onFocus = _ref.onFocus, onKeyDown = _ref.onKeyDown, placeholder = _ref.placeholder, plain = _ref.plain, reverse = _ref.reverse, textAlign = _ref.textAlign, valueProp = _ref.value, rest = _objectWithoutPropertiesLoose69(_ref, _excluded72);
  var theme = (0, import_react122.useContext)(Me) || defaultProps2.theme;
  var formContext = (0, import_react122.useContext)(FormContext);
  var _formContext$useFormI = formContext.useFormInput({
    name,
    value: valueProp
  }), value = _formContext$useFormI[0], setValue = _formContext$useFormI[1];
  var valueParts = (0, import_react122.useMemo)(function() {
    return parseValue(mask, value);
  }, [mask, value]);
  var inputRef = useForwardedRef(ref);
  var dropRef = (0, import_react122.useRef)();
  var _useState = (0, import_react122.useState)(), dropPropsTarget = _useState[0], setDropPropsTarget = _useState[1];
  (0, import_react122.useEffect)(function() {
    var nextDropPropsTarget;
    if (dropProps5 && "target" in dropProps5) {
      nextDropPropsTarget = dropProps5.target || "pending";
      setDropPropsTarget(nextDropPropsTarget);
    }
  }, [dropProps5]);
  var _useState2 = (0, import_react122.useState)(focusProp), focus = _useState2[0], setFocus = _useState2[1];
  var _useState3 = (0, import_react122.useState)(), activeMaskIndex = _useState3[0], setActiveMaskIndex = _useState3[1];
  var _useState4 = (0, import_react122.useState)(), activeOptionIndex = _useState4[0], setActiveOptionIndex = _useState4[1];
  var _useState5 = (0, import_react122.useState)(), showDrop = _useState5[0], setShowDrop = _useState5[1];
  (0, import_react122.useEffect)(function() {
    if (focus) {
      var timer = setTimeout(function() {
        var caretIndex = inputRef.current.selectionStart;
        var maskIndex;
        valueParts.some(function(part, index) {
          if (part.beginIndex <= caretIndex && part.endIndex >= caretIndex) {
            maskIndex = index;
            return true;
          }
          return false;
        });
        if (maskIndex === void 0 && valueParts.length < mask.length) {
          maskIndex = valueParts.length;
        }
        if (maskIndex && mask[maskIndex].fixed) {
          maskIndex -= 1;
        }
        if (maskIndex !== activeMaskIndex) {
          setActiveMaskIndex(maskIndex);
          setActiveOptionIndex(-1);
          setShowDrop(maskIndex >= 0 && mask[maskIndex].options && true);
        }
      }, 10);
      return function() {
        return clearTimeout(timer);
      };
    }
    return void 0;
  }, [activeMaskIndex, focus, inputRef, mask, valueParts]);
  var setInputValue = (0, import_react122.useCallback)(function(nextValue) {
    var nativeInputValueSetter = Object.getOwnPropertyDescriptor(window.HTMLInputElement.prototype, "value").set;
    nativeInputValueSetter.call(inputRef.current, nextValue);
    var event = new Event("input", {
      bubbles: true
    });
    inputRef.current.dispatchEvent(event);
  }, [inputRef]);
  var onChangeInput = (0, import_react122.useCallback)(function(event) {
    var eventValue = event.target.value;
    var nextValueParts = parseValue(mask, eventValue);
    var nextValue = nextValueParts.map(function(part) {
      return part.part;
    }).join("");
    if (nextValue !== eventValue) {
      if (nextValue.length > eventValue.length)
        setInputValue(nextValue);
      else if (value && eventValue.length < value.length) {
        setValue(eventValue);
        if (onChange)
          onChange(event);
      } else {
        setInputValue(value);
      }
    } else if (value !== nextValue) {
      setValue(nextValue);
      if (onChange)
        onChange(event);
    }
  }, [mask, onChange, setInputValue, setValue, value]);
  var onOption = (0, import_react122.useCallback)(function(option) {
    return function() {
      var nextValueParts = [].concat(valueParts);
      nextValueParts[activeMaskIndex] = {
        part: option
      };
      var index = activeMaskIndex + 1;
      while (index < mask.length && !nextValueParts[index] && mask[index].fixed) {
        nextValueParts[index] = {
          part: mask[index].fixed
        };
        index += 1;
      }
      var nextValue = nextValueParts.map(function(part) {
        return part.part;
      }).join("");
      setInputValue(nextValue);
      inputRef.current.focus();
    };
  }, [activeMaskIndex, inputRef, mask, setInputValue, valueParts]);
  var onNextOption = (0, import_react122.useCallback)(function(event) {
    var item = mask[activeMaskIndex];
    if (item && item.options) {
      event.preventDefault();
      var index = Math.min(activeOptionIndex + 1, item.options.length - 1);
      setActiveOptionIndex(index);
    }
  }, [activeMaskIndex, activeOptionIndex, mask]);
  var onPreviousOption = (0, import_react122.useCallback)(function(event) {
    if (activeMaskIndex >= 0 && mask[activeMaskIndex].options) {
      event.preventDefault();
      var index = Math.max(activeOptionIndex - 1, 0);
      setActiveOptionIndex(index);
    }
  }, [activeMaskIndex, activeOptionIndex, mask]);
  var onSelectOption = (0, import_react122.useCallback)(function(event) {
    if (activeMaskIndex >= 0 && activeOptionIndex >= 0) {
      event.preventDefault();
      var option = mask[activeMaskIndex].options[activeOptionIndex];
      onOption(option)();
    }
  }, [activeMaskIndex, activeOptionIndex, mask, onOption]);
  var onEsc = (0, import_react122.useCallback)(function(event) {
    if (showDrop) {
      event.stopPropagation();
      event.nativeEvent.stopImmediatePropagation();
      setShowDrop(false);
    }
  }, [showDrop]);
  var onHideDrop = (0, import_react122.useCallback)(function() {
    return setShowDrop(false);
  }, []);
  var renderPlaceholder = function renderPlaceholder2() {
    return mask.map(function(item) {
      return item.placeholder || item.fixed;
    }).join("");
  };
  var maskedInputIcon = useSizedIcon(icon, rest.size, theme);
  return import_react122.default.createElement(StyledMaskedInputContainer, {
    plain
  }, maskedInputIcon && import_react122.default.createElement(StyledIcon2, {
    reverse,
    theme
  }, maskedInputIcon), import_react122.default.createElement(Keyboard, {
    onEsc,
    onTab: showDrop ? function() {
      return setShowDrop(false);
    } : void 0,
    onLeft: void 0,
    onRight: void 0,
    onUp: onPreviousOption,
    onDown: showDrop ? onNextOption : function() {
      return setShowDrop(true);
    },
    onEnter: onSelectOption,
    onKeyDown
  }, import_react122.default.createElement(StyledMaskedInput, _extends114({
    ref: inputRef,
    "aria-label": a11yTitle,
    id,
    name,
    autoComplete: "off",
    focusIndicator,
    plain,
    placeholder: placeholder || renderPlaceholder(),
    icon,
    reverse,
    focus,
    textAlign
  }, rest, {
    value,
    theme,
    onFocus: function onFocus(event) {
      setFocus(true);
      setShowDrop(true);
      if (_onFocus)
        _onFocus(event);
    },
    onBlur: function onBlur(event) {
      setFocus(false);
      if (!dropRef.current)
        setShowDrop(false);
      if (_onBlur)
        _onBlur(event);
    },
    onChange: onChangeInput
  }))), showDrop && mask[activeMaskIndex] && mask[activeMaskIndex].options && // If caller has specified dropProps.target, ensure target is defined
  dropPropsTarget !== "pending" && import_react122.default.createElement(Drop, _extends114({
    id: id ? "masked-input-drop__" + id : void 0,
    align: dropAlign,
    responsive: false,
    target: inputRef.current,
    onClickOutside: onHideDrop,
    onEsc: onHideDrop
  }, dropProps5), import_react122.default.createElement(ContainerBox2, {
    ref: dropRef,
    overflow: "auto",
    dropHeight
  }, mask[activeMaskIndex].options.map(function(option, index) {
    var child = !theme.button.option ? import_react122.default.createElement(Box, {
      pad: {
        horizontal: "small",
        vertical: "xsmall"
      }
    }, option) : void 0;
    return import_react122.default.createElement(Box, {
      key: option,
      flex: false
    }, import_react122.default.createElement(Button, {
      tabIndex: "-1",
      onClick: onOption(option),
      onMouseOver: function onMouseOver() {
        return setActiveOptionIndex(index);
      },
      onFocus: function onFocus() {
      },
      active: index === activeOptionIndex,
      plain: !child ? void 0 : true,
      align: "start",
      kind: !child ? "option" : void 0,
      hoverIndicator: !child ? void 0 : "background",
      label: !child ? option : void 0
    }, child));
  }))));
});
MaskedInput.displayName = "MaskedInput";
MaskedInput.propTypes = MaskedInputPropTypes;

// node_modules/grommet/es6/components/DateInput/utils.js
function _construct(Parent, args, Class) {
  if (_isNativeReflectConstruct()) {
    _construct = Reflect.construct.bind();
  } else {
    _construct = function _construct2(Parent2, args2, Class2) {
      var a3 = [null];
      a3.push.apply(a3, args2);
      var Constructor = Function.bind.apply(Parent2, a3);
      var instance = new Constructor();
      if (Class2)
        _setPrototypeOf(instance, Class2.prototype);
      return instance;
    };
  }
  return _construct.apply(null, arguments);
}
function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e3) {
    return false;
  }
}
function _setPrototypeOf(o3, p2) {
  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf4(o4, p3) {
    o4.__proto__ = p3;
    return o4;
  };
  return _setPrototypeOf(o3, p2);
}
function _extends115() {
  _extends115 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends115.apply(this, arguments);
}
var formatToSchema = function formatToSchema2(format3) {
  if (!format3)
    return void 0;
  var result = [];
  var i3 = 0;
  var part;
  while (i3 < format3.length) {
    if (!part || part[0] !== format3[i3]) {
      if (part)
        result.push(part);
      part = format3[i3];
    } else {
      part += format3[i3];
    }
    i3 += 1;
  }
  if (part)
    result.push(part);
  return result;
};
var masks = {
  m: {
    length: [1, 2],
    regexp: /^[1-9]$|^1[0-2]$/
  },
  mm: {
    length: [1, 2],
    regexp: /^[0-1]$|^0[1-9]$|^1[0-2]$/
  },
  d: {
    length: [1, 2],
    regexp: /^[1-9]$|^[1-2][0-9]$|^3[0-1]$/
  },
  dd: {
    length: [1, 2],
    regexp: /^[0-3]$|^0[1-9]$|^[1-2][0-9]$|^3[0-1]$/
  },
  yy: {
    length: [1, 2],
    regexp: /^[0-9]{1,2}$/
  },
  yyyy: {
    length: [1, 4],
    regexp: /^[0-9]{1,4}$/
  }
};
var schemaToMask = function schemaToMask2(schema) {
  if (!schema)
    return void 0;
  return schema.map(function(part) {
    var lower = part.toLowerCase();
    var _char = lower[0];
    if (_char === "m" || _char === "d" || _char === "y")
      return _extends115({
        placeholder: part
      }, masks[lower]);
    return {
      fixed: part
    };
  });
};
var valueToText = function valueToText2(value, schema) {
  var text = "";
  if (!value || Array.isArray(value) && !value.length)
    return text;
  var dates = (Array.isArray(value) ? value : [value]).map(function(v3) {
    return setHoursWithOffset(v3);
  });
  var dateIndex = 0;
  var parts2 = {};
  schema.every(function(part) {
    var _char2 = part[0].toLowerCase();
    while (dateIndex < dates.length && (Number.isNaN(dates[dateIndex].date) || (_char2 === "m" || _char2 === "d" || _char2 === "y") && parts2[part])) {
      dateIndex += 1;
      parts2 = {};
    }
    var date = dates[dateIndex];
    if (date && part === "m") {
      text += date.getMonth() + 1;
      parts2[part] = true;
    } else if (date && part === "mm") {
      text += ("0" + (date.getMonth() + 1)).slice(-2);
      parts2[part] = true;
    } else if (date && part === "d") {
      text += date.getDate();
      parts2[part] = true;
    } else if (date && part === "dd") {
      text += ("0" + date.getDate()).slice(-2);
      parts2[part] = true;
    } else if (date && part === "yy") {
      text += date.getFullYear().toString().slice(-2);
      parts2[part] = true;
    } else if (date && part === "yyyy") {
      text += date.getFullYear();
      parts2[part] = true;
    } else if (!date && (part[0] === "m" || part[0] === "d" || part[0] === "y")) {
      return false;
    } else {
      text += part;
    }
    return true;
  });
  return text;
};
var charCodeZero = "0".charCodeAt(0);
var charCodeNine = "9".charCodeAt(0);
var pullDigits = function pullDigits2(text, index) {
  var end = index;
  while (text.charCodeAt(end) >= charCodeZero && text.charCodeAt(end) <= charCodeNine)
    end += 1;
  return text.slice(index, end);
};
var validateBounds = function validateBounds2(dateBounds, selectedDate) {
  if (!dateBounds || !selectedDate)
    return selectedDate;
  var _dateBounds$map = dateBounds.map(function(date) {
    return setHoursWithOffset(date).toISOString();
  }), startDate = _dateBounds$map[0], endDate = _dateBounds$map[1];
  var isoSelectedDates = (Array.isArray(selectedDate) ? selectedDate : [selectedDate]).map(function(date) {
    return setHoursWithOffset(date).toISOString();
  });
  var validSelection = isoSelectedDates.every(function(isoSelectedDate) {
    return !endDate && startDate === isoSelectedDate || isoSelectedDate >= startDate && isoSelectedDate <= endDate;
  });
  return validSelection ? selectedDate : void 0;
};
var textToValue = function textToValue2(text, schema, range, reference, outputFormat) {
  if (!text)
    return range ? [] : void 0;
  var result;
  var addDate = function addDate2(parts3) {
    var leapYear = parts3.y % 4 === 0 && parts3.y % 100 !== 0 || parts3.y % 400 === 0;
    if (!parts3.m || !parts3.d || !parts3.y || parts3.y.length < 4 || parts3.m.length > 2 || parts3.d.length > 2 || parts3.m > 12 || parts3.d > 31 || (parts3.m === "02" || parts3.m === "2") && parts3.d > (leapYear ? 29 : 28))
      return parts3;
    var time = reference ? [reference.getHours(), reference.getMinutes(), reference.getSeconds(), reference.getMilliseconds()] : null;
    var date = _construct(Date, [parts3.y, parts3.m - 1, parts3.d].concat(time)).toISOString();
    if (date && outputFormat === "no timezone") {
      var _handleOffset$toISOSt = handleOffset(date).toISOString().split("T");
      date = _handleOffset$toISOSt[0];
    }
    if (!range) {
      if (!result)
        result = date;
    } else {
      if (!result)
        result = [];
      result.push(date);
    }
    return {};
  };
  var parts2 = {};
  var index = 0;
  schema.forEach(function(part) {
    if (index < text.length) {
      var lower = part.toLowerCase();
      var _char3 = lower[0];
      if (parts2[_char3] !== void 0)
        parts2 = addDate(parts2);
      if (_char3 === "m") {
        parts2.m = pullDigits(text, index);
        index += parts2.m.length;
      } else if (_char3 === "d") {
        var _parts, _parts$d;
        parts2.d = pullDigits(text, index);
        if (parts2.d === "0")
          delete parts2.d;
        index += ((_parts = parts2) == null ? void 0 : (_parts$d = _parts.d) == null ? void 0 : _parts$d.length) || 0;
      } else if (_char3 === "y") {
        parts2.y = pullDigits(text, index);
        index += parts2.y.length;
        if (lower === "yy" && parts2.y.length === 2) {
          parts2.y = "" + (parts2.y < 69 ? 20 : 19) + parts2.y;
        }
      } else if (text.slice(index, index + part.length) === part) {
        index += part.length;
      } else {
        index = text.length;
        result = void 0;
      }
    }
  });
  parts2 = addDate(parts2);
  if (!result)
    return range ? [] : void 0;
  return result;
};
var valuesAreEqual = function valuesAreEqual2(value1, value2) {
  return Array.isArray(value1) && Array.isArray(value2) && value1.every(function(d1, i3) {
    return d1 === value2[i3];
  }) || value1 === value2;
};

// node_modules/grommet/es6/components/DateInput/propTypes.js
var import_prop_types57 = __toESM(require_prop_types());
var PropType56 = {};
if (true) {
  PropType56 = {
    buttonProps: import_prop_types57.default.shape({}),
    calendarProps: import_prop_types57.default.shape({}),
    defaultValue: import_prop_types57.default.oneOfType([import_prop_types57.default.string, import_prop_types57.default.arrayOf(import_prop_types57.default.string)]),
    dropProps: import_prop_types57.default.shape({}),
    format: import_prop_types57.default.string,
    icon: import_prop_types57.default.element,
    id: import_prop_types57.default.string,
    inline: import_prop_types57.default.bool,
    reverse: import_prop_types57.default.bool,
    inputProps: import_prop_types57.default.shape({}),
    name: import_prop_types57.default.string,
    onChange: import_prop_types57.default.func,
    value: import_prop_types57.default.oneOfType([import_prop_types57.default.string, import_prop_types57.default.arrayOf(import_prop_types57.default.string)]),
    size: import_prop_types57.default.oneOfType([import_prop_types57.default.oneOf(["xsmall", "small", "medium", "large", "xlarge", "xxlarge", "2xl", "3xl", "4xl", "5xl", "6xl"]), import_prop_types57.default.string])
  };
}
var DateInputPropTypes = PropType56;

// node_modules/grommet/es6/components/DateInput/DateInput.js
var _excluded73 = ["buttonProps", "calendarProps", "defaultValue", "disabled", "dropProps", "format", "id", "icon", "inline", "inputProps", "name", "onChange", "onFocus", "plain", "reverse", "value", "messages"];
var _excluded217 = ["icon"];
function _extends116() {
  _extends116 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends116.apply(this, arguments);
}
function _objectWithoutPropertiesLoose70(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var getReference3 = function getReference4(value) {
  var adjustedDate;
  var res;
  if (typeof value === "string")
    res = value;
  else if (Array.isArray(value) && Array.isArray(value[0]))
    res = value[0].find(function(date) {
      return date;
    });
  else if (Array.isArray(value) && value.length) {
    res = value[0];
  }
  if (res) {
    adjustedDate = setHoursWithOffset(res);
  }
  return adjustedDate;
};
var DateInput = (0, import_react123.forwardRef)(function(_ref, refArg) {
  var _theme$icon, _theme$dateInput$icon;
  var buttonProps = _ref.buttonProps, calendarProps = _ref.calendarProps, defaultValue3 = _ref.defaultValue, disabled = _ref.disabled, dropProps5 = _ref.dropProps, format3 = _ref.format, id = _ref.id, icon = _ref.icon, _ref$inline = _ref.inline, inline = _ref$inline === void 0 ? false : _ref$inline, inputProps = _ref.inputProps, name = _ref.name, _onChange = _ref.onChange, _onFocus = _ref.onFocus, plain = _ref.plain, _ref$reverse = _ref.reverse, reverseProp = _ref$reverse === void 0 ? false : _ref$reverse, valueArg = _ref.value, messages = _ref.messages, rest = _objectWithoutPropertiesLoose70(_ref, _excluded73);
  var theme = (0, import_react123.useContext)(Me) || defaultProps2.theme;
  var announce = (0, import_react123.useContext)(AnnounceContext);
  var _useContext = (0, import_react123.useContext)(MessageContext), formatMessage = _useContext.format;
  var iconSize = ((_theme$icon = theme.icon) == null ? void 0 : _theme$icon.matchSize) && rest.size || ((_theme$dateInput$icon = theme.dateInput.icon) == null ? void 0 : _theme$dateInput$icon.size) || "medium";
  var _useContext2 = (0, import_react123.useContext)(FormContext), useFormInput3 = _useContext2.useFormInput;
  var ref = useForwardedRef(refArg);
  var containerRef = (0, import_react123.useRef)();
  var _useFormInput = useFormInput3({
    name,
    value: valueArg,
    initialValue: defaultValue3
  }), value = _useFormInput[0], setValue = _useFormInput[1];
  var _useState = (0, import_react123.useState)(getOutputFormat(value)), outputFormat = _useState[0], setOutputFormat = _useState[1];
  (0, import_react123.useEffect)(function() {
    setOutputFormat(function(previousFormat) {
      var nextFormat = getOutputFormat(value);
      return previousFormat !== nextFormat ? previousFormat : nextFormat;
    });
  }, [value]);
  var _useState2 = (0, import_react123.useState)(getReference3(value)), reference = _useState2[0], setReference = _useState2[1];
  var range = Array.isArray(value) || format3 && format3.includes("-");
  var schema = (0, import_react123.useMemo)(function() {
    return formatToSchema(format3);
  }, [format3]);
  var mask = (0, import_react123.useMemo)(function() {
    return schemaToMask(schema);
  }, [schema]);
  var _useState3 = (0, import_react123.useState)(schema ? valueToText(value, schema) : void 0), textValue = _useState3[0], setTextValue = _useState3[1];
  var _ref2 = inputProps || {}, MaskedInputIcon = _ref2.icon, restOfInputProps = _objectWithoutPropertiesLoose70(_ref2, _excluded217);
  if (MaskedInputIcon) {
    console.warn("Customizing the DateInput icon through inputProps is deprecated.\nUse the icon prop instead.");
  }
  var reverse = reverseProp || restOfInputProps.reverse;
  var calendarDropdownAlign = {
    top: "bottom",
    left: "left"
  };
  (0, import_react123.useEffect)(function() {
    if (schema && value !== void 0) {
      var nextTextValue = valueToText(value, schema);
      if (!valuesAreEqual(textToValue(textValue, schema, range, reference), textToValue(nextTextValue, schema, range, reference)) || textValue === "" && nextTextValue !== "") {
        setTextValue(nextTextValue);
      }
    }
  }, [range, schema, textValue, reference, value]);
  var _useState4 = (0, import_react123.useState)(), open = _useState4[0], setOpen = _useState4[1];
  var openCalendar = (0, import_react123.useCallback)(function() {
    setOpen(true);
    announce(formatMessage({
      id: "dateInput.enterCalendar",
      messages
    }));
  }, [announce, formatMessage, messages]);
  var closeCalendar = (0, import_react123.useCallback)(function() {
    setOpen(false);
    announce(formatMessage({
      id: "dateInput.exitCalendar",
      messages
    }));
  }, [announce, formatMessage, messages]);
  var dates = (0, import_react123.useMemo)(function() {
    return range && value != null && value.length ? [value] : void 0;
  }, [range, value]);
  var calendar = import_react123.default.createElement(Calendar, _extends116({
    ref: inline ? ref : void 0,
    id: inline && !format3 ? id : void 0,
    range,
    date: range ? void 0 : value,
    dates,
    initialFocus: open ? "days" : void 0,
    onSelect: disabled ? void 0 : function(nextValue) {
      var normalizedValue;
      if (range && Array.isArray(nextValue)) {
        normalizedValue = nextValue[0];
      } else if (range && nextValue)
        normalizedValue = [nextValue, nextValue];
      else
        normalizedValue = nextValue;
      if (schema)
        setTextValue(valueToText(normalizedValue, schema));
      setValue(normalizedValue);
      setReference(getReference3(nextValue));
      if (_onChange)
        _onChange({
          value: normalizedValue
        });
      if (open && !range) {
        closeCalendar();
        setTimeout(function() {
          var _ref$current;
          return (_ref$current = ref.current) == null ? void 0 : _ref$current.focus();
        }, 1);
      }
    }
  }, calendarProps));
  var formContextValue = (0, import_react123.useMemo)(function() {
    return {
      useFormInput: function useFormInput4(_ref3) {
        var valueProp = _ref3.value;
        return [valueProp, function() {
        }];
      }
    };
  }, []);
  if (!format3) {
    if (inline)
      return calendar;
    return import_react123.default.createElement(DropButton, _extends116({
      ref,
      id,
      dropProps: _extends116({
        align: calendarDropdownAlign
      }, dropProps5),
      dropContent: calendar,
      icon: icon || MaskedInputIcon || import_react123.default.createElement(import_Calendar2.Calendar, {
        size: iconSize
      })
    }, buttonProps));
  }
  var calendarButton = import_react123.default.createElement(Button, {
    onClick: open ? closeCalendar : openCalendar,
    plain: true,
    icon: icon || MaskedInputIcon || import_react123.default.createElement(import_Calendar2.Calendar, {
      size: iconSize
    }),
    margin: reverse ? {
      left: "small"
    } : {
      right: "small"
    }
  });
  var input = import_react123.default.createElement(FormContext.Provider, {
    key: "input",
    value: formContextValue
  }, import_react123.default.createElement(Keyboard, {
    onEsc: open ? function() {
      return closeCalendar();
    } : void 0,
    onSpace: function onSpace(event) {
      event.preventDefault();
      openCalendar();
    }
  }, import_react123.default.createElement(Box, {
    ref: containerRef,
    border: !plain,
    round: theme.dateInput.container.round,
    direction: "row",
    fill: true
  }, reverse && calendarButton, import_react123.default.createElement(MaskedInput, _extends116({
    ref,
    id,
    name,
    reverse: true,
    disabled,
    mask,
    plain: true
  }, restOfInputProps, rest, {
    value: textValue,
    onChange: function onChange(event) {
      var nextTextValue = event.target.value;
      setTextValue(nextTextValue);
      var nextValue = textToValue(nextTextValue, schema, range, reference, outputFormat);
      var validatedNextValue = validateBounds(calendarProps == null ? void 0 : calendarProps.bounds, nextValue);
      if (!validatedNextValue && nextValue) {
        setTextValue("");
      }
      if (validatedNextValue !== void 0)
        setReference(getReference3(validatedNextValue));
      setValue(validatedNextValue);
      if (_onChange) {
        event.persist();
        var adjustedEvent = event;
        adjustedEvent.value = validatedNextValue;
        _onChange(adjustedEvent);
      }
    },
    onFocus: function onFocus(event) {
      announce(formatMessage({
        id: "dateInput.openCalendar",
        messages
      }));
      if (_onFocus)
        _onFocus(event);
    }
  })), !reverse && calendarButton)));
  if (inline) {
    return import_react123.default.createElement(Box, null, input, calendar);
  }
  if (open) {
    return [input, import_react123.default.createElement(Keyboard, {
      key: "drop",
      onEsc: function onEsc() {
        return ref.current.focus();
      }
    }, import_react123.default.createElement(Drop, _extends116({
      overflow: "visible",
      id: id ? id + "__drop" : void 0,
      target: containerRef.current,
      align: _extends116({}, calendarDropdownAlign, dropProps5),
      onEsc: closeCalendar,
      onClickOutside: function onClickOutside(_ref4) {
        var target = _ref4.target;
        if (target !== containerRef.current && !containerRef.current.contains(target)) {
          closeCalendar();
        }
      }
    }, dropProps5), calendar))];
  }
  return input;
});
DateInput.displayName = "DateInput";
DateInput.propTypes = DateInputPropTypes;

// node_modules/grommet/es6/components/Diagram/Diagram.js
var import_react124 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/Diagram/StyledDiagram.js
init_styled_components_browser_esm();
var animationItemStyle3 = function animationItemStyle4(animationType, theme) {
  if (typeof animationType === "string") {
    return animationObjectStyle({
      type: animationType
    }, theme, theme.diagram);
  }
  if (typeof animationType === "object") {
    return animationObjectStyle(animationType, theme, theme.diagram);
  }
  if (typeof animationType === "boolean") {
    return animationObjectStyle({
      type: "draw"
    }, theme, theme.diagram);
  }
  return "";
};
var animationStyle2 = function animationStyle3(props) {
  var animationCopy = props.animation;
  if (typeof props.animation === "object") {
    animationCopy.type = animationCopy.type || "draw";
  }
  var animationType = animationCopy.type || animationCopy;
  if (animationType === "draw" || animationType === true) {
    return Ae(["path{stroke-dasharray:500;stroke-dashoffset:500;animation:", ";}"], animationItemStyle3(animationCopy, props.theme));
  }
  return Ae(["animation:", ";"], animationItemStyle3(animationCopy, props.theme));
};
var connectionStyle = function connectionStyle2(connection, index, theme) {
  var type = connection.props.animation.type;
  if (typeof connection.props.animation === "object") {
    type = type || "draw";
  }
  var animationType = type || connection.props.animation;
  return Ae(["path:nth-child(", "){stroke-dasharray:", ";stroke-dashoffset:", ";animation:", ";}"], index + 1, animationType === "draw" || animationType === true ? 500 : 0, animationType === "draw" || animationType === true ? 500 : 0, animationItemStyle3(connection.props.animation, theme));
};
var availableAnimations = [true, "draw", "pulse"];
var StyledDiagram = styled_components_browser_esm_default.svg.withConfig({
  displayName: "StyledDiagram",
  componentId: "sc-1vzeu9f-0"
})(["max-width:100%;width:100%;height:100%;", " ", " ", ""], function(props) {
  return props.connections && props.connections.map(function(connection, index) {
    if (connection !== void 0 && connection.props.animation) {
      var animation = connection.props.animation;
      if (typeof animation === "object") {
        var connectionCopy = connection;
        connectionCopy.props.animation.type = animation.type || "draw";
        return availableAnimations.includes(animation.type || animation) ? connectionStyle(connectionCopy, index, props.theme) : "";
      }
      return connectionStyle(connection, index, props.theme);
    }
    return "";
  });
}, function(props) {
  return props.animation && (availableAnimations.includes(props.animation.type || props.animation) || Object.keys(props.animation).length !== 0) ? animationStyle2(props) : "";
}, function(props) {
  return props.theme.diagram && props.theme.diagram.extend;
});
StyledDiagram.defaultProps = {};
Object.setPrototypeOf(StyledDiagram.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/Diagram/propTypes.js
var import_prop_types58 = __toESM(require_prop_types());
var animationPropType2 = import_prop_types58.default.oneOfType([import_prop_types58.default.bool, import_prop_types58.default.oneOf(["pulse", "draw"]), import_prop_types58.default.shape({
  type: import_prop_types58.default.oneOf(["pulse", "draw"]),
  delay: import_prop_types58.default.oneOfType([import_prop_types58.default.number, import_prop_types58.default.string]),
  duration: import_prop_types58.default.oneOfType([import_prop_types58.default.number, import_prop_types58.default.string]),
  size: import_prop_types58.default.oneOf(["xsmall", "small", "medium", "large", "xlarge"])
})]);
var PropType57 = {};
if (true) {
  PropType57 = {
    animation: animationPropType2,
    connections: import_prop_types58.default.arrayOf(import_prop_types58.default.shape({
      anchor: import_prop_types58.default.oneOf(["center", "vertical", "horizontal"]),
      animation: animationPropType2,
      color: colorPropType,
      fromTarget: import_prop_types58.default.oneOfType([import_prop_types58.default.string, import_prop_types58.default.object]).isRequired,
      label: import_prop_types58.default.string,
      // for accessibility
      offset: import_prop_types58.default.oneOfType([import_prop_types58.default.oneOf(["xsmall", "small", "medium", "large"]), import_prop_types58.default.string]),
      thickness: import_prop_types58.default.oneOfType([import_prop_types58.default.oneOf(["hair", "xxsmall", "xsmall", "small", "medium", "large"]), import_prop_types58.default.string]),
      toTarget: import_prop_types58.default.oneOfType([import_prop_types58.default.string, import_prop_types58.default.object]).isRequired,
      type: import_prop_types58.default.oneOf(["direct", "curved", "rectilinear"])
    })).isRequired
  };
}
var DiagramPropTypes = PropType57;

// node_modules/grommet/es6/components/Diagram/Diagram.js
var _excluded74 = ["connections"];
var _excluded218 = ["anchor", "animation", "color", "offset", "round", "thickness", "type"];
function _extends117() {
  _extends117 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends117.apply(this, arguments);
}
function _objectWithoutPropertiesLoose71(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var computeMidPoint = function computeMidPoint2(fromPoint, toPoint) {
  return [fromPoint[0] > toPoint[0] ? toPoint[0] + (fromPoint[0] - toPoint[0]) / 2 : fromPoint[0] + (toPoint[0] - fromPoint[0]) / 2, fromPoint[1] > toPoint[1] ? toPoint[1] + (fromPoint[1] - toPoint[1]) / 2 : fromPoint[1] + (toPoint[1] - fromPoint[1]) / 2];
};
var COMMANDS = {
  curved: function curved(fromPoint, toPoint, offset, anchor) {
    var midPoint3 = computeMidPoint(fromPoint, toPoint);
    var cmds = "M " + (fromPoint[0] + offset) + "," + (fromPoint[1] + offset) + " ";
    if (anchor === "horizontal") {
      cmds += "Q " + (midPoint3[0] + offset) + "," + (fromPoint[1] + offset) + " " + (midPoint3[0] + offset + "," + (midPoint3[1] + offset) + " ");
    } else {
      cmds += "Q " + (fromPoint[0] + offset) + "," + (midPoint3[1] + offset) + " " + (midPoint3[0] + offset + "," + (midPoint3[1] + offset) + " ");
    }
    cmds += "T " + (toPoint[0] + offset) + "," + (toPoint[1] + offset);
    return cmds;
  },
  direct: function direct(fromPoint, toPoint, offset) {
    return "M " + (fromPoint[0] + offset) + "," + (fromPoint[1] + offset) + " " + ("L " + (toPoint[0] + offset) + "," + (toPoint[1] + offset));
  },
  rectilinear: function rectilinear(fromPoint, toPoint, offset, anchor) {
    var midPoint3 = computeMidPoint(fromPoint, toPoint);
    var cmds = "M " + (fromPoint[0] + offset) + "," + (fromPoint[1] + offset) + " ";
    if (anchor === "horizontal") {
      cmds += "L " + (midPoint3[0] + offset) + "," + (fromPoint[1] + offset) + " " + ("L " + (midPoint3[0] + offset) + "," + (toPoint[1] + offset) + " ");
    } else {
      cmds += "L " + (fromPoint[0] + offset) + "," + (midPoint3[1] + offset) + " " + ("L " + (toPoint[0] + offset) + "," + (midPoint3[1] + offset) + " ");
    }
    cmds += "L " + (toPoint[0] + offset) + "," + (toPoint[1] + offset);
    return cmds;
  }
};
var findTarget = function findTarget2(target) {
  if (typeof target === "string") {
    return document.getElementById(target);
  }
  return target;
};
var Diagram = (0, import_react124.forwardRef)(function(_ref, ref) {
  var connections = _ref.connections, rest = _objectWithoutPropertiesLoose71(_ref, _excluded74);
  var theme = (0, import_react124.useContext)(Me) || defaultProps2.theme;
  var _useState = (0, import_react124.useState)({
    width: 0,
    height: 0
  }), dimensions = _useState[0], setDimensions = _useState[1];
  var _useState2 = (0, import_react124.useState)(), connectionPoints = _useState2[0], setConnectionPoints = _useState2[1];
  var svgRef = useForwardedRef(ref);
  (0, import_react124.useEffect)(function() {
    setConnectionPoints(void 0);
  }, [connections]);
  var onResize = (0, import_react124.useCallback)(function() {
    var svg = svgRef.current;
    if (svg) {
      var rect = svg.getBoundingClientRect();
      if (rect.width !== dimensions.width || rect.height !== dimensions.height) {
        setDimensions({
          width: rect.width,
          height: rect.height
        });
        setConnectionPoints(void 0);
      }
    }
  }, [dimensions.width, dimensions.height, svgRef]);
  var savedOnResize = (0, import_react124.useRef)();
  (0, import_react124.useEffect)(function() {
    savedOnResize.current = onResize;
  }, [onResize]);
  (0, import_react124.useEffect)(function() {
    var onResizeHandler = function onResizeHandler2(event) {
      return savedOnResize.current(event);
    };
    onResizeHandler();
    window.addEventListener("resize", onResizeHandler);
    return function() {
      window.removeEventListener("resize", onResizeHandler);
    };
  }, []);
  var placeConnections = (0, import_react124.useCallback)(function() {
    var containerRect = svgRef.current.getBoundingClientRect();
    var updatedConnectionPoints = connections.map(function(_ref2) {
      var anchor = _ref2.anchor, fromTarget = _ref2.fromTarget, toTarget = _ref2.toTarget;
      var points2;
      var fromElement = findTarget(fromTarget);
      var toElement = findTarget(toTarget);
      if (!fromElement) {
        console.warn("Diagram cannot find " + fromTarget);
      }
      if (!toElement) {
        console.warn("Diagram cannot find " + toTarget);
      }
      if (fromElement && toElement) {
        var fromRect = fromElement.getBoundingClientRect();
        var toRect = toElement.getBoundingClientRect();
        var fromPoint = [fromRect.left - containerRect.left || 0, fromRect.top - containerRect.top || 0];
        var toPoint = [toRect.left - containerRect.left || 0, toRect.top - containerRect.top || 0];
        if (anchor === "vertical") {
          fromPoint[0] += fromRect.width / 2;
          toPoint[0] += toRect.width / 2;
          if (fromRect.top < toRect.top) {
            fromPoint[1] += fromRect.height;
          } else {
            toPoint[1] += toRect.height;
          }
        } else if (anchor === "horizontal") {
          fromPoint[1] += fromRect.height / 2;
          toPoint[1] += toRect.height / 2;
          if (fromRect.left < toRect.left) {
            fromPoint[0] += fromRect.width;
          } else {
            toPoint[0] += toRect.width;
          }
        } else {
          fromPoint[0] += fromRect.width / 2;
          fromPoint[1] += fromRect.height / 2;
          toPoint[0] += toRect.width / 2;
          toPoint[1] += toRect.height / 2;
        }
        points2 = [fromPoint, toPoint];
      }
      return points2;
    });
    setConnectionPoints(updatedConnectionPoints);
  }, [connections, svgRef]);
  (0, import_react124.useEffect)(function() {
    if (!connectionPoints) {
      placeConnections();
    }
  }, [connectionPoints, placeConnections]);
  var paths;
  if (connectionPoints) {
    paths = connections.map(function(_ref3, index) {
      var anchor = _ref3.anchor, animation = _ref3.animation, color = _ref3.color, offset = _ref3.offset, round3 = _ref3.round, thickness = _ref3.thickness, type = _ref3.type, connectionRest = _objectWithoutPropertiesLoose71(_ref3, _excluded218);
      var path;
      var cleanedRest = _extends117({}, connectionRest);
      delete cleanedRest.fromTarget;
      delete cleanedRest.toTarget;
      var points2 = connectionPoints[index];
      if (points2) {
        var offsetWidth = offset ? parseMetricToNum(theme.global.edgeSize[offset]) : 0;
        var d3 = COMMANDS[type || "curved"](points2[0], points2[1], offsetWidth, anchor);
        var strokeWidth = thickness ? parseMetricToNum(theme.global.edgeSize[thickness] || thickness) : 1;
        var colorName = color || theme.diagram.line && theme.diagram.line.color;
        if (!colorName) {
          var colors3 = Object.keys(theme.global.colors).filter(function(n3) {
            return n3.match(/^graph-[0-9]$/);
          });
          colorName = colors3[index % colors3.length];
        }
        path = import_react124.default.createElement("path", _extends117({
          // eslint-disable-next-line react/no-array-index-key
          key: index,
          animation
        }, cleanedRest, {
          stroke: normalizeColor(colorName, theme),
          strokeWidth,
          strokeLinecap: round3 ? "round" : "butt",
          strokeLinejoin: round3 ? "round" : "miter",
          fill: "none",
          d: d3
        }));
      }
      return path;
    });
  }
  return import_react124.default.createElement(StyledDiagram, _extends117({
    ref: svgRef,
    viewBox: "0 0 " + dimensions.width + " " + dimensions.height,
    preserveAspectRatio: "xMinYMin meet",
    connections: paths
  }, rest), import_react124.default.createElement("g", null, paths));
});
Diagram.displayName = "Diagram";
Diagram.defaultProps = {
  connections: []
};
Diagram.propTypes = DiagramPropTypes;

// node_modules/grommet/es6/components/Distribution/Distribution.js
var import_react125 = __toESM(require_react());
var import_prop_types60 = __toESM(require_prop_types());

// node_modules/grommet/es6/components/Distribution/propTypes.js
var import_prop_types59 = __toESM(require_prop_types());
function _extends118() {
  _extends118 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends118.apply(this, arguments);
}
var PropType58 = {};
if (true) {
  PropType58 = _extends118({}, genericProps, {
    basis: import_prop_types59.default.oneOfType([import_prop_types59.default.oneOf(["xxsmall", "xsmall", "small", "medium", "large", "xlarge", "xxlarge", "full", "1/2", "1/3", "2/3", "1/4", "2/4", "3/4", "auto"]), import_prop_types59.default.string]),
    children: import_prop_types59.default.func,
    fill: import_prop_types59.default.bool,
    gap: import_prop_types59.default.oneOfType([import_prop_types59.default.oneOf(["none", "xxsmall", "xsmall", "small", "medium", "large", "xlarge"]), import_prop_types59.default.string]),
    values: import_prop_types59.default.arrayOf(import_prop_types59.default.shape({
      value: import_prop_types59.default.number
    })).isRequired
  });
}
var DistributionPropTypes = PropType58;

// node_modules/grommet/es6/components/Distribution/Distribution.js
var _excluded75 = ["basis", "children", "direction", "fill", "gap", "values"];
function _extends119() {
  _extends119 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends119.apply(this, arguments);
}
function _objectWithoutPropertiesLoose72(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var Value = function Value2(_ref) {
  var basis = _ref.basis, children2 = _ref.children;
  return import_react125.default.createElement(Box, {
    basis,
    flex: "shrink",
    overflow: "hidden"
  }, children2);
};
Value.propTypes = {
  basis: import_prop_types60.default.string.isRequired,
  children: import_prop_types60.default.node.isRequired
};
var Distribution = function Distribution2(_ref2) {
  var basis = _ref2.basis, children2 = _ref2.children, direction = _ref2.direction, fill = _ref2.fill, gap = _ref2.gap, values = _ref2.values, rest = _objectWithoutPropertiesLoose72(_ref2, _excluded75);
  if (values.length === 1) {
    var value = values[0];
    return import_react125.default.createElement(Value, {
      value,
      basis
    }, children2(value));
  }
  if (values.length > 1) {
    var reducer = function reducer2(accumulator, _ref3) {
      var value2 = _ref3.value;
      return accumulator + (value2 || 0);
    };
    var total = values.filter(function(v3) {
      return Object.prototype.hasOwnProperty.call(v3, "value");
    }).reduce(reducer, 0);
    var subTotal = 0;
    var subIndex;
    values.some(function(v3, index) {
      subTotal += Object.prototype.hasOwnProperty.call(v3, "value") && v3.value || 0;
      if (subTotal >= total * 0.4) {
        subIndex = index + 1;
        return true;
      }
      return false;
    });
    if (subIndex === values.length) {
      var _value = values[0];
      return import_react125.default.createElement(Value, {
        value: _value,
        basis
      }, children2(_value));
    }
    var childBasis;
    if (subTotal === 0) {
      childBasis = ["0px", "0px"];
    } else if (subTotal === total) {
      childBasis = ["full", "0px"];
    } else if (subTotal > total * 0.7) {
      childBasis = ["3/4", "1/4"];
    } else if (subTotal > total * 0.6) {
      childBasis = ["2/3", "1/3"];
    } else {
      childBasis = ["1/2", "1/2"];
    }
    return import_react125.default.createElement(Box, _extends119({
      direction,
      basis,
      flex: basis ? "shrink" : true,
      overflow: "hidden",
      gap,
      fill
    }, rest), import_react125.default.createElement(Distribution2, {
      values: values.slice(0, subIndex),
      basis: childBasis[0],
      direction: direction === "row" ? "column" : "row",
      gap
    }, children2), import_react125.default.createElement(Distribution2, {
      values: values.slice(subIndex),
      basis: childBasis[1],
      direction: direction === "row" ? "column" : "row",
      gap
    }, children2));
  }
  return null;
};
Distribution.defaultProps = {
  basis: void 0,
  children: function children(value) {
    return import_react125.default.createElement(Box, {
      fill: true,
      border: true
    }, import_react125.default.createElement(Text, null, value.value));
  },
  direction: "row",
  gap: "xsmall",
  values: []
};
Distribution.propTypes = DistributionPropTypes;

// node_modules/grommet/es6/components/FileInput/FileInput.js
var import_react126 = __toESM(require_react());
init_styled_components_browser_esm();
var import_CircleAlert = __toESM(require_CircleAlert());

// node_modules/grommet/es6/components/FileInput/StyledFileInput.js
init_styled_components_browser_esm();
var StyledFileInput = styled_components_browser_esm_default.input.withConfig({
  displayName: "StyledFileInput",
  componentId: "sc-rl7ywv-0"
})(["position:absolute;height:100%;width:100%;", " font-size:0;opacity:0;border:none;", " ", " &::-moz-focus-inner{border:none;outline:none;}&::-webkit-file-upload-button{cursor:pointer;}"], inputStyle, function(props) {
  return !props.disabled && "cursor: pointer;";
}, function(props) {
  return props.rightOffset && "\n    width: calc(100% - " + props.rightOffset + "px);\n    right: " + props.rightOffset + "px;\n    ";
});
StyledFileInput.defaultProps = {};
Object.setPrototypeOf(StyledFileInput.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/FileInput/propTypes.js
var import_prop_types61 = __toESM(require_prop_types());
var PropType59 = {};
if (true) {
  PropType59 = {
    confirmRemove: import_prop_types61.default.func,
    disabled: import_prop_types61.default.bool,
    id: import_prop_types61.default.string,
    messages: import_prop_types61.default.shape({
      browse: import_prop_types61.default.string,
      dropPrompt: import_prop_types61.default.string,
      dropPromptMultiple: import_prop_types61.default.string,
      files: import_prop_types61.default.string,
      remove: import_prop_types61.default.string,
      removeAll: import_prop_types61.default.string
    }),
    multiple: import_prop_types61.default.oneOfType([import_prop_types61.default.bool, import_prop_types61.default.shape({
      aggregateThreshold: import_prop_types61.default.number
    })]),
    name: import_prop_types61.default.string,
    onChange: import_prop_types61.default.func,
    renderFile: import_prop_types61.default.func
  };
}
var FileInputPropTypes = PropType59;

// node_modules/grommet/es6/components/FileInput/utils/formatBytes.js
var SI_CONVERSION_FACTOR = 1e3;
var IEC_CONVERSION_FACTOR = 1024;
var getCurrentOS = function getCurrentOS2() {
  var currentOS = ["Win", "Linux", "Mac"].find(function(v3) {
    var _window, _window$navigator, _window$navigator$use;
    if (typeof window !== "undefined")
      return ((_window = window) == null ? void 0 : (_window$navigator = _window.navigator) == null ? void 0 : (_window$navigator$use = _window$navigator.userAgent) == null ? void 0 : _window$navigator$use.indexOf(v3)) >= 0;
    return void 0;
  });
  return currentOS;
};
var defaultFormat = function defaultFormat2(size) {
  var units = ["B", "KB", "MB", "GB", "TB"];
  var factor = SI_CONVERSION_FACTOR;
  var index = 0;
  var num = size;
  while (num >= factor && index < units.length - 1) {
    num /= factor;
    index += 1;
  }
  return num.toFixed(1) + " " + units[index];
};
var windowsFormat = function windowsFormat2(size) {
  var num = Math.ceil(size / IEC_CONVERSION_FACTOR);
  return Intl.NumberFormat().format(num) + " KB";
};
var makeFormatBytes = function makeFormatBytes2(OS) {
  return function(size) {
    switch (OS) {
      case "Win":
        return windowsFormat(size);
      default:
        return defaultFormat(size);
    }
  };
};
var formatBytes = makeFormatBytes(getCurrentOS());

// node_modules/grommet/es6/components/FileInput/FileInput.js
var _excluded76 = ["a11yTitle", "background", "border", "confirmRemove", "disabled", "id", "plain", "renderFile", "maxSize", "messages", "margin", "multiple", "name", "onChange", "pad", "value"];
function _extends120() {
  _extends120 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends120.apply(this, arguments);
}
function _objectWithoutPropertiesLoose73(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var ContentsBox = styled_components_browser_esm_default(Box).withConfig({
  displayName: "FileInput__ContentsBox",
  componentId: "sc-1jzq7im-0"
})(["cursor:pointer;position:relative;", " ", ";", ";", ";", ";", ";"], function(props) {
  return props.disabled && disabledStyle();
}, function(props) {
  return props.theme.fileInput && props.theme.fileInput.extend;
}, function(props) {
  return props.hover && props.theme.fileInput && props.theme.fileInput.hover && props.theme.fileInput.hover.extend;
}, function(props) {
  return props.dragOver && props.theme.fileInput && props.theme.fileInput.dragOver && props.theme.fileInput.dragOver.extend;
}, function(props) {
  return props.focus && focusStyle();
}, function(props) {
  return !props.focus && unfocusStyle();
});
var Label = styled_components_browser_esm_default(Text).withConfig({
  displayName: "FileInput__Label",
  componentId: "sc-1jzq7im-1"
})(["", ";"], function(props) {
  return props.theme.fileInput && props.theme.fileInput.label && props.theme.fileInput.label.extend;
});
var Message3 = styled_components_browser_esm_default(Text).withConfig({
  displayName: "FileInput__Message",
  componentId: "sc-1jzq7im-2"
})(["", ";"], function(props) {
  return props.theme.fileInput && props.theme.fileInput.message && props.theme.fileInput.message.extend;
});
var defaultPendingRemoval = {
  event: void 0,
  index: void 0
};
var FileInput = (0, import_react126.forwardRef)(function(_ref, ref) {
  var a11yTitle = _ref.a11yTitle, background = _ref.background, border = _ref.border, confirmRemove = _ref.confirmRemove, disabled = _ref.disabled, id = _ref.id, plain = _ref.plain, renderFile = _ref.renderFile, maxSize = _ref.maxSize, messages = _ref.messages, margin = _ref.margin, multiple = _ref.multiple, name = _ref.name, _onChange = _ref.onChange, pad = _ref.pad, valueProp = _ref.value, rest = _objectWithoutPropertiesLoose73(_ref, _excluded76);
  var theme = (0, import_react126.useContext)(Me);
  var _useContext = (0, import_react126.useContext)(MessageContext), format3 = _useContext.format;
  var formContext = (0, import_react126.useContext)(FormContext);
  var _React$useState = import_react126.default.useState(), hover = _React$useState[0], setHover = _React$useState[1];
  var _React$useState2 = import_react126.default.useState(), dragOver = _React$useState2[0], setDragOver = _React$useState2[1];
  var _React$useState3 = import_react126.default.useState(), focus = _React$useState3[0], setFocus = _React$useState3[1];
  var _useState = (0, import_react126.useState)(false), showRemoveConfirmation = _useState[0], setShowRemoveConfirmation = _useState[1];
  var _useState2 = (0, import_react126.useState)(defaultPendingRemoval), pendingRemoval = _useState2[0], setPendingRemoval = _useState2[1];
  var aggregateThreshold = multiple && multiple.aggregateThreshold || 10;
  var max = multiple == null ? void 0 : multiple.max;
  var inputRef = useForwardedRef(ref);
  var controlRef = (0, import_react126.useRef)();
  var removeRef = (0, import_react126.useRef)();
  var ConfirmRemove = confirmRemove;
  var RemoveIcon = theme.fileInput.icons.remove;
  var usingKeyboard = useKeyboard();
  var _formContext$useFormI = formContext.useFormInput({
    name,
    value: valueProp,
    initialValue: [],
    validate: [maxSize ? function() {
      var fileList = [].concat(files);
      var message2 = "";
      var numOfInvalidFiles = fileList.filter(function(_ref2) {
        var size = _ref2.size;
        return size > maxSize;
      }).length;
      if (numOfInvalidFiles) {
        var messageId = "fileInput.maxSizeSingle";
        if (multiple) {
          messageId = "fileInput.maxSizeMultiple." + (numOfInvalidFiles === 1 ? "singular" : "plural");
        }
        message2 = format3({
          id: messageId,
          messages,
          values: {
            maxSize: formatBytes(maxSize),
            numOfFiles: numOfInvalidFiles
          }
        });
      }
      return message2;
    } : "", max ? function() {
      var fileList = [].concat(files);
      var message2 = "";
      if (fileList.length > max) {
        message2 = format3({
          id: "fileInput.maxFile",
          messages,
          values: {
            max
          }
        });
      }
      return message2;
    } : ""]
  }), files = _formContext$useFormI[0], setFiles = _formContext$useFormI[1];
  var mergeTheme = function mergeTheme2(propertyName, defaultKey) {
    var result = {};
    var themeProp = theme.fileInput[propertyName];
    if (themeProp)
      if (typeof themeProp !== "object") {
        if (defaultKey)
          result[defaultKey] = themeProp;
        else
          result = themeProp;
      } else
        result = _extends120({}, themeProp);
    var hoverThemeProp = theme.fileInput.hover[propertyName];
    if (hover && hoverThemeProp)
      if (typeof hoverThemeProp !== "object") {
        if (defaultKey)
          result[defaultKey] = hoverThemeProp;
        else
          result = hoverThemeProp;
      } else
        result = _extends120({}, result, hoverThemeProp);
    var dragOverThemeProp = theme.fileInput.dragOver[propertyName];
    if (dragOver && dragOverThemeProp)
      if (typeof dragOverThemeProp !== "object") {
        if (defaultKey)
          result[defaultKey] = dragOverThemeProp;
        else
          result = dragOverThemeProp;
      } else
        result = _extends120({}, result, dragOverThemeProp);
    return typeof result === "object" && Object.keys(result).length === 0 ? void 0 : result;
  };
  var rightPad;
  if (mergeTheme("pad")) {
    var _mergeTheme = mergeTheme("pad"), horizontal12 = _mergeTheme.horizontal, right = _mergeTheme.right;
    if (right) {
      rightPad = theme.global.edgeSize[right] || right;
    } else if (horizontal12) {
      rightPad = theme.global.edgeSize[horizontal12] || horizontal12;
    }
  }
  var rightOffset;
  if (removeRef.current && controlRef.current) {
    var rightOffsetBrowse = controlRef.current.getBoundingClientRect().width;
    var rightOffsetRemove = removeRef.current.getBoundingClientRect().width;
    if (rightPad && typeof rightPad === "string")
      rightOffset = rightOffsetRemove + parseMetricToNum(rightPad);
    if (files.length === 1 || files.length > aggregateThreshold) {
      rightOffset = rightOffsetBrowse + rightOffsetRemove + parseMetricToNum(theme.global.edgeSize.small) * 2;
    } else if (rightOffsetBrowse > rightOffsetRemove) {
      rightOffset = rightOffsetBrowse + parseMetricToNum(theme.global.edgeSize.small) * 2;
    } else
      rightOffset = rightOffsetRemove;
  } else if (!files.length && controlRef.current) {
    rightOffset = controlRef.current.getBoundingClientRect().width + parseMetricToNum(theme.global.edgeSize.small) * 2;
  }
  var message;
  if (!files.length) {
    message = format3({
      id: multiple ? "fileInput.dropPromptMultiple" : "fileInput.dropPrompt",
      messages
    });
  } else
    message = files.length + " items";
  var removeFile = function removeFile2(index) {
    var nextFiles;
    if (index === "all") {
      nextFiles = [];
    } else {
      nextFiles = [].concat(files);
      nextFiles.splice(index, 1);
    }
    setFiles(nextFiles);
    var dt2 = new DataTransfer();
    var curFiles = inputRef.current.files;
    if (index === "all" || nextFiles.length === 0)
      inputRef.current.value = "";
    for (var i3 = 0; i3 < curFiles.length; i3 += 1) {
      var curfile = curFiles[i3];
      if (index !== i3)
        dt2.items.add(curfile);
    }
    var nativeInputValueSetter = Object.getOwnPropertyDescriptor(window.HTMLInputElement.prototype, "files").set;
    nativeInputValueSetter.call(inputRef.current, dt2.files);
    var event = new Event("input", {
      bubbles: true
    });
    inputRef.current.dispatchEvent(event);
    if (_onChange)
      _onChange(event, {
        files: nextFiles
      });
    inputRef.current.focus();
  };
  return import_react126.default.createElement(import_react126.default.Fragment, null, import_react126.default.createElement(ContentsBox, {
    theme,
    flex: false,
    disabled,
    background: mergeTheme("background", "color"),
    border: !plain ? mergeTheme("border", "side") : void 0,
    margin: mergeTheme("margin"),
    pad: mergeTheme("pad"),
    round: mergeTheme("round", "size"),
    align: files.length ? "stretch" : "center",
    justify: "center",
    hover,
    onMouseOver: disabled ? void 0 : function() {
      return setHover(true);
    },
    onMouseOut: disabled ? void 0 : function() {
      return setHover(false);
    },
    dragOver,
    focus: usingKeyboard && focus
  }, import_react126.default.createElement(StyledFileInput, _extends120({
    ref: inputRef,
    type: "file",
    id,
    name,
    maxSize,
    multiple,
    disabled,
    plain: true,
    rightOffset
  }, rest, {
    onDragOver: function onDragOver() {
      return setDragOver(true);
    },
    onDragLeave: function onDragLeave() {
      return setDragOver(false);
    },
    onChange: function onChange(event) {
      event.persist();
      var fileList = event.target.files;
      var nextFiles = multiple ? [].concat(files) : [];
      var _loop = function _loop2(i4) {
        var existing = nextFiles.filter(function(file) {
          return file.name === fileList[i4].name && file.size === fileList[i4].size;
        }).length > 0;
        if (!existing) {
          nextFiles.push(fileList[i4]);
        }
      };
      for (var i3 = 0; i3 < fileList.length; i3 += 1) {
        _loop(i3);
      }
      setFiles(nextFiles);
      setDragOver(false);
      if (_onChange)
        _onChange(event, {
          files: nextFiles
        });
    },
    onBlur: function onBlur() {
      return setFocus(false);
    },
    onFocus: function onFocus() {
      return setFocus(true);
    }
  })), (!files.length || files.length > 1) && import_react126.default.createElement(Box, {
    align: "center",
    fill: "horizontal",
    direction: "row",
    justify: "between"
  }, files.length <= aggregateThreshold && import_react126.default.createElement(import_react126.default.Fragment, null, import_react126.default.createElement(Message3, theme.fileInput.message, message), import_react126.default.createElement(Keyboard, {
    onSpace: function onSpace(event) {
      event.preventDefault();
      if (controlRef.current === event.target)
        inputRef.current.click();
    },
    onEnter: function onEnter(event) {
      if (controlRef.current === event.target)
        inputRef.current.click();
    }
  }, theme.fileInput.button ? import_react126.default.createElement(
    Button,
    {
      tabIndex: -1,
      ref: controlRef,
      kind: theme.fileInput.button,
      label: format3({
        id: "fileInput.browse",
        messages
      }),
      onClick: function onClick() {
        inputRef.current.click();
        inputRef.current.focus();
      }
    }
  ) : import_react126.default.createElement(
    Anchor,
    {
      tabIndex: -1,
      alignSelf: "center",
      ref: controlRef,
      margin: "small",
      onClick: function onClick() {
        inputRef.current.click();
        inputRef.current.focus();
      },
      label: format3({
        id: "fileInput.browse",
        messages
      })
    }
  )))), files.length > aggregateThreshold && import_react126.default.createElement(Box, {
    justify: "between",
    direction: "row",
    align: "center"
  }, import_react126.default.createElement(Label, theme.fileInput.label, files.length, " ", format3({
    id: "fileInput.files",
    messages
  })), import_react126.default.createElement(Box, {
    flex: false,
    direction: "row",
    align: "center"
  }, import_react126.default.createElement(Button, {
    ref: removeRef,
    a11yTitle: format3({
      id: "fileInput.removeAll",
      messages
    }),
    icon: import_react126.default.createElement(RemoveIcon, null),
    hoverIndicator: true,
    onClick: function onClick(event) {
      if (confirmRemove) {
        event.persist();
        setPendingRemoval({
          event,
          index: "all"
        });
        setShowRemoveConfirmation(true);
      } else
        removeFile("all");
    }
  }), import_react126.default.createElement(Keyboard, {
    onSpace: function onSpace(event) {
      if (controlRef.current === event.target)
        inputRef.current.click();
    },
    onEnter: function onEnter(event) {
      if (controlRef.current === event.target)
        inputRef.current.click();
    }
  }, theme.fileInput.button ? import_react126.default.createElement(
    Button,
    {
      tabIndex: -1,
      ref: controlRef,
      kind: theme.fileInput.button,
      label: format3({
        id: "fileInput.browse",
        messages
      }),
      onClick: function onClick() {
        inputRef.current.click();
        inputRef.current.focus();
      }
    }
  ) : import_react126.default.createElement(
    Anchor,
    {
      tabIndex: -1,
      alignSelf: "center",
      ref: controlRef,
      margin: "small",
      onClick: function onClick() {
        inputRef.current.click();
        inputRef.current.focus();
      },
      label: format3({
        id: "fileInput.browse",
        messages
      })
    }
  )))), files.length > 0 && files.length <= aggregateThreshold && files.map(function(file, index) {
    return import_react126.default.createElement(Box, {
      key: file.name,
      justify: "between",
      direction: "row",
      align: "center"
    }, renderFile ? renderFile(file) : import_react126.default.createElement(Box, _extends120({}, theme.fileInput.label, {
      gap: "xsmall",
      align: "center",
      direction: "row"
    }), (maxSize && file.size > maxSize || max && index >= max) && import_react126.default.createElement(import_CircleAlert.CircleAlert, null), import_react126.default.createElement(Label, {
      weight: theme.global.input.weight || theme.global.input.font.weight,
      truncate: true
    }, file.name)), import_react126.default.createElement(Box, {
      flex: false,
      direction: "row",
      align: "center"
    }, import_react126.default.createElement(Button, {
      ref: index ? void 0 : removeRef,
      a11yTitle: format3({
        id: "fileInput.remove",
        messages
      }) + " " + file.name,
      icon: import_react126.default.createElement(RemoveIcon, null),
      hoverIndicator: true,
      onClick: function onClick(event) {
        if (confirmRemove) {
          event.persist();
          setPendingRemoval({
            event,
            index
          });
          setShowRemoveConfirmation(true);
        } else
          removeFile(index);
      }
    }), files.length === 1 && import_react126.default.createElement(Keyboard, {
      onSpace: function onSpace(event) {
        if (controlRef.current === event.target)
          inputRef.current.click();
      },
      onEnter: function onEnter(event) {
        if (controlRef.current === event.target)
          inputRef.current.click();
      }
    }, theme.fileInput.button ? import_react126.default.createElement(
      Button,
      {
        tabIndex: -1,
        ref: controlRef,
        kind: theme.fileInput.button,
        label: format3({
          id: "fileInput.browse",
          messages
        }),
        onClick: function onClick() {
          inputRef.current.click();
          inputRef.current.focus();
        }
      }
    ) : import_react126.default.createElement(
      Anchor,
      {
        tabIndex: -1,
        ref: controlRef,
        margin: "small",
        onClick: function onClick() {
          inputRef.current.click();
          inputRef.current.focus();
        },
        label: format3({
          id: "fileInput.browse",
          messages
        })
      }
    ))));
  })), showRemoveConfirmation && import_react126.default.createElement(ConfirmRemove, {
    onConfirm: function onConfirm() {
      removeFile(pendingRemoval.index);
      setPendingRemoval(defaultPendingRemoval);
      setShowRemoveConfirmation(false);
    },
    onCancel: function onCancel() {
      return setShowRemoveConfirmation(false);
    }
  }));
});
FileInput.defaultProps = {};
Object.setPrototypeOf(FileInput.defaultProps, defaultProps2);
FileInput.displayName = "FileInput";
FileInput.propTypes = FileInputPropTypes;

// node_modules/grommet/es6/components/Grommet/Grommet.js
var import_react127 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/themes/grommet.js
init_styled_components_browser_esm();
var grommet = deepFreeze({
  global: {
    colors: {
      background: {
        light: "#ffffff",
        dark: "#000000"
      }
    },
    backgrounds: {
      stack: {
        color: "light-1",
        image: "url(https://v2.grommet.io/img/stak-hurrah.svg)"
      },
      "gradient-purple-blue": {
        color: "neutral-3",
        image: "linear-gradient(\n          #3D138D 0%, /* neutral-2 */\n          #00739D 100% /* neutral-3 */\n        );",
        rotate: 145
      },
      "gradient-purple-gold": {
        color: "neutral-2",
        image: "linear-gradient(\n          #3D138D 0%, /* neutral-2 */\n          #EB0F79 75%,\n          #FFCA58 100% /* accent-4 */\n        );"
      }
    },
    font: {
      family: '-apple-system,\n         BlinkMacSystemFont, \n         "Segoe UI", \n         Roboto, \n         Oxygen, \n         Ubuntu, \n         Cantarell, \n         "Fira Sans", \n         "Droid Sans",  \n         "Helvetica Neue", \n         Arial, sans-serif,  \n         "Apple Color Emoji", \n         "Segoe UI Emoji", \n         "Segoe UI Symbol"'
    }
  },
  button: {
    extend: Ae(["", ""], function(props) {
      return !props.plain && "font-weight: bold;";
    })
  }
});

// node_modules/grommet/es6/themes/dark.js
init_styled_components_browser_esm();
var accentColors2 = ["#FD6FFF", "#60EB9F", "#60EBE1", "#FFCA58"];
var neutralColors2 = ["#EB6060", "#01C781", "#6095EB", "#FFB200"];
var statusColors2 = {
  critical: "#FF3333",
  error: "#FF3333",
  warning: "#F7E464",
  ok: "#7DD892",
  unknown: "#a8a8a8",
  disabled: "#a8a8a8"
};
var backgroundColor = "#111111";
var colors2 = {
  active: "rgba(102, 102, 102, 0.5)",
  background: backgroundColor,
  black: "#000000",
  brand: "#FD6FFF",
  control: {
    dark: "#FFCA58",
    light: "#403216"
  },
  focus: "#FFCA58",
  icon: {
    dark: "#f8f8f8",
    light: "#666666"
  },
  placeholder: "#AAAAAA",
  text: {
    dark: "#eeeeee",
    light: "#444444"
  },
  white: "#FFFFFF"
};
var colorArray3 = function colorArray4(array, prefix) {
  return array.forEach(function(color, index) {
    colors2[prefix + "-" + (index + 1)] = color;
  });
};
colorArray3(accentColors2, "accent");
colorArray3(neutralColors2, "neutral");
Object.keys(statusColors2).forEach(function(color) {
  colors2["status-" + color] = statusColors2[color];
});
var dark = deepFreeze({
  global: {
    colors: colors2,
    drop: {
      background: "#333333"
    },
    focus: {
      border: {
        color: Ae(["", ";"], function(props) {
          return normalizeColor("focus", props.theme);
        }),
        width: "2px"
      }
    },
    font: {
      family: "Arial"
    },
    input: {
      weight: 700
    }
  },
  anchor: {
    color: "control"
  },
  layer: {
    background: backgroundColor,
    overlay: {
      background: "rgba(48, 48, 48, 0.5)"
    }
  }
});

// node_modules/grommet/es6/themes/hacktoberfest2022.js
init_styled_components_browser_esm();
var hacktoberfest2022 = deepFreeze({
  defaultMode: "dark",
  global: {
    colors: {
      background: "#160F1D",
      "background-back": "#000000",
      "background-front": "#160F1D",
      "text-strong": "#FFFFFF",
      text: "#E4E1E6",
      "text-weak": "#76717A",
      grey: "#AFACB2",
      lime: "#C6FC60",
      pink: "#D856A7",
      purple: "#7C7EF4",
      teal: "#73DAFB",
      yellow: "#EDD063",
      darkPurple: "#291E40",
      active: "purple",
      focus: "#233670",
      brand: "lime",
      control: "teal",
      "graph-0": "yellow",
      "graph-1": "purple",
      "graph-2": "teal",
      "graph-3": "pink",
      "graph-4": "lime",
      // clear unused colors
      icon: void 0,
      "accent-1": void 0,
      "accent-2": void 0,
      "accent-3": void 0,
      "accent-4": void 0,
      "neutral-1": void 0,
      "neutral-2": void 0,
      "neutral-3": void 0,
      "neutral-4": void 0,
      "neutral-5": void 0,
      "light-1": void 0,
      "light-2": void 0,
      "light-3": void 0,
      "light-4": void 0,
      "light-5": void 0,
      "light-6": void 0,
      "dark-1": void 0,
      "dark-2": void 0,
      "dark-3": void 0,
      "dark-4": void 0,
      "dark-5": void 0,
      "dark-6": void 0
    },
    backgrounds: {
      "gradient-purple-teal": {
        image: "linear-gradient(\n          #7C7EF4 0%,\n          #73DAFB 100%\n        );"
      },
      "gradient-teal-purple": {
        image: "linear-gradient(\n          #73DAFB 0%,\n          #7C7EF4 100%\n        );"
      },
      "gradient-yellow-teal-purple": {
        image: "linear-gradient(\n          #EDD063 0%,\n          #73DAFB 50%,\n          #7C7EF4 100%\n        );",
        rotate: 90
      },
      "gradient-yellow-teal": {
        image: "linear-gradient(\n          #EDD063 0%,\n          #73DAFB 100%\n        );",
        rotate: 90
      }
    },
    focus: {
      shadow: {
        color: "focus",
        size: "3px"
      }
    },
    font: {
      family: '"JetBrains Mono", monospace',
      face: "/* latin */\n@font-face {\n  font-family: 'JetBrains Mono';\n  font-style: normal;\n  font-weight: 400;\n  src: url(https://fonts.gstatic.com/s/jetbrainsmono/v13/tDbY2o-flEEny0FZhsfKu5WU4zr3E_BX0PnT8RD8yKxTOlOTk6OThhvA.woff) format('woff');\n  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\n}"
    }
  },
  grommet: {
    extend: Ae(["text-transform:uppercase;"])
  },
  anchor: {
    color: "text",
    hover: {
      color: "text-strong"
    }
  },
  button: {
    border: {
      width: "0px",
      radius: "0px"
    },
    padding: {
      horizontal: "20px",
      vertical: "10px"
    },
    color: "text-strong",
    size: {
      small: {
        pad: {
          horizontal: "16px",
          vertical: "8px"
        }
      },
      medium: {
        pad: {
          horizontal: "20px",
          vertical: "10px"
        }
      }
    },
    "default": {
      color: "text-strong"
    },
    primary: {
      border: false,
      background: "gradient-yellow-teal-purple",
      color: "text"
    },
    hover: {
      border: false
    },
    extend: Ae(["clip-path:polygon( 12px 0px,100% 0px,100% 72%,calc(100% - 12px) 100%,0px 100%,0px 12px );text-transform:uppercase;&:focus{clip-path:none;}"])
  },
  heading: {
    extend: Ae(["text-shadow:rgba(255,215,77,0.6) -1px -1px 6px,rgba(124,127,255,0.6) 1px 1px 6px;"])
  }
});

// node_modules/grommet/es6/components/Grommet/StyledGrommet.js
init_styled_components_browser_esm();
var fullStyle = function fullStyle2(full) {
  if (full === "min")
    return Ae(["min-height:100vh;"]);
  return Ae(["width:100vw;height:100vh;overflow:auto;"]);
};
var StyledGrommet = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledGrommet",
  componentId: "sc-19lkkz7-0"
})(["", " ", " ", " ", " ", ""], function(props) {
  return !props.plain && baseStyle;
}, function(props) {
  return props.full && fullStyle(props.full);
}, function(props) {
  return props.theme.global.font.face;
}, function(props) {
  return props.theme.grommet.extend;
}, function(props) {
  return props.cssVars && Object.keys(props.theme.global.colors).filter(function(k3) {
    return typeof props.theme.global.colors[k3] === "string";
  }).map(function(k3) {
    return "--" + k3 + ": " + props.theme.global.colors[k3] + ";";
  }).join("\n");
});
StyledGrommet.defaultProps = {};
Object.setPrototypeOf(StyledGrommet.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/Grommet/propTypes.js
var import_prop_types62 = __toESM(require_prop_types());
var PropType60 = {};
if (true) {
  PropType60 = {
    background: backgroundDoc,
    dir: import_prop_types62.default.oneOf(["rtl"]),
    full: import_prop_types62.default.oneOfType([import_prop_types62.default.bool, import_prop_types62.default.oneOf(["min"])]),
    options: import_prop_types62.default.shape({
      layer: import_prop_types62.default.shape({
        singleId: import_prop_types62.default.bool
      })
    }),
    plain: import_prop_types62.default.bool,
    cssVars: import_prop_types62.default.bool,
    theme: import_prop_types62.default.object,
    themeMode: import_prop_types62.default.oneOf(["dark", "light", "auto"]),
    userAgent: import_prop_types62.default.string,
    containerTarget: import_prop_types62.default.object,
    messages: import_prop_types62.default.shape({
      format: import_prop_types62.default.func,
      messages: import_prop_types62.default.shape({
        fileInput: import_prop_types62.default.shape({
          browse: import_prop_types62.default.string,
          dropPrompt: import_prop_types62.default.string,
          dropPromptMultiple: import_prop_types62.default.string,
          files: import_prop_types62.default.string,
          remove: import_prop_types62.default.string,
          removeAll: import_prop_types62.default.string
        }),
        form: import_prop_types62.default.shape({
          invalid: import_prop_types62.default.string,
          required: import_prop_types62.default.string
        }),
        menu: import_prop_types62.default.shape({
          openMenu: import_prop_types62.default.string,
          closeMenu: import_prop_types62.default.string
        }),
        rangeSelector: import_prop_types62.default.shape({
          lower: import_prop_types62.default.string,
          upper: import_prop_types62.default.string
        }),
        select: import_prop_types62.default.shape({
          multiple: import_prop_types62.default.string
        }),
        skipLinks: import_prop_types62.default.shape({
          skipTo: import_prop_types62.default.string
        }),
        tabs: import_prop_types62.default.shape({
          tabContents: import_prop_types62.default.string
        }),
        textInput: import_prop_types62.default.shape({
          enterSelect: import_prop_types62.default.string,
          suggestionsCount: import_prop_types62.default.string,
          suggestionsExist: import_prop_types62.default.string,
          suggestionIsOpen: import_prop_types62.default.string
        }),
        video: import_prop_types62.default.shape({
          closeMenu: import_prop_types62.default.string,
          fullScreen: import_prop_types62.default.string,
          progressMeter: import_prop_types62.default.string,
          scrubber: import_prop_types62.default.string,
          openMenu: import_prop_types62.default.string,
          pauseButton: import_prop_types62.default.string,
          playButton: import_prop_types62.default.string,
          volumeDown: import_prop_types62.default.string,
          volumeUp: import_prop_types62.default.string
        })
      }),
      onAnalytics: import_prop_types62.default.func
    })
  };
}
var GrommetPropTypes = PropType60;

// node_modules/grommet/es6/components/Grommet/Grommet.js
var _excluded77 = ["children", "full", "containerTarget", "theme", "options", "messages", "onAnalytics"];
function _extends121() {
  _extends121 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends121.apply(this, arguments);
}
function _objectWithoutPropertiesLoose74(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var FullGlobalStyle = $e(["body{margin:0;}"]);
var deviceResponsive = function deviceResponsive2(userAgent, theme) {
  if (userAgent) {
    if (/(tablet|ipad|playbook|silk)|(android(?!.*mobile))/i.test(userAgent)) {
      return getDeviceBreakpoint("tablet", theme);
    }
    if (/Mobile|iPhone|Android/.test(userAgent)) {
      return getDeviceBreakpoint("phone", theme);
    }
    return getDeviceBreakpoint("computer", theme);
  }
  return void 0;
};
var defaultOptions = {};
var Grommet = (0, import_react127.forwardRef)(function(props, ref) {
  var children2 = props.children, full = props.full, _props$containerTarge = props.containerTarget, containerTarget = _props$containerTarge === void 0 ? typeof document === "object" ? document.body : void 0 : _props$containerTarge, themeProp = props.theme, _props$options = props.options, options = _props$options === void 0 ? defaultOptions : _props$options, messagesProp = props.messages, onAnalytics = props.onAnalytics, rest = _objectWithoutPropertiesLoose74(props, _excluded77);
  var background = props.background, dir = props.dir, themeMode = props.themeMode, userAgent = props.userAgent;
  var _useState = (0, import_react127.useState)(), stateResponsive = _useState[0], setResponsive = _useState[1];
  var _useState2 = (0, import_react127.useState)([]), roots = _useState2[0], setRoots = _useState2[1];
  var theme = (0, import_react127.useMemo)(function() {
    var nextTheme = deepMerge(base, themeProp || {});
    if (themeProp && themeProp.menu && themeProp.menu.drop && themeProp.menu.drop.align) {
      delete nextTheme.menu.drop.align;
      nextTheme.menu.drop.align = themeProp.menu.drop.align;
    }
    var themeBackground = nextTheme.global.colors.background;
    nextTheme.dark = (themeMode || nextTheme.defaultMode) === "dark";
    if (themeMode === "auto" && window.matchMedia && window.matchMedia("(prefers-color-scheme: dark)").matches) {
      nextTheme.dark = true;
    }
    var color = normalizeColor(background || themeBackground, nextTheme);
    nextTheme.dark = backgroundIsDark(color, nextTheme);
    nextTheme.baseBackground = background || themeBackground;
    nextTheme.background = nextTheme.baseBackground;
    if (dir) {
      nextTheme.dir = dir;
    }
    return nextTheme;
  }, [background, dir, themeMode, themeProp]);
  var messages = (0, import_react127.useMemo)(function() {
    var nextMessages = deepMerge(default_default, (messagesProp == null ? void 0 : messagesProp.messages) || {});
    return {
      messages: nextMessages,
      format: function format3(opts) {
        var message = (messagesProp == null ? void 0 : messagesProp.format) && messagesProp.format(opts);
        return typeof message !== "undefined" ? message : _format(opts, nextMessages);
      }
    };
  }, [messagesProp]);
  (0, import_react127.useEffect)(function() {
    var onResize = function onResize2() {
      setResponsive(getBreakpoint(document.body.clientWidth, theme));
    };
    window.addEventListener("resize", onResize);
    onResize();
    return function() {
      window.removeEventListener("resize", onResize);
    };
  }, [theme]);
  var responsive = stateResponsive || deviceResponsive(userAgent, theme) || theme.global.deviceBreakpoints.tablet;
  var grommetRef = useForwardedRef(ref);
  (0, import_react127.useEffect)(function() {
    if (grommetRef.current)
      setRoots([grommetRef.current]);
  }, [grommetRef]);
  return import_react127.default.createElement(Me.Provider, {
    value: theme
  }, import_react127.default.createElement(ResponsiveContext.Provider, {
    value: responsive
  }, import_react127.default.createElement(RootsContext.Provider, {
    value: roots
  }, import_react127.default.createElement(ContainerTargetContext.Provider, {
    value: containerTarget
  }, import_react127.default.createElement(OptionsContext.Provider, {
    value: options
  }, import_react127.default.createElement(MessageContext.Provider, {
    value: messages
  }, import_react127.default.createElement(AnalyticsProvider, {
    onAnalytics
  }, import_react127.default.createElement(StyledGrommet, _extends121({
    full
  }, rest, {
    ref: grommetRef
  }), children2), full && import_react127.default.createElement(FullGlobalStyle, null))))))));
});
Grommet.displayName = "Grommet";
Grommet.propTypes = GrommetPropTypes;

// node_modules/grommet/es6/components/Main/Main.js
var import_react128 = __toESM(require_react());
function _objectDestructuringEmpty7(obj) {
  if (obj == null)
    throw new TypeError("Cannot destructure " + obj);
}
function _extends122() {
  _extends122 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends122.apply(this, arguments);
}
var Main = function Main2(_ref) {
  var rest = _extends122({}, (_objectDestructuringEmpty7(_ref), _ref));
  return import_react128.default.createElement(Box, _extends122({
    as: "main",
    fill: "vertical",
    flex: "grow",
    overflow: "auto"
  }, rest));
};

// node_modules/grommet/es6/components/Markdown/Markdown.js
var import_react131 = __toESM(require_react());

// node_modules/markdown-to-jsx/dist/index.modern.js
var t2 = __toESM(require_react());
function n2() {
  return n2 = Object.assign || function(t3) {
    for (var n3 = 1; n3 < arguments.length; n3++) {
      var e3 = arguments[n3];
      for (var r3 in e3)
        Object.prototype.hasOwnProperty.call(e3, r3) && (t3[r3] = e3[r3]);
    }
    return t3;
  }, n2.apply(this, arguments);
}
var e2 = ["children", "options"];
var r2 = ["allowFullScreen", "allowTransparency", "autoComplete", "autoFocus", "autoPlay", "cellPadding", "cellSpacing", "charSet", "className", "classId", "colSpan", "contentEditable", "contextMenu", "crossOrigin", "encType", "formAction", "formEncType", "formMethod", "formNoValidate", "formTarget", "frameBorder", "hrefLang", "inputMode", "keyParams", "keyType", "marginHeight", "marginWidth", "maxLength", "mediaGroup", "minLength", "noValidate", "radioGroup", "readOnly", "rowSpan", "spellCheck", "srcDoc", "srcLang", "srcSet", "tabIndex", "useMap"].reduce((t3, n3) => (t3[n3.toLowerCase()] = n3, t3), { for: "htmlFor" });
var o2 = { amp: "&", apos: "'", gt: ">", lt: "<", nbsp: " ", quot: "“" };
var c2 = ["style", "script"];
var a2 = /([-A-Z0-9_:]+)(?:\s*=\s*(?:(?:"((?:\\.|[^"])*)")|(?:'((?:\\.|[^'])*)')|(?:\{((?:\\.|{[^}]*?}|[^}])*)\})))?/gi;
var _2 = /mailto:/i;
var u2 = /\n{2,}$/;
var i2 = /^( *>[^\n]+(\n[^\n]+)*\n*)+\n{2,}/;
var l2 = /^ *> ?/gm;
var s2 = /^ {2,}\n/;
var f = /^(?:( *[-*_])){3,} *(?:\n *)+\n/;
var d2 = /^\s*(`{3,}|~{3,}) *(\S+)?([^\n]*?)?\n([\s\S]+?)\s*\1 *(?:\n *)*\n?/;
var p = /^(?: {4}[^\n]+\n*)+(?:\n *)+\n?/;
var m2 = /^(`+)\s*([\s\S]*?[^`])\s*\1(?!`)/;
var g2 = /^(?:\n *)*\n/;
var y2 = /\r\n?/g;
var h = /^\[\^([^\]]+)](:.*)\n/;
var k2 = /^\[\^([^\]]+)]/;
var x2 = /\f/g;
var b2 = /^\s*?\[(x|\s)\]/;
var v2 = /^ *(#{1,6}) *([^\n]+?)(?: +#*)?(?:\n *)*(?:\n|$)/;
var $2 = /^([^\n]+)\n *(=|-){3,} *(?:\n *)+\n/;
var S2 = /^ *(?!<[a-z][^ >/]* ?\/>)<([a-z][^ >/]*) ?([^>]*)\/{0}>\n?(\s*(?:<\1[^>]*?>[\s\S]*?<\/\1>|(?!<\1)[\s\S])*?)<\/\1>\n*/i;
var z2 = /&([a-zA-Z]+);/g;
var w2 = /^<!--[\s\S]*?(?:-->)/;
var A2 = /^(data|aria|x)-[a-z_][a-z\d_.-]*$/;
var E2 = /^ *<([a-z][a-z0-9:]*)(?:\s+((?:<.*?>|[^>])*))?\/?>(?!<\/\1>)(\s*\n)?/i;
var L2 = /^\{.*\}$/;
var M2 = /^(https?:\/\/[^\s<]+[^<.,:;"')\]\s])/;
var I2 = /^<([^ >]+@[^ >]+)>/;
var O2 = /^<([^ >]+:\/[^ >]+)>/;
var B2 = /-([a-z])?/gi;
var R2 = /^(.*\|?.*)\n *(\|? *[-:]+ *\|[-| :]*)\n((?:.*\|.*\n)*)\n?/;
var T2 = /^\[([^\]]*)\]:\s+<?([^\s>]+)>?\s*("([^"]*)")?/;
var j2 = /^!\[([^\]]*)\] ?\[([^\]]*)\]/;
var C2 = /^\[([^\]]*)\] ?\[([^\]]*)\]/;
var D2 = /(\[|\])/g;
var N2 = /(\n|^[-*]\s|^#|^ {2,}|^-{2,}|^>\s)/;
var Z2 = /\t/g;
var F2 = /^ *\| */;
var P2 = /(^ *\||\| *$)/g;
var G2 = / *$/;
var H2 = /^ *:-+: *$/;
var q2 = /^ *:-+ *$/;
var U2 = /^ *-+: *$/;
var V2 = /^([*_])\1((?:\[.*?\][([].*?[)\]]|<.*?>(?:.*?<.*?>)?|`.*?`|~+.*?~+|.)*?)\1\1(?!\1)/;
var W2 = /^([*_])((?:\[.*?\][([].*?[)\]]|<.*?>(?:.*?<.*?>)?|`.*?`|~+.*?~+|.)*?)\1(?!\1|\w)/;
var Q2 = /^==((?:\[.*?\]|<.*?>(?:.*?<.*?>)?|`.*?`|.)*?)==/;
var X2 = /^~~((?:\[.*?\]|<.*?>(?:.*?<.*?>)?|`.*?`|.)*?)~~/;
var J2 = /^\\([^0-9A-Za-z\s])/;
var K2 = /^[\s\S]+?(?=[^0-9A-Z\s\u00c0-\uffff&;.()'"]|\d+\.|\n\n| {2,}\n|\w+:\S|$)/i;
var Y2 = /^\n+/;
var tt = /^([ \t]*)/;
var nt = /\\([^\\])/g;
var et = / *\n+$/;
var rt = /(?:^|\n)( *)$/;
var ot = "(?:\\d+\\.)";
var ct = "(?:[*+-])";
function at(t3) {
  return "( *)(" + (1 === t3 ? ot : ct) + ") +";
}
var _t = at(1);
var ut = at(2);
function it(t3) {
  return new RegExp("^" + (1 === t3 ? _t : ut));
}
var lt = it(1);
var st = it(2);
function ft(t3) {
  return new RegExp("^" + (1 === t3 ? _t : ut) + "[^\\n]*(?:\\n(?!\\1" + (1 === t3 ? ot : ct) + " )[^\\n]*)*(\\n|$)", "gm");
}
var dt = ft(1);
var pt = ft(2);
function mt(t3) {
  const n3 = 1 === t3 ? ot : ct;
  return new RegExp("^( *)(" + n3 + ") [\\s\\S]+?(?:\\n{2,}(?! )(?!\\1" + n3 + " (?!" + n3 + " ))\\n*|\\s*\\n*$)");
}
var gt = mt(1);
var yt = mt(2);
function ht(t3, n3) {
  const e3 = 1 === n3, r3 = e3 ? gt : yt, o3 = e3 ? dt : pt, c3 = e3 ? lt : st;
  return { t(t4, n4, e4) {
    const o4 = rt.exec(e4);
    return o4 && (n4.o || !n4._ && !n4.u) ? r3.exec(t4 = o4[1] + t4) : null;
  }, i: Gt.HIGH, l(t4, n4, r4) {
    const a3 = e3 ? +t4[2] : void 0, _3 = t4[0].replace(u2, "\n").match(o3);
    let i3 = false;
    return { p: _3.map(function(t5, e4) {
      const o4 = c3.exec(t5)[0].length, a4 = new RegExp("^ {1," + o4 + "}", "gm"), u3 = t5.replace(a4, "").replace(c3, ""), l3 = e4 === _3.length - 1, s3 = -1 !== u3.indexOf("\n\n") || l3 && i3;
      i3 = s3;
      const f2 = r4._, d3 = r4.o;
      let p2;
      r4.o = true, s3 ? (r4._ = false, p2 = u3.replace(et, "\n\n")) : (r4._ = true, p2 = u3.replace(et, ""));
      const m3 = n4(p2, r4);
      return r4._ = f2, r4.o = d3, m3;
    }), m: e3, g: a3 };
  }, h: (n4, e4, r4) => t3(n4.m ? "ol" : "ul", { key: r4.k, start: n4.g }, n4.p.map(function(n5, o4) {
    return t3("li", { key: o4 }, e4(n5, r4));
  })) };
}
var kt = /^\[([^\]]*)]\( *((?:\([^)]*\)|[^() ])*) *"?([^)"]*)?"?\)/;
var xt = /^!\[([^\]]*)]\( *((?:\([^)]*\)|[^() ])*) *"?([^)"]*)?"?\)/;
var bt = [i2, d2, p, v2, $2, w2, R2, dt, gt, pt, yt];
var vt = [...bt, /^[^\n]+(?:  \n|\n{2,})/, S2, E2];
function $t(t3) {
  return t3.replace(/[ÀÁÂÃÄÅàáâãäåæÆ]/g, "a").replace(/[çÇ]/g, "c").replace(/[ðÐ]/g, "d").replace(/[ÈÉÊËéèêë]/g, "e").replace(/[ÏïÎîÍíÌì]/g, "i").replace(/[Ññ]/g, "n").replace(/[øØœŒÕõÔôÓóÒò]/g, "o").replace(/[ÜüÛûÚúÙù]/g, "u").replace(/[ŸÿÝý]/g, "y").replace(/[^a-z0-9- ]/gi, "").replace(/ /gi, "-").toLowerCase();
}
function St(t3) {
  return U2.test(t3) ? "right" : H2.test(t3) ? "center" : q2.test(t3) ? "left" : null;
}
function zt(t3, n3, e3) {
  const r3 = e3.v;
  e3.v = true;
  const o3 = n3(t3.trim(), e3);
  e3.v = r3;
  let c3 = [[]];
  return o3.forEach(function(t4, n4) {
    "tableSeparator" === t4.type ? 0 !== n4 && n4 !== o3.length - 1 && c3.push([]) : ("text" !== t4.type || null != o3[n4 + 1] && "tableSeparator" !== o3[n4 + 1].type || (t4.$ = t4.$.replace(G2, "")), c3[c3.length - 1].push(t4));
  }), c3;
}
function wt(t3, n3, e3) {
  e3._ = true;
  const r3 = zt(t3[1], n3, e3), o3 = t3[2].replace(P2, "").split("|").map(St), c3 = function(t4, n4, e4) {
    return t4.trim().split("\n").map(function(t5) {
      return zt(t5, n4, e4);
    });
  }(t3[3], n3, e3);
  return e3._ = false, { S: o3, A: c3, L: r3, type: "table" };
}
function At(t3, n3) {
  return null == t3.S[n3] ? {} : { textAlign: t3.S[n3] };
}
function Et(t3) {
  return function(n3, e3) {
    return e3._ ? t3.exec(n3) : null;
  };
}
function Lt(t3) {
  return function(n3, e3) {
    return e3._ || e3.u ? t3.exec(n3) : null;
  };
}
function Mt(t3) {
  return function(n3, e3) {
    return e3._ || e3.u ? null : t3.exec(n3);
  };
}
function It(t3) {
  return function(n3) {
    return t3.exec(n3);
  };
}
function Ot(t3, n3, e3) {
  if (n3._ || n3.u)
    return null;
  if (e3 && !e3.endsWith("\n"))
    return null;
  let r3 = "";
  t3.split("\n").every((t4) => !bt.some((n4) => n4.test(t4)) && (r3 += t4 + "\n", t4.trim()));
  const o3 = r3.trimEnd();
  return "" == o3 ? null : [r3, o3];
}
function Bt(t3) {
  try {
    if (decodeURIComponent(t3).replace(/[^A-Za-z0-9/:]/g, "").match(/^\s*(javascript|vbscript|data(?!:image)):/i))
      return null;
  } catch (t4) {
    return null;
  }
  return t3;
}
function Rt(t3) {
  return t3.replace(nt, "$1");
}
function Tt(t3, n3, e3) {
  const r3 = e3._ || false, o3 = e3.u || false;
  e3._ = true, e3.u = true;
  const c3 = t3(n3, e3);
  return e3._ = r3, e3.u = o3, c3;
}
function jt(t3, n3, e3) {
  const r3 = e3._ || false, o3 = e3.u || false;
  e3._ = false, e3.u = true;
  const c3 = t3(n3, e3);
  return e3._ = r3, e3.u = o3, c3;
}
function Ct(t3, n3, e3) {
  return e3._ = false, t3(n3 + "\n\n", e3);
}
var Dt = (t3, n3, e3) => ({ $: Tt(n3, t3[1], e3) });
function Nt() {
  return {};
}
function Zt() {
  return null;
}
function Ft(...t3) {
  return t3.filter(Boolean).join(" ");
}
function Pt(t3, n3, e3) {
  let r3 = t3;
  const o3 = n3.split(".");
  for (; o3.length && (r3 = r3[o3[0]], void 0 !== r3); )
    o3.shift();
  return r3 || e3;
}
var Gt;
function Ht(e3, u3 = {}) {
  u3.overrides = u3.overrides || {}, u3.slugify = u3.slugify || $t, u3.namedCodesToUnicode = u3.namedCodesToUnicode ? n2({}, o2, u3.namedCodesToUnicode) : o2;
  const P3 = u3.createElement || t2.createElement;
  function G3(t3, e4, ...r3) {
    const o3 = Pt(u3.overrides, `${t3}.props`, {});
    return P3(function(t4, n3) {
      const e5 = Pt(n3, t4);
      return e5 ? "function" == typeof e5 || "object" == typeof e5 && "render" in e5 ? e5 : Pt(n3, `${t4}.component`, t4) : t4;
    }(t3, u3.overrides), n2({}, e4, o3, { className: Ft(null == e4 ? void 0 : e4.className, o3.className) || void 0 }), ...r3);
  }
  function H3(n3) {
    let e4 = false;
    u3.forceInline ? e4 = true : u3.forceBlock || (e4 = false === N2.test(n3));
    const r3 = ot2(rt2(e4 ? n3 : `${n3.trimEnd().replace(Y2, "")}

`, { _: e4 }));
    for (; "string" == typeof r3[r3.length - 1] && !r3[r3.length - 1].trim(); )
      r3.pop();
    if (null === u3.wrapper)
      return r3;
    const o3 = u3.wrapper || (e4 ? "span" : "div");
    let c3;
    if (r3.length > 1 || u3.forceWrapper)
      c3 = r3;
    else {
      if (1 === r3.length)
        return c3 = r3[0], "string" == typeof c3 ? G3("span", { key: "outer" }, c3) : c3;
      c3 = null;
    }
    return t2.createElement(o3, { key: "outer" }, c3);
  }
  function q3(n3) {
    const e4 = n3.match(a2);
    return e4 ? e4.reduce(function(n4, e5, o3) {
      const c3 = e5.indexOf("=");
      if (-1 !== c3) {
        const a3 = function(t3) {
          return -1 !== t3.indexOf("-") && null === t3.match(A2) && (t3 = t3.replace(B2, function(t4, n5) {
            return n5.toUpperCase();
          })), t3;
        }(e5.slice(0, c3)).trim(), _3 = function(t3) {
          const n5 = t3[0];
          return ('"' === n5 || "'" === n5) && t3.length >= 2 && t3[t3.length - 1] === n5 ? t3.slice(1, -1) : t3;
        }(e5.slice(c3 + 1).trim()), u4 = r2[a3] || a3, i3 = n4[u4] = function(t3, n5) {
          return "style" === t3 ? n5.split(/;\s?/).reduce(function(t4, n6) {
            const e6 = n6.slice(0, n6.indexOf(":"));
            return t4[e6.replace(/(-[a-z])/g, (t5) => t5[1].toUpperCase())] = n6.slice(e6.length + 1).trim(), t4;
          }, {}) : "href" === t3 ? Bt(n5) : (n5.match(L2) && (n5 = n5.slice(1, n5.length - 1)), "true" === n5 || "false" !== n5 && n5);
        }(a3, _3);
        "string" == typeof i3 && (S2.test(i3) || E2.test(i3)) && (n4[u4] = t2.cloneElement(H3(i3.trim()), { key: o3 }));
      } else
        "style" !== e5 && (n4[r2[e5] || e5] = true);
      return n4;
    }, {}) : null;
  }
  const U3 = [], nt2 = {}, et2 = { blockQuote: { t: Mt(i2), i: Gt.HIGH, l: (t3, n3, e4) => ({ $: n3(t3[0].replace(l2, ""), e4) }), h: (t3, n3, e4) => G3("blockquote", { key: e4.k }, n3(t3.$, e4)) }, breakLine: { t: It(s2), i: Gt.HIGH, l: Nt, h: (t3, n3, e4) => G3("br", { key: e4.k }) }, breakThematic: { t: Mt(f), i: Gt.HIGH, l: Nt, h: (t3, n3, e4) => G3("hr", { key: e4.k }) }, codeBlock: { t: Mt(p), i: Gt.MAX, l: (t3) => ({ $: t3[0].replace(/^ {4}/gm, "").replace(/\n+$/, ""), M: void 0 }), h: (t3, e4, r3) => G3("pre", { key: r3.k }, G3("code", n2({}, t3.I, { className: t3.M ? `lang-${t3.M}` : "" }), t3.$)) }, codeFenced: { t: Mt(d2), i: Gt.MAX, l: (t3) => ({ I: q3(t3[3] || ""), $: t3[4], M: t3[2] || void 0, type: "codeBlock" }) }, codeInline: { t: Lt(m2), i: Gt.LOW, l: (t3) => ({ $: t3[2] }), h: (t3, n3, e4) => G3("code", { key: e4.k }, t3.$) }, footnote: { t: Mt(h), i: Gt.MAX, l: (t3) => (U3.push({ O: t3[2], B: t3[1] }), {}), h: Zt }, footnoteReference: { t: Et(k2), i: Gt.HIGH, l: (t3) => ({ $: t3[1], R: `#${u3.slugify(t3[1])}` }), h: (t3, n3, e4) => G3("a", { key: e4.k, href: Bt(t3.R) }, G3("sup", { key: e4.k }, t3.$)) }, gfmTask: { t: Et(b2), i: Gt.HIGH, l: (t3) => ({ T: "x" === t3[1].toLowerCase() }), h: (t3, n3, e4) => G3("input", { checked: t3.T, key: e4.k, readOnly: true, type: "checkbox" }) }, heading: { t: Mt(v2), i: Gt.HIGH, l: (t3, n3, e4) => ({ $: Tt(n3, t3[2], e4), j: u3.slugify(t3[2]), C: t3[1].length }), h: (t3, n3, e4) => G3(`h${t3.C}`, { id: t3.j, key: e4.k }, n3(t3.$, e4)) }, headingSetext: { t: Mt($2), i: Gt.MAX, l: (t3, n3, e4) => ({ $: Tt(n3, t3[1], e4), C: "=" === t3[2] ? 1 : 2, type: "heading" }) }, htmlComment: { t: It(w2), i: Gt.HIGH, l: () => ({}), h: Zt }, image: { t: Lt(xt), i: Gt.HIGH, l: (t3) => ({ D: t3[1], R: Rt(t3[2]), N: t3[3] }), h: (t3, n3, e4) => G3("img", { key: e4.k, alt: t3.D || void 0, title: t3.N || void 0, src: Bt(t3.R) }) }, link: { t: Et(kt), i: Gt.LOW, l: (t3, n3, e4) => ({ $: jt(n3, t3[1], e4), R: Rt(t3[2]), N: t3[3] }), h: (t3, n3, e4) => G3("a", { key: e4.k, href: Bt(t3.R), title: t3.N }, n3(t3.$, e4)) }, linkAngleBraceStyleDetector: { t: Et(O2), i: Gt.MAX, l: (t3) => ({ $: [{ $: t3[1], type: "text" }], R: t3[1], type: "link" }) }, linkBareUrlDetector: { t: (t3, n3) => n3.Z ? null : Et(M2)(t3, n3), i: Gt.MAX, l: (t3) => ({ $: [{ $: t3[1], type: "text" }], R: t3[1], N: void 0, type: "link" }) }, linkMailtoDetector: { t: Et(I2), i: Gt.MAX, l(t3) {
    let n3 = t3[1], e4 = t3[1];
    return _2.test(e4) || (e4 = "mailto:" + e4), { $: [{ $: n3.replace("mailto:", ""), type: "text" }], R: e4, type: "link" };
  } }, orderedList: ht(G3, 1), unorderedList: ht(G3, 2), newlineCoalescer: { t: Mt(g2), i: Gt.LOW, l: Nt, h: () => "\n" }, paragraph: { t: Ot, i: Gt.LOW, l: Dt, h: (t3, n3, e4) => G3("p", { key: e4.k }, n3(t3.$, e4)) }, ref: { t: Et(T2), i: Gt.MAX, l: (t3) => (nt2[t3[1]] = { R: t3[2], N: t3[4] }, {}), h: Zt }, refImage: { t: Lt(j2), i: Gt.MAX, l: (t3) => ({ D: t3[1] || void 0, F: t3[2] }), h: (t3, n3, e4) => G3("img", { key: e4.k, alt: t3.D, src: Bt(nt2[t3.F].R), title: nt2[t3.F].N }) }, refLink: { t: Et(C2), i: Gt.MAX, l: (t3, n3, e4) => ({ $: n3(t3[1], e4), P: n3(t3[0].replace(D2, "\\$1"), e4), F: t3[2] }), h: (t3, n3, e4) => nt2[t3.F] ? G3("a", { key: e4.k, href: Bt(nt2[t3.F].R), title: nt2[t3.F].N }, n3(t3.$, e4)) : G3("span", { key: e4.k }, n3(t3.P, e4)) }, table: { t: Mt(R2), i: Gt.HIGH, l: wt, h: (t3, n3, e4) => G3("table", { key: e4.k }, G3("thead", null, G3("tr", null, t3.L.map(function(r3, o3) {
    return G3("th", { key: o3, style: At(t3, o3) }, n3(r3, e4));
  }))), G3("tbody", null, t3.A.map(function(r3, o3) {
    return G3("tr", { key: o3 }, r3.map(function(r4, o4) {
      return G3("td", { key: o4, style: At(t3, o4) }, n3(r4, e4));
    }));
  }))) }, tableSeparator: { t: function(t3, n3) {
    return n3.v ? F2.exec(t3) : null;
  }, i: Gt.HIGH, l: function() {
    return { type: "tableSeparator" };
  }, h: () => " | " }, text: { t: It(K2), i: Gt.MIN, l: (t3) => ({ $: t3[0].replace(z2, (t4, n3) => u3.namedCodesToUnicode[n3] ? u3.namedCodesToUnicode[n3] : t4) }), h: (t3) => t3.$ }, textBolded: { t: Lt(V2), i: Gt.MED, l: (t3, n3, e4) => ({ $: n3(t3[2], e4) }), h: (t3, n3, e4) => G3("strong", { key: e4.k }, n3(t3.$, e4)) }, textEmphasized: { t: Lt(W2), i: Gt.LOW, l: (t3, n3, e4) => ({ $: n3(t3[2], e4) }), h: (t3, n3, e4) => G3("em", { key: e4.k }, n3(t3.$, e4)) }, textEscaped: { t: Lt(J2), i: Gt.HIGH, l: (t3) => ({ $: t3[1], type: "text" }) }, textMarked: { t: Lt(Q2), i: Gt.LOW, l: Dt, h: (t3, n3, e4) => G3("mark", { key: e4.k }, n3(t3.$, e4)) }, textStrikethroughed: { t: Lt(X2), i: Gt.LOW, l: Dt, h: (t3, n3, e4) => G3("del", { key: e4.k }, n3(t3.$, e4)) } };
  true !== u3.disableParsingRawHTML && (et2.htmlBlock = { t: It(S2), i: Gt.HIGH, l(t3, n3, e4) {
    const [, r3] = t3[3].match(tt), o3 = new RegExp(`^${r3}`, "gm"), a3 = t3[3].replace(o3, ""), _3 = (u4 = a3, vt.some((t4) => t4.test(u4)) ? Ct : Tt);
    var u4;
    const i3 = t3[1].toLowerCase(), l3 = -1 !== c2.indexOf(i3);
    e4.Z = e4.Z || "a" === i3;
    const s3 = l3 ? t3[3] : _3(n3, a3, e4);
    return e4.Z = false, { I: q3(t3[2]), $: s3, G: l3, H: l3 ? i3 : t3[1] };
  }, h: (t3, e4, r3) => G3(t3.H, n2({ key: r3.k }, t3.I), t3.G ? t3.$ : e4(t3.$, r3)) }, et2.htmlSelfClosing = { t: It(E2), i: Gt.HIGH, l: (t3) => ({ I: q3(t3[2] || ""), H: t3[1] }), h: (t3, e4, r3) => G3(t3.H, n2({}, t3.I, { key: r3.k })) });
  const rt2 = function(t3) {
    let n3 = Object.keys(t3);
    function e4(r3, o3) {
      let c3 = [], a3 = "";
      for (; r3; ) {
        let _3 = 0;
        for (; _3 < n3.length; ) {
          const u4 = n3[_3], i3 = t3[u4], l3 = i3.t(r3, o3, a3);
          if (l3) {
            const t4 = l3[0];
            r3 = r3.substring(t4.length);
            const n4 = i3.l(l3, e4, o3);
            null == n4.type && (n4.type = u4), c3.push(n4), a3 = t4;
            break;
          }
          _3++;
        }
      }
      return c3;
    }
    return n3.sort(function(n4, e5) {
      let r3 = t3[n4].i, o3 = t3[e5].i;
      return r3 !== o3 ? r3 - o3 : n4 < e5 ? -1 : 1;
    }), function(t4, n4) {
      return e4(function(t5) {
        return t5.replace(y2, "\n").replace(x2, "").replace(Z2, "    ");
      }(t4), n4);
    };
  }(et2), ot2 = (ct2 = function(t3) {
    return function(n3, e4, r3) {
      return t3[n3.type].h(n3, e4, r3);
    };
  }(et2), function t3(n3, e4 = {}) {
    if (Array.isArray(n3)) {
      const r3 = e4.k, o3 = [];
      let c3 = false;
      for (let r4 = 0; r4 < n3.length; r4++) {
        e4.k = r4;
        const a3 = t3(n3[r4], e4), _3 = "string" == typeof a3;
        _3 && c3 ? o3[o3.length - 1] += a3 : null !== a3 && o3.push(a3), c3 = _3;
      }
      return e4.k = r3, o3;
    }
    return ct2(n3, t3, e4);
  });
  var ct2;
  const at2 = H3(e3);
  return U3.length ? G3("div", null, at2, G3("footer", { key: "footer" }, U3.map(function(t3) {
    return G3("div", { id: u3.slugify(t3.B), key: t3.B }, t3.B, ot2(rt2(t3.O, { _: true })));
  }))) : at2;
}
!function(t3) {
  t3[t3.MAX = 0] = "MAX", t3[t3.HIGH = 1] = "HIGH", t3[t3.MED = 2] = "MED", t3[t3.LOW = 3] = "LOW", t3[t3.MIN = 4] = "MIN";
}(Gt || (Gt = {}));
var index_modern_default = (n3) => {
  let { children: r3, options: o3 } = n3, c3 = function(t3, n4) {
    if (null == t3)
      return {};
    var e3, r4, o4 = {}, c4 = Object.keys(t3);
    for (r4 = 0; r4 < c4.length; r4++)
      n4.indexOf(e3 = c4[r4]) >= 0 || (o4[e3] = t3[e3]);
    return o4;
  }(n3, e2);
  return t2.cloneElement(Ht(r3, o3), c3);
};

// node_modules/grommet/es6/components/Paragraph/Paragraph.js
var import_react130 = __toESM(require_react());

// node_modules/grommet/es6/components/Paragraph/StyledParagraph.js
init_styled_components_browser_esm();
var colorStyle3 = Ae(["color:", ";"], function(props) {
  return normalizeColor(props.colorProp, props.theme);
});
var sizeStyle16 = function sizeStyle17(props) {
  var size = props.size || "medium";
  var data = props.theme.paragraph[size];
  return Ae(["font-size:", ";line-height:", ";max-width:", ";"], data ? data.size : size, data ? data.height : "normal", props.fillProp ? "none" : data && data.maxWidth);
};
var fontFamily4 = Ae(["font-family:", ";"], function(props) {
  return props.theme.paragraph.font.family;
});
var maxlinesStyle = function maxlinesStyle2(props) {
  return props.maxLines && Ae(["display:-webkit-box;-webkit-line-clamp:", ";-webkit-box-orient:vertical;overflow:hidden;"], props.maxLines);
};
var StyledParagraph = styled_components_browser_esm_default.p.withConfig({
  displayName: "StyledParagraph",
  componentId: "sc-tbetod-0"
})(["", " ", " ", " ", " ", " ", " ", ""], genericStyles, function(props) {
  return maxlinesStyle(props);
}, function(props) {
  return sizeStyle16(props);
}, function(props) {
  return props.textAlign && textAlignStyle;
}, function(props) {
  return props.colorProp && colorStyle3;
}, function(props) {
  return props.theme.paragraph.font && props.theme.paragraph.font.family && fontFamily4;
}, function(props) {
  return props.theme.paragraph && props.theme.paragraph.extend;
});
StyledParagraph.defaultProps = {};
Object.setPrototypeOf(StyledParagraph.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/Paragraph/propTypes.js
var import_prop_types63 = __toESM(require_prop_types());
function _extends123() {
  _extends123 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends123.apply(this, arguments);
}
var PropType61 = {};
if (true) {
  PropType61 = _extends123({}, genericProps, {
    color: colorPropType,
    fill: import_prop_types63.default.bool,
    maxLines: import_prop_types63.default.number,
    responsive: import_prop_types63.default.bool,
    size: import_prop_types63.default.oneOfType([import_prop_types63.default.oneOf(["small", "medium", "large", "xlarge", "xxlarge"]), import_prop_types63.default.string]),
    textAlign: import_prop_types63.default.oneOf(["start", "center", "end", "justify"])
  });
}
var ParagraphPropTypes = PropType61;

// node_modules/grommet/es6/components/Paragraph/ParagraphSkeleton.js
var import_react129 = __toESM(require_react());
init_styled_components_browser_esm();
var ParagraphSkeleton = (0, import_react129.forwardRef)(function(_ref, ref) {
  var fill = _ref.fill, sizeProp = _ref.size;
  var theme = (0, import_react129.useContext)(Me) || defaultProps2.theme;
  var size = sizeProp || "medium";
  var data = theme.paragraph[size];
  var height = data ? data.size : size;
  return import_react129.default.createElement(Box, {
    ref,
    gap: "xsmall",
    width: {
      max: fill ? "none" : data && data.maxWidth
    }
  }, import_react129.default.createElement(Skeleton, {
    height
  }), import_react129.default.createElement(Skeleton, {
    height
  }), import_react129.default.createElement(Skeleton, {
    height,
    width: "30%"
  }));
});
ParagraphSkeleton.displayName = "ParagraphSkeleton";

// node_modules/grommet/es6/components/Paragraph/Paragraph.js
var _excluded78 = ["children", "color", "fill", "size"];
function _extends124() {
  _extends124 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends124.apply(this, arguments);
}
function _objectWithoutPropertiesLoose75(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var Paragraph = (0, import_react130.forwardRef)(function(_ref, ref) {
  var children2 = _ref.children, color = _ref.color, fill = _ref.fill, size = _ref.size, rest = _objectWithoutPropertiesLoose75(_ref, _excluded78);
  var skeleton = useSkeleton();
  var textContextValue = (0, import_react130.useMemo)(function() {
    return {
      size
    };
  }, [size]);
  if (skeleton) {
    return import_react130.default.createElement(ParagraphSkeleton, _extends124({
      ref,
      fill,
      size
    }, rest), children2);
  }
  return import_react130.default.createElement(StyledParagraph, _extends124({
    ref,
    colorProp: color,
    fillProp: fill,
    size
  }, rest), children2 !== void 0 ? import_react130.default.createElement(TextContext.Provider, {
    value: textContextValue
  }, children2) : void 0);
});
Paragraph.displayName = "Paragraph";
Paragraph.prototype = ParagraphPropTypes;

// node_modules/grommet/es6/components/Markdown/propTypes.js
var import_prop_types64 = __toESM(require_prop_types());
var PropType62 = {};
if (true) {
  PropType62 = {
    components: import_prop_types64.default.object,
    options: import_prop_types64.default.shape({})
  };
}
var MarkdownPropTypes = PropType62;

// node_modules/grommet/es6/components/Markdown/Markdown.js
var _excluded79 = ["children", "components", "options", "theme"];
function _extends125() {
  _extends125 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends125.apply(this, arguments);
}
function _objectWithoutPropertiesLoose76(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var GrommetMarkdown = (0, import_react131.forwardRef)(function(_ref, ref) {
  var children2 = _ref.children, components = _ref.components, options = _ref.options, theme = _ref.theme, rest = _objectWithoutPropertiesLoose76(_ref, _excluded79);
  var heading = [1, 2, 3, 4].reduce(function(obj, level) {
    var result = _extends125({}, obj);
    result["h" + level] = {
      component: Heading,
      props: {
        level
      }
    };
    return result;
  }, {});
  var overrides = deepMerge({
    a: {
      component: Anchor
    },
    img: {
      component: Image
    },
    p: {
      component: Paragraph
    },
    table: {
      component: Table
    },
    td: {
      component: TableCell,
      props: {
        plain: true
      }
    },
    tbody: {
      component: TableBody
    },
    tfoot: {
      component: TableFooter
    },
    th: {
      component: TableCell
    },
    thead: {
      component: TableHeader
    },
    tr: {
      component: TableRow
    }
  }, heading, components, options && options.overrides);
  return import_react131.default.createElement("div", _extends125({
    ref
  }, rest), import_react131.default.createElement(index_modern_default, {
    children: children2,
    options: _extends125({
      wrapper: import_react131.Fragment
    }, options, {
      overrides
    })
  }));
});
GrommetMarkdown.propTypes = MarkdownPropTypes;

// node_modules/grommet/es6/components/Menu/Menu.js
var import_react132 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/Menu/propTypes.js
var import_prop_types65 = __toESM(require_prop_types());
function _extends126() {
  _extends126 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends126.apply(this, arguments);
}
var VERTICAL_ALIGN_OPTIONS = ["top", "bottom"];
var HORIZONTAL_ALIGN_OPTIONS = ["right", "left"];
var PropType63 = {};
if (true) {
  PropType63 = _extends126({}, genericProps, {
    children: import_prop_types65.default.oneOfType([import_prop_types65.default.func, import_prop_types65.default.node]),
    disabled: import_prop_types65.default.bool,
    dropAlign: import_prop_types65.default.shape({
      top: import_prop_types65.default.oneOf(VERTICAL_ALIGN_OPTIONS),
      bottom: import_prop_types65.default.oneOf(VERTICAL_ALIGN_OPTIONS),
      left: import_prop_types65.default.oneOf(HORIZONTAL_ALIGN_OPTIONS),
      right: import_prop_types65.default.oneOf(HORIZONTAL_ALIGN_OPTIONS)
    }),
    dropBackground: import_prop_types65.default.oneOfType([import_prop_types65.default.string, import_prop_types65.default.shape({
      color: import_prop_types65.default.string,
      opacity: import_prop_types65.default.oneOfType([import_prop_types65.default.bool, import_prop_types65.default.number, import_prop_types65.default.oneOf(["weak", "medium", "strong"])])
    })]),
    dropTarget: import_prop_types65.default.object,
    dropProps: import_prop_types65.default.object,
    justifyContent: import_prop_types65.default.oneOf(["start", "center", "end", "between", "around", "stretch"]),
    icon: import_prop_types65.default.oneOfType([import_prop_types65.default.bool, import_prop_types65.default.node]),
    items: import_prop_types65.default.oneOfType([import_prop_types65.default.arrayOf(import_prop_types65.default.object), import_prop_types65.default.arrayOf(import_prop_types65.default.arrayOf(import_prop_types65.default.object))]).isRequired,
    label: import_prop_types65.default.oneOfType([import_prop_types65.default.string, import_prop_types65.default.node]),
    messages: import_prop_types65.default.shape({
      closeMenu: import_prop_types65.default.string,
      openMenu: import_prop_types65.default.string
    }),
    open: import_prop_types65.default.bool,
    size: import_prop_types65.default.oneOfType([import_prop_types65.default.oneOf(["small", "medium", "large", "xlarge"]), import_prop_types65.default.string])
  });
}
var MenuPropTypes = PropType63;

// node_modules/grommet/es6/components/Menu/Menu.js
var _excluded80 = ["a11yTitle", "aria-label", "children", "disabled", "dropAlign", "dropBackground", "dropProps", "dropTarget", "justifyContent", "icon", "items", "label", "messages", "onKeyDown", "open", "plain", "size"];
var _excluded219 = ["align"];
function _extends127() {
  _extends127 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends127.apply(this, arguments);
}
function _objectWithoutPropertiesLoose77(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var ContainerBox3 = styled_components_browser_esm_default(Box).withConfig({
  displayName: "Menu__ContainerBox",
  componentId: "sc-17fcys9-0"
})(["max-height:inherit;@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none){width:100%;}:focus{outline:none;}", ";"], function(props) {
  return props.theme.menu.extend;
});
var Menu = (0, import_react132.forwardRef)(function(props, ref) {
  var a11yTitle = props.a11yTitle, ariaLabel = props["aria-label"], children2 = props.children, disabled = props.disabled, dropAlign2 = props.dropAlign, dropBackground = props.dropBackground, dropProps5 = props.dropProps, dropTarget = props.dropTarget, justifyContent = props.justifyContent, icon = props.icon, items = props.items, label = props.label, messages = props.messages, onKeyDown = props.onKeyDown, open = props.open, plain = props.plain, size = props.size, rest = _objectWithoutPropertiesLoose77(props, _excluded80);
  var theme = (0, import_react132.useContext)(Me) || defaultProps2.theme;
  var _useContext = (0, import_react132.useContext)(MessageContext), format3 = _useContext.format;
  var iconColor = normalizeColor(theme.menu.icons.color || "control", theme);
  var _theme$menu$drop = theme.menu.drop, themeDropAlign = _theme$menu$drop.align, themeDropProps = _objectWithoutPropertiesLoose77(_theme$menu$drop, _excluded219);
  var a11y = ariaLabel || a11yTitle;
  var itemCount = (0, import_react132.useMemo)(function() {
    var count = 0;
    if (items && Array.isArray(items[0])) {
      items.forEach(function(group) {
        count += group.length;
      });
    } else
      count = items.length;
    return count;
  }, [items]);
  var align = dropProps5 && dropProps5.align || dropAlign2 || themeDropAlign;
  var controlButtonIndex = (0, import_react132.useMemo)(function() {
    if (align.top === "top")
      return -1;
    if (align.bottom === "bottom")
      return itemCount;
    return void 0;
  }, [align, itemCount]);
  var _useState = (0, import_react132.useState)(), alignControlMirror = _useState[0], setAlignControlMirror = _useState[1];
  var initialAlignTop = alignControlMirror === align.top;
  var dropContainerRef = (0, import_react132.useRef)();
  var buttonRefs = (0, import_react132.useRef)([]);
  var constants = (0, import_react132.useMemo)(function() {
    return {
      none: "none",
      tab: 9,
      // Menu control button included on top of menu items
      controlTop: align.top === "top" || void 0,
      // Menu control button included on the bottom of menu items
      controlBottom: align.bottom === "bottom" || void 0,
      controlButtonIndex
    };
  }, [align, controlButtonIndex]);
  var _useState2 = (0, import_react132.useState)(constants.none), activeItemIndex = _useState2[0], setActiveItemIndex = _useState2[1];
  var _useState3 = (0, import_react132.useState)(open || false), isOpen = _useState3[0], setOpen = _useState3[1];
  var MenuIcon = isOpen && theme.menu.icons.up ? theme.menu.icons.up : theme.menu.icons.down;
  var onDropClose = (0, import_react132.useCallback)(function() {
    setActiveItemIndex(constants.none);
    setOpen(false);
  }, [constants.none]);
  var onDropOpen = (0, import_react132.useCallback)(function() {
    setOpen(true);
  }, []);
  (0, import_react132.useEffect)(function() {
    var timer = setTimeout(function() {
      if (isOpen) {
        var optionsNode = dropContainerRef.current;
        if (optionsNode) {
          optionsNode.focus();
        }
      }
    }, 100);
    return function() {
      return clearTimeout(timer);
    };
  }, [isOpen]);
  var onSelectMenuItem = function onSelectMenuItem2(event) {
    if (isOpen) {
      if (activeItemIndex >= 0) {
        event.preventDefault();
        event.stopPropagation();
        buttonRefs.current[activeItemIndex].click();
      }
    } else {
      onDropOpen();
    }
  };
  var isTab = function isTab2(event) {
    return event.keyCode === constants.tab || event.which === constants.tab;
  };
  var onNextMenuItem = function onNextMenuItem2(event) {
    event.preventDefault();
    if (!isOpen) {
      onDropOpen();
    } else if (isTab(event) && (!constants.controlBottom && activeItemIndex === itemCount - 1 || constants.controlBottom && activeItemIndex === controlButtonIndex)) {
      onDropClose();
    } else {
      var index2;
      if (
        // This checks if the user has reached the end of the menu.
        // In the case the the menu control button is located at the
        // bottom of the menu, it checks if the user has reached the button.
        // Otherwise, it checks if the user is at the last menu item.
        constants.controlBottom && activeItemIndex === controlButtonIndex || !constants.controlBottom && activeItemIndex === itemCount - 1 || activeItemIndex === constants.none
      ) {
        index2 = 0;
      } else {
        index2 = activeItemIndex + 1;
      }
      setActiveItemIndex(index2);
      if (buttonRefs.current[index2]) {
        buttonRefs.current[index2].focus();
      }
    }
  };
  var onPreviousMenuItem = function onPreviousMenuItem2(event) {
    event.preventDefault();
    if (!isOpen) {
      onDropOpen();
    } else if (isTab(event) && (constants.controlTop && activeItemIndex === controlButtonIndex || !constants.controlTop && activeItemIndex - 1 < 0)) {
      onDropClose();
    } else {
      var index2;
      if (activeItemIndex === "none") {
        index2 = itemCount - 1;
      } else if (activeItemIndex - 1 < 0) {
        if (constants.controlTop && activeItemIndex - 1 === controlButtonIndex) {
          index2 = itemCount;
        } else {
          index2 = itemCount - 1;
        }
      } else {
        index2 = activeItemIndex - 1;
      }
      setActiveItemIndex(index2);
      if (buttonRefs.current[index2]) {
        buttonRefs.current[index2].focus();
      }
    }
  };
  var menuIcon = icon !== false ? icon !== true && icon || import_react132.default.createElement(MenuIcon, {
    color: iconColor,
    size
  }) : null;
  var buttonProps = {
    plain,
    size
  };
  var content;
  if (children2) {
    content = children2;
  } else if (!theme.button["default"]) {
    content = import_react132.default.createElement(Box, {
      direction: "row",
      justify: justifyContent,
      align: "center",
      pad: "small",
      gap: label && icon !== false ? "small" : void 0
    }, import_react132.default.createElement(Text, {
      size
    }, label), menuIcon);
  } else {
    buttonProps = {
      icon: menuIcon,
      label,
      plain,
      reverse: true,
      size
    };
    content = void 0;
  }
  var controlMirror = import_react132.default.createElement(Box, {
    flex: false
  }, import_react132.default.createElement(Button, _extends127({
    ref: function ref2(r3) {
      buttonRefs.current[itemCount] = r3;
    },
    a11yTitle: a11y || format3({
      id: "menu.closeMenu",
      messages
    }),
    active: activeItemIndex === controlButtonIndex,
    focusIndicator: false,
    hoverIndicator: "background",
    onClick: onDropClose,
    onFocus: function onFocus() {
      return setActiveItemIndex(controlButtonIndex);
    },
    tabIndex: activeItemIndex === constants.none ? "-1" : void 0
  }, theme.menu.item, buttonProps), typeof content === "function" ? function() {
    return content(_extends127({}, props, {
      drop: true
    }));
  } : content));
  var menuItem = function menuItem2(item, index2) {
    var _theme$menu$item, _theme$menu$item2, _theme$menu$item3;
    var child = !theme.button.option ? import_react132.default.createElement(Box, {
      align: "start",
      pad: "small",
      direction: "row",
      gap: item.gap || ((_theme$menu$item = theme.menu.item) == null ? void 0 : _theme$menu$item.gap),
      justify: item.justify || ((_theme$menu$item2 = theme.menu.item) == null ? void 0 : _theme$menu$item2.justify)
    }, item.reverse && item.label, item.icon, !item.reverse && item.label) : void 0;
    return (
      // eslint-disable-next-line react/no-array-index-key
      import_react132.default.createElement(Box, {
        key: index2,
        flex: false,
        role: "none"
      }, import_react132.default.createElement(Button, _extends127({
        ref: function ref2(r3) {
          buttonRefs.current[index2] = r3;
        },
        role: "menuitem",
        onFocus: function onFocus() {
          setActiveItemIndex(index2);
        },
        active: activeItemIndex === index2,
        focusIndicator: false,
        plain: !child ? void 0 : true,
        align: "start",
        kind: !child ? "option" : void 0,
        hoverIndicator: !child ? void 0 : "background"
      }, theme.menu.item, {
        justify: item.justify || ((_theme$menu$item3 = theme.menu.item) == null ? void 0 : _theme$menu$item3.justify)
      }, !child ? item : _extends127({}, item, {
        gap: void 0,
        icon: void 0,
        label: void 0,
        reverse: void 0
      }), {
        onClick: function onClick() {
          if (item.onClick) {
            item.onClick.apply(item, arguments);
          }
          if (item.close !== false) {
            onDropClose();
          }
        }
      }), child))
    );
  };
  var menuContent;
  if (itemCount && Array.isArray(items[0])) {
    var index = 0;
    menuContent = items.map(function(group, groupIndex) {
      var _theme$menu$group, _theme$menu$group$sep, _theme$menu$group2, _theme$menu$group2$se, _theme$menu$group3;
      return import_react132.default.createElement(
        Box,
        {
          key: groupIndex
        },
        groupIndex > 0 && import_react132.default.createElement(Box, {
          pad: theme.menu.group.separator.pad
        }, import_react132.default.createElement(Box, {
          border: {
            side: "top",
            color: (_theme$menu$group = theme.menu.group) == null ? void 0 : (_theme$menu$group$sep = _theme$menu$group.separator) == null ? void 0 : _theme$menu$group$sep.color,
            size: (_theme$menu$group2 = theme.menu.group) == null ? void 0 : (_theme$menu$group2$se = _theme$menu$group2.separator) == null ? void 0 : _theme$menu$group2$se.size
          }
        })),
        import_react132.default.createElement(Box, (_theme$menu$group3 = theme.menu.group) == null ? void 0 : _theme$menu$group3.container, group.map(function(item) {
          var currentIndex = index;
          index += 1;
          return menuItem(item, currentIndex);
        }))
      );
    });
  } else
    menuContent = items.map(function(item, index2) {
      return menuItem(item, index2);
    });
  return import_react132.default.createElement(Keyboard, {
    onDown: onDropOpen,
    onUp: onDropOpen,
    onSpace: onSelectMenuItem,
    onEsc: onDropClose,
    onTab: onDropClose,
    onKeyDown
  }, import_react132.default.createElement(DropButton, _extends127({
    ref
  }, rest, buttonProps, {
    a11yTitle: a11y || format3({
      id: "menu.openMenu",
      messages
    }),
    "aria-haspopup": "menu",
    "aria-expanded": isOpen,
    onAlign: setAlignControlMirror,
    disabled,
    dropAlign: align,
    dropTarget,
    dropProps: dropProps5 || themeDropProps,
    open: isOpen,
    onOpen: onDropOpen,
    onClose: onDropClose,
    dropContent: import_react132.default.createElement(Keyboard, {
      onTab: function onTab(event) {
        return event.shiftKey ? onPreviousMenuItem(event) : onNextMenuItem(event);
      },
      onDown: onNextMenuItem,
      onUp: onPreviousMenuItem,
      onEnter: onSelectMenuItem
    }, import_react132.default.createElement(ContainerBox3, {
      ref: dropContainerRef,
      tabIndex: -1,
      background: dropBackground || theme.menu.background
    }, alignControlMirror === "top" && align.top === "top" ? controlMirror : void 0, import_react132.default.createElement(Box, {
      overflow: "auto",
      role: "menu",
      a11yTitle: a11y
    }, menuContent), !initialAlignTop && (alignControlMirror === "bottom" || align.bottom === "bottom") ? controlMirror : void 0))
  }), content));
});
Menu.defaultProps = {
  items: [],
  messages: void 0,
  justifyContent: "start"
};
Menu.displayName = "Menu";
Menu.propTypes = MenuPropTypes;

// node_modules/grommet/es6/components/Meter/Meter.js
var import_react135 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/Meter/Bar.js
var import_react133 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/Meter/StyledMeter.js
init_styled_components_browser_esm();
var roundStyle5 = Ae(["border-radius:", ";"], function(props) {
  return props.theme.global.edgeSize[props.round.size];
});
var StyledMeter = styled_components_browser_esm_default.svg.withConfig({
  displayName: "StyledMeter",
  componentId: "sc-nsxarx-0"
})(["max-width:100%;overflow:hidden;", " ", " ", " path{transition:stroke 0.3s,stroke-width 0.3s;}", ";"], function(props) {
  return props.reverse && Ae(["transform:scale(-1,1);"]);
}, genericStyles, function(props) {
  return props.round && roundStyle5;
}, function(props) {
  return props.theme.meter && props.theme.meter.extend;
});
StyledMeter.defaultProps = {};
Object.setPrototypeOf(StyledMeter.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/Meter/utils.js
var strokeProps = function strokeProps2(color, theme) {
  var result = {};
  if (color) {
    if (typeof color === "object") {
      result.stroke = normalizeColor(color.color, theme);
      if (color.opacity) {
        result.strokeOpacity = "" + (color.opacity === true ? theme.global.opacity.medium : theme.global.opacity[color.opacity] || color.opacity);
      }
    } else {
      result.stroke = normalizeColor(color, theme);
    }
  }
  return result;
};
var neutralExp = /^neutral-\d+/;
var defaultColor = function defaultColor2(index, theme, valuesLength) {
  if (index === valuesLength - 1 && theme.meter.color) {
    return theme.meter.color;
  }
  var colorIndex = valuesLength - index - 1;
  if (theme.meter && theme.meter.colors) {
    var _colors = theme.meter.colors[theme.dark ? "dark" : "light"] || theme.meter.colors;
    return _colors[colorIndex % _colors.length];
  }
  var colors3 = Object.keys(theme.global.colors).filter(function(n3) {
    return n3.match(/^graph-[0-9]$/);
  });
  if (colors3.length > 0) {
    return colors3[colorIndex % colors3.length];
  }
  var neutralColors3 = Object.keys(theme.global.colors).filter(function(k3) {
    return neutralExp.test(k3);
  });
  return neutralColors3[colorIndex % neutralColors3.length];
};

// node_modules/grommet/es6/components/Meter/Bar.js
var _excluded81 = ["background", "max", "round", "size", "thickness", "direction", "values", "reverse"];
var _excluded220 = ["color", "highlight", "label", "onHover", "value"];
function _extends128() {
  _extends128 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends128.apply(this, arguments);
}
function _objectWithoutPropertiesLoose78(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var Bar = (0, import_react133.forwardRef)(function(props, ref) {
  var background = props.background, max = props.max, round3 = props.round, size = props.size, thicknessProp = props.thickness, direction = props.direction, values = props.values, reverse = props.reverse, rest = _objectWithoutPropertiesLoose78(props, _excluded81);
  var theme = (0, import_react133.useContext)(Me) || defaultProps2.theme;
  var length = size === "full" ? 288 : parseMetricToNum(theme.global.size[size] || size);
  var thickness = parseMetricToNum(theme.global.edgeSize[thicknessProp] || thicknessProp);
  var capOffset = round3 ? thickness / 2 : 0;
  var mid = thickness / 2;
  var someHighlight = (values || []).some(function(v3) {
    return v3.highlight;
  });
  var start = direction === "horizontal" ? capOffset : max * (length - 2 * capOffset) / max;
  var paths = (values || []).reduce(function(acc, valueArg, index) {
    if (valueArg.value > 0) {
      var color = valueArg.color, highlight = valueArg.highlight, label = valueArg.label, onHover = valueArg.onHover, value = valueArg.value, pathRest = _objectWithoutPropertiesLoose78(valueArg, _excluded220);
      var key = "p-" + index;
      var delta = value * (length - 2 * capOffset) / max;
      var d3 = direction === "horizontal" ? "M " + start + "," + mid + " L " + (start + delta) + "," + mid : "M " + mid + "," + start + " L " + mid + "," + (start - delta);
      var colorName = color || defaultColor(index, theme, values ? values.length : 0);
      var hoverProps;
      if (onHover) {
        hoverProps = {
          onMouseOver: function onMouseOver() {
            return onHover(true);
          },
          onMouseLeave: function onMouseLeave() {
            return onHover(false);
          }
        };
      }
      if (direction === "horizontal") {
        start += delta;
      } else {
        start -= delta;
      }
      var result = import_react133.default.createElement("path", _extends128({
        key,
        d: d3,
        fill: "none"
      }, strokeProps(someHighlight && !highlight ? background : colorName, theme), {
        strokeWidth: direction === "horizontal" ? thickness : length,
        strokeLinecap: round3 ? "round" : "butt"
      }, hoverProps, pathRest));
      acc.push(result);
    }
    return acc;
  }, []).reverse();
  var width;
  if (direction === "horizontal") {
    width = size === "full" ? "100%" : length;
  } else {
    width = size === "full" ? "100%" : thickness;
  }
  var backgroundPath = direction === "horizontal" ? "M " + capOffset + "," + mid + " L " + (length - capOffset) + "," + mid : "M " + mid + "," + capOffset + " L " + mid + "," + (length - capOffset);
  return import_react133.default.createElement(StyledMeter, _extends128({
    ref,
    viewBox: direction === "horizontal" ? "0 0 " + length + " " + thickness : "0 0 " + thickness + " " + length,
    preserveAspectRatio: "none",
    width,
    height: direction === "horizontal" ? thickness : length,
    round: round3 ? {
      size: thicknessProp
    } : void 0
  }, rest, {
    reverse
  }), import_react133.default.createElement("path", _extends128({
    d: backgroundPath,
    fill: "none"
  }, strokeProps(background, theme), {
    strokeWidth: thickness,
    strokeLinecap: round3 ? "round" : "square"
  })), paths);
});
Bar.displayName = "Bar";
Bar.defaultProps = {
  background: "light-1"
};
Object.setPrototypeOf(Bar.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/Meter/Circle.js
var import_react134 = __toESM(require_react());
init_styled_components_browser_esm();
var _excluded82 = ["background", "max", "round", "size", "thickness", "type", "values"];
var _excluded221 = ["color", "highlight", "label", "onHover", "value"];
function _extends129() {
  _extends129 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends129.apply(this, arguments);
}
function _objectWithoutPropertiesLoose79(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var Circle = (0, import_react134.forwardRef)(function(props, ref) {
  var background = props.background, max = props.max, round3 = props.round, size = props.size, thickness = props.thickness, type = props.type, values = props.values, rest = _objectWithoutPropertiesLoose79(props, _excluded82);
  var theme = (0, import_react134.useContext)(Me);
  var width = size === "full" ? 288 : parseMetricToNum(theme.global.size[size] || size);
  var strokeWidth = type === "pie" ? width / 2 : parseMetricToNum(theme.global.edgeSize[thickness] || thickness);
  var centerX = width / 2;
  var centerY = width / 2;
  var radius = width / 2 - strokeWidth / 2;
  var scalePower = Math.max(5, Math.ceil(Math.log10(max)) + 3);
  var scale = Math.pow(10, scalePower);
  var anglePer = Math.floor((type === "semicircle" ? 180 : 360) / max * scale) / scale;
  var someHighlight = (values || []).some(function(v3) {
    return v3.highlight;
  });
  var startValue = 0;
  var startAngle = type === "semicircle" ? 270 : 0;
  var paths = [];
  var pathCaps = [];
  (values || []).filter(function(v3) {
    return v3.value > 0;
  }).forEach(function(valueArg, index) {
    var color = valueArg.color, highlight = valueArg.highlight, label = valueArg.label, onHover = valueArg.onHover, value = valueArg.value, pathRest = _objectWithoutPropertiesLoose79(valueArg, _excluded221);
    var key = "p-" + index;
    var colorName = color || defaultColor(index, theme, values ? values.length : 0);
    var endAngle;
    if (startValue + value >= max) {
      endAngle = type === "semicircle" ? 90 : 360;
    } else {
      endAngle = translateEndAngle(startAngle, anglePer, value);
    }
    var hoverProps;
    if (onHover) {
      hoverProps = {
        onMouseOver: function onMouseOver() {
          return onHover(true);
        },
        onMouseLeave: function onMouseLeave() {
          return onHover(false);
        }
      };
    }
    var stroke = strokeProps(someHighlight && !highlight ? background : colorName, theme);
    if (round3) {
      var d12 = arcCommands(centerX, centerY, radius, startAngle, endAngle);
      paths.unshift(import_react134.default.createElement("path", _extends129({
        key,
        d: d12,
        fill: "none"
      }, stroke, {
        strokeWidth,
        strokeLinecap: "round"
      }, hoverProps, pathRest)));
      var d22 = arcCommands(centerX, centerY, radius, endAngle - 0.5, endAngle);
      var pathCap = import_react134.default.createElement("path", _extends129({
        key: key + "-",
        d: d22,
        fill: "none"
      }, stroke, {
        strokeWidth,
        strokeLinecap: "round"
      }, hoverProps, pathRest));
      if (endAngle - startAngle > 2 * anglePer) {
        pathCaps = [];
      }
      pathCaps.unshift(pathCap);
    } else {
      var d3 = arcCommands(centerX, centerY, radius, startAngle, endAngle);
      paths.push(import_react134.default.createElement("path", _extends129({
        key,
        d: d3,
        fill: "none"
      }, stroke, {
        strokeWidth,
        strokeLinecap: "butt"
      }, hoverProps, pathRest)));
    }
    startValue += value;
    startAngle = endAngle;
  });
  var track;
  if (type === "semicircle") {
    var d1 = arcCommands(centerX, centerY, radius, 270, 90);
    track = import_react134.default.createElement("path", _extends129({
      d: d1,
      strokeWidth,
      fill: "none"
    }, strokeProps(background, theme), {
      strokeLinecap: round3 ? "round" : "square"
    }));
  } else {
    track = import_react134.default.createElement("circle", _extends129({
      cx: centerX,
      cy: centerY,
      r: radius
    }, strokeProps(background, theme), {
      strokeWidth,
      strokeLinecap: round3 ? "round" : "square",
      fill: "none"
    }));
  }
  var viewBoxHeight = type === "semicircle" ? width / 2 : width;
  return import_react134.default.createElement(StyledMeter, _extends129({
    ref,
    viewBox: "0 0 " + width + " " + viewBoxHeight,
    width: size === "full" ? "100%" : width,
    height: size === "full" ? "100%" : viewBoxHeight
  }, rest), track, paths, pathCaps);
});
Circle.displayName = "Circle";
Circle.defaultProps = {};
Object.setPrototypeOf(Circle.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/Meter/propTypes.js
var import_prop_types66 = __toESM(require_prop_types());
function _extends130() {
  _extends130 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends130.apply(this, arguments);
}
var PropType64 = {};
if (true) {
  PropType64 = _extends130({}, genericProps, {
    background: import_prop_types66.default.oneOfType([import_prop_types66.default.string, import_prop_types66.default.shape({
      color: import_prop_types66.default.string,
      opacity: import_prop_types66.default.oneOfType([import_prop_types66.default.oneOf(["weak", "medium", "strong"]), import_prop_types66.default.number, import_prop_types66.default.bool])
    })]),
    color: import_prop_types66.default.string,
    max: import_prop_types66.default.oneOfType([import_prop_types66.default.number, import_prop_types66.default.string]),
    reverse: import_prop_types66.default.bool,
    round: import_prop_types66.default.bool,
    size: import_prop_types66.default.oneOfType([import_prop_types66.default.oneOf(["xsmall", "small", "medium", "large", "xlarge", "full"]), import_prop_types66.default.string]),
    thickness: import_prop_types66.default.oneOfType([import_prop_types66.default.oneOf(["xsmall", "small", "medium", "large", "xlarge"]), import_prop_types66.default.string]),
    type: import_prop_types66.default.oneOf(["bar", "circle", "pie", "semicircle"]),
    direction: import_prop_types66.default.oneOf(["horizontal", "vertical"]),
    value: import_prop_types66.default.number,
    values: import_prop_types66.default.arrayOf(import_prop_types66.default.shape({
      color: import_prop_types66.default.string,
      highlight: import_prop_types66.default.bool,
      label: import_prop_types66.default.string.isRequired,
      // for accessibility
      onClick: import_prop_types66.default.func,
      onHover: import_prop_types66.default.func,
      value: import_prop_types66.default.number.isRequired
    }))
  });
}
var MeterPropTypes = PropType64;

// node_modules/grommet/es6/components/Meter/Meter.js
var _excluded83 = ["background", "color", "direction", "size", "thickness", "type", "reverse", "value", "values"];
function _extends131() {
  _extends131 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends131.apply(this, arguments);
}
function _objectWithoutPropertiesLoose80(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var deriveMax = function deriveMax2(values) {
  var max = 100;
  if (values && values.length > 1) {
    max = 0;
    values.forEach(function(v3) {
      max += v3.value;
    });
  }
  return max;
};
var Meter = (0, import_react135.forwardRef)(function(_ref, ref) {
  var _ref$background = _ref.background, background = _ref$background === void 0 ? {
    color: "light-2",
    opacity: "medium"
  } : _ref$background, color = _ref.color, _ref$direction = _ref.direction, direction = _ref$direction === void 0 ? "horizontal" : _ref$direction, _ref$size = _ref.size, size = _ref$size === void 0 ? "medium" : _ref$size, _ref$thickness = _ref.thickness, thickness = _ref$thickness === void 0 ? "medium" : _ref$thickness, _ref$type = _ref.type, type = _ref$type === void 0 ? "bar" : _ref$type, reverseProp = _ref.reverse, value = _ref.value, valuesProp = _ref.values, rest = _objectWithoutPropertiesLoose80(_ref, _excluded83);
  var theme = (0, import_react135.useContext)(Me) || defaultProps2.theme;
  var values = (0, import_react135.useMemo)(function() {
    if (valuesProp)
      return valuesProp;
    if (value)
      return [{
        color,
        value
      }];
    return [];
  }, [color, value, valuesProp]);
  var reverse = direction === "horizontal" && (theme.dir === "rtl" || reverseProp) && !(theme.dir === "rtl" && reverseProp);
  var memoizedMax = (0, import_react135.useMemo)(function() {
    return deriveMax(values);
  }, [values]);
  var content;
  if (type === "bar") {
    content = import_react135.default.createElement(Bar, _extends131({
      ref,
      max: memoizedMax,
      values,
      size,
      thickness,
      background,
      direction,
      reverse
    }, rest));
  } else if (type === "circle" || type === "pie" || type === "semicircle") {
    content = import_react135.default.createElement(Circle, _extends131({
      ref,
      max: memoizedMax,
      values,
      size,
      thickness,
      type,
      background,
      reverse
    }, rest));
  }
  return content;
});
Meter.displayName = "Meter";
Meter.prototype = MeterPropTypes;

// node_modules/grommet/es6/components/Page/Page.js
var import_react137 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/Page/PageContext.js
var import_react136 = __toESM(require_react());
var PageContext = (0, import_react136.createContext)({});

// node_modules/grommet/es6/components/Page/propTypes.js
var import_prop_types67 = __toESM(require_prop_types());
var PropType65 = {};
if (true) {
  PropType65 = {
    kind: import_prop_types67.default.string
  };
}
var PagePropTypes = PropType65;

// node_modules/grommet/es6/components/Page/Page.js
var _excluded84 = ["kind"];
function _extends132() {
  _extends132 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends132.apply(this, arguments);
}
function _objectWithoutPropertiesLoose81(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var Page = function Page2(_ref) {
  var kind = _ref.kind, rest = _objectWithoutPropertiesLoose81(_ref, _excluded84);
  var size = (0, import_react137.useContext)(ResponsiveContext);
  var theme = (0, import_react137.useContext)(Me);
  var contentValue = (0, import_react137.useMemo)(function() {
    var _theme$page$kind, _theme$page$kind2;
    return _extends132({
      alignSelf: (_theme$page$kind = theme.page[kind]) == null ? void 0 : _theme$page$kind.alignSelf,
      width: (_theme$page$kind2 = theme.page[kind]) == null ? void 0 : _theme$page$kind2.width
    }, theme.page[kind][size]);
  }, [theme, size, kind]);
  return import_react137.default.createElement(PageContext.Provider, {
    value: contentValue
  }, import_react137.default.createElement(Box, _extends132({
    fill: "horizontal"
  }, rest)));
};
Page.displayName = "Page";
Page.propTypes = PagePropTypes;
Page.defaultProps = {
  kind: "wide"
};

// node_modules/grommet/es6/components/PageContent/PageContent.js
var import_react138 = __toESM(require_react());

// node_modules/grommet/es6/components/PageContent/propTypes.js
var import_prop_types68 = __toESM(require_prop_types());
var PropType66 = {};
if (true) {
  PropType66 = {
    background: import_prop_types68.default.oneOfType([import_prop_types68.default.string, import_prop_types68.default.shape({
      color: colorPropType,
      dark: import_prop_types68.default.oneOfType([import_prop_types68.default.bool, import_prop_types68.default.string]),
      image: import_prop_types68.default.string,
      position: import_prop_types68.default.string,
      opacity: import_prop_types68.default.oneOfType([import_prop_types68.default.string, import_prop_types68.default.bool, import_prop_types68.default.number, import_prop_types68.default.oneOf(["weak", "medium", "strong"])]),
      repeat: import_prop_types68.default.oneOfType([import_prop_types68.default.oneOf(["no-repeat", "repeat"]), import_prop_types68.default.string]),
      size: import_prop_types68.default.oneOfType([import_prop_types68.default.oneOf(["cover", "contain"]), import_prop_types68.default.string]),
      light: import_prop_types68.default.string,
      fill: import_prop_types68.default.oneOf(["horizontal"])
    })])
  };
}
var PageContentPropTypes = PropType66;

// node_modules/grommet/es6/components/PageContent/PageContent.js
var _excluded85 = ["children", "background"];
function _objectDestructuringEmpty8(obj) {
  if (obj == null)
    throw new TypeError("Cannot destructure " + obj);
}
function _extends133() {
  _extends133 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends133.apply(this, arguments);
}
function _objectWithoutPropertiesLoose82(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var PageContent = function PageContent2(_ref) {
  var children2 = _ref.children, background = _ref.background, rest = _objectWithoutPropertiesLoose82(_ref, _excluded85);
  var _useContext = (0, import_react138.useContext)(PageContext), pageContext = _extends133({}, (_objectDestructuringEmpty8(_useContext), _useContext));
  if (background != null && background.fill) {
    return import_react138.default.createElement(Box, {
      background
    }, import_react138.default.createElement(Box, _extends133({
      fill: "horizontal"
    }, pageContext, rest), children2));
  }
  return import_react138.default.createElement(Box, _extends133({
    fill: "horizontal",
    background
  }, pageContext, rest), children2);
};
PageContent.displayName = "PageContent";
PageContent.propTypes = PageContentPropTypes;

// node_modules/grommet/es6/components/PageHeader/PageHeader.js
var import_react139 = __toESM(require_react());
init_styled_components_browser_esm();
var _excluded86 = ["actions", "gridProps", "parent", "responsive", "size", "subtitle", "title"];
function _objectWithoutPropertiesLoose83(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function _extends134() {
  _extends134 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends134.apply(this, arguments);
}
var sizeStyle18 = function sizeStyle19(size, feature, theme, breakpoint) {
  var _ref, _theme$pageHeader$siz, _theme$global$breakpo, _theme$global$breakpo2;
  var style = _extends134({}, theme.pageHeader[feature], (_ref = size && ((_theme$pageHeader$siz = theme.pageHeader.size[size]) == null ? void 0 : _theme$pageHeader$siz[feature])) != null ? _ref : theme.pageHeader[feature], (!size || size === "medium") && feature === "subtitle" && ((_theme$global$breakpo = theme.global.breakpoints[breakpoint]) == null ? void 0 : _theme$global$breakpo.value) <= ((_theme$global$breakpo2 = theme.global.breakpoints.small) == null ? void 0 : _theme$global$breakpo2.value) && {
    size: "medium"
  });
  return style;
};
var PageHeader = (0, import_react139.forwardRef)(function(_ref2, ref) {
  var actions = _ref2.actions, gridPropsProp = _ref2.gridProps, parent = _ref2.parent, responsive = _ref2.responsive, size = _ref2.size, subtitle = _ref2.subtitle, title = _ref2.title, rest = _objectWithoutPropertiesLoose83(_ref2, _excluded86);
  var theme = (0, import_react139.useContext)(Me);
  var breakpoint = (0, import_react139.useContext)(ResponsiveContext);
  var actionsProps = _extends134({}, theme.pageHeader.actions);
  var gridProps = theme.pageHeader[breakpoint] || theme.pageHeader.medium;
  if (responsive && theme.pageHeader.responsive.breakpoints.includes(breakpoint)) {
    gridProps = _extends134({}, gridProps, theme.pageHeader.responsive);
    actionsProps = _extends134({}, actionsProps, theme.pageHeader.responsive.actions);
  }
  var _gridProps = gridProps, areas = _gridProps.areas, columns = _gridProps.columns, gap = _gridProps.gap, rows = _gridProps.rows;
  return import_react139.default.createElement(Header, _extends134({
    ref,
    direction: "column",
    gap: "none",
    pad: sizeStyle18(size, "pad", theme)
  }, rest), import_react139.default.createElement(Grid, _extends134({
    columns,
    rows,
    areas,
    gap,
    fill: "horizontal"
  }, gridPropsProp), import_react139.default.createElement(Box, _extends134({
    gridArea: "parent"
  }, theme.pageHeader.parent), parent), import_react139.default.createElement(Box, {
    gridArea: "title"
  }, typeof title === "string" ? import_react139.default.createElement(Heading, sizeStyle18(size, "title", theme), title) : title), import_react139.default.createElement(Box, {
    gridArea: "subtitle"
  }, typeof subtitle === "string" ? import_react139.default.createElement(Paragraph, sizeStyle18(size, "subtitle", theme, breakpoint), subtitle) : subtitle), import_react139.default.createElement(Box, _extends134({
    gridArea: "actions"
  }, actionsProps), actions)));
});
PageHeader.displayName = "PageHeader";

// node_modules/grommet/es6/components/NameValuePair/NameValuePair.js
var import_react141 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/NameValueList/NameValueListContext.js
var import_react140 = __toESM(require_react());
var NameValueListContext = import_react140.default.createContext({});

// node_modules/grommet/es6/components/NameValuePair/NameValuePair.js
function _extends135() {
  _extends135 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends135.apply(this, arguments);
}
var NameValuePair = function NameValuePair2(_ref) {
  var _theme$nameValuePair, _theme$nameValuePair$;
  var children2 = _ref.children, nameProp = _ref.name;
  var _useContext = (0, import_react141.useContext)(NameValueListContext), nameProps = _useContext.nameProps, pairProps = _useContext.pairProps, valueProps = _useContext.valueProps;
  var size = (0, import_react141.useContext)(ResponsiveContext);
  var theme = (0, import_react141.useContext)(Me);
  var direction = pairProps == null ? void 0 : pairProps.direction;
  var column = direction === "column" || direction === "column-reverse" || size === "small";
  var Container2 = column ? Box : import_react141.Fragment;
  var nameAlign = size !== "small" ? nameProps == null ? void 0 : nameProps.align : void 0;
  var valueAlign = size !== "small" ? valueProps == null ? void 0 : valueProps.align : void 0;
  var valueGap;
  if (column && (_theme$nameValuePair = theme.nameValuePair) != null && (_theme$nameValuePair$ = _theme$nameValuePair.column) != null && _theme$nameValuePair$.gap)
    valueGap = {
      bottom: theme.nameValuePair.column.gap
    };
  var name;
  if (typeof nameProp === "string" || typeof nameProp === "number")
    name = import_react141.default.createElement(Text, _extends135({
      as: "dt",
      margin: valueGap,
      textAlign: nameAlign
    }, theme.nameValuePair.name), nameProp);
  else
    name = import_react141.default.createElement(Box, {
      as: "dt",
      align: nameAlign
    }, nameProp);
  var value;
  if (typeof children2 === "string" || typeof children2 === "number")
    value = // override browser default margin for dd
    import_react141.default.createElement(Text, _extends135({
      as: "dd",
      margin: "none",
      textAlign: valueAlign
    }, theme.nameValuePair.value), children2);
  else
    value = // override browser default margin for dd
    import_react141.default.createElement(Box, {
      margin: "none",
      as: "dd",
      align: valueAlign
    }, children2);
  var first = direction !== "column-reverse" ? name : value;
  var second = direction !== "column-reverse" ? value : name;
  return import_react141.default.createElement(Container2, null, first, second);
};

// node_modules/grommet/es6/components/NameValueList/NameValueList.js
var import_react142 = __toESM(require_react());
init_styled_components_browser_esm();
var _excluded87 = ["align", "layout", "nameProps", "pairProps", "valueProps"];
function _extends136() {
  _extends136 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends136.apply(this, arguments);
}
function _objectWithoutPropertiesLoose84(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var NameValueList = (0, import_react142.forwardRef)(function(_ref, ref) {
  var _theme$nameValueList$, _theme$nameValueList$2;
  var align = _ref.align, _ref$layout = _ref.layout, layout = _ref$layout === void 0 ? "column" : _ref$layout, nameProps = _ref.nameProps, _ref$pairProps = _ref.pairProps, pairProps = _ref$pairProps === void 0 ? {
    direction: "row"
  } : _ref$pairProps, valueProps = _ref.valueProps, rest = _objectWithoutPropertiesLoose84(_ref, _excluded87);
  var size = (0, import_react142.useContext)(ResponsiveContext);
  var theme = (0, import_react142.useContext)(Me);
  var columns;
  var valueWidth = (valueProps == null ? void 0 : valueProps.width) || theme.nameValueList.value.width;
  var nameWidth = (nameProps == null ? void 0 : nameProps.width) || theme.nameValueList.name.width;
  if (size === "small" || layout === "grid")
    columns = {
      count: "fit",
      size: !Array.isArray(valueWidth) ? ["auto", valueWidth] : valueWidth
    };
  else if (layout === "column" && pairProps.direction === "row")
    columns = [nameWidth, !Array.isArray(valueWidth) ? ["auto", valueWidth] : valueWidth];
  else
    columns = [valueWidth];
  var gap = theme.nameValueList.gap;
  if ((pairProps.direction === "column" || size === "small") && (_theme$nameValueList$ = theme.nameValueList.pair) != null && (_theme$nameValueList$2 = _theme$nameValueList$.column) != null && _theme$nameValueList$2.gap) {
    gap = theme.nameValueList.pair.column.gap;
  }
  var listContextValue = (0, import_react142.useMemo)(function() {
    return {
      nameProps,
      pairProps,
      valueProps
    };
  }, [nameProps, pairProps, valueProps]);
  return import_react142.default.createElement(NameValueListContext.Provider, {
    value: listContextValue
  }, import_react142.default.createElement(Grid, _extends136({
    as: "dl",
    ref,
    align,
    columns,
    gap,
    margin: "none"
    // override browser default margin for dl
  }, rest)));
});
NameValueList.displayName = "NameValueList";

// node_modules/grommet/es6/components/Notification/Notification.js
var import_react143 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/Notification/propTypes.js
var import_prop_types69 = __toESM(require_prop_types());
var PropType67 = {};
if (true) {
  PropType67 = {
    actions: import_prop_types69.default.arrayOf(import_prop_types69.default.shape(AnchorPropTypes)),
    global: import_prop_types69.default.bool,
    title: import_prop_types69.default.string,
    message: import_prop_types69.default.oneOfType([import_prop_types69.default.string, import_prop_types69.default.node]),
    status: import_prop_types69.default.oneOf(["critical", "warning", "normal", "info", "unknown"]),
    toast: import_prop_types69.default.oneOfType([import_prop_types69.default.bool, import_prop_types69.default.shape({
      autoClose: import_prop_types69.default.bool,
      position: import_prop_types69.default.oneOf(["bottom", "bottom-left", "bottom-right", "center", "end", "hidden", "left", "right", "start", "top", "top-left", "top-right"])
    })]),
    onClose: import_prop_types69.default.func,
    icon: import_prop_types69.default.element,
    time: import_prop_types69.default.number
  };
}
var NotificationType = PropType67;

// node_modules/grommet/es6/components/Notification/Notification.js
var _excluded88 = ["actions", "message", "onClose", "id", "global", "status", "title", "toast", "icon", "time"];
function _extends137() {
  _extends137 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends137.apply(this, arguments);
}
function _objectWithoutPropertiesLoose85(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var adaptThemeStyle = function adaptThemeStyle2(value, theme) {
  var textStyle = value;
  var closeButtonStyle = value;
  if (typeof value === "string" && theme.global.edgeSize[value]) {
    textStyle = {
      vertical: value,
      left: value,
      right: void 0
    };
    closeButtonStyle = {
      vertical: value,
      right: value
    };
  } else if (typeof value === "object") {
    var left = value.left, right = value.right, top = value.top, bottom = value.bottom, horizontal12 = value.horizontal, vertical12 = value.vertical;
    textStyle = {
      top: top || vertical12,
      bottom: bottom || vertical12,
      left: left || horizontal12,
      right: void 0
    };
    closeButtonStyle = {
      top: top || vertical12,
      bottom: bottom || vertical12,
      right: right || horizontal12
    };
  }
  return [textStyle, closeButtonStyle];
};
var NotificationAnchor = styled_components_browser_esm_default(Anchor).withConfig({
  displayName: "Notification__NotificationAnchor",
  componentId: "sc-1yq09yz-0"
})(["white-space:nowrap;"]);
var Notification = function Notification2(_ref) {
  var _theme$notification, _theme$notification2, _theme$notification2$, _theme$notification2$2, _theme$notification3, _theme$notification3$, _theme$notification4, _theme$notification4$, _theme$notification4$2, _theme$notification5, _theme$notification5$;
  var actionsProp = _ref.actions, messageProp = _ref.message, onClose = _ref.onClose, id = _ref.id, global = _ref.global, status = _ref.status, title = _ref.title, toast = _ref.toast, icon = _ref.icon, time = _ref.time, rest = _objectWithoutPropertiesLoose85(_ref, _excluded88);
  var autoClose = toast && (toast == null ? void 0 : toast.autoClose) === void 0 ? true : toast.autoClose;
  var theme = (0, import_react143.useContext)(Me) || defaultProps2.theme;
  var _useState = (0, import_react143.useState)(true), visible = _useState[0], setVisible = _useState[1];
  var position = (0, import_react143.useMemo)(function() {
    return toast && (toast == null ? void 0 : toast.position) || "top";
  }, [toast]);
  var close = (0, import_react143.useCallback)(function(event) {
    setVisible(false);
    if (onClose)
      onClose(event);
  }, [onClose]);
  (0, import_react143.useEffect)(function() {
    if (autoClose) {
      var timer = setTimeout(close, time || theme.notification.toast.time || theme.notification.time);
      return function() {
        return clearTimeout(timer);
      };
    }
    return void 0;
  }, [autoClose, close, theme.notification.toast.time, theme.notification.time, time]);
  var CloseIcon = theme.notification.close.icon;
  var _ref2 = ((_theme$notification = theme.notification) == null ? void 0 : _theme$notification[status]) || theme.notification.unknown, StatusIcon = _ref2.icon, color = _ref2.color;
  var closeIconColor = theme.notification.close.color;
  var kind = (0, import_react143.useMemo)(function() {
    if (toast)
      return "toast";
    if (global)
      return "global";
    return void 0;
  }, [global, toast]);
  var direction;
  if (kind && theme.notification[kind].direction)
    direction = theme.notification[kind].direction;
  else
    direction = theme.notification.direction;
  var background;
  if (kind && (_theme$notification2 = theme.notification) != null && (_theme$notification2$ = _theme$notification2[status]) != null && (_theme$notification2$2 = _theme$notification2$[kind]) != null && _theme$notification2$2.background)
    background = theme.notification[status][kind].background;
  else if ((_theme$notification3 = theme.notification) != null && (_theme$notification3$ = _theme$notification3[status]) != null && _theme$notification3$.background)
    background = theme.notification[status].background;
  else
    background = ((_theme$notification4 = theme.notification) == null ? void 0 : (_theme$notification4$ = _theme$notification4[kind]) == null ? void 0 : (_theme$notification4$2 = _theme$notification4$.container) == null ? void 0 : _theme$notification4$2.background) || theme.notification.container.background;
  var TextWrapper = direction === "row" ? Text : import_react143.Fragment;
  var pad;
  if (kind && theme.notification[kind].container.pad)
    pad = theme.notification[kind].container.pad;
  else
    pad = theme.notification.container.pad;
  var textPad;
  var closeButtonPad;
  if (onClose) {
    var _adaptThemeStyle = adaptThemeStyle(pad, theme);
    textPad = _adaptThemeStyle[0];
    closeButtonPad = _adaptThemeStyle[1];
  } else
    textPad = pad;
  var actions;
  var message = messageProp;
  if (actionsProp)
    actions = actionsProp.map(function(action) {
      return import_react143.default.createElement(import_react143.Fragment, {
        key: action.label
      }, import_react143.default.createElement(
        NotificationAnchor,
        _extends137({
          margin: {
            right: "xsmall"
          }
        }, action, theme.notification.actions)
      ), " ");
    });
  var Message4 = direction !== "row" ? Paragraph : Text;
  if (message || actions)
    message = typeof message === "string" ? import_react143.default.createElement(Message4, theme.notification.message, import_react143.default.createElement(Text, {
      margin: {
        right: "xsmall"
      }
    }, message), actions) : message;
  var iconDimension = ((_theme$notification5 = theme.notification) == null ? void 0 : (_theme$notification5$ = _theme$notification5.message) == null ? void 0 : _theme$notification5$.size) || "medium";
  var content = import_react143.default.createElement(Box, _extends137({}, theme.notification.container, global ? _extends137({}, theme.notification.global.container) : {}, toast ? _extends137({}, theme.notification.toast.container) : {}, {
    background,
    pad: void 0,
    direction: "row",
    gap: "small",
    id: toast ? void 0 : id
  }, rest), import_react143.default.createElement(Box, {
    direction: "row",
    pad: textPad,
    flex: true
  }, import_react143.default.createElement(Box, theme.notification.iconContainer, icon || import_react143.default.createElement(StatusIcon, {
    color,
    height: iconDimension
  })), import_react143.default.createElement(Box, theme.notification.textContainer, import_react143.default.createElement(TextWrapper, null, title && import_react143.default.createElement(Text, theme.notification.title, title), message && title && direction === "row" && import_react143.default.createElement(import_react143.default.Fragment, null, " "), message))), onClose && // theme.notification.container and textContainer may both have pad,
  // account for both
  import_react143.default.createElement(Box, {
    pad: closeButtonPad
  }, import_react143.default.createElement(Box, theme.notification.textContainer, import_react143.default.createElement(Button, {
    icon: import_react143.default.createElement(CloseIcon, {
      color: closeIconColor,
      height: iconDimension,
      width: iconDimension
    }),
    onClick: close,
    hoverIndicator: true,
    plain: true
  }))));
  if (toast) {
    content = visible && import_react143.default.createElement(Layer, _extends137({}, theme.notification.toast.layer, {
      role: "log",
      modal: false,
      onEsc: onClose,
      id,
      responsive: false,
      plain: true,
      position
    }), content);
  }
  return content;
};
Notification.defaultProps = {
  status: "unknown",
  toast: false
};
Object.setPrototypeOf(Notification.defaultProps, defaultProps2);
Notification.displayName = "Notification";
Notification.propTypes = NotificationType;

// node_modules/grommet/es6/components/RangeInput/RangeInput.js
var import_react144 = __toESM(require_react());

// node_modules/grommet/es6/components/RangeInput/StyledRangeInput.js
init_styled_components_browser_esm();
var getBoundOpacity = function getBoundOpacity2(props, bound) {
  return props.theme.rangeInput && props.theme.rangeInput.track && props.theme.rangeInput.track[bound] && props.theme.rangeInput.track[bound].opacity ? props.theme.rangeInput.track[bound].opacity : 1;
};
var getBoundColor = function getBoundColor2(props, bound) {
  if (props.theme.rangeInput && props.theme.rangeInput.track && props.theme.rangeInput.track[bound] && props.theme.rangeInput.track[bound].color) {
    return getRGBA(normalizeColor(props.theme.rangeInput.track[bound].color, props.theme), getBoundOpacity(props, bound));
  }
  return getRGBA(normalizeColor(props.theme.rangeInput.track.color, props.theme), getBoundOpacity(props, bound));
};
var trackColorStyle = function trackColorStyle2(props) {
  var _props$theme$rangeInp, _props$theme$rangeInp2;
  var max = props.max, min = props.min;
  var thumbPosition = ((props.value || 0) - min) / (max - min) * 100 + "%";
  var defaultTrackColor;
  if (props.theme.rangeInput && props.theme.rangeInput.track && !props.theme.rangeInput.track.lower && !props.theme.rangeInput.track.upper) {
    var color = getRGBA(normalizeColor(props.theme.rangeInput.track.color, props.theme), 0.2);
    if (color === "rgba(0, 0, 0, 0.2)") {
      defaultTrackColor = color;
    } else {
      defaultTrackColor = getRGBA(normalizeColor(props.theme.rangeInput.track.color, props.theme), props.theme.rangeInput.track.opacity || 1);
    }
    if (!props.color)
      return "background: " + defaultTrackColor;
  }
  var upperTrackColor = (_props$theme$rangeInp = props.theme.rangeInput.track) != null && _props$theme$rangeInp.upper ? getBoundColor(props, "upper") : defaultTrackColor;
  var lowerTrackColor = (_props$theme$rangeInp2 = props.theme.rangeInput.track) != null && _props$theme$rangeInp2.lower ? getBoundColor(props, "lower") : getRGBA(normalizeColor(props.theme.global.colors.control, props.theme), props.theme.rangeInput.track.opacity || 1);
  if (typeof props.color === "string" || typeof props.color === "object" && !Array.isArray(props.color)) {
    lowerTrackColor = normalizeColor(props.color, props.theme);
    return "background: linear-gradient(\n        to right,\n        " + lowerTrackColor + ",\n        " + lowerTrackColor + " " + thumbPosition + ",\n        " + upperTrackColor + " " + thumbPosition + ",\n        " + upperTrackColor + "\n      );\n    ";
  }
  if (Array.isArray(props.color)) {
    var arrayOfTrackColors = props.color;
    var valuePercentage = 0;
    var result = "background: linear-gradient(to right,";
    for (var index = 0; index < arrayOfTrackColors.length; index += 1) {
      var _arrayOfTrackColors$i = arrayOfTrackColors[index], value = _arrayOfTrackColors$i.value, _color = _arrayOfTrackColors$i.color, opacity = _arrayOfTrackColors$i.opacity;
      result += getRGBA(normalizeColor(_color, props.theme), opacity || 1) + " " + valuePercentage + "%,";
      if (props.value >= value) {
        valuePercentage = (value - min) / (max - min) * 100;
        result += getRGBA(normalizeColor(_color, props.theme), opacity || 1) + " " + valuePercentage + "%,";
      } else {
        result += getRGBA(normalizeColor(_color, props.theme), opacity || 1) + " " + thumbPosition + ",";
        result += upperTrackColor + " " + thumbPosition + ", " + upperTrackColor + ")";
        break;
      }
      if (index === arrayOfTrackColors.length - 1) {
        result += upperTrackColor + " " + valuePercentage + "%, " + upperTrackColor + ")";
      }
    }
    return result;
  }
  return "background: linear-gradient(\n      to right,\n      " + lowerTrackColor + ",\n      " + lowerTrackColor + " " + thumbPosition + ",\n      " + upperTrackColor + " " + thumbPosition + ",\n      " + upperTrackColor + "\n    );\n  ";
};
var disabledRangeInputStyle = function disabledRangeInputStyle2(props, context) {
  var _props$theme$rangeInp3;
  return Ae(["", " ", ""], disabledStyle(props.theme.rangeInput.disabled.opacity), ((_props$theme$rangeInp3 = props.theme.rangeInput.disabled[context]) == null ? void 0 : _props$theme$rangeInp3.color) && "background: " + normalizeColor(props.theme.rangeInput.disabled[context].color, props.theme) + ";");
};
var hoverStyle4 = function hoverStyle5(props) {
  return Ae(["box-shadow:0px 0px 0px 2px ", ";"], normalizeColor(props.theme.rangeInput.thumb.color || "control", props.theme));
};
var rangeTrackStyle = Ae(["box-sizing:border-box;width:100%;height:", ";", ";", " ", ";"], function(props) {
  return props.theme.rangeInput.track.height;
}, function(props) {
  return trackColorStyle(props);
}, function(props) {
  return props.theme.rangeInput && props.theme.rangeInput.track && props.theme.rangeInput.track.extend;
}, function(props) {
  var _props$theme, _props$theme$rangeInp4;
  return props.disabled && ((_props$theme = props.theme) == null ? void 0 : (_props$theme$rangeInp4 = _props$theme.rangeInput) == null ? void 0 : _props$theme$rangeInp4.disabled) && disabledRangeInputStyle(props, "track");
});
var rangeThumbStyle = Ae(["box-sizing:border-box;position:relative;border-radius:", ";height:", ";width:", ";overflow:visible;background:", ";-webkit-appearance:none;cursor:pointer;", " ", ";"], function(props) {
  return props.theme.global.spacing;
}, function(props) {
  return props.theme.global.spacing;
}, function(props) {
  return props.theme.global.spacing;
}, function(props) {
  return normalizeColor(props.theme.rangeInput.thumb.color || "control", props.theme);
}, function(props) {
  return props.theme.rangeInput && props.theme.rangeInput.thumb && props.theme.rangeInput.thumb.extend;
}, function(props) {
  var _props$theme2, _props$theme2$rangeIn;
  return props.disabled && ((_props$theme2 = props.theme) == null ? void 0 : (_props$theme2$rangeIn = _props$theme2.rangeInput) == null ? void 0 : _props$theme2$rangeIn.disabled) && disabledRangeInputStyle(props, "thumb");
});
var firefoxMicrosoftThumbStyle = Ae(["", " margin-top:0px;height:", ";width:", ";", " ", ""], rangeThumbStyle, function(props) {
  return props.theme.global.spacing;
}, function(props) {
  return props.theme.global.spacing;
}, function(props) {
  return props.focus && props.focusIndicator && focusStyle();
}, function(props) {
  return props.theme.rangeInput && props.theme.rangeInput.thumb && props.theme.rangeInput.thumb.extend;
});
var StyledRangeInput = styled_components_browser_esm_default.input.withConfig({
  displayName: "StyledRangeInput",
  componentId: "sc-15st9ck-0"
})(["box-sizing:border-box;position:relative;-webkit-appearance:none;border-color:transparent;height:", ";width:100%;padding:0px;cursor:", ";background:transparent;margin:0px;", " &::-moz-focus-inner{border:none;}&::-moz-focus-outer{border:none;}&::-webkit-slider-runnable-track{", "}&::-webkit-slider-thumb{margin-top:-", "px;", " ", " ", "}&::-moz-range-track{", "}&::-moz-range-thumb{", "}&::-ms-thumb{", "}", " &::-ms-track{", " border-color:transparent;color:transparent;}&::-ms-fill-lower{", ";border-color:transparent;}&::-ms-fill-upper{", ";border-color:transparent;}&:focus::-webkit-slider-thumb{", "}&:focus-visible{outline:0;}&:focus{outline:none;}", ""], function(props) {
  return props.theme.global.spacing;
}, function(props) {
  return props.disabled ? "default" : "pointer";
}, function(props) {
  return props.theme.rangeInput.pad && edgeStyle("padding", props.theme.rangeInput.pad, props.responsive, props.theme.box.responsiveBreakpoint, props.theme);
}, rangeTrackStyle, function(props) {
  return (parseMetricToNum(props.theme.global.spacing) - parseMetricToNum(props.theme.rangeInput.track.height || 0)) * 0.5;
}, rangeThumbStyle, function(props) {
  return !props.disabled && Ae(["&:hover{", "}"], hoverStyle4(props));
}, function(props) {
  return props.focus && !props.focusIndicator && Ae(["", ""], hoverStyle4(props));
}, rangeTrackStyle, firefoxMicrosoftThumbStyle, firefoxMicrosoftThumbStyle, function(props) {
  return !props.disabled && Ae(["&:hover::-moz-range-thumb{", "}&:hover::-ms-thumb{", "}"], hoverStyle4(props), hoverStyle4(props));
}, rangeTrackStyle, function(props) {
  return trackColorStyle(props, "lower");
}, function(props) {
  return trackColorStyle(props, "upper");
}, function(props) {
  return props.focus && props.focusIndicator && focusStyle();
}, function(props) {
  return props.theme.rangeInput && props.theme.rangeInput.extend;
});
StyledRangeInput.defaultProps = {};
Object.setPrototypeOf(StyledRangeInput.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/RangeInput/propTypes.js
var import_prop_types70 = __toESM(require_prop_types());
var PropType68 = {};
if (true) {
  PropType68 = {
    a11yTitle: import_prop_types70.default.string,
    color: import_prop_types70.default.oneOfType([colorPropType, import_prop_types70.default.arrayOf(import_prop_types70.default.shape({
      color: colorPropType.isRequired,
      value: import_prop_types70.default.number.isRequired,
      opacity: import_prop_types70.default.number
    }))]),
    id: import_prop_types70.default.string,
    min: import_prop_types70.default.oneOfType([import_prop_types70.default.number, import_prop_types70.default.string]),
    max: import_prop_types70.default.oneOfType([import_prop_types70.default.number, import_prop_types70.default.string]),
    name: import_prop_types70.default.string,
    onChange: import_prop_types70.default.func,
    step: import_prop_types70.default.number,
    value: import_prop_types70.default.oneOfType([import_prop_types70.default.number, import_prop_types70.default.string])
  };
}
var RangeInputPropTypes = PropType68;

// node_modules/grommet/es6/components/RangeInput/RangeInput.js
var _excluded89 = ["a11yTitle", "color", "focus", "focusIndicator", "name", "onChange", "onFocus", "onBlur", "value", "step", "min", "max"];
function _extends138() {
  _extends138 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends138.apply(this, arguments);
}
function _objectWithoutPropertiesLoose86(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var RangeInput = (0, import_react144.forwardRef)(function(_ref, ref) {
  var a11yTitle = _ref.a11yTitle, color = _ref.color, focusProp = _ref.focus, _ref$focusIndicator = _ref.focusIndicator, focusIndicator = _ref$focusIndicator === void 0 ? true : _ref$focusIndicator, name = _ref.name, _onChange = _ref.onChange, _onFocus = _ref.onFocus, _onBlur = _ref.onBlur, valueProp = _ref.value, _ref$step = _ref.step, step = _ref$step === void 0 ? 1 : _ref$step, _ref$min = _ref.min, min = _ref$min === void 0 ? 0 : _ref$min, _ref$max = _ref.max, max = _ref$max === void 0 ? 100 : _ref$max, rest = _objectWithoutPropertiesLoose86(_ref, _excluded89);
  var formContext = (0, import_react144.useContext)(FormContext);
  var _useState = (0, import_react144.useState)(focusProp), focus = _useState[0], setFocus = _useState[1];
  var _formContext$useFormI = formContext.useFormInput({
    name,
    value: valueProp
  }), value = _formContext$useFormI[0], setValue = _formContext$useFormI[1];
  var _useState2 = (0, import_react144.useState)({
    x: null,
    y: null
  }), scroll = _useState2[0], setScroll = _useState2[1];
  var rangeInputRef = useForwardedRef(ref);
  (0, import_react144.useEffect)(function() {
    var x3 = scroll.x, y3 = scroll.y;
    if (x3 !== null && y3 !== null) {
      var handleScrollTo = function handleScrollTo2() {
        return window.scrollTo(x3, y3);
      };
      window.addEventListener("scroll", handleScrollTo);
      return function() {
        return window.removeEventListener("scroll", handleScrollTo);
      };
    }
    return void 0;
  }, [scroll]);
  var setRangeInputValue = (0, import_react144.useCallback)(function(nextValue) {
    if (nextValue > max || nextValue < min)
      return;
    var nativeInputValueSetter = Object.getOwnPropertyDescriptor(window.HTMLInputElement.prototype, "value").set;
    nativeInputValueSetter.call(rangeInputRef.current, nextValue);
    var event = new Event("input", {
      bubbles: true
    });
    rangeInputRef.current.dispatchEvent(event);
  }, [rangeInputRef, min, max]);
  var handleOnWheel = function handleOnWheel2(event) {
    var newValue = parseFloat(value);
    if (event.deltaY < 0) {
      setRangeInputValue(newValue + step);
    } else {
      setRangeInputValue(newValue - step);
    }
  };
  var handleMouseOver = function handleMouseOver2() {
    return setScroll({
      x: window.scrollX,
      y: window.scrollY
    });
  };
  var handleMouseOut = function handleMouseOut2() {
    return setScroll({
      x: null,
      y: null
    });
  };
  return import_react144.default.createElement(StyledRangeInput, _extends138({
    "aria-label": a11yTitle,
    "aria-valuemax": max,
    "aria-valuemin": min,
    "aria-valuenow": value,
    ref: rangeInputRef,
    name,
    focus,
    focusIndicator,
    value
  }, rest, {
    color,
    onFocus: function onFocus(event) {
      setFocus(true);
      if (_onFocus)
        _onFocus(event);
    },
    onBlur: function onBlur(event) {
      setFocus(false);
      if (_onBlur)
        _onBlur(event);
    },
    onChange: function onChange(event) {
      setValue(event.target.value);
      if (_onChange)
        _onChange(event);
    },
    onMouseOver: handleMouseOver,
    onMouseOut: handleMouseOut,
    onWheel: handleOnWheel,
    step,
    type: "range",
    min,
    max
  }));
});
RangeInput.displayName = "RangeInput";
RangeInput.propTypes = RangeInputPropTypes;

// node_modules/grommet/es6/components/RoutedAnchor/RoutedAnchor.js
var import_react145 = __toESM(require_react());
var import_prop_types71 = __toESM(require_prop_types());
var _excluded90 = ["path", "method"];
function _extends139() {
  _extends139 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends139.apply(this, arguments);
}
function _objectWithoutPropertiesLoose87(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  _setPrototypeOf2(subClass, superClass);
}
function _setPrototypeOf2(o3, p2) {
  _setPrototypeOf2 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf4(o4, p3) {
    o4.__proto__ = p3;
    return o4;
  };
  return _setPrototypeOf2(o3, p2);
}
var RoutedAnchor = function(_Component) {
  _inheritsLoose(RoutedAnchor2, _Component);
  function RoutedAnchor2() {
    return _Component.apply(this, arguments) || this;
  }
  var _proto = RoutedAnchor2.prototype;
  _proto.render = function render() {
    var _this = this;
    var _this$props = this.props, path = _this$props.path, method = _this$props.method, rest = _objectWithoutPropertiesLoose87(_this$props, _excluded90);
    if (true) {
      console.warn("This component will be deprecated in the upcoming releases. \n        Please refer to https://github.com/grommet/grommet/issues/2855 \n        for more information.");
    }
    return import_react145.default.createElement(Anchor, _extends139({}, rest, {
      href: path,
      onClick: function onClick(event) {
        var onClick2 = _this.props.onClick;
        var router = _this.context.router;
        if (event) {
          var modifierKey = event.ctrlKey || event.metaKey;
          if (modifierKey) {
            return;
          }
        }
        if (router) {
          event.preventDefault();
          (router.history || router)[method](path);
        }
        if (onClick2) {
          for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
            args[_key - 1] = arguments[_key];
          }
          onClick2.apply(void 0, [event].concat(args));
        }
      }
    }));
  };
  return RoutedAnchor2;
}(import_react145.Component);
RoutedAnchor.contextTypes = {
  router: import_prop_types71.default.shape({}).isRequired
};
RoutedAnchor.defaultProps = {
  method: "push"
};

// node_modules/grommet/es6/components/RoutedButton/RoutedButton.js
var import_react146 = __toESM(require_react());
var import_prop_types72 = __toESM(require_prop_types());
var _excluded91 = ["href", "path", "method", "onClick"];
function _extends140() {
  _extends140 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends140.apply(this, arguments);
}
function _objectWithoutPropertiesLoose88(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function _inheritsLoose2(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  _setPrototypeOf3(subClass, superClass);
}
function _setPrototypeOf3(o3, p2) {
  _setPrototypeOf3 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf4(o4, p3) {
    o4.__proto__ = p3;
    return o4;
  };
  return _setPrototypeOf3(o3, p2);
}
var RoutedButton = function(_Component) {
  _inheritsLoose2(RoutedButton2, _Component);
  function RoutedButton2() {
    var _this;
    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {
      _args[_key] = arguments[_key];
    }
    _this = _Component.call.apply(_Component, [this].concat(_args)) || this;
    _this.onClick = function(event) {
      var _this$props = _this.props, method = _this$props.method, onClick = _this$props.onClick, path = _this$props.path;
      var router = _this.context.router;
      if (event) {
        var modifierKey = event.ctrlKey || event.metaKey;
        if (modifierKey) {
          return;
        }
      }
      if (router) {
        event.preventDefault();
        (router.history || router)[method](path);
      }
      if (onClick) {
        for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
          args[_key2 - 1] = arguments[_key2];
        }
        onClick.apply(void 0, [event].concat(args));
      }
    };
    return _this;
  }
  var _proto = RoutedButton2.prototype;
  _proto.render = function render() {
    var _this$props2 = this.props, href = _this$props2.href, path = _this$props2.path, method = _this$props2.method, onClick = _this$props2.onClick, rest = _objectWithoutPropertiesLoose88(_this$props2, _excluded91);
    if (true) {
      console.warn("This component will be deprecated in the upcoming releases.\n         Please refer to https://github.com/grommet/grommet/issues/2855\n         for more information.");
    }
    return import_react146.default.createElement(Button, _extends140({}, rest, {
      href: path || href,
      disabled: !path && !onClick,
      onClick: this.onClick
    }));
  };
  return RoutedButton2;
}(import_react146.Component);
RoutedButton.contextTypes = {
  router: import_prop_types72.default.shape({}).isRequired
};
RoutedButton.defaultProps = {
  method: "push"
};

// node_modules/grommet/es6/components/Sidebar/Sidebar.js
var import_react147 = __toESM(require_react());

// node_modules/grommet/es6/components/Sidebar/propTypes.js
var import_prop_types73 = __toESM(require_prop_types());
var PropType69 = {};
if (true) {
  PropType69 = {
    children: import_prop_types73.default.node,
    footer: import_prop_types73.default.node,
    header: import_prop_types73.default.node
  };
}
var SidebarPropTypes = PropType69;

// node_modules/grommet/es6/components/Sidebar/Sidebar.js
var _excluded92 = ["children", "footer", "header"];
function _extends141() {
  _extends141 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends141.apply(this, arguments);
}
function _objectWithoutPropertiesLoose89(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var Sidebar = function Sidebar2(_ref) {
  var children2 = _ref.children, footer = _ref.footer, header = _ref.header, rest = _objectWithoutPropertiesLoose89(_ref, _excluded92);
  return import_react147.default.createElement(Box, _extends141({
    pad: "small",
    gap: "large",
    height: {
      min: "100%"
    }
  }, rest), header, import_react147.default.createElement(Box, {
    flex: true
  }, children2), footer);
};
Sidebar.propTypes = SidebarPropTypes;
Sidebar.defaultProps = {
  children: void 0,
  footer: void 0,
  header: void 0
};

// node_modules/grommet/es6/components/SkipLink/SkipLink.js
var import_react148 = __toESM(require_react());
var _excluded93 = ["id", "label"];
function _extends142() {
  _extends142 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends142.apply(this, arguments);
}
function _objectWithoutPropertiesLoose90(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var SkipLink = (0, import_react148.forwardRef)(function(_ref, ref) {
  var id = _ref.id, label = _ref.label, rest = _objectWithoutPropertiesLoose90(_ref, _excluded93);
  return import_react148.default.createElement(Anchor, _extends142({
    href: "#" + id,
    ref,
    label
  }, rest));
});

// node_modules/grommet/es6/components/SkipLinks/SkipLinks.js
var import_react149 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/SkipLinks/propTypes.js
var import_prop_types74 = __toESM(require_prop_types());
var PropType70 = {};
if (true) {
  PropType70 = {
    children: import_prop_types74.default.node.isRequired,
    messages: import_prop_types74.default.shape({
      skipTo: import_prop_types74.default.string
    })
  };
}
var SkipLinksPropTypes = PropType70;

// node_modules/grommet/es6/components/SkipLinks/SkipLinks.js
var SkipLinks = function SkipLinks2(_ref) {
  var children2 = _ref.children, id = _ref.id, messages = _ref.messages;
  var theme = (0, import_react149.useContext)(Me) || defaultProps2.theme;
  var _useState = (0, import_react149.useState)(false), showLayer = _useState[0], setShowLayer = _useState[1];
  var _useContext = (0, import_react149.useContext)(MessageContext), format3 = _useContext.format;
  var layerRef = (0, import_react149.useRef)(null);
  var onFocus = function onFocus2() {
    setShowLayer(true);
  };
  var removeLayer = function removeLayer2() {
    setShowLayer(false);
  };
  var onBlur = function onBlur2() {
    setTimeout(function() {
      var layerNode = layerRef.current;
      if (layerNode && !layerNode.contains(document.activeElement)) {
        removeLayer();
      }
    }, 0);
  };
  return import_react149.default.createElement(Layer, {
    id,
    position: showLayer ? theme.skipLinks.position : "hidden",
    ref: layerRef,
    onFocus,
    onBlur,
    modal: false,
    targetChildPosition: "first",
    responsive: false
  }, import_react149.default.createElement(Box, theme.skipLinks.container, import_react149.default.createElement(Text, theme.skipLinks.label, format3({
    id: "skipLinks.skipTo",
    messages
  })), import_react149.default.createElement(Box, {
    align: "center",
    gap: "medium"
  }, import_react149.Children.map(children2, function(child, index) {
    return child && (0, import_react149.cloneElement)(child, {
      // eslint-disable-next-line react/no-array-index-key
      key: "skip-link-" + index,
      onClick: removeLayer
    });
  }))));
};
SkipLinks.defaultProps = {};
SkipLinks.propTypes = SkipLinksPropTypes;

// node_modules/grommet/es6/components/SkipLinkTarget/SkipLinkTarget.js
var import_react150 = __toESM(require_react());
init_styled_components_browser_esm();
var _excluded94 = ["label"];
function _extends143() {
  _extends143 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends143.apply(this, arguments);
}
function _objectWithoutPropertiesLoose91(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var HiddenAnchor2 = styled_components_browser_esm_default(Anchor).withConfig({
  displayName: "SkipLinkTarget__HiddenAnchor",
  componentId: "sc-16wjfgk-0"
})(["width:0;height:0;overflow:hidden;position:absolute;"]);
var SkipLinkTarget = function SkipLinkTarget2(_ref) {
  var label = _ref.label, rest = _objectWithoutPropertiesLoose91(_ref, _excluded94);
  return import_react150.default.createElement(HiddenAnchor2, _extends143({}, rest, {
    tabIndex: "-1",
    "aria-hidden": "true"
  }), label);
};

// node_modules/grommet/es6/components/Spinner/Spinner.js
var import_react151 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/Spinner/propTypes.js
var import_prop_types75 = __toESM(require_prop_types());
var PropType71 = {};
if (true) {
  PropType71 = {
    size: import_prop_types75.default.oneOfType([import_prop_types75.default.oneOf(["xsmall", "small", "medium", "large", "xlarge"]), import_prop_types75.default.string]),
    color: import_prop_types75.default.oneOfType([import_prop_types75.default.string, import_prop_types75.default.shape({
      dark: import_prop_types75.default.string,
      light: import_prop_types75.default.string
    })]),
    message: import_prop_types75.default.oneOfType([import_prop_types75.default.string, import_prop_types75.default.shape({
      start: import_prop_types75.default.string,
      end: import_prop_types75.default.string
    })])
  };
}
var SpinnerPropTypes = PropType71;

// node_modules/grommet/es6/components/Spinner/Spinner.js
var _excluded95 = ["ref", "size"];
var _excluded222 = ["children", "color", "size", "message"];
var _excluded312 = ["size", "color", "border"];
function _extends144() {
  _extends144 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends144.apply(this, arguments);
}
function _objectWithoutPropertiesLoose92(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var BasicSpinner = function BasicSpinner2(_ref) {
  var ref = _ref.ref, size = _ref.size, rest = _objectWithoutPropertiesLoose92(_ref, _excluded95);
  return import_react151.default.createElement(Box, _extends144({
    flex: false,
    height: size,
    width: size,
    ref
  }, rest));
};
var Spinner = (0, import_react151.forwardRef)(function(_ref2, ref) {
  var children2 = _ref2.children, colorProp = _ref2.color, size = _ref2.size, message = _ref2.message, rest = _objectWithoutPropertiesLoose92(_ref2, _excluded222);
  var theme = (0, import_react151.useContext)(Me) || defaultProps2.theme;
  var announce = (0, import_react151.useContext)(AnnounceContext);
  (0, import_react151.useEffect)(function() {
    if (message != null && message.start)
      announce(message.start);
    else if (typeof message === "string")
      announce(message);
    return function() {
      return (message == null ? void 0 : message.end) && announce(message.end);
    };
  }, [announce, message]);
  var _theme$spinner$contai = theme.spinner.container, sizeThemeProp = _theme$spinner$contai.size, colorThemeProp = _theme$spinner$contai.color, borderThemeProp = _theme$spinner$contai.border, themeProps = _objectWithoutPropertiesLoose92(_theme$spinner$contai, _excluded312);
  var normalizedSize = size || sizeThemeProp;
  var spinnerSize = theme.spinner.size[normalizedSize] || normalizedSize;
  var color = colorProp || colorThemeProp;
  var Icon = theme.spinner.icon;
  var defaultBorder = [{
    side: "all",
    color: "background-contrast",
    size
  }, {
    side: "top",
    color,
    size
  }];
  var spinnerBorder = Array.isArray(borderThemeProp) ? borderThemeProp.map(function(borderSide) {
    return _extends144({}, borderSide, {
      color: borderSide.side === "all" ? borderSide.color || "background-contrast" : color
    });
  }) : borderThemeProp;
  if (children2) {
    return import_react151.default.createElement(BasicSpinner, _extends144({
      size: spinnerSize,
      ref
    }, rest), children2);
  }
  if (Icon)
    return import_react151.default.createElement(BasicSpinner, _extends144({
      size: spinnerSize,
      ref
    }, themeProps, rest), (0, import_react151.isValidElement)(Icon) ? Icon : import_react151.default.createElement(Icon, {
      size: spinnerSize,
      color
    }));
  return import_react151.default.createElement(BasicSpinner, _extends144({
    size: spinnerSize,
    ref,
    border: typeof borderThemeProp === "undefined" ? defaultBorder : spinnerBorder
  }, themeProps, rest));
});
Spinner.displayName = "Spinner";
Spinner.propTypes = SpinnerPropTypes;

// node_modules/grommet/es6/components/StarRating/StarRating.js
var import_react152 = __toESM(require_react());
init_styled_components_browser_esm();
var import_Star = __toESM(require_Star());
var import_StarOutline = __toESM(require_StarOutline());
function _objectDestructuringEmpty9(obj) {
  if (obj == null)
    throw new TypeError("Cannot destructure " + obj);
}
function _extends145() {
  _extends145 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends145.apply(this, arguments);
}
var StarRating = function StarRating2(_ref) {
  var rest = _extends145({}, (_objectDestructuringEmpty9(_ref), _ref));
  var theme = (0, import_react152.useContext)(Me);
  var _useState = (0, import_react152.useState)(), value = _useState[0], setValue = _useState[1];
  var options = [];
  for (var i3 = 1; i3 < 6; i3 += 1) {
    options.push(i3);
  }
  return import_react152.default.createElement(RadioButtonGroup, _extends145({
    direction: "row",
    options,
    onChange: function onChange(event) {
      setValue(event.target.value);
    }
  }, rest), function(option) {
    var _theme$starRating, _theme$starRating2;
    return option <= value ? import_react152.default.createElement(import_Star.Star, {
      color: (_theme$starRating = theme.starRating) == null ? void 0 : _theme$starRating.color
    }) : import_react152.default.createElement(import_StarOutline.StarOutline, {
      color: (_theme$starRating2 = theme.starRating) == null ? void 0 : _theme$starRating2.color
    });
  });
};
StarRating.displayName = "StarRating";

// node_modules/grommet/es6/components/Tag/Tag.js
var import_react153 = __toESM(require_react());
init_styled_components_browser_esm();
var import_FormClose3 = __toESM(require_FormClose());

// node_modules/grommet/es6/components/Tag/propTypes.js
var import_prop_types76 = __toESM(require_prop_types());
function _extends146() {
  _extends146 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends146.apply(this, arguments);
}
var PropType72 = {};
if (true) {
  PropType72 = _extends146({}, genericProps, {
    as: import_prop_types76.default.oneOfType([import_prop_types76.default.string, import_prop_types76.default.func]),
    name: import_prop_types76.default.string,
    value: import_prop_types76.default.string.isRequired,
    onClick: import_prop_types76.default.func,
    onRemove: import_prop_types76.default.func,
    size: import_prop_types76.default.oneOfType([import_prop_types76.default.oneOf(["xsmall", "small", "medium", "large", "xlarge"]), import_prop_types76.default.string])
  });
}
var TagPropTypes = PropType72;

// node_modules/grommet/es6/components/Tag/StyledTag.js
init_styled_components_browser_esm();
var StyledTagButton = styled_components_browser_esm_default(Button).withConfig({
  displayName: "StyledTag__StyledTagButton",
  componentId: "sc-cb9fl2-0"
})(["", " ", ""], function(props) {
  return props.border && borderStyle(props.border, true, props.theme);
}, function(props) {
  return props.round && roundStyle(props.round, true, props.theme);
});
StyledTagButton.defaultProps = {};
Object.setPrototypeOf(StyledTagButton.defaultProps, defaultProps2);
var StyledRemoveButton = styled_components_browser_esm_default(Button).withConfig({
  displayName: "StyledTag__StyledRemoveButton",
  componentId: "sc-cb9fl2-1"
})(["", ""], function(props) {
  return props.round && roundStyle(props.round, true, props.theme);
});
StyledRemoveButton.defaultProps = {};
Object.setPrototypeOf(StyledRemoveButton.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/Tag/Tag.js
var _excluded96 = ["name", "value", "size", "onRemove", "onClick"];
function _extends147() {
  _extends147 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends147.apply(this, arguments);
}
function _objectWithoutPropertiesLoose93(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var Tag = (0, import_react153.forwardRef)(function(_ref, ref) {
  var _theme$tag$size, _theme$tag$size$size, _theme$tag$size2, _theme$tag$size2$size, _theme$tag$size3, _theme$tag$size3$size, _theme$tag$size4, _theme$tag$size4$size;
  var name = _ref.name, value = _ref.value, size = _ref.size, onRemove = _ref.onRemove, onClick = _ref.onClick, rest = _objectWithoutPropertiesLoose93(_ref, _excluded96);
  var theme = (0, import_react153.useContext)(Me) || defaultProps2.theme;
  var containerProps = _extends147({
    ref,
    align: "center",
    background: theme.tag.background,
    border: theme.tag.border,
    round: ((_theme$tag$size = theme.tag.size) == null ? void 0 : (_theme$tag$size$size = _theme$tag$size[size]) == null ? void 0 : _theme$tag$size$size.round) || theme.tag.round
  }, rest);
  var contents = import_react153.default.createElement(Box, {
    width: {
      min: "min-content"
    },
    pad: ((_theme$tag$size2 = theme.tag.size) == null ? void 0 : (_theme$tag$size2$size = _theme$tag$size2[size]) == null ? void 0 : _theme$tag$size2$size.pad) || theme.tag.pad
  }, import_react153.default.createElement(Text, {
    size
  }, name && import_react153.default.createElement(Text, _extends147({}, theme.tag.name, {
    size
  }), " ", name), name && value ? import_react153.default.createElement(Text, {
    size
  }, theme.tag.separator) : "", value && import_react153.default.createElement(Text, _extends147({}, theme.tag.value, {
    size
  }), value)));
  if (onClick && onRemove) {
    console.warn('Tag cannot combine "onClick" and "onRemove".');
  }
  return onRemove || !onClick ? import_react153.default.createElement(Box, _extends147({
    flex: false,
    direction: "row",
    width: {
      min: "min-content"
    }
  }, containerProps), contents, onRemove && import_react153.default.createElement(StyledRemoveButton, _extends147({
    onClick: onRemove,
    plain: true,
    hoverIndicator: true,
    focusIndicator: true,
    icon: import_react153.default.createElement(import_FormClose3.FormClose, (_theme$tag$size3 = theme.tag.size) == null ? void 0 : (_theme$tag$size3$size = _theme$tag$size3[size]) == null ? void 0 : _theme$tag$size3$size.icon),
    round: ((_theme$tag$size4 = theme.tag.size) == null ? void 0 : (_theme$tag$size4$size = _theme$tag$size4[size]) == null ? void 0 : _theme$tag$size4$size.round) || theme.tag.round
  }, theme.tag.remove))) : import_react153.default.createElement(StyledTagButton, _extends147({
    flex: false,
    plain: true,
    onClick,
    hoverIndicator: true,
    focusIndicator: true
  }, containerProps), contents);
});
Tag.displayName = "Tag";
Tag.prototype = TagPropTypes;

// node_modules/grommet/es6/components/TextArea/TextArea.js
var import_react154 = __toESM(require_react());

// node_modules/grommet/es6/components/TextArea/StyledTextArea.js
init_styled_components_browser_esm();
var plainStyle5 = Ae(["outline:none;border:none;width:100%;-webkit-appearance:none;"]);
var resizeStyle = function resizeStyle2(resize) {
  if (resize === "horizontal") {
    return "resize: horizontal;";
  }
  if (resize === "vertical") {
    return "resize: vertical;";
  }
  if (resize) {
    return "resize: both;";
  }
  return "resize: none;";
};
var StyledTextArea = styled_components_browser_esm_default.textarea.withConfig({
  displayName: "StyledTextArea",
  componentId: "sc-17i3mwp-0"
})(["", " ", " ", " ", " ", " ", ";"], inputStyle, function(props) {
  return props.resize !== void 0 && resizeStyle(props.resize);
}, function(props) {
  return props.fillArg && "height: 100%;";
}, function(props) {
  return props.plain && plainStyle5;
}, function(props) {
  return props.disabled && disabledStyle(props.theme.textArea.disabled && props.theme.textArea.disabled.opacity);
}, function(props) {
  return props.theme.textArea && props.theme.textArea.extend;
});
StyledTextArea.defaultProps = {};
Object.setPrototypeOf(StyledTextArea.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/TextArea/propTypes.js
var import_prop_types77 = __toESM(require_prop_types());
var PropType73 = {};
if (true) {
  PropType73 = {
    a11yTitle: import_prop_types77.default.string,
    id: import_prop_types77.default.string,
    fill: import_prop_types77.default.bool,
    focusIndicator: import_prop_types77.default.bool,
    name: import_prop_types77.default.string,
    onChange: import_prop_types77.default.func,
    placeholder: import_prop_types77.default.string,
    plain: import_prop_types77.default.bool,
    value: import_prop_types77.default.string,
    resize: import_prop_types77.default.oneOfType([import_prop_types77.default.oneOf(["vertical", "horizontal"]), import_prop_types77.default.bool]),
    size: import_prop_types77.default.oneOfType([import_prop_types77.default.oneOf(["xsmall", "small", "medium", "large", "xlarge", "xxlarge", "2xl", "3xl", "4xl", "5xl", "6xl"]), import_prop_types77.default.string])
  };
}
var TextAreaPropTypes = PropType73;

// node_modules/grommet/es6/components/TextArea/TextArea.js
var _excluded97 = ["a11yTitle", "fill", "focusIndicator", "name", "onBlur", "onChange", "onFocus", "onKeyDown", "value"];
function _extends148() {
  _extends148 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends148.apply(this, arguments);
}
function _objectWithoutPropertiesLoose94(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var TextArea = (0, import_react154.forwardRef)(function(_ref, ref) {
  var a11yTitle = _ref.a11yTitle, fill = _ref.fill, _ref$focusIndicator = _ref.focusIndicator, focusIndicator = _ref$focusIndicator === void 0 ? true : _ref$focusIndicator, name = _ref.name, _onBlur = _ref.onBlur, _onChange = _ref.onChange, _onFocus = _ref.onFocus, onKeyDown = _ref.onKeyDown, valueProp = _ref.value, rest = _objectWithoutPropertiesLoose94(_ref, _excluded97);
  var formContext = (0, import_react154.useContext)(FormContext);
  var _formContext$useFormI = formContext.useFormInput({
    name,
    value: valueProp
  }), value = _formContext$useFormI[0], setValue = _formContext$useFormI[1];
  var _useState = (0, import_react154.useState)(), focus = _useState[0], setFocus = _useState[1];
  return import_react154.default.createElement(Keyboard, {
    onEsc: function onEsc(event) {
      event.stopPropagation();
      event.nativeEvent.stopImmediatePropagation();
    },
    onKeyDown
  }, import_react154.default.createElement(StyledTextArea, _extends148({
    "aria-label": a11yTitle,
    ref,
    name,
    fillArg: fill,
    focus,
    value,
    focusIndicator
  }, rest, {
    onFocus: function onFocus(event) {
      setFocus(true);
      if (_onFocus)
        _onFocus(event);
    },
    onBlur: function onBlur(event) {
      setFocus(false);
      if (_onBlur)
        _onBlur(event);
    },
    onChange: function onChange(event) {
      setValue(event.target.value);
      if (_onChange)
        _onChange(event);
    }
  })));
});
TextArea.displayName = "TextArea";
TextArea.propTypes = TextAreaPropTypes;

// node_modules/grommet/es6/components/ThumbsRating/ThumbsRating.js
var import_react155 = __toESM(require_react());
init_styled_components_browser_esm();
var import_Like = __toESM(require_Like());
var import_LikeFill = __toESM(require_LikeFill());
var import_Dislike = __toESM(require_Dislike());
var import_DislikeFill = __toESM(require_DislikeFill());
function _objectDestructuringEmpty10(obj) {
  if (obj == null)
    throw new TypeError("Cannot destructure " + obj);
}
function _extends149() {
  _extends149 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends149.apply(this, arguments);
}
var ThumbsRating = function ThumbsRating2(_ref) {
  var rest = _extends149({}, (_objectDestructuringEmpty10(_ref), _ref));
  var theme = (0, import_react155.useContext)(Me);
  return import_react155.default.createElement(RadioButtonGroup, _extends149({
    direction: "row",
    options: ["like", "dislike"]
  }, rest), function(option, _ref2) {
    var _theme$thumbsRating3, _theme$thumbsRating3$, _theme$thumbsRating4, _theme$thumbsRating4$;
    var checked = _ref2.checked;
    if (option === "like") {
      var _theme$thumbsRating, _theme$thumbsRating$l, _theme$thumbsRating2, _theme$thumbsRating2$;
      return checked ? import_react155.default.createElement(import_LikeFill.LikeFill, {
        color: (_theme$thumbsRating = theme.thumbsRating) == null ? void 0 : (_theme$thumbsRating$l = _theme$thumbsRating.like) == null ? void 0 : _theme$thumbsRating$l.color
      }) : import_react155.default.createElement(import_Like.Like, {
        color: (_theme$thumbsRating2 = theme.thumbsRating) == null ? void 0 : (_theme$thumbsRating2$ = _theme$thumbsRating2.like) == null ? void 0 : _theme$thumbsRating2$.color
      });
    }
    return checked ? import_react155.default.createElement(import_DislikeFill.DislikeFill, {
      color: (_theme$thumbsRating3 = theme.thumbsRating) == null ? void 0 : (_theme$thumbsRating3$ = _theme$thumbsRating3.dislike) == null ? void 0 : _theme$thumbsRating3$.color
    }) : import_react155.default.createElement(import_Dislike.Dislike, {
      color: (_theme$thumbsRating4 = theme.thumbsRating) == null ? void 0 : (_theme$thumbsRating4$ = _theme$thumbsRating4.dislike) == null ? void 0 : _theme$thumbsRating4$.color
    });
  });
};
ThumbsRating.displayName = "ThumbsRating";

// node_modules/grommet/es6/components/Video/Video.js
var import_react156 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/Video/StyledVideo.js
init_styled_components_browser_esm();
var FIT_MAP2 = {
  cover: "cover",
  contain: "contain"
};
var fitStyle2 = Ae(["flex:1 1;min-height:0;object-fit:", ";"], function(props) {
  return FIT_MAP2[props.fit];
});
var StyledVideo = styled_components_browser_esm_default.video.withConfig({
  displayName: "StyledVideo",
  componentId: "sc-w4v8h9-0"
})(["max-width:100%;z-index:1;", "::cue{background:", ";}", ";"], function(props) {
  return props.fit && fitStyle2;
}, function(props) {
  return props.theme.video.captions.background;
}, function(props) {
  return props.theme.video && props.theme.video.extend;
});
StyledVideo.defaultProps = {};
Object.setPrototypeOf(StyledVideo.defaultProps, defaultProps2);
var StyledVideoContainer = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledVideo__StyledVideoContainer",
  componentId: "sc-w4v8h9-1"
})(["flex:1 1;display:flex;flex-direction:column;overflow:hidden;position:relative;", ";&:focus{", "}"], genericStyles, focusStyle());
StyledVideoContainer.defaultProps = {};
Object.setPrototypeOf(StyledVideoContainer.defaultProps, defaultProps2);
var positionStyle = Ae(["position:absolute;left:0;right:0;bottom:0;z-index:1;"]);
var StyledVideoControls = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledVideo__StyledVideoControls",
  componentId: "sc-w4v8h9-2"
})(["flex:0 0;", " opacity:0;transition:opacity 0.3s;", ";"], function(props) {
  return props.over && positionStyle;
}, function(props) {
  return props.active ? "opacity: 1;" : "pointer-events: none";
});
StyledVideoControls.defaultProps = {};
Object.setPrototypeOf(StyledVideoControls.defaultProps, defaultProps2);
var headStyle = Ae(["::after{content:'';height:100%;width:", ";background:", ";position:absolute;left:", ";}"], function(props) {
  return props.theme.global.edgeSize.xsmall;
}, function(props) {
  return normalizeColor(props.theme.video.scrubber.color, props.theme);
}, function(props) {
  return props.value + "%";
});
var StyledVideoScrubber = styled_components_browser_esm_default.div.withConfig({
  displayName: "StyledVideo__StyledVideoScrubber",
  componentId: "sc-w4v8h9-3"
})(["cursor:pointer;width:100%;height:100%;", ";&:focus{", "}"], function(props) {
  return props.value && headStyle;
}, focusStyle());
StyledVideoScrubber.defaultProps = {};
Object.setPrototypeOf(StyledVideoScrubber.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/Video/propTypes.js
var import_prop_types78 = __toESM(require_prop_types());
function _extends150() {
  _extends150 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends150.apply(this, arguments);
}
var PropType74 = {};
if (true) {
  PropType74 = _extends150({}, genericProps, {
    autoPlay: import_prop_types78.default.bool,
    controls: import_prop_types78.default.oneOfType([import_prop_types78.default.oneOf([false, "over", "below"]), import_prop_types78.default.shape({
      position: import_prop_types78.default.oneOf([false, "over", "below"]),
      items: import_prop_types78.default.arrayOf(import_prop_types78.default.oneOfType([import_prop_types78.default.oneOf(["captions", "descriptions", "fullScreen", "play", "pause", "volume"]), import_prop_types78.default.shape({
        icon: import_prop_types78.default.element,
        a11yTitle: import_prop_types78.default.string,
        onClick: import_prop_types78.default.func,
        disabled: import_prop_types78.default.bool
      })]))
    })]),
    fit: import_prop_types78.default.oneOf(["cover", "contain"]),
    loop: import_prop_types78.default.bool,
    mute: import_prop_types78.default.bool,
    messages: import_prop_types78.default.shape({
      closeMenu: import_prop_types78.default.string,
      fullScreen: import_prop_types78.default.string,
      openMenu: import_prop_types78.default.string,
      pauseButton: import_prop_types78.default.string,
      playButton: import_prop_types78.default.string,
      progressMeter: import_prop_types78.default.string,
      scrubber: import_prop_types78.default.string,
      volumeDown: import_prop_types78.default.string,
      volumeUp: import_prop_types78.default.string
    }),
    skipInterval: import_prop_types78.default.number
  });
}
var VideoPropTypes = PropType74;

// node_modules/grommet/es6/components/Video/Video.js
var _excluded98 = ["alignSelf", "autoPlay", "children", "controls", "gridArea", "loop", "margin", "messages", "mute", "onDurationChange", "onEnded", "onPause", "onPlay", "onTimeUpdate", "onVolumeChange", "skipInterval"];
function _extends151() {
  _extends151 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends151.apply(this, arguments);
}
function _objectWithoutPropertiesLoose95(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var VOLUME_STEP = 0.166667;
var formatTime = function formatTime2(time) {
  var minutes = Math.round(time / 60);
  if (minutes < 10) {
    minutes = "0" + minutes;
  }
  var seconds = Math.round(time) % 60;
  if (seconds < 10) {
    seconds = "0" + seconds;
  }
  return minutes + ":" + seconds;
};
var Video = (0, import_react156.forwardRef)(function(_ref, ref) {
  var alignSelf = _ref.alignSelf, autoPlay = _ref.autoPlay, children2 = _ref.children, controlsProp = _ref.controls, gridArea = _ref.gridArea, loop = _ref.loop, margin = _ref.margin, messages = _ref.messages, mute = _ref.mute, _onDurationChange = _ref.onDurationChange, _onEnded = _ref.onEnded, _onPause = _ref.onPause, _onPlay = _ref.onPlay, _onTimeUpdate = _ref.onTimeUpdate, _onVolumeChange = _ref.onVolumeChange, skipInterval = _ref.skipInterval, rest = _objectWithoutPropertiesLoose95(_ref, _excluded98);
  var theme = (0, import_react156.useContext)(Me) || defaultProps2.theme;
  var _useContext = (0, import_react156.useContext)(MessageContext), format3 = _useContext.format;
  var announce = (0, import_react156.useContext)(AnnounceContext);
  var _useState = (0, import_react156.useState)([]), captions = _useState[0], setCaptions = _useState[1];
  var _useState2 = (0, import_react156.useState)(), currentTime = _useState2[0], setCurrentTime = _useState2[1];
  var _useState3 = (0, import_react156.useState)(), duration = _useState3[0], setDuration = _useState3[1];
  var _useState4 = (0, import_react156.useState)(), percentagePlayed = _useState4[0], setPercentagePlayed = _useState4[1];
  var _useState5 = (0, import_react156.useState)(false), playing = _useState5[0], setPlaying = _useState5[1];
  var _useState6 = (0, import_react156.useState)(false), announceAudioDescription = _useState6[0], setAnnounceAudioDescription = _useState6[1];
  var _useState7 = (0, import_react156.useState)(), scrubTime = _useState7[0], setScrubTime = _useState7[1];
  var _useState8 = (0, import_react156.useState)(), volume = _useState8[0], setVolume = _useState8[1];
  var _useState9 = (0, import_react156.useState)(false), hasPlayed = _useState9[0], setHasPlayed = _useState9[1];
  var _useState10 = (0, import_react156.useState)(), interacting = _useState10[0], setInteracting = _useState10[1];
  var _useState11 = (0, import_react156.useState)(), height = _useState11[0], setHeight = _useState11[1];
  var _useState12 = (0, import_react156.useState)(), width = _useState12[0], setWidth = _useState12[1];
  var containerRef = (0, import_react156.useRef)();
  var scrubberRef = (0, import_react156.useRef)();
  var videoRef = useForwardedRef(ref);
  var controls = (0, import_react156.useMemo)(function() {
    var result;
    if (typeof controlsProp === "string" || typeof controlsProp === "boolean") {
      result = {
        items: ["volume", "fullScreen"],
        position: controlsProp
      };
    } else {
      result = {
        items: (controlsProp == null ? void 0 : controlsProp.items) || ["volume", "fullScreen"],
        position: (controlsProp == null ? void 0 : controlsProp.position) || "over"
      };
    }
    return result;
  }, [controlsProp]);
  (0, import_react156.useEffect)(function() {
    var video = videoRef.current;
    if (video && mute)
      video.muted = true;
  }, [mute, videoRef]);
  (0, import_react156.useEffect)(function() {
    var video = videoRef.current;
    if (video) {
      var textTracks = video.textTracks;
      for (var i3 = 0; i3 < textTracks.length; i3 += 1) {
        textTracks[i3].mode = "hidden";
      }
      setCurrentTime(video.currentTime);
      setPercentagePlayed(video.currentTime / video.duration * 100);
      setVolume(videoRef.current.volume);
    }
  }, [videoRef]);
  (0, import_react156.useEffect)(function() {
    var timer = setTimeout(function() {
      if (interacting && !containsFocus(containerRef.current)) {
        setInteracting(false);
      }
    }, 3e3);
    return function() {
      return clearTimeout(timer);
    };
  }, [interacting]);
  var _useState13 = (0, import_react156.useState)(), activeTrack = _useState13[0], setActiveTrack = _useState13[1];
  useLayoutEffect(function() {
    var video = videoRef.current;
    if (video) {
      if (video.videoHeight) {
        var rect = video.getBoundingClientRect();
        var ratio = rect.width / rect.height;
        var videoRatio = video.videoWidth / video.videoHeight;
        if (videoRatio > ratio) {
          var nextHeight = rect.width / videoRatio;
          if (nextHeight !== height) {
            setHeight(nextHeight);
            setWidth(void 0);
          }
        } else {
          var nextWidth = rect.height * videoRatio;
          if (nextWidth !== width) {
            setHeight(void 0);
            setWidth(nextWidth);
          }
        }
      }
      var textTracks = video.textTracks;
      var nextCaptions = [];
      var set3 = false;
      var _loop = function _loop2() {
        var track = textTracks[i3];
        var active = track.mode === "showing";
        var getActiveTrack = function getActiveTrack2(currentVideoTime) {
          var nextActiveTrack;
          for (var j3 = 0; j3 < track.cues.length; j3 += 1) {
            var _track$cues$j, _track$cues$j2;
            if (currentVideoTime > (track == null ? void 0 : (_track$cues$j = track.cues[j3]) == null ? void 0 : _track$cues$j.startTime) && currentVideoTime < (track == null ? void 0 : (_track$cues$j2 = track.cues[j3]) == null ? void 0 : _track$cues$j2.endTime)) {
              var _track$cues$j3;
              nextActiveTrack = track == null ? void 0 : (_track$cues$j3 = track.cues[j3]) == null ? void 0 : _track$cues$j3.text;
            }
          }
          return nextActiveTrack;
        };
        if (track.kind === "descriptions") {
          if (announceAudioDescription) {
            video.ontimeupdate = function() {
              var nextActiveTrack = getActiveTrack(video.currentTime);
              if (activeTrack !== nextActiveTrack) {
                if (nextActiveTrack) {
                  announce(nextActiveTrack, "assertive");
                }
                setActiveTrack(nextActiveTrack);
              }
            };
          }
        } else {
          nextCaptions.push({
            label: track.label,
            active
          });
          if (!captions || !captions[i3] || captions[i3].active !== active) {
            set3 = true;
          }
          if (set3) {
            setCaptions(nextCaptions);
          }
        }
      };
      for (var i3 = 0; i3 < textTracks.length; i3 += 1) {
        _loop();
      }
    }
  }, [activeTrack, announce, announceAudioDescription, captions, height, videoRef, width]);
  var play = (0, import_react156.useCallback)(function() {
    return videoRef.current.play();
  }, [videoRef]);
  var pause = (0, import_react156.useCallback)(function() {
    return videoRef.current.pause();
  }, [videoRef]);
  var scrub = (0, import_react156.useCallback)(function(event) {
    if (scrubberRef.current) {
      var scrubberRect = scrubberRef.current.getBoundingClientRect();
      var percent = (event.clientX - scrubberRect.left) / scrubberRect.width;
      setScrubTime(duration * percent);
    }
  }, [duration]);
  var seek = (0, import_react156.useCallback)(function(event) {
    if (scrubberRef.current) {
      var scrubberRect = scrubberRef.current.getBoundingClientRect();
      var percent = (event.clientX - scrubberRect.left) / scrubberRect.width;
      if (duration)
        videoRef.current.currentTime = duration * percent;
    }
  }, [duration, videoRef]);
  var seekForward = (0, import_react156.useCallback)(function() {
    setInteracting(true);
    videoRef.current.currentTime += skipInterval || theme.video.scrubber.interval;
  }, [skipInterval, theme.video.scrubber.interval, videoRef]);
  var seekBackward = (0, import_react156.useCallback)(function() {
    setInteracting(true);
    videoRef.current.currentTime -= skipInterval || theme.video.scrubber.interval;
  }, [skipInterval, theme.video.scrubber.interval, videoRef]);
  var louder = (0, import_react156.useCallback)(function() {
    videoRef.current.volume += VOLUME_STEP;
  }, [videoRef]);
  var quieter = (0, import_react156.useCallback)(function() {
    videoRef.current.volume -= VOLUME_STEP;
  }, [videoRef]);
  var showCaptions = (0, import_react156.useCallback)(function(index) {
    var textTracks = videoRef.current.textTracks;
    for (var i3 = 0; i3 < textTracks.length; i3 += 1)
      textTracks[i3].mode = i3 === index ? "showing" : "hidden";
  }, [videoRef]);
  var fullscreen = (0, import_react156.useCallback)(function() {
    var video = videoRef.current;
    if (video.requestFullscreen) {
      video.requestFullscreen();
    } else if (video.msRequestFullscreen) {
      video.msRequestFullscreen();
    } else if (video.mozRequestFullScreen) {
      video.mozRequestFullScreen();
    } else if (video.webkitRequestFullscreen) {
      video.webkitRequestFullscreen();
    } else {
      console.warn("This browser doesn't support fullscreen.");
    }
  }, [videoRef]);
  var controlsElement;
  if (controls != null && controls.position) {
    var _controls$items;
    var over = controls.position === "over";
    var background = over ? theme.video.controls && theme.video.controls.background || {
      color: "background-back",
      opacity: "strong",
      dark: true
    } : void 0;
    var iconColor = over && (theme.video.icons.color || "text");
    var formattedTime = formatTime(scrubTime || currentTime || duration);
    var Icons = {
      ClosedCaption: theme.video.icons.closedCaption,
      Configure: theme.video.icons.configure,
      FullScreen: theme.video.icons.fullScreen,
      Pause: theme.video.icons.pause,
      Play: theme.video.icons.play,
      ReduceVolume: theme.video.icons.reduceVolume,
      Volume: theme.video.icons.volume,
      Description: theme.video.icons.description
    };
    var captionControls = captions.map(function(caption, index) {
      return {
        icon: caption.label ? void 0 : import_react156.default.createElement(Icons.ClosedCaption, {
          color: iconColor
        }),
        label: caption.label,
        active: caption.active,
        a11yTitle: caption.label || format3({
          id: "video.captions",
          messages
        }),
        onClick: function onClick() {
          showCaptions(caption.active ? -1 : index);
          var updatedCaptions = [];
          for (var i3 = 0; i3 < captions.length; i3 += 1) {
            updatedCaptions.push(captions[i3]);
            if (i3 !== index && updatedCaptions[i3].active)
              updatedCaptions[i3].active = false;
            else if (i3 === index)
              updatedCaptions[i3].active = !captions[index].active;
          }
          setCaptions(updatedCaptions);
        }
      };
    });
    var descriptionControls = {
      icon: import_react156.default.createElement(Icons.Description, {
        color: iconColor
      }),
      a11yTitle: format3({
        id: "video.audioDescriptions",
        messages
      }),
      active: announceAudioDescription,
      onClick: function onClick() {
        return setAnnounceAudioDescription(!announceAudioDescription);
      }
    };
    var volumeControls = ["volume", "reduceVolume"].map(function(control) {
      return {
        icon: control === "volume" ? import_react156.default.createElement(Icons.Volume, {
          color: iconColor
        }) : import_react156.default.createElement(Icons.ReduceVolume, {
          color: iconColor
        }),
        a11yTitle: format3({
          id: control === "volume" ? "video.volumeUp" : "video.volumeDown",
          messages
        }),
        onClick: function onClick() {
          if (volume <= 1 - VOLUME_STEP && control === "volume") {
            return louder();
          }
          if (volume >= VOLUME_STEP && control === "reduceVolume") {
            return quieter();
          }
          return void 0;
        },
        close: false
      };
    });
    var buttonProps = {
      captions: captionControls,
      descriptions: descriptionControls,
      volume: volumeControls,
      fullScreen: {
        icon: import_react156.default.createElement(Icons.FullScreen, {
          color: iconColor
        }),
        a11yTitle: format3({
          id: "video.fullScreen",
          messages
        }),
        onClick: fullscreen
      },
      pause: {
        icon: import_react156.default.createElement(Icons.Pause, {
          color: iconColor
        }),
        a11yTitle: format3({
          id: "video.pauseButton",
          messages
        }),
        disabled: !playing,
        onClick: pause
      },
      play: {
        icon: import_react156.default.createElement(Icons.Play, {
          color: iconColor
        }),
        a11yTitle: format3({
          id: "video.playButton",
          messages
        }),
        disabled: playing,
        onClick: play
      }
    };
    var controlsMenuItems = [];
    (_controls$items = controls.items) == null ? void 0 : _controls$items.map(function(item) {
      if (item === "volume") {
        volumeControls.map(function(control) {
          return controlsMenuItems.push(control);
        });
        return void 0;
      }
      if (item === "captions" && typeof buttonProps[item] === "object") {
        for (var i3 = 0; i3 < buttonProps[item].length; i3 += 1)
          controlsMenuItems.push(buttonProps[item][i3]);
        return void 0;
      }
      if (item === "descriptions") {
        controlsMenuItems.push(buttonProps[item]);
        return void 0;
      }
      if (typeof item === "string") {
        return controlsMenuItems.push(buttonProps[item]);
      }
      return controlsMenuItems.push(item);
    });
    controlsElement = import_react156.default.createElement(StyledVideoControls, {
      over,
      active: !hasPlayed || controls.position === "below" || over && interacting,
      onBlur: function onBlur() {
        if (!containsFocus(containerRef.current))
          setInteracting(false);
      }
    }, import_react156.default.createElement(Box, {
      direction: "row",
      align: "center",
      justify: "between",
      background
    }, import_react156.default.createElement(Button, {
      icon: playing ? import_react156.default.createElement(Icons.Pause, {
        color: iconColor,
        a11yTitle: format3({
          id: "video.pauseButton",
          messages
        })
      }) : import_react156.default.createElement(Icons.Play, {
        color: iconColor,
        a11yTitle: format3({
          id: "video.playButton",
          messages
        })
      }),
      hoverIndicator: "background",
      onClick: playing ? pause : play,
      onFocus: function onFocus() {
        return setInteracting(true);
      }
    }), import_react156.default.createElement(Box, {
      direction: "row",
      align: "center",
      flex: true
    }, import_react156.default.createElement(Box, {
      flex: true
    }, import_react156.default.createElement(Stack, null, import_react156.default.createElement(Meter, {
      "aria-label": format3({
        id: "video.progressMeter",
        messages
      }),
      background: over ? theme.video.scrubber && theme.video.scrubber.track && theme.video.scrubber.track.color || "dark-3" : void 0,
      size: "full",
      thickness: "small",
      values: [{
        value: percentagePlayed || 0
      }]
    }), import_react156.default.createElement(StyledVideoScrubber, {
      "aria-label": format3({
        id: "video.scrubber",
        messages
      }),
      ref: scrubberRef,
      tabIndex: 0,
      role: "button",
      value: scrubTime ? Math.round(scrubTime / duration * 100) : void 0,
      onMouseMove: scrub,
      onMouseLeave: function onMouseLeave() {
        return setScrubTime(void 0);
      },
      onClick: seek,
      onFocus: function onFocus() {
        return setInteracting(true);
      }
    }))), import_react156.default.createElement(Box, {
      pad: {
        horizontal: "small"
      }
    }, import_react156.default.createElement(Text, {
      margin: "none"
    }, formattedTime))), import_react156.default.createElement(Menu, {
      icon: import_react156.default.createElement(Icons.Configure, {
        color: iconColor
      }),
      dropAlign: {
        bottom: "top",
        right: "right"
      },
      dropBackground: background,
      messages: {
        openMenu: format3({
          id: "video.openMenu",
          messages
        }),
        closeMenu: format3({
          id: "video.closeMenu",
          messages
        })
      },
      items: [].concat(controlsMenuItems),
      onFocus: function onFocus() {
        return setInteracting(true);
      }
    })));
  }
  var mouseEventListeners;
  if ((controls == null ? void 0 : controls.position) === "over") {
    mouseEventListeners = {
      onMouseEnter: function onMouseEnter() {
        return setInteracting(true);
      },
      onMouseMove: function onMouseMove() {
        return setInteracting(true);
      },
      onTouchStart: function onTouchStart() {
        return setInteracting(true);
      }
    };
  }
  var style;
  if (rest.fit === "contain" && (controls == null ? void 0 : controls.position) === "over") {
    if (width) {
      style = {
        width
      };
    } else if (height) {
      style = {
        height
      };
    }
  }
  return import_react156.default.createElement(Keyboard, {
    onLeft: seekBackward,
    onRight: seekForward
  }, import_react156.default.createElement(StyledVideoContainer, _extends151({
    ref: containerRef
  }, mouseEventListeners, {
    alignSelf,
    gridArea,
    margin,
    style,
    tabIndex: "-1"
  }), import_react156.default.createElement(StyledVideo, _extends151({}, rest, {
    ref: videoRef,
    onDurationChange: function onDurationChange(event) {
      var video = videoRef.current;
      setDuration(video.duration);
      setPercentagePlayed(video.currentTime / video.duration * 100);
      if (_onDurationChange)
        _onDurationChange(event);
    },
    onEnded: function onEnded(event) {
      setPlaying(false);
      if (_onEnded)
        _onEnded(event);
    },
    onPause: function onPause(event) {
      setPlaying(false);
      if (_onPause)
        _onPause(event);
    },
    onPlay: function onPlay(event) {
      setPlaying(true);
      setHasPlayed(true);
      if (_onPlay)
        _onPlay(event);
    },
    onTimeUpdate: function onTimeUpdate(event) {
      var video = videoRef.current;
      setCurrentTime(video.currentTime);
      setPercentagePlayed(video.currentTime / video.duration * 100);
      if (_onTimeUpdate)
        _onTimeUpdate(event);
    },
    onVolumeChange: function onVolumeChange(event) {
      setVolume(videoRef.current.volume);
      if (_onVolumeChange)
        _onVolumeChange(event);
    },
    autoPlay: autoPlay || false,
    loop: loop || false
  }), children2), controlsElement));
});
Video.defaultProps = {};
Video.displayName = "Video";
Video.propTypes = VideoPropTypes;

// node_modules/grommet/es6/components/WorldMap/WorldMap.js
var import_react157 = __toESM(require_react());
init_styled_components_browser_esm();

// node_modules/grommet/es6/components/WorldMap/StyledWorldMap.js
init_styled_components_browser_esm();
var fillStyle12 = function fillStyle13(fillProp) {
  if (fillProp === "horizontal") {
    return "\n      width: 100%;\n      height: unset;\n    ";
  }
  if (fillProp === "vertical") {
    return "\n      width: unset;\n      height: 100%;\n    ";
  }
  if (fillProp) {
    return "\n      width: 100%;\n      height: 100%;\n    ";
  }
  return "";
};
var StyledWorldMap = styled_components_browser_esm_default.svg.withConfig({
  displayName: "StyledWorldMap",
  componentId: "sc-had4c3-0"
})(["", " ", " ", ";"], genericStyles, function(props) {
  return props.fillProp !== void 0 ? fillStyle12(props.fillProp) : "width: 100%;";
}, function(props) {
  return props.theme.worldMap && props.theme.worldMap.extend;
});
StyledWorldMap.defaultProps = {};
Object.setPrototypeOf(StyledWorldMap.defaultProps, defaultProps2);

// node_modules/grommet/es6/components/WorldMap/propTypes.js
var import_prop_types79 = __toESM(require_prop_types());
function _extends152() {
  _extends152 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends152.apply(this, arguments);
}
var PropType75 = {};
if (true) {
  PropType75 = _extends152({}, genericProps, {
    color: colorPropType,
    continents: import_prop_types79.default.arrayOf(import_prop_types79.default.shape({
      color: colorPropType,
      name: import_prop_types79.default.oneOf(["Africa", "Asia", "Australia", "Europe", "North America", "South America"]).isRequired,
      onClick: import_prop_types79.default.func,
      onHover: import_prop_types79.default.func
    })),
    fill: import_prop_types79.default.oneOfType([import_prop_types79.default.oneOf(["horizontal", "vertical"]), import_prop_types79.default.bool]),
    onSelectPlace: import_prop_types79.default.func,
    places: import_prop_types79.default.arrayOf(import_prop_types79.default.shape({
      color: colorPropType,
      content: import_prop_types79.default.node,
      dropProps: import_prop_types79.default.shape({}),
      name: import_prop_types79.default.string,
      // for a11y aria-label
      location: import_prop_types79.default.arrayOf(import_prop_types79.default.number).isRequired,
      onClick: import_prop_types79.default.func,
      onHover: import_prop_types79.default.func
    })),
    hoverColor: colorPropType
  });
}
var WorldMapPropTypes = PropType75;

// node_modules/grommet/es6/components/WorldMap/WorldMap.js
var _excluded99 = ["fill", "color", "continents", "hoverColor", "onSelectPlace", "places"];
var _excluded223 = ["location"];
var _excluded313 = ["color", "onClick", "onHover"];
var _excluded411 = ["color", "coords", "content", "dropProps", "key", "name", "onClick", "onHover"];
function _extends153() {
  _extends153 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends153.apply(this, arguments);
}
function _objectWithoutPropertiesLoose96(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var FACTOR = 10;
var EQUATOR_Y = 32;
var WIDTH = 93;
var LAT_SCALE = 0.98;
var LAT_EXTREME_SCALE = 0.91;
var LON_SCALE = 0.99;
var X_OFFSET = -2;
var Y_OFFSET = -2;
var CONTINENTS = [{
  name: "Australia",
  origin: [74, 32],
  area: [[4, 0], [7, 1], [15, 7], [13, 9], [8, 8], [0, 6], [0, 2]],
  dots: [[4, 0, 1], [2, 1, 6], [0, 2, 9], [0, 3, 10], [0, 4, 10], [0, 5, 3], [5, 5, 5], [5, 6, 4], [8, 8, 1], [15, 7, 1], [14, 8, 1], [13, 9, 1]]
}, {
  name: "Asia",
  origin: [52, 1],
  area: [[16, 0], [38, 5], [40, 7], [28, 17], [24, 25], [29, 29], [19, 29], [11, 24], [3, 23], [0, 20], [0, 19], [6, 13], [7, 6]],
  dots: [[16, 0, 1], [17, 1, 2], [18, 2, 2], [15, 3, 6], [28, 3, 1], [30, 3, 1], [10, 4, 2], [13, 4, 10], [24, 4, 1], [9, 5, 22], [32, 5, 1], [38, 5, 1], [7, 6, 2], [10, 6, 1], [12, 6, 27], [7, 7, 34], [7, 8, 31], [7, 9, 26], [34, 9, 3], [7, 10, 22], [31, 10, 1], [33, 10, 1], [7, 11, 21], [32, 11, 2], [7, 12, 21], [32, 12, 1], [6, 13, 22], [32, 13, 1], [6, 14, 22], [5, 15, 22], [3, 16, 2], [6, 16, 20], [2, 17, 3], [6, 17, 16], [24, 17, 1], [28, 17, 1], [1, 18, 22], [26, 18, 2], [0, 19, 24], [0, 20, 5], [6, 20, 17], [2, 21, 5], [10, 21, 14], [2, 22, 5], [11, 22, 4], [16, 22, 4], [3, 23, 3], [11, 23, 2], [17, 23, 3], [23, 23, 1], [11, 24, 2], [18, 24, 2], [23, 24, 1], [24, 25, 1], [18, 26, 1], [22, 26, 1], [18, 27, 1], [20, 27, 4], [18, 28, 1], [21, 28, 1], [23, 28, 1], [26, 28, 3], [19, 29, 1], [28, 29, 2]]
}, {
  name: "Africa",
  origin: [40, 19],
  area: [[3, 0], [6, 0], [11, 2], [16, 7], [16, 15], [11, 18], [9, 18], [0, 6], [0, 3]],
  dots: [[3, 0, 4], [2, 1, 6], [9, 1, 2], [1, 2, 11], [0, 3, 13], [0, 4, 14], [0, 5, 14], [0, 6, 16], [1, 7, 16], [2, 8, 2], [6, 8, 11], [7, 9, 9], [7, 10, 8], [7, 11, 7], [8, 12, 7], [7, 13, 8], [7, 14, 7], [16, 14, 1], [8, 15, 5], [15, 15, 2], [8, 16, 5], [9, 17, 3], [9, 18, 3]]
}, {
  name: "Europe",
  origin: [39, 2],
  area: [[8, 0], [10, 0], [20, 2], [19, 11], [18, 13], [14, 16], [3, 16], [0, 7]],
  dots: [[8, 0, 3], [9, 1, 1], [20, 2, 1], [19, 3, 1], [12, 4, 1], [19, 4, 1], [9, 5, 6], [9, 6, 7], [17, 6, 3], [0, 7, 1], [8, 7, 12], [7, 8, 3], [11, 8, 9], [7, 9, 3], [11, 9, 9], [4, 10, 1], [7, 10, 1], [9, 10, 1], [11, 10, 9], [3, 11, 2], [7, 11, 13], [4, 12, 1], [6, 12, 13], [4, 13, 15], [5, 14, 3], [9, 14, 4], [15, 14, 2], [3, 15, 3], [8, 15, 1], [10, 15, 5], [6, 15, 2], [3, 16, 2], [10, 16, 5]]
}, {
  name: "South America",
  origin: [22, 26],
  area: [[2, 0], [5, 0], [11, 4], [11, 8], [3, 18], [2, 17], [0, 4], [0, 3]],
  dots: [[2, 0, 4], [1, 1, 7], [1, 2, 7], [0, 3, 10], [0, 4, 12], [1, 5, 11], [2, 6, 9], [3, 7, 8], [3, 8, 8], [3, 9, 6], [3, 10, 6], [3, 11, 5], [3, 12, 3], [2, 13, 3], [2, 14, 3], [2, 15, 2], [2, 16, 2], [2, 17, 2], [3, 18, 1]]
}, {
  name: "North America",
  origin: [0, 0],
  area: [[21, 0], [39, 0], [39, 6], [22, 26], [16, 23], [2, 12], [0, 7]],
  dots: [[22, 0, 6], [29, 0, 1], [31, 0, 1], [33, 0, 5], [20, 1, 1], [22, 1, 1], [24, 1, 2], [27, 1, 13], [17, 2, 1], [20, 2, 5], [26, 2, 13], [13, 3, 1], [19, 3, 1], [21, 3, 3], [26, 3, 14], [14, 4, 1], [16, 4, 4], [21, 4, 3], [29, 4, 11], [12, 5, 3], [16, 5, 1], [18, 5, 1], [20, 5, 3], [24, 5, 1], [30, 5, 8], [14, 6, 3], [19, 6, 1], [22, 6, 4], [31, 6, 8], [0, 7, 15], [16, 7, 1], [18, 7, 4], [24, 7, 2], [30, 7, 7], [2, 8, 20], [24, 8, 3], [29, 8, 5], [2, 9, 20], [24, 9, 2], [30, 9, 3], [1, 10, 18], [23, 10, 2], [31, 10, 1], [2, 11, 2], [8, 11, 11], [23, 11, 2], [26, 11, 1], [2, 12, 1], [8, 12, 13], [24, 12, 3], [10, 13, 12], [23, 13, 5], [11, 14, 17], [11, 15, 9], [21, 15, 6], [28, 15, 2], [11, 16, 11], [23, 16, 4], [11, 17, 14], [12, 18, 11], [12, 19, 12], [13, 20, 9], [15, 21, 3], [22, 21, 1], [16, 22, 2], [16, 23, 2], [20, 23, 1], [23, 23, 1], [18, 24, 3], [21, 25, 1], [22, 26, 1]]
}];
var mergeBounds = function mergeBounds2(bounds1, bounds2) {
  return [bounds1 ? Math.min(bounds1[0], bounds2[0]) : bounds2[0], bounds1 ? Math.min(bounds1[1], bounds2[1]) : bounds2[1], bounds1 ? Math.max(bounds1[2], bounds2[2]) : bounds2[2], bounds1 ? Math.max(bounds1[3], bounds2[3]) : bounds2[3]];
};
var midPoint = function midPoint2(bounds2) {
  return [bounds2[0] + (bounds2[2] - bounds2[0]) / 2, bounds2[1] + (bounds2[3] - bounds2[1]) / 2];
};
var latLonToCoord = function latLonToCoord2(_ref) {
  var lat = _ref[0], lon = _ref[1];
  var scaledLon = lon * LON_SCALE;
  var x3 = Math.round((scaledLon + 180) * (WIDTH / 360));
  var scaledLat = lat * (lat > 60 || lat < -50 ? LAT_EXTREME_SCALE : LAT_SCALE);
  var latRad = scaledLat * Math.PI / 180;
  var mercN = Math.log(Math.tan(Math.PI / 4 + latRad / 2));
  var y3 = Math.round(EQUATOR_Y - WIDTH * mercN / (2 * Math.PI));
  return [x3 + X_OFFSET, y3 + Y_OFFSET];
};
var coordToLatLon = function coordToLatLon2(_ref2) {
  var x3 = _ref2[0], y3 = _ref2[1];
  var mercN = (EQUATOR_Y - (y3 - Y_OFFSET)) * (2 * Math.PI) / WIDTH;
  var latRad = (Math.atan(Math.exp(mercN)) - Math.PI / 4) * 2;
  var scaledLat = latRad * 180 / Math.PI / LAT_SCALE;
  var lat = scaledLat / (scaledLat > 60 || scaledLat < -50 ? LAT_EXTREME_SCALE : LAT_SCALE);
  var lon = (x3 - X_OFFSET) * 360 / WIDTH - 180;
  return [lat, lon];
};
var buildContinent = function buildContinent2(_ref3) {
  var areaProp = _ref3.area, dotsProp = _ref3.dots, name = _ref3.name, origin = _ref3.origin;
  var bounds2 = [origin[0], origin[1], origin[0], origin[1]];
  var dots = dotsProp.map(function(segment) {
    var count = segment[2];
    var spots = [];
    for (var i3 = 0; i3 < count; i3 += 1)
      spots.push("h0");
    var dotCommands = spots.join(" m10,0 ");
    var x3 = FACTOR * (origin[0] + segment[0] + 1);
    var y3 = FACTOR * (origin[1] + segment[1] + 1);
    bounds2 = mergeBounds(bounds2, [origin[0], origin[1], origin[0] + segment[0] + segment[2], origin[1] + segment[1]]);
    return "M" + x3 + "," + y3 + " " + dotCommands;
  }).join(" ");
  var area = areaProp.map(function(point, index) {
    var x3 = FACTOR * (point[0] + origin[0] + 1);
    var y3 = FACTOR * (point[1] + origin[1] + 1);
    return (index === 0 ? "M" : "L") + x3 + "," + y3;
  }).join(" ") + " Z";
  var mid = midPoint(bounds2);
  return {
    area,
    dots,
    name,
    origin,
    bounds: bounds2,
    mid
  };
};
var buildWorld = function buildWorld2() {
  var continents = CONTINENTS.map(buildContinent);
  var bounds2;
  continents.forEach(function(continent) {
    bounds2 = mergeBounds(bounds2, continent.bounds);
  });
  return {
    continents,
    bounds: bounds2,
    x: bounds2[0] * FACTOR,
    y: bounds2[1] * FACTOR,
    width: (bounds2[2] - bounds2[0] + 1) * FACTOR,
    height: (bounds2[3] - bounds2[1] + 2) * FACTOR
  };
};
var buildInteractiveProps = function buildInteractiveProps2(_ref4, activeFunc, active) {
  var name = _ref4.name, onClick = _ref4.onClick, onHover = _ref4.onHover;
  return {
    role: "button",
    "aria-label": name,
    tabIndex: "0",
    onClick: onClick ? function() {
      return onClick(name);
    } : void 0,
    onMouseOver: function onMouseOver() {
      if (!active) {
        activeFunc(name);
        if (onHover) {
          onHover(true);
        }
      }
    },
    onMouseLeave: function onMouseLeave() {
      if (active) {
        activeFunc(void 0);
        if (onHover) {
          onHover(false);
        }
      }
    },
    onFocus: function onFocus() {
      if (!active) {
        activeFunc(name);
      }
    },
    onBlur: function onBlur() {
      if (active) {
        activeFunc(void 0);
      }
    }
  };
};
var WorldMap = (0, import_react157.forwardRef)(function(_ref5, ref) {
  var fill = _ref5.fill, color = _ref5.color, continentsProp = _ref5.continents, hoverColor = _ref5.hoverColor, onSelectPlace = _ref5.onSelectPlace, placesProp = _ref5.places, rest = _objectWithoutPropertiesLoose96(_ref5, _excluded99);
  var theme = import_react157.default.useContext(Me);
  var world = import_react157.default.useMemo(buildWorld, []);
  var _React$useState = import_react157.default.useState({}), continents = _React$useState[0], setContinents = _React$useState[1];
  import_react157.default.useEffect(function() {
    if (continentsProp) {
      setContinents(continentsProp.reduce(function(obj, continent) {
        obj[continent.name] = continent;
        return obj;
      }, {}));
    } else
      setContinents({});
  }, [continentsProp]);
  var _React$useState2 = import_react157.default.useState([]), places = _React$useState2[0], setPlaces = _React$useState2[1];
  var _React$useState3 = import_react157.default.useState([]), targets = _React$useState3[0], setTargets = _React$useState3[1];
  import_react157.default.useEffect(function() {
    if (placesProp) {
      setPlaces(placesProp.map(function(_ref6) {
        var location = _ref6.location, place = _objectWithoutPropertiesLoose96(_ref6, _excluded223);
        var coords = latLonToCoord(location);
        return _extends153({
          coords,
          key: location.join(",")
        }, place);
      }));
    } else
      setPlaces([]);
    return function() {
      setTargets([]);
    };
  }, [placesProp, world]);
  var _React$useState4 = import_react157.default.useState(), over = _React$useState4[0], setOver = _React$useState4[1];
  var _React$useState5 = import_react157.default.useState(), activeCoords = _React$useState5[0], setActiveCoords = _React$useState5[1];
  var _React$useState6 = import_react157.default.useState(), activeContinent = _React$useState6[0], setActiveContinent = _React$useState6[1];
  var _React$useState7 = import_react157.default.useState(), activePlace = _React$useState7[0], setActivePlace = _React$useState7[1];
  var containerRef = import_react157.default.useRef();
  var placeRef = import_react157.default.useCallback(function(node, index) {
    setTargets(function(prevTargets) {
      if (!prevTargets[index]) {
        var nextTargets = [].concat(prevTargets);
        nextTargets[index] = node;
        return nextTargets;
      }
      return prevTargets;
    });
  }, []);
  var onMouseMove = import_react157.default.useCallback(function(event) {
    var rect = containerRef.current.getBoundingClientRect();
    var scale = rect.width / world.width;
    var coords = [Math.round((event.clientX - rect.left) / scale / FACTOR), Math.round((event.clientY - rect.top) / scale / FACTOR)];
    setActiveCoords(coords);
  }, [world.width]);
  var continentElements = world.continents.map(function(_ref7) {
    var area = _ref7.area, dots = _ref7.dots, name = _ref7.name;
    var _ref8 = continents[name] || {}, continentColor = _ref8.color, onClick = _ref8.onClick, onHover = _ref8.onHover, restContinents = _objectWithoutPropertiesLoose96(_ref8, _excluded313);
    var active2 = activeContinent && activeContinent === name;
    var interactiveProps2 = {};
    if (onClick || onHover) {
      interactiveProps2 = buildInteractiveProps(continents[name], function(activate) {
        return setActiveContinent(activate);
      }, active2);
    }
    return import_react157.default.createElement("g", _extends153({
      key: name
    }, interactiveProps2, restContinents), import_react157.default.createElement("path", {
      stroke: "none",
      fill: "#fff",
      fillOpacity: "0.01",
      d: area
    }), import_react157.default.createElement("path", {
      d: dots,
      strokeLinecap: "round",
      strokeWidth: parseMetricToNum(theme.worldMap.continent[active2 ? "active" : "base"]),
      stroke: normalizeColor(continentColor || color || theme.worldMap.color, theme)
    }));
  });
  var placesContent = [];
  var placeElements = places.map(function(place, index) {
    var placeColor = place.color, coords = place.coords, content = place.content, dropProps5 = place.dropProps, key = place.key, name = place.name, onClick = place.onClick, onHover = place.onHover, restPlace = _objectWithoutPropertiesLoose96(place, _excluded411);
    var d4 = "M" + FACTOR * coords[0] + ", " + FACTOR * coords[1] + " h0";
    var active2 = activePlace && activePlace === name;
    var interactiveProps2 = {};
    if (onClick || onHover) {
      interactiveProps2 = buildInteractiveProps(place, function(activate) {
        return setActivePlace(activate);
      }, active2);
    }
    if (content && targets[index]) {
      placesContent.push(import_react157.default.createElement(Drop, _extends153({
        key: key || name
      }, dropProps5, {
        target: targets[index]
      }), content));
    }
    return import_react157.default.createElement("path", _extends153({
      key,
      ref: function ref2(node) {
        return placeRef(node, index);
      },
      strokeLinecap: "round",
      strokeWidth: parseMetricToNum(theme.worldMap.place[active2 ? "active" : "base"]),
      stroke: normalizeColor(placeColor || color || theme.worldMap.color, theme)
    }, interactiveProps2, restPlace, {
      d: d4
    }));
  });
  var interactiveProps = {};
  if (onSelectPlace) {
    interactiveProps = {
      onMouseOver: function onMouseOver() {
        return setOver(true);
      },
      onMouseMove: over ? onMouseMove : void 0,
      onMouseLeave: function onMouseLeave() {
        setOver(false);
        setActiveCoords(void 0);
      }
    };
  }
  var active;
  if (activeCoords) {
    var d3 = "M" + FACTOR * activeCoords[0] + ", " + FACTOR * activeCoords[1] + " h0";
    active = import_react157.default.createElement("g", {
      stroke: "none",
      fill: "none",
      fillRule: "evenodd",
      onClick: function onClick() {
        return onSelectPlace(coordToLatLon(activeCoords, world.bounds));
      }
    }, import_react157.default.createElement("path", {
      strokeLinecap: "round",
      strokeWidth: parseMetricToNum(theme.worldMap.place.active),
      stroke: normalizeColor(hoverColor || color || theme.worldMap.hover.color, theme),
      d: d3
    }));
  }
  return import_react157.default.createElement(import_react157.default.Fragment, null, import_react157.default.createElement(StyledWorldMap, _extends153({
    ref,
    viewBox: world.x + " " + world.y + " " + world.width + " " + world.height,
    preserveAspectRatio: "xMinYMin meet",
    fillProp: fill,
    width: world.width,
    height: world.height
  }, interactiveProps, rest), import_react157.default.createElement("g", {
    ref: containerRef,
    stroke: "none",
    fill: "none",
    fillRule: "evenodd"
  }, continentElements), placeElements, active), placesContent);
});
WorldMap.displayName = "WorldMap";
WorldMap.defaultProps = {};
Object.setPrototypeOf(WorldMap.defaultProps, defaultProps2);
WorldMap.propTypes = WorldMapPropTypes;
export {
  Accordion,
  AccordionPanel,
  AnalyticsContext,
  AnalyticsProvider,
  Anchor,
  AnnounceContext,
  Avatar,
  Box,
  Button,
  Calendar,
  Card,
  CardBody,
  CardFooter,
  CardHeader,
  Cards,
  Carousel,
  Chart,
  CheckBox,
  CheckBoxGroup,
  Clock,
  Collapsible,
  ContainerTargetContext,
  Data,
  DataChart,
  DataContext,
  DataFilter,
  DataFilters,
  DataForm,
  DataSearch,
  DataSort,
  DataSummary,
  DataTable,
  DataTableColumns,
  DataTableGroupBy,
  DataView,
  DateInput,
  Diagram,
  Distribution,
  Drop,
  DropButton,
  FileInput,
  Footer,
  Form,
  FormContext,
  FormField,
  Grid,
  Grommet,
  Header,
  Heading,
  Image,
  InfiniteScroll,
  Keyboard,
  Layer,
  List,
  Main,
  GrommetMarkdown as Markdown,
  MaskedInput,
  Menu,
  Meter,
  NameValueList,
  NameValuePair,
  Nav,
  Notification,
  Page,
  PageContent,
  PageContext,
  PageHeader,
  Pagination,
  Paragraph,
  RadioButton,
  RadioButtonGroup,
  RangeInput,
  RangeSelector,
  ResponsiveContext,
  RootsContext,
  RoutedAnchor,
  RoutedButton,
  Select,
  SelectMultiple,
  Sidebar,
  Skeleton,
  SkeletonContext,
  SkipLink,
  SkipLinkTarget,
  SkipLinks,
  Spinner,
  Stack,
  StarRating,
  Tab,
  Table,
  TableBody,
  TableCell,
  TableFooter,
  TableHeader,
  TableRow,
  Tabs,
  Tag,
  Text,
  TextArea,
  TextInput,
  Me as ThemeContext,
  ThumbsRating,
  Tip,
  Toolbar,
  Video,
  WorldMap,
  base,
  calcBounds,
  calcs,
  dark,
  defaultProps2 as defaultProps,
  extendDefaultTheme,
  formColumnsKey,
  formRangeKey,
  formSearchKey,
  formSortKey,
  generate,
  grommet,
  hacktoberfest2022,
  round,
  useAnalytics,
  useSkeleton
};
/*! Bundled license information:

react-is/cjs/react-is.development.js:
  (** @license React v16.13.1
   * react-is.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

object-assign/index.js:
  (*
  object-assign
  (c) Sindre Sorhus
  @license MIT
  *)

react-is/cjs/react-is.development.js:
  (**
   * @license React
   * react-is.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

react-is/cjs/react-is.development.js:
  (** @license React v16.13.1
   * react-is.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)
*/
//# sourceMappingURL=grommet.js.map
